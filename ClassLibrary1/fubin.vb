
Imports SldWorks
Imports SwConst
Imports System.Math
Imports MySql.Data.MySqlClient
Imports System.IO
Imports CosmosWorksLib
Imports System.Runtime.InteropServices
Imports System
Imports System.Diagnostics
Public Class fubin
    Public Class Module_fubin
        Public Class all
            Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")
            Dim OpenDoc7 As ModelDoc2 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
            ' Dim NewDocument As ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
            Dim NewDocument As ModelDoc2

            Dim part As ModelDoc2
            Dim SketchManager As SldWorks.SketchManager

            Dim FeatureManager As FeatureManager
            Dim Dimension As Dimension
            Dim DisplayDimension As DisplayDimension
            Dim Getsketch As Sketch
            Dim Feature, Feature1, Feature2, Feature3, Feature4, Feature5 As Feature
            Dim SelectionMgr As SelectionMgr

            Dim SketchSegment As SketchSegment
            Dim sketch As SldWorks.Sketch


            Dim AssemblyDoc As SldWorks.AssemblyDoc
            Dim AssemblyTitle As String
            Dim Component2 As SldWorks.Component2
            Dim facenumber， facenumber1， facenumber2， facenumber3， facenumber4， facenumber5， facenumber6， facenumber7， facenumber8， facenumber9， facenumber10， facenumber11， facenumber12 As Integer
            Dim edgenumber， edgenumber1， edgenumber2， edgenumber3， edgenumber4， edgenumber5， edgenumber6， edgenumber7， edgenumber8， edgenumber9， edgenumber10， edgenumber11， edgenumber12 As Integer
            Dim errors As Long
            Dim longwarnings As Long
            Dim swbody, swbody1, swbody2, swbody3, swbody4, swbody5, swbody6, swbody7, swbody8, swbody9, swbody10 As SldWorks.Body2
            Dim swface As SldWorks.Face2



            Dim sketchfeature1, sketchfeature2, sketchfeature3, 基准轴feature1， 基准轴feature2， 基准轴feature3 As SldWorks.Feature
            Dim DFeature， DFeature1， DFeature2， DFeature3, Dsketchfeature1, Dsketchfeature2, Dsketchfeature3 As SldWorks.Feature

            Dim Annotations() As Object


            Dim AxisY As Feature
            Dim AxisZ As Feature
            Dim AxisX As Feature

            Dim mySFSymbol As SldWorks.SFSymbol

            Public SketchSegments(), points() As Object
            Public [Boolean] As Boolean

            Dim swedge As Object
            Dim DimensionTolerance As DimensionTolerance
            Public A1, A2, A3, A4, A5, A6, A7, A8, A9, A10 As SldWorks.SketchArc
            Public L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L01, L02, L03, L04, L05 As SldWorks.SketchLine
            Public DL1, DL2, DL3, DL4, DL5, DL6 As SldWorks.SketchLine
            Public A1Segment, A2Segment, A3Segment, A4Segment, A5Segment, L1Segment, L2Segment, L3Segment, L4Segment, L5Segment, L6Segment, L7Segment,
                    L8Segment, L9Segment, L10Segment, L11Segment, L12Segment, L13Segment, L14Segment, L15Segment, L01Segment, L02Segment, L03Segment, L04Segment, L05Segment, DL1Segment, DL2Segment,
                    DL3Segment, DL4Segment, DL5Segment, DL6Segment, SketchSegment1, SketchSegment2, SketchSegment3 As SldWorks.SketchSegment


            Public P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, DP1, DP2, DP3, DP4, DP5, DP6, DP7, DP8, DP9, DP10, DP11, DP12, DP13, DP14, DP15 As SldWorks.SketchPoint
            Public X1, X2, X3, Y1, Y2, Y3, Z1, Z2, Z3 As Double
            Public Note As SldWorks.Note
            Dim Draw As SldWorks.DrawingDoc
            Dim View As SldWorks.View '视图对象
            Dim Notes As Object
            Dim Count As Long
            Dim Annpos() As Double
            Dim Annotation As SldWorks.Annotation
            Dim myView， myView1, myView3， myView2 As SldWorks.View
            Dim Displaydimention As SldWorks.DisplayDimension

            Dim SF, SF1, SF2 As Object
            Dim myNote As Object
            Dim Object数组1(), Object数组2(), Object数组3(), Object数组4(), Object数组5(), face1(), face2(), face3(), face4(), face5(), face6(), face7(), face8(), face9(), face10(), face11(), face12(), face13(), face14(), face15(), face16(), face17(), face18(), face19(), face20(), face21(), face22(), face23(), face24(), face25(), face26(), face27(), face28(), face29(), face30(), face31(),
                edge1(), edge2(), edge3(), edge4(), edge5(), edge6(), edge7(), edge8(), edge9(), edge10(), edge11(), edge12(), edge13(), edge14(), edge15(), edge16(), edge17(), edge18(), edge19(), edge20(), edge21(), edge22(), edge23(), edge24(), edge25(), edge26(), edge27(), edge28(), edge29(), edge30(), edge31() As Object
            Dim Object1, Object2, Object3 As Object





            Dim mate As IMate2

            Dim RenderMaterial As SldWorks.RenderMaterial
            Dim swConfig As SldWorks.Configuration
            Dim status As Boolean
            Dim Entity As SldWorks.Entity
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim dr, read As MySqlDataReader




            Public Sub Part_initialization()
                swapp = CreateObject("Sldworks.application")
                OpenDoc7 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                NewDocument = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swDisplayGraphicsComponents, True)
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
                ' 初始设置（1）
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")

            End Sub


            Public Sub 凸台拉伸(diameter#, thickness#, Optional max$ = "", Optional min$ = "") '凸台拉伸
                Dim A1 As SketchSegment


                SelectPlane("front")

                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter# / 2)
                A1.Select4(True, Nothing)

                DisplayDimension = part.AddDimension2(-diameter# / 2, diameter# / 2, 0)
                If max <> "" Or min <> "" Then
                    SetTolvalue(8, max, min)
                End If

                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thickness#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸




            End Sub
            Public Sub 反向圆切除(internal_diameter1#, Optional max$ = "", Optional min$ = "") '反向圆切除
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, internal_diameter1 / 2)
                DisplayDimension = part.AddDimension2(internal_diameter1 / 2 + 0.01, 0, 0)
                If max <> "" Or min <> "" Then
                    SetTolvalue(8, max, min)
                End If


                part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

            End Sub
            Public Sub 两阶圆台拉伸（直径1#， 直径2#， 厚度1#， 厚度2#， 圆角半径#, type2#, Tolerances#）
                Dim p1， p2 As SketchPoint
                Dim A1 As SketchArc
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1 / 2)
                part.AddDimension2(直径1 / 2 + 0.02, 0, 0)
                part.SketchManager.InsertSketch(True)

                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度1 - 厚度2, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                part.Extension.SelectByID2("", "FACE", 0, 0, 厚度1 - 厚度2, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                part.AddDimension2(-直径2 / 2, -(直径2 / 2 + 0.02), 0)

                part.ClearSelection2(True)

                Feature = part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度2, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)

                Dim swface() As Object
                Dim swedge() As Object
                swface = Feature.GetFaces()
                Dim i As Integer
                part.ClearSelection2(True)
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(swface(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop
                SelectionMgr.AddSelectionListObject(swface(0), Nothing)
                Dim face0 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)
                swedge = face0.GetEdges
                part.ClearSelection2(True)
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(swedge(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop
                SelectionMgr.AddSelectionListObject(swedge(0), Nothing)
                'part.Extension.SelectByRay（0， -(直径1 / 2 + 厚度1 - 厚度2)， 0, 0， 1， 1, 0.000001， 1, False， 0， 0）

                part.FeatureManager.FeatureFillet3(195, 圆角半径, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                'p1 = part.SketchManager.CreatePoint(-(厚度1 - 厚度2), 直径1 / 2, 0)
                'Dim myNote As Object
                'Dim myAnnotation As Object
                'Dim myTextFormat As Object
                'myNote = part.InsertNote("R4")

                'myNote.LockPosition = False
                'myNote.Angle = 0
                'myNote.SetBalloon(0, 0)
                'myAnnotation = myNote.GetAnnotation()

                'myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                'myAnnotation.SetPosition(0, 0.095, 0.026)

                'part.SketchManager.InsertSketch(True)

                p1 = part.SketchManager.CreatePoint(0, -直径1 / 2, 0)
                p2 = part.SketchManager.CreatePoint(-厚度1, -直径1 / 2, 0)
                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -(直径1 / 2 + 0.05), 厚度1 / 2)
                part.EditDimensionProperties2(type2, Tolerances#, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                A1 = part.SketchManager.CreateArc(-(厚度1 - 厚度2 - 圆角半径), -(直径1 / 2 + 圆角半径), 0, -(厚度1 - 厚度2), -(直径1 / 2 + 圆角半径), 0, -(厚度1 - 厚度2 - 圆角半径), -(直径1 / 2), 0, -1)

                A1.select2(False, Nothing)
                part.AddDimension2(0, -(直径1 / 2 + 0.01), (厚度1 - 厚度2 - 0.025))

                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub 矩形凸出反向孔（直径#， 长度#， 宽度#， type#, max$, max2$, min$, type3#, Tolerances2#, symbol2$, Geometric_tolerance2$, letter2$）
                Dim LC1, LC2, L1, L2, L3 As SketchLine
                Dim A1 As SketchArc
                Dim p1, p2, p3, p4, p5, p6, p7 As SketchPoint
                Dim SF1 As Object
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                LC1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                LC2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径 / 2)
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(-宽度 / 2, -(长度 - 直径 / 2)， 0， 宽度 / 2, -(长度 - 直径 / 2)， 0)
                ADDConstraints(1)
                p1 = L1.GetStartPoint2

                p2 = L1.GetEndPoint2

                p1.Select4(False, Nothing)
                ADDConstraints(1)

                p7 = part.SketchManager.CreatePoint(0， 直径 / 2， 0)
                L1.Select2(False, Nothing)
                p7.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(长度 + 0.01， 0， 0)
                part.EditDimensionProperties2(type3#, Tolerances2#, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                'SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                'SF1.GetAnnotation().SetPosition2(长度 + 0.1， 0.005， 0)
                'Dimension = DisplayDimension.GetDimension2(0)
                'Dimension.SetArcEndCondition(1, 3)
                'DisplayDimension.GetAnnotation.SetPosition(长度 + 0.1， 0， 0)
                'ChangeDimensionVaule(长度 - 直径 / 2)
                A1.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(-(长度 + 0.01)， 0， 0)
                SetTolvalue(type#, max2, min$)



                L1.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(-0.035， -(长度 + 0.045)， 0)
                SetTolvalue(type, max, min$)
                L1.Select2(False, Nothing)
                part.Extension.SelectByID2(L1.GetName, "SKETCHSEGMENT", 宽度 / 2, -(长度 - 直径 / 2), 0, False, 0, Nothing, 0)
                Dim myGtol As Object
                Dim myAnno As Annotation
                Dim myNote As Object
                Dim myAnnotation As Object
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, symbol2$, False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, Geometric_tolerance2$, "", letter2$, "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.022， -(长度 + 0.04)， 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.042， -(长度 + 0.038)， 0)

                L3 = part.SketchManager.CreateLine(-0.01， 0， -0.01, 0, 0.01， 0)
                ADDConstraints(3)
                L2 = part.SketchManager.CreateLine(0.01， 0， 0.01, 0, 0.01， 0)
                ADDConstraints(3)
                p3 = L2.GetStartPoint2
                p4 = L2.GetEndPoint2
                p5 = L3.GetStartPoint2
                p6 = L3.GetEndPoint2

                p3.Select4(False, Nothing)
                p1.Select4(True, Nothing)
                ADDConstraints(8)
                p5.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                ADDConstraints(8)
                p4.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)
                p6.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)
                LC1.Select2(False, Nothing)
                LC2.Select2(True, Nothing)
                part.EditDelete()
                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -直径 / 2, 0)

                AllCut(2)





            End Sub
            Public Sub 扣片(length#, width#, height#, thick#)

                Dim L1, L2, L3, L4, L5, L6, L7, L8 As SketchLine
                Dim L3Segment, L4Segment As SketchSegment

                Dim p1, p2, p3, p4, p5 As SketchPoint
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(thick, 0, 0, length - thick, 0, 0)
                L2 = part.SketchManager.CreateLine(thick, 0, 0, thick, -(height - thick), 0)
                L3 = part.SketchManager.CreateLine(0, thick, 0, length, thick, 0)
                L4 = part.SketchManager.CreateLine(0, thick, 0, 0, -(height - thick), 0)
                L5 = part.SketchManager.CreateLine(0, -(height - thick), 0, thick, -(height - thick), 0)
                'L6 = part.SketchManager.CreateLine(length, 0, 0, length, thick, 0)
                L6 = part.SketchManager.CreateLine(length, thick, 0, length, -(height - thick), 0)
                L7 = part.SketchManager.CreateLine(length - thick, 0, 0, length - thick, -(height - thick), 0)
                L8 = part.SketchManager.CreateLine(length, -(height - thick), 0, length - thick, -(height - thick), 0)
                L3Segment = L3
                L4Segment = L4
                L4Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(-height / 2, -height / 2, 0)
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(height / 2, length / 2, 0)
                p1 = L1.GetStartPoint2
                p3 = L3.GetStartPoint2
                p2 = L7.GetStartPoint2
                p4 = L6.GetStartPoint2
                p1.Select4(False, Nothing)
                part.SketchManager.CreateFillet(thick， 1)
                p3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(2 * thick， 1)
                p2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(thick， 1)
                p4.Select4(False, Nothing)
                part.SketchManager.CreateFillet(2 * thick， 1)
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, width, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                p4 = part.SketchManager.CreatePoint(0, 0, 0)
                p5 = part.SketchManager.CreatePoint(length, 0, 0)
                p4.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, 0, 1.5 * width)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub 圆孔(diameter1#, diameter2#, number#， angle#)
                'Dim Line1 As SketchLine
                Dim Arc1, Arc2 As SketchSegment
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                Arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                part.SketchManager.CreateConstructionGeometry()
                'Arc1.Select4(False, Nothing)
                'part.AddDimension2(（diameter1# / 2 + 0.1）, -0.2, 0)
                Arc2 = part.SketchManager.CreateCircleByRadius(0, diameter1 / 2, 0, diameter2# / 2)
                'part.AddDimension2(0, diameter1# / 2 + 0.1, 0)
                'part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, coment1, "", True, "", coment2, "", False, 1, "")
                Arc2.Select4(False, Nothing)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, angle / 180 * PI)
                Arc2.Select4(False, Nothing)
                part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number * PI / 180)
                'part.EditDelete()
                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                'part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)
                part.ClearSelection2(True)
            End Sub
            Public Sub Clsasp(length#, width#, height#, thick#)
                '扣片(长,宽,高,厚)
                Dim L1, L2, L3, L4, L5, L6, L7, L8 As SketchLine
                Dim L3Segment, L4Segment As SketchSegment
                Dim p1, p2, p3, p4, p5 As SketchPoint
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(thick, 0, 0, length - thick, 0, 0)
                L2 = part.SketchManager.CreateLine(thick, 0, 0, thick, -(height - thick), 0)
                L3 = part.SketchManager.CreateLine(0, thick, 0, length, thick, 0)
                L4 = part.SketchManager.CreateLine(0, thick, 0, 0, -(height - thick), 0)
                L5 = part.SketchManager.CreateLine(0, -(height - thick), 0, thick, -(height - thick), 0)
                'L6 = part.SketchManager.CreateLine(length, 0, 0, length, thick, 0)
                L6 = part.SketchManager.CreateLine(length, thick, 0, length, -(height - thick), 0)
                L7 = part.SketchManager.CreateLine(length - thick, 0, 0, length - thick, -(height - thick), 0)
                L8 = part.SketchManager.CreateLine(length, -(height - thick), 0, length - thick, -(height - thick), 0)
                L3Segment = L3
                L4Segment = L4
                L4Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(-height / 2, -height / 2, 0)
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(height / 2, length / 2, 0)
                p1 = L1.GetStartPoint2
                p3 = L3.GetStartPoint2
                p2 = L7.GetStartPoint2
                p4 = L6.GetStartPoint2
                p1.Select4(False, Nothing)
                part.SketchManager.CreateFillet(thick， 1)
                p3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(2 * thick， 1)
                p2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(thick， 1)
                p4.Select4(False, Nothing)
                part.SketchManager.CreateFillet(2 * thick， 1)
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, width, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                p4 = part.SketchManager.CreatePoint(0, 0, 0)
                p5 = part.SketchManager.CreatePoint(length, 0, 0)
                p4.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, 0, 1.5 * width)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub 孔导向1（圆直径#， 螺纹孔规格$, 孔直径#， 孔个数#， 孔深度#， 厚度#, symbol2$, Geometric_tolerance2$, letter2$, character1$, character2$）
                Dim a1 As SketchSegment
                Dim P1, P2, p3 As SketchPoint
                Dim ARC1 As SketchArc
                part.Extension.SelectByID2("", "FACE", 圆直径 / 2, 0, 厚度, False, 0, Nothing, 0)
                Feature1 = part.FeatureManager.InsertRefPlane(4, 0, 0, 0, 0, 0)
                part.Extension.SelectByID2(Feature1.Name, "PLANE", 圆直径 / 2, 0, 0, False, 0, Nothing, 0)
                Feature2 = part.FeatureManager.HoleWizard5(2, 13, 357, 螺纹孔规格, 0, 孔直径, 孔深度, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(孔个数#, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                AxisZ.Select2(False, Nothing) '基准轴与阵列特征相关联不能删除
                part.BlankRefGeom() '隐藏
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                a1 = part.SketchManager.CreateCircleByRadius(0, 圆直径 / 2, 0, 孔直径 / 2)
                part.SketchManager.CreateConstructionGeometry()
                'a1.Select4(False, Nothing)
                'part.AddDimension(0.03, 圆直径 / 2 + 0.01, 0)
                'part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "8XM", "", True, "均布深35", "", "", False, 1, "")
                a1.Select4(False, Nothing)
                part.Extension.SelectByID2(a1.GetName, "SKETCHSEGMENT", 0, 圆直径 / 2, 0, False, 0, Nothing, 0)
                Dim myGtol As Object
                Dim myAnno As Annotation
                Dim myNote As Object
                Dim myAnnotation As Object
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, symbol2$, False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, Geometric_tolerance2$, "", letter2$, "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.05, 圆直径 / 2 + 0.04, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                part.ClearSelection2(True)
                myNote = part.InsertNote(character1 + Chr(13) + Chr(10) +
            character2)
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()

                myAnnotation.SetLeader3(0, 0, True, False, False, False)
                myAnnotation.SetPosition(0.02, 圆直径 / 2 + 0.04, 0)
                part.SketchManager.InsertSketch(True)
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)

                P1 = part.SketchManager.CreatePoint(-厚度, 圆直径 / 2, 0)
                P2 = part.SketchManager.CreatePoint(-厚度, -圆直径 / 2, 0)
                p3 = part.SketchManager.CreatePoint(-(厚度 - 孔深度), -圆直径 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, 厚度 + 0.01)
                part.Extension.EditDimensionProperties(1, 0, 0, "", "", False, 9, 2, False, 12, 12, "<MOD-DIAM>", "", True, "", "", "", False, 1, "")
                p3.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -圆直径 / 2 - 0.025, (厚度 - 孔深度 / 2))


                part.SketchManager.InsertSketch(True)



            End Sub
            Public Sub 圆凸起（直径1#， 直径2#, 半径1#, 个数#）
                Dim A1, A2, A3 As SketchArc
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1 / 2)
                'part.SketchManager.CreateConstructionGeometry()
                'part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                'part.SketchManager.CreateConstructionGeometry()
                A2 = part.SketchManager.CreateCircleByRadius(0， 直径2 / 2， 0， 半径1）
                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -直径1 / 2, 0)
                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, 直径2 / 2 - 半径1， 0）
                A2.select2(False, Nothing)
                part.AddDimension(0.02, 直径1 / 2 + 0.02， 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "4x<MOD-DIAM>", "", True, "", "", "", False, 1, "")
                AllExtrusion(1)
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(个数#, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                AxisZ.Select2(False, Nothing) '基准轴与阵列特征相关联不能删除
                part.BlankRefGeom() '隐藏
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A3 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                part.AddDimension(-直径2 / 2, -直径1 / 2， 0)
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub Arc_boss(diameter#, thickness#) '凸台拉伸
                Dim A1 As SketchSegment
                Dim SF, SF1, SF2 As Object
                Dim P1, P2 As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter# / 2)
                A1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, diameter# / 2 + 0.01, 0)
                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thickness#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                'SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF.GetAnnotation().SetPosition2(0, -diameter / 2 + 0.01, 0)
                'SF.SetAngle(270 * PI / 180)
                'part.ClearSelection2(True)
                P1 = part.SketchManager.CreatePoint(0, diameter / 2, 0)
                P2 = part.SketchManager.CreatePoint(-thickness, diameter / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, diameter / 2 + 0.005, thickness + 0.005)
                part.SketchManager.InsertSketch(True)
                'part.ActivateView("工程图视图2")
                'SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF1.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                'SF1.SetAngle(90 * PI / 180)




            End Sub
            Public Sub 圆切除(internal_diameter1#) '反向圆切除

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, internal_diameter1 / 2)
                part.AddDimension2(-(internal_diameter1 / 2 + 0.01), 0.02, 0)
                part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)
            End Sub
            Public Sub 钣金圆拉伸(diameter#, thickness#) '凸台拉伸

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter# / 2)
                part.AddDimension2(-diameter# / 2 + 0.02, diameter# / 2 + 0.02, 0)
                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5
                part.FeatureManager.InsertSheetMetalBaseFlange2(thickness, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金
            End Sub
            Public Sub Reverse_circle(internal_diameter1#) '反向圆切除
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, internal_diameter1 / 2)
                part.AddDimension2(internal_diameter1 / 2 + 0.2, internal_diameter1 / 2 + 0.2, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.017, 0.017, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)
                part.ClearSelection2(True)
            End Sub
            Public Sub Outer_hole(diameter1#, diameter2#, number#, coment1$, coment2$)
                'Dim Line1 As SketchLine
                Dim Arc1, Arc2 As SketchSegment
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                Arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                part.SketchManager.CreateConstructionGeometry()
                Arc1.Select4(False, Nothing)
                part.AddDimension2(（diameter1# / 2 + 0.1）, -0.2, 0)
                Arc2 = part.SketchManager.CreateCircleByRadius(0, diameter1 / 2, 0, diameter2# / 2)
                part.AddDimension2(0, diameter1# / 2 + 0.1, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, coment1, "", True, "", coment2, "", False, 1, "")
                Arc2.Select4(False, Nothing)
                part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number * PI / 180)
                'part.EditDelete()
                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.017, 0.017, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)
                'If Feature1 Is Nothing Then
                '    part.FeatureManager.FeatureCut4(True, True, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.017, 0.017, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)
                'End If
                part.ClearSelection2(True)

            End Sub
            Public Sub Three_section_blinds(扇形窗总长1#, 扇形窗总长2#， x向距离#, 长度1#， 宽度1#， 长度2#， 宽度2#, 间距1#, 间距2#， y阵列个数1#， y阵列个数2#， Y_Array_number1$, Y_Array_number2$， Optional type# = 0)
                If type = 0 Then
                    part.Extension.SelectByID2("", "FACE", 扇形窗总长1 / 4, 0, 0, False, 0, Nothing, 0)

                Else
                    part.Extension.SelectByRay（0， 扇形窗总长1# / 2， -1, 0， 0， 1, 0.0001， 2, False， 1， 0）
                End If
                part.SketchManager.InsertSketch(True)


                L1 = part.SketchManager.CreateLine(-长度1 / 2， -扇形窗总长1 / 2， 0， 长度1 / 2， -扇形窗总长1 / 2， 0)
                P1 = L1.IGetStartPoint2
                P2 = L1.IGetEndPoint2
                A1 = part.SketchManager.CreateArc(P1.X + 宽度1, P1.Y, 0, P1.X, P1.Y, 0, P1.X + 宽度1, P1.Y + 宽度1， 0， -1) '顺时针
                ADDConstraints(1)
                A2 = part.SketchManager.CreateArc(P2.X - 宽度1, P2.Y, 0, P2.X, P2.Y, 0, P2.X - 宽度1, P2.Y + 宽度1， 0， 1)
                ADDConstraints(1)
                'P3 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1， 0)
                'P4 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1 + 间距2， 0)
                'P3.Select4(False, Nothing)
                'P4.Select4(True, Nothing)
                'part.AddDimension2(-（2 * 长度1 - 间距2 * 3 / 2 + 0.05）, -（扇形窗总长2 / 2 - 宽度1 / 2 - 0.05）, 0)
                P3 = A1.IGetEndPoint2
                P4 = A2.IGetEndPoint2
                L2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                P9 = L2.IGetStartPoint2
                P10 = L2.IGetEndPoint2
                P3.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                ADDConstraints(8)
                P4.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                ADDConstraints(8)
                L1.select2(False, Nothing)
                part.AddDimension2(0, -（扇形窗总长1 / 2 + 0.1）, 0)
                P5 = part.SketchManager.CreatePoint(P1.X, P1.Y + 宽度1, 0)
                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(-（间距1 / 2 + 长度1 + 0.05）, -（扇形窗总长1 / 2 - 宽度1 / 2）, 0)
                P7 = part.SketchManager.CreatePoint(P1.X + 宽度1, 扇形窗总长1 / 2, 0)
                P8 = part.SketchManager.CreatePoint(P1.X + 宽度1, -扇形窗总长1 / 2, 0)
                P8.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                part.AddDimension2(-(扇形窗总长1 / 2 + 0.2), 0, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", Y_Array_number1, True, "", "", "", True, 1, "")
                P7 = part.SketchManager.CreatePoint(-P2.X, P2.Y, 0)
                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                part.AddDimension2(P7.X + 0.01, P7.Y - 0.1, 0)

                L1.select2(False, 16)

                If type = 0 Then
                    part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

                Else
                    part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                End If




                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                part.ClearSelection2(True)

                If type = 0 Then
                    part.Extension.SelectByID2("", "FACE", 0, -扇形窗总长1# / 2, -宽度1 / 2, False, 1, Nothing, 0)

                    part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)


                    'part.Extension.SelectByRay（0， 扇形窗总长1# / 2， 1, 0， 0， -1, 0.001， 2, False， 1， 0）
                    'Feature5 = SelectionMgr.GetSelectedObject6(1, -1)
                    'part.ClearSelection2(True)
                    'part.Extension.SelectByID2("", "FACE", 0, -扇形窗总长1# / 2, -宽度1 / 2, False, 1, Nothing, 0)

                    ''part.Extension.SelectByRay（0， 扇形窗总长1# / 2， 1, 0， 0， -1, 0.001， 2, False， 1， 0）
                    'part.Extension.SelectByID2(Feature5.Name, "FACE", 0, 0, 0, True, 1, Nothing, 0)
                    part.InsertFeatureShell(0.001, False)
                    Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    part.ClearSelection2(True)

                End If
                'part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisY.Select2(True, 1) '选择并标记
                'part.FeatureManager.FeatureLinearPattern5(y阵列个数1, 宽度1 + 间距1, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                ''MsgBox(1)
                part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                If type = 0 Then
                    part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                End If
                AxisY.Select2(True, 2) '选择并标记
                'AxisY.Select2(True, 2) '选择并标记

                part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数1, 宽度1 + 间距1, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)


                If type = 0 Then
                    part.Extension.SelectByID2("", "FACE", 扇形窗总长1 / 4, 0, 0, False, 0, Nothing, 0)

                Else
                    part.Extension.SelectByRay（0， 扇形窗总长1# / 2， -1, 0， 0， 1, 0.0001， 2, False， 1， 0）
                End If
                part.SketchManager.InsertSketch(True)

                L1 = part.SketchManager.CreateLine(-x向距离# / 2 - 长度2 / 2， -扇形窗总长2 / 2， 0， -x向距离# / 2 + 长度2 / 2， -扇形窗总长2 / 2， 0)
                P1 = L1.IGetStartPoint2
                P2 = L1.IGetEndPoint2
                A1 = part.SketchManager.CreateArc(P1.X + 宽度2, P1.Y, 0, P1.X, P1.Y, 0, P1.X + 宽度2, P1.Y + 宽度2， 0， -1) '顺时针
                ADDConstraints(1)
                A2 = part.SketchManager.CreateArc(P2.X - 宽度2, P2.Y, 0, P2.X, P2.Y, 0, P2.X - 宽度2, P2.Y + 宽度2， 0， 1)
                ADDConstraints(1)
                P3 = A1.IGetEndPoint2
                P4 = A2.IGetEndPoint2
                L2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                P5 = L2.IGetStartPoint2
                P6 = L2.IGetEndPoint2

                P3.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                ADDConstraints(8)

                P4.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)
                P7 = part.SketchManager.CreatePoint(P1.X + 宽度2, 扇形窗总长2 / 2, 0)
                P8 = part.SketchManager.CreatePoint(P1.X + 宽度2, -扇形窗总长2 / 2, 0)
                P8.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                part.AddDimension2(-(扇形窗总长1 / 2 + 0.1), 0, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", Y_Array_number2, True, "", "", "", True, 1, "")

                L1.select2(False, 16)

                If type = 0 Then
                    part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

                Else
                    part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                End If
                Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                'If type <> 0 Then
                '    part.Extension.SelectByID2("", "FACE", -x向距离# / 2, -扇形窗总长2# / 2, -宽度2 / 2, False, 1, Nothing, 0)

                '    part.Extension.SelectByID2("", "FACE", 长度1 / 2, 0, 0, True, 1, Nothing, 0)
                '    'MsgBox(1)
                '    part.InsertFeatureShell(0.0001, False)
                'End If


                'part.Extension.SelectByID2("", "FACE", -x向距离# / 2, -扇形窗总长2# / 2, -宽度2 / 2, False, 1, Nothing, 0)

                'part.Extension.SelectByID2("", "FACE", 长度1 / 2, 0, 0, True, 1, Nothing, 0)
                ''MsgBox(1)
                'part.InsertFeatureShell(0.0001, False)

                Feature4 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征

                'If type <> 0 Then
                '    part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                'End If
                'part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征

                AxisY.Select2(True, 2) '选择并标记
                part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数2, 宽度2 + 间距2, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                'Feature2.Select2(False, 1)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                'Feature3.Select2(True, 1)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)


            End Sub
            Public Sub one_section_blinds(扇形窗总长1#, 长度1#， 宽度1#, 间距1#， y阵列个数1#， Y_Array_number1$)
                part.Extension.SelectByRay（0.01， 0.01， 1, 0， 0， -1, 0.0001， 2, False， 1， 0）
                part.SketchManager.InsertSketch(True)
                'L1 = part.SketchManager.CreateLine(-长度1 / 2， -扇形窗总长1 / 2， 0， 长度1 / 2， -扇形窗总长1 / 2， 0)
                L1 = part.SketchManager.CreateLine(扇形窗总长1 / 2， -长度1 / 2， 0， 扇形窗总长1 / 2， 长度1 / 2， 0)

                P2 = L1.IGetStartPoint2
                P1 = L1.IGetEndPoint2
                A1 = part.SketchManager.CreateArc(P1.X, P1.Y - 宽度1, 0, P1.X, P1.Y, 0, P1.X - 宽度1, P1.Y - 宽度1， 0， 1) '逆时针
                ADDConstraints(1)
                A2 = part.SketchManager.CreateArc(P2.X, P2.Y + 宽度1, 0, P2.X, P2.Y, 0, P2.X - 宽度1, P2.Y + 宽度1， 0， -1)
                ADDConstraints(1)

                'P3 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1， 0)
                'P4 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1 + 间距2， 0)
                'P3.Select4(False, Nothing)
                'P4.Select4(True, Nothing)
                'part.AddDimension2(-（2 * 长度1 - 间距2 * 3 / 2 + 0.05）, -（扇形窗总长2 / 2 - 宽度1 / 2 - 0.05）, 0)
                P3 = A1.IGetEndPoint2
                P4 = A2.IGetEndPoint2
                L2 = part.SketchManager.CreateLine（0.01， 0.01， 0， 0.01， 0.02， 0）
                P9 = L2.IGetStartPoint2
                P10 = L2.IGetEndPoint2
                P3.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                ADDConstraints(8)
                P4.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                ADDConstraints(8)
                L1.select2(False, Nothing)
                part.AddDimension2(（扇形窗总长1 / 2 + 0.1）, 0, 0)
                P5 = part.SketchManager.CreatePoint(P1.X - 宽度1, P1.Y, 0)
                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(（扇形窗总长1 / 2 - 宽度1 / 2）, -（间距1 / 2 + 长度1 + 0.05）, 0)
                P7 = part.SketchManager.CreatePoint(扇形窗总长1 / 2, P1.Y, 0)
                P8 = part.SketchManager.CreatePoint(-扇形窗总长1 / 2, P1.Y, 0)
                P8.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                part.AddDimension2(0, (扇形窗总长1 / 2 + 0.2), 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", Y_Array_number1, True, "", "", "", True, 1, "")
                P7 = part.SketchManager.CreatePoint(P2.X, -P2.Y, 0)
                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                part.AddDimension2(P7.X - 0.1, P7.Y + 0.01, 0)

                L1.select2(False, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                'part.Extension.SelectByID2("", "FACE", 扇形窗总长1# / 2, 0, -宽度1 / 2, False, 1, Nothing, 0)
                'part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)
                ''MsgBox(1)
                'part.InsertFeatureShell(0.001, False)
                'Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 2) '选择并标记
                part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数1, 宽度1 + 间距1, False, True, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)

                part.InsertFeatureShell(0.001, False)

            End Sub
            Public Sub 抽壳（）
                part.Extension.SelectByRay（0， 0.01， 1, 0， 0， -1, 0.0001， 2, False， 1， 0）
                part.InsertFeatureShell(0.0001, False)
            End Sub
            Public Sub 扇形窗（扇形窗总长1#, 扇形窗总长2#， 长度1#， 宽度1#， 间距1#, 间距2#， y阵列个数1#， y阵列个数2#， Y_Array_number1$, Y_Array_number2$, Optional type# = 0）
                Dim l1, l2 As SketchLine
                Dim p1, p2, p3, p4, p5, p6, p7, p8, P9, P10, P11, P12 As SketchPoint
                Dim a1, a2 As SketchArc
                part.Extension.SelectByID2("", "FACE", 扇形窗总长1 / 2, 0, 0, False, 0, Nothing, 0)

                part.SketchManager.InsertSketch(True)
                'part.SketchManager.CreatePoint(-长度1 / 2 - 间距2 / 2, -扇形窗总长1 / 2 + 宽度1 / 2, 0)
                'part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2 + 长度1 / 2, -扇形窗总长2 / 2 + 宽度1 / 2, 0)

                'part.SketchManager.InsertSketch(True)

                'part.Extension.SelectByID2("", "POINT", -长度1 / 2 - 间距2 / 2, -扇形窗总长1 / 2 + 宽度1 / 2, 0, False, 0, Nothing, 0)

                'Feature = part.FeatureManager.InsertFormToolFeature("E:\works\generator_parts_library\EQ_214_2431\Standard_Parts\100x12.SLDPRT", False, 3 / 2 * PI, "", True, True, False, False, True)
                'part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisY.Select2(True, 2) '选择并标记
                'part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数1, 宽度1 + 间距1, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                'Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                'Feature.Select2(False, 1)
                'Feature1.Select2(True, 1)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                'part.FeatureManager.InsertMirrorFeature(False, False, False, False)



                'part.Extension.SelectByID2("", "POINT", -2 * 长度1 - 间距2 * 3 / 2 + 长度1 / 2, -扇形窗总长2 / 2 + 宽度1 / 2, 0, False, 0, Nothing, 0)
                'Feature2 = part.FeatureManager.InsertFormToolFeature("E:\works\generator_parts_library\EQ_214_2431\Standard_Parts\100x12.SLDPRT", False, 3 / 2 * PI, "", True, True, False, False, True)
                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisY.Select2(True, 2) '选择并标记
                'part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数2, 宽度1 + 间距1, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                'Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                'Feature2.Select2(False, 1)
                'Feature3.Select2(True, 1)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                'part.FeatureManager.InsertMirrorFeature(False, False, False, False)



                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)

                l1 = part.SketchManager.CreateLine(-长度1 - 间距2 / 2， -扇形窗总长1 / 2， 0， -间距2 / 2， -扇形窗总长1 / 2， 0)
                p1 = l1.IGetStartPoint2
                p2 = l1.IGetEndPoint2
                a1 = part.SketchManager.CreateArc(p1.X + 宽度1, p1.Y, 0, p1.X, p1.Y, 0, p1.X + 宽度1, p1.Y + 宽度1， 0， -1) '顺时针
                ADDConstraints(1)
                a2 = part.SketchManager.CreateArc(p2.X - 宽度1, p2.Y, 0, p2.X, p2.Y, 0, p2.X - 宽度1, p2.Y + 宽度1， 0， 1)
                ADDConstraints(1)
                'P11 = a1.IGetEndPoint2
                'P10 = a2.IGetEndPoint2


                p3 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1， 0)
                p4 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1 + 间距2， 0)
                p3.Select4(False, Nothing)
                p4.Select4(True, Nothing)
                part.AddDimension2(-（2 * 长度1 - 间距2 * 3 / 2 + 0.05）, -（扇形窗总长2 / 2 - 宽度1 / 2 - 0.05）, 0)
                p3 = a1.IGetEndPoint2
                p4 = a2.IGetEndPoint2
                l2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                P9 = l2.IGetStartPoint2
                P10 = l2.IGetEndPoint2

                p3.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                ADDConstraints(8)

                p4.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                ADDConstraints(8)

                l1.select2(False, Nothing)
                part.AddDimension2(-（间距1 / 2 + 长度1 / 2）, -（扇形窗总长1 / 2 + 0.1）, 0)

                p5 = part.SketchManager.CreatePoint(p1.X, p1.Y + 宽度1, 0)
                p1.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                part.AddDimension2(-（间距1 / 2 + 长度1 + 0.1）, -（扇形窗总长1 / 2 - 宽度1 / 2）, 0)

                p7 = part.SketchManager.CreatePoint(p1.X + 宽度1, 扇形窗总长1 / 2, 0)
                p8 = part.SketchManager.CreatePoint(p1.X + 宽度1, -扇形窗总长1 / 2, 0)
                p8.Select4(False, Nothing)
                p7.Select4(True, Nothing)
                part.AddDimension2(-(扇形窗总长1 / 2 + 0.2), 0, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", Y_Array_number1, True, "", "", "", True, 1, "")

                p7 = part.SketchManager.CreatePoint(-p2.X, p2.Y, 0)

                p2.Select4(False, Nothing)
                p7.Select4(True, Nothing)
                part.AddDimension2(p7.X + 0.01, p7.Y - 0.1, 0)


                l1.select2(False, 16)

                part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                'Dim swface() As Object
                'swface = Feature.GetFaces()
                '''Dim i As Integer
                ''part.ClearSelection2(True)
                'SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                'SelectionMgr.AddSelectionListObject(swface(0), Nothing)

                'part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)
                ''MsgBox(1)
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(swface(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop

                If type = 0 Then
                    part.Extension.SelectByID2("", "FACE", -长度1# / 2, -扇形窗总长1# / 2, -宽度1 / 2, False, 1, Nothing, 0)

                    part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)
                    part.InsertFeatureShell(0.001, False)
                    Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                    part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                    part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征

                    AxisY.Select2(True, 2) '选择并标记
                    part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数1, 宽度1 + 间距1, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    'Feature.Select2(False, 1)
                    'part.Extension.SelectByID2("阵列(线性)1", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                    'Feature3.Select2(True, 1)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)


                Else

                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)

                    DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)

                    l1 = part.SketchManager.CreateLine(-长度1 - 间距2 / 2， -扇形窗总长1 / 2 + 扇形窗总长1# - y阵列个数1# / 2 * 宽度1# - (y阵列个数1# / 2 - 1) * 间距1， 0， -间距2 / 2， -扇形窗总长1 / 2 + 扇形窗总长1# - y阵列个数1# / 2 * 宽度1# - (y阵列个数1# / 2 - 1) * 间距1， 0)
                    p1 = l1.IGetStartPoint2
                    p2 = l1.IGetEndPoint2
                    a1 = part.SketchManager.CreateArc(p1.X + 宽度1, p1.Y, 0, p1.X, p1.Y, 0, p1.X + 宽度1, p1.Y + 宽度1， 0， -1) '顺时针
                    ADDConstraints(1)
                    a2 = part.SketchManager.CreateArc(p2.X - 宽度1, p2.Y, 0, p2.X, p2.Y, 0, p2.X - 宽度1, p2.Y + 宽度1， 0， 1)
                    ADDConstraints(1)
                    'P11 = a1.IGetEndPoint2
                    'P10 = a2.IGetEndPoint2


                    'p3 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1， 0)
                    'p4 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1 + 间距2， 0)
                    'p3.Select4(False, Nothing)
                    'p4.Select4(True, Nothing)
                    'part.AddDimension2(-（2 * 长度1 - 间距2 * 3 / 2 + 0.05）, -（扇形窗总长2 / 2 - 宽度1 / 2 - 0.05）, 0)
                    p3 = a1.IGetEndPoint2
                    p4 = a2.IGetEndPoint2
                    l2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                    P9 = l2.IGetStartPoint2
                    P10 = l2.IGetEndPoint2

                    p3.Select4(False, Nothing)
                    P9.Select4(True, Nothing)
                    ADDConstraints(8)

                    p4.Select4(False, Nothing)
                    P10.Select4(True, Nothing)
                    ADDConstraints(8)




                    l1.select2(False, 16)

                    part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                    Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择




                    part.Extension.SelectByID2("", "FACE", -长度1# / 2, -扇形窗总长1# / 2, -宽度1 / 2, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("", "FACE", -长度1# / 2, -扇形窗总长1 / 2 + 扇形窗总长1# - y阵列个数1# / 2 * 宽度1# - (y阵列个数1# / 2 - 1) * 间距1, -宽度1 / 2, True, 1, Nothing, 0)

                    part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)
                    part.InsertFeatureShell(0.001, False)
                    Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择





                    part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                    part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                    part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征

                    AxisY.Select2(True, 2) '选择并标记
                    part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数1 / 2, 宽度1 + 间距1, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)

                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    'Feature.Select2(False, 1)
                    'part.Extension.SelectByID2("阵列(线性)1", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                    'Feature3.Select2(True, 1)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                    'Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                    part.ClearSelection2(True)

                    'SelectPlane("front")
                    'part.SketchManager.InsertSketch(True)

                    'DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)

                    'l1 = part.SketchManager.CreateLine(-长度1 - 间距2 / 2， 扇形窗总长1 / 2 - 宽度1， 0， -间距2 / 2， 扇形窗总长1 / 2 - 宽度1， 0)
                    'p1 = l1.IGetStartPoint2
                    'p2 = l1.IGetEndPoint2
                    'a1 = part.SketchManager.CreateArc(p1.X + 宽度1, p1.Y, 0, p1.X, p1.Y, 0, p1.X + 宽度1, p1.Y + 宽度1， 0， -1) '顺时针
                    'ADDConstraints(1)
                    'a2 = part.SketchManager.CreateArc(p2.X - 宽度1, p2.Y, 0, p2.X, p2.Y, 0, p2.X - 宽度1, p2.Y + 宽度1， 0， 1)
                    'ADDConstraints(1)
                    ''P11 = a1.IGetEndPoint2
                    ''P10 = a2.IGetEndPoint2


                    ''p3 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1， 0)
                    ''p4 = part.SketchManager.CreatePoint(-2 * 长度1 - 间距2 * 3 / 2, -扇形窗总长2 / 2 + 宽度1 + 间距2， 0)
                    ''p3.Select4(False, Nothing)
                    ''p4.Select4(True, Nothing)
                    ''part.AddDimension2(-（2 * 长度1 - 间距2 * 3 / 2 + 0.05）, -（扇形窗总长2 / 2 - 宽度1 / 2 - 0.05）, 0)
                    'p3 = a1.IGetEndPoint2
                    'p4 = a2.IGetEndPoint2
                    'l2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                    'P9 = l2.IGetStartPoint2
                    'P10 = l2.IGetEndPoint2

                    'p3.Select4(False, Nothing)
                    'P9.Select4(True, Nothing)
                    'ADDConstraints(8)

                    'p4.Select4(False, Nothing)
                    'P10.Select4(True, Nothing)
                    'ADDConstraints(8)




                    'l1.select2(False, 16)

                    'part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                    'Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    'part.Extension.SelectByRay(-长度1, 0, -宽度1 / 2, 0, 1, 0, 0.0001, 2, False, 1, 0)


                    'SelectPlane("front")
                    'part.SketchManager.InsertSketch(True)

                    'part.SketchManager.CreatePoint(-长度1# / 2, 扇形窗总长1# / 2 - 宽度1 / 2, 0)

                    ''MsgBox(1)
                    'part.Extension.SelectByID2("", "FACE", -长度1# / 2, 扇形窗总长1# / 2 - 宽度1, -宽度1 / 2, False, 1, Nothing, 0)

                    'part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)

                    'part.InsertFeatureShell(0.001, False)




                    'Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                    'part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                    'part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                    'part.Extension.SelectByID2(AxisY.Name, "AXIS", 0, 0, 0, True, 2, Nothing, 0)
                    'DL1.select2(True, 1)
                    'AxisY.Select2(True, 1) '选择并标记
                    'part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 1, Nothing, 0)

                    part.FeatureManager.FeatureLinearPattern5(2, 扇形窗总长1# - y阵列个数1# / 2 * 宽度1# - (y阵列个数1# / 2 - 1) * 间距1, 0, 0, False, True, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    'Feature.Select2(False, 1)
                    ''MsgBox(1)
                    'part.Extension.SelectByID2("阵列(线性)1", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '
                    'part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征
                    'Feature3.Select2(True, 1)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                End If


                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                l1 = part.SketchManager.CreateLine(-2 * 长度1 - 间距2 * 3 / 2， -扇形窗总长2 / 2， 0， -长度1 - 间距2 * 3 / 2， -扇形窗总长2 / 2， 0)
                p1 = l1.IGetStartPoint2
                p2 = l1.IGetEndPoint2
                a1 = part.SketchManager.CreateArc(p1.X + 宽度1, p1.Y, 0, p1.X, p1.Y, 0, p1.X + 宽度1, p1.Y + 宽度1， 0， -1) '顺时针
                ADDConstraints(1)
                a2 = part.SketchManager.CreateArc(p2.X - 宽度1, p2.Y, 0, p2.X, p2.Y, 0, p2.X - 宽度1, p2.Y + 宽度1， 0， 1)
                ADDConstraints(1)
                p3 = a1.IGetEndPoint2
                p4 = a2.IGetEndPoint2
                l2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， 0.01， 0.01， 0）
                p5 = l2.IGetStartPoint2
                p6 = l2.IGetEndPoint2

                p3.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                ADDConstraints(8)

                p4.Select4(False, Nothing)
                p6.Select4(True, Nothing)
                ADDConstraints(8)
                p7 = part.SketchManager.CreatePoint(p1.X + 宽度1, 扇形窗总长2 / 2, 0)
                p8 = part.SketchManager.CreatePoint(p1.X + 宽度1, -扇形窗总长2 / 2, 0)
                p8.Select4(False, Nothing)
                p7.Select4(True, Nothing)
                part.AddDimension2(-(扇形窗总长1 / 2 + 0.1), 0, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", Y_Array_number2, True, "", "", "", True, 1, "")

                l1.select2(False, 16)

                part.FeatureManager.FeatureRevolve2(True, True, False, False, True, False, 0, 0, PI / 2, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                part.Extension.SelectByID2("", "FACE", -长度1# - 2 * 间距1, -扇形窗总长2# / 2, -宽度1 / 2, False, 1, Nothing, 0)

                part.Extension.SelectByID2("", "FACE", 长度1, 0, 0, True, 1, Nothing, 0)
                part.InsertFeatureShell(0.001, False)

                Feature4 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisY.Select2(True, 2) '选择并标记
                part.FeatureManager.FeatureLinearPattern5(0, 0, y阵列个数2, 宽度1 + 间距2, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                Feature3 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                'Feature2.Select2(False, 1)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                'Feature3.Select2(True, 1)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

            End Sub
            Public Sub 矩型凸台（长度#， 宽度#, 长度2#， 槽离矩形底面距离#, 槽长#， 槽宽#, 间距1#， 间距2#， X阵列个数#， Y阵列个数#， 厚度#, coment1$, Optional type# = 0， Optional 槽间距离1# = 0）
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17 As SketchPoint
                Dim line1Segment As SketchSegment
                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, 长度 / 2， 宽度 / 2， 0)

                If type <> 0 Then

                    part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)

                End If

                'part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)
                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)
                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(长度2 / 2 - 槽长 / 2), -(宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)
                line1Segment.SelectChain(False, Nothing)
                If type = 2 Then

                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数 / 2， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                    'Feature3.Select2(True, 1)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                ElseIf type = 3 Then
                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数 / 3， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                    ADDConstraints(1)
                    lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                    ADDConstraints(1)
                    L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                    ADDConstraints(2)
                    L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                    ADDConstraints(2)
                    P9 = L5.GetStartPoint2
                    P10 = L5.GetEndPoint2
                    P11 = L6.GetStartPoint2
                    P12 = L6.GetEndPoint2
                    L6.select2(False, Nothing)
                    L5.select2(True, Nothing)
                    lc1.select2(True, Nothing)
                    ADDConstraints(6)
                    L5.select2(False, Nothing)
                    L6.select2(True, Nothing)
                    ADDConstraints(7)
                    L5.select2(False, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                    ChangeDimensionVaule(槽长 - 槽宽)
                    P9.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)
                    P11.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)


                    L6.select2(False, Nothing)
                    lc1.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                    ChangeDimensionVaule(槽宽# / 2)
                    a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                    a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                    sketch = SketchManager.ActiveSketch
                    SketchSegments = sketch.GetSketchSegments
                    For i = 0 To UBound(SketchSegments)
                        SketchSegment = SketchSegments(i)
                        [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                        part.SketchConstraintsDelAll()
                    Next i

                    line1Segment = L5
                    line1Segment.SelectChain(False, Nothing)

                    part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(长度2 / 2 - 槽长 / 2 - (槽长 * X阵列个数# / 3 + 间距1 * (X阵列个数# / 3 - 1) + 槽间距离1#)), -(宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)

                    line1Segment.SelectChain(False, Nothing)
                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数 / 3， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                    part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征

                    'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征

                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                ElseIf type = 4 Then

                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数 / 4， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)




                    'For i = 0 To UBound(SketchSegments)
                    '    SketchSegment = SketchSegments(i)
                    '    SketchSegment.Select2(True, Nothing)

                    'Next i
                    ''For i = 0 To UBound(SketchSegments)
                    ''    SketchSegment = SketchSegments(i)
                    ''    [Boolean] = SketchSegment.Select2(True, Nothing) : Debug.Assert([Boolean])
                    ''    'part.SketchConstraintsDelAll()
                    ''Next i

                    ''MsgBox(1)
                    'part.SketchManager.CreateLinearSketchStepAndRepeat(2， 1， X阵列个数# / 4 + 间距1 * (X阵列个数# / 4 - 1) + 槽间距离1， 0， 0， PI / 2, "", False, False, False, False, False)
                    ''MsgBox(1)
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                    ADDConstraints(1)
                    lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                    ADDConstraints(1)
                    L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                    ADDConstraints(2)
                    L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                    ADDConstraints(2)
                    P9 = L5.GetStartPoint2
                    P10 = L5.GetEndPoint2
                    P11 = L6.GetStartPoint2
                    P12 = L6.GetEndPoint2
                    L6.select2(False, Nothing)
                    L5.select2(True, Nothing)
                    lc1.select2(True, Nothing)
                    ADDConstraints(6)
                    L5.select2(False, Nothing)
                    L6.select2(True, Nothing)
                    ADDConstraints(7)
                    L5.select2(False, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                    ChangeDimensionVaule(槽长 - 槽宽)
                    P9.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)
                    P11.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)


                    L6.select2(False, Nothing)
                    lc1.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                    ChangeDimensionVaule(槽宽# / 2)
                    a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                    a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                    sketch = SketchManager.ActiveSketch
                    SketchSegments = sketch.GetSketchSegments
                    For i = 0 To UBound(SketchSegments)
                        SketchSegment = SketchSegments(i)
                        [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                        part.SketchConstraintsDelAll()
                    Next i

                    line1Segment = L5
                    line1Segment.SelectChain(False, Nothing)
                    part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(长度2 / 2 - 槽长 / 2 - (槽长 * X阵列个数# / 4 + 间距1 * (X阵列个数# / 4 - 1) + 槽间距离1#)), -(宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)

                    line1Segment.SelectChain(False, Nothing)
                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数 / 4， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                    part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征

                    part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征

                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)




                Else
                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)



                End If

                If type <> 0 Then
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                End If
                '标注尺寸
                P4 = part.SketchManager.CreatePoint(-长度 / 2， 宽度 / 2， 0)
                P5 = part.SketchManager.CreatePoint(长度 / 2， 宽度 / 2， 0)
                P6 = part.SketchManager.CreatePoint(长度 / 2， -宽度 / 2， 0)
                P4.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(0, 宽度 / 2 + 0.1, 0)

                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                part.AddDimension2(长度 / 2 + 0.1, 0, 0)

                a1.select2(False, Nothing)
                part.AddDimension2(-(长度2 / 2 + 0.15), 0, 0)

                P1 = part.SketchManager.CreatePoint(-长度2 / 2， P9.Y + 槽宽 / 2， 0)
                P2 = part.SketchManager.CreatePoint(长度2 / 2， P9.Y + 槽宽 / 2， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, -（宽度 / 2 + 0.1）, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", coment1, True, "", "", "", False, 1, "")

                P3 = part.SketchManager.CreatePoint(长度 / 2， P2.Y， 0)
                P3.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(长度 / 2 + 0.05, -（宽度 / 2 + 0.1）, 0)

                P1 = part.SketchManager.CreatePoint(P10.X， -宽度 / 2， 0)
                P12.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                part.AddDimension2(P10.X, -（宽度 / 2 + 0.02）, 0)

                P10.Select4(False, Nothing)
                P12.Select4(True, Nothing)
                part.AddDimension2(P11.X - 0.2, -宽度 / 2 - 0.01, 0)

                P7 = part.SketchManager.CreatePoint(-长度2 / 2， -P9.Y - 槽宽 / 2， 0)
                P8 = part.SketchManager.CreatePoint(P7.X + 槽长， -P9.Y - 槽宽 / 2， 0)
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(P7.X + 槽长 / 2, （宽度 / 2 + 0.05）, 0)

                P13 = part.SketchManager.CreatePoint(P8.X + 间距1， P8.Y， 0)
                P13.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(P13.X + 槽长 / 2, （宽度 / 2 + 0.05）, 0)

                'P14 = part.SketchManager.CreatePoint(-P10.X， P10.Y， 0)
                'P15 = part.SketchManager.CreatePoint（-P10.X， P10.Y + 间距2， 0)
                'P14.Select4(False, Nothing)
                'P15.Select4(True, Nothing)
                ''MsgBox(1)
                'part.AddDimension2(P14.X + 0.01, -0.01, 0)
                P16 = part.SketchManager.CreatePoint(-P9.X， P10.Y， 0)
                P17 = part.SketchManager.CreatePoint（-P9.X， P10.Y + 间距2， 0)
                P16.Select4(False, Nothing)
                P17.Select4(True, Nothing)
                part.AddDimension2(P16.X + 0.03, -0.01, 0)

                If type <> 0 Then

                    part.SketchManager.InsertSketch(True)
                End If



                If type = 0 Then
                    part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金
                End If



            End Sub
            Public Sub 矩形阵列槽（长度#， 宽度#, 长度2#， 槽离矩形底面距离#, 槽长#， 槽宽#, 间距1#， 间距2#， X阵列个数#， Y阵列个数#， 厚度#, coment1$）
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17 As SketchPoint
                Dim line1Segment As SketchSegment
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.CreateCenterRectangle(0, 0, 0, 长度 / 2， 宽度 / 2， 0)

                'part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)
                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长)

                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长) / 2)

                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                L1 = part.SketchManager.CreateLine(P9.X, P9.Y, 0, P11.X, P11.Y, 0)
                L2 = part.SketchManager.CreateLine(P10.X, P10.Y, 0, P12.X, P12.Y, 0)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)
                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(长度2 / 2 - 槽长 / 2), -(宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)
                line1Segment.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数， Y阵列个数， 间距1 + 槽长， 间距2 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                'AllCut(2)

                '标注尺寸
                P4 = part.SketchManager.CreatePoint(-长度 / 2， 宽度 / 2， 0)
                P5 = part.SketchManager.CreatePoint(长度 / 2， 宽度 / 2， 0)
                P6 = part.SketchManager.CreatePoint(长度 / 2， -宽度 / 2， 0)
                P4.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(0, 宽度 / 2 + 0.1, 0)

                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                part.AddDimension2(长度 / 2 + 0.1, 0, 0)

                'a1.select2(False, Nothing)
                'part.AddDimension2(-(长度2 / 2 + 0.15), 0, 0)

                P1 = part.SketchManager.CreatePoint(-长度2 / 2， P9.Y + 槽宽 / 2， 0)
                P2 = part.SketchManager.CreatePoint(长度2 / 2， P9.Y + 槽宽 / 2， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, -（宽度 / 2 + 0.1）, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", coment1, True, "", "", "", False, 1, "")

                P3 = part.SketchManager.CreatePoint(长度 / 2， P2.Y， 0)
                P3.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(长度 / 2 + 0.05, -（宽度 / 2 + 0.1）, 0)

                P1 = part.SketchManager.CreatePoint(P10.X， -宽度 / 2， 0)
                P12.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                part.AddDimension2(P10.X, -（宽度 / 2 + 0.02）, 0)

                P10.Select4(False, Nothing)
                P12.Select4(True, Nothing)
                part.AddDimension2(P11.X - 0.2, -宽度 / 2 - 0.01, 0)

                P7 = part.SketchManager.CreatePoint(-长度2 / 2， -P9.Y - 槽宽 / 2， 0)
                P8 = part.SketchManager.CreatePoint(P7.X + 槽长， -P9.Y - 槽宽 / 2， 0)
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(P7.X + 槽长 / 2, （宽度 / 2 + 0.05）, 0)

                P13 = part.SketchManager.CreatePoint(P8.X + 间距1， P8.Y， 0)
                P13.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(P13.X + 槽长 / 2, （宽度 / 2 + 0.05）, 0)

                'P14 = part.SketchManager.CreatePoint(-P10.X， P10.Y， 0)
                'P15 = part.SketchManager.CreatePoint（-P10.X， P10.Y + 间距2， 0)
                'P14.Select4(False, Nothing)
                'P15.Select4(True, Nothing)
                ''MsgBox(1)
                'part.AddDimension2(P14.X + 0.01, -0.01, 0)
                P16 = part.SketchManager.CreatePoint(-P9.X， P10.Y， 0)
                P17 = part.SketchManager.CreatePoint（-P9.X， P10.Y + 间距2， 0)
                P16.Select4(False, Nothing)
                P17.Select4(True, Nothing)
                part.AddDimension2(P16.X + 0.03, -0.01, 0)





                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5
                part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金




            End Sub
            Public Sub 圆孔阵列槽（矩形长#， 孔之间Y距离#， 离侧边距离#， 圆弧半径#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离）, -孔之间Y距离 / 2, 0, 圆弧半径#)
                A2 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离）, 孔之间Y距离 / 2, 0, 圆弧半径#)

                A1.select2(False, Nothing)
                A2.select2(True, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                ADDConstraints(9)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)


            End Sub
            Public Sub 矩形缺口（长#， 宽#， 缺口长#， 缺口宽#， diameter1#， 圆角#）

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCornerRectangle(长 / 2 - diameter1, 宽 / 2， 0， 长 / 2 - diameter1 - 缺口长, 宽 / 2 - 缺口宽， 0)



                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)


                Dim Object数组1, Object数组2, Object数组5, Object数组4, facenumber5 As Object
                Dim swface, swface2 As SldWorks.Face2
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)

                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组1 = Feature.GetFaces()
                facenumber5 = Feature.GetFaceCount()



                swface = Object数组1(1)
                Object数组2 = swface.GetEdges()
                '遍历（1， Object数组2， 1000， 0）
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(Object数组2(1), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组2(3), Nothing)
                Feature2 = part.FeatureManager.FeatureFillet3(195, 圆角#, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)


                part.ClearSelection2(True)
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)


                '标注
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(长# / 2, 宽 / 2， 0)
                P2 = part.SketchManager.CreatePoint(长# / 2 - diameter1#, 宽 / 2， 0)
                P3 = part.SketchManager.CreatePoint(长# / 2 - diameter1# - 缺口长#, 宽 / 2， 0)
                P4 = part.SketchManager.CreatePoint(长# / 2 - diameter1#, 宽 / 2 - 缺口宽#， 0)

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(长# / 2 - diameter1# / 2, 宽 / 2 + 0.05， 0)

                P2.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                part.AddDimension2(长# / 2 - diameter1# - 缺口长# / 2, 宽 / 2 + 0.05， 0)


                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.AddDimension2(长# / 2 - diameter1#, 宽 / 2 - 0.005， 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub 槽口（长度#， 宽度#， 槽长#, 槽宽#, x方向间距#， 槽离矩形底面距离#）

                Dim lc1, lc2 As SketchLine
                Dim line1Segment As SketchSegment
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                A1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                A2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)
                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, (长度 / 2 - 槽长 / 2), (宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)


                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)

                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                A1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                A2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)

                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)
                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, 槽长 / 2 + x方向间距 / 2, (宽度 / 2 - 槽宽 / 2 - 槽离矩形底面距离）， 0)


                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.ClearSelection2(True)
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)


                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

            End Sub
            Public Sub 平底槽型孔(矩形长#， 矩形宽#， 两槽之间y方向距离#， 距离矩形侧边距离#， 槽长#， 槽圆弧半径#， x阵列个数#, y阵列个数#, Optional 两槽之间x方向距离# = 0)
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16 As SketchPoint
                Dim line1Segment As SketchSegment
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)

                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule(槽长 / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule(槽长 / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽圆弧半径)
                a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽圆弧半径, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽圆弧半径, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)

                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)
                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -（矩形长 / 2 - 距离矩形侧边距离 - 槽长 / 2）, -两槽之间y方向距离 / 2， 0)

                If x阵列个数# = 2 Then
                    line1Segment.SelectChain(False, Nothing)
                    'lc1.select2(True, Nothing)
                    'ADDConstraints(9)
                    If y阵列个数 = 2 Then
                        part.SketchManager.CreateLinearSketchStepAndRepeat(1， y阵列个数， 0， 两槽之间y方向距离， 0， PI / 2, "", False, False, False, False, False)
                    ElseIf y阵列个数 = 3 Then
                        part.SketchManager.CreateLinearSketchStepAndRepeat(1， y阵列个数， 0， 两槽之间y方向距离 / 2， 0， PI / 2, "", False, False, False, False, False)
                    End If


                    P9.Select4(False, Nothing)
                    P10.Select4(True, Nothing)
                    part.AddDimension2(P9.X + 0.02, P9.Y - 0.1, 0)

                    a1.select2(False, Nothing)
                    part.AddDimension2(P9.X - 0.05, -两槽之间y方向距离 / 2 - 0.05, 0)


                    P13 = part.SketchManager.CreatePoint(-矩形长 / 2， P9.Y， 0)

                    P9.Select4(False, Nothing)
                    P13.Select4(True, Nothing)
                    part.AddDimension2(P9.X - 0.05, P9.Y - 0.1, 0)

                    P1 = part.SketchManager.CreatePoint(（矩形长 / 2 - 距离矩形侧边距离 + 槽圆弧半径）, -两槽之间y方向距离 / 2, 0)
                    P2 = part.SketchManager.CreatePoint(（矩形长 / 2 - 距离矩形侧边距离 + 槽圆弧半径）, 两槽之间y方向距离 / 2, 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    part.AddDimension2(矩形长 / 2 + 0.05, 0, 0)





                    part.SketchManager.InsertSketch(True)
                    AllCut(1)


                    Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    Feature.Select2(False, 1)

                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                ElseIf x阵列个数# = 3 Or x阵列个数# = 4 Then


                    line1Segment.SelectChain(False, Nothing)
                    'lc1.select2(True, Nothing)
                    'ADDConstraints(9)
                    part.SketchManager.CreateLinearSketchStepAndRepeat(x阵列个数#， 1， 两槽之间x方向距离， 0， 0， PI / 2, "", False, False, False, False, False)



                    P9.Select4(False, Nothing)
                    P10.Select4(True, Nothing)
                    part.AddDimension2(P9.X + 0.02, P9.Y - 0.1, 0)

                    a1.select2(False, Nothing)
                    part.AddDimension2(P9.X - 0.05, -两槽之间y方向距离 / 2 - 0.05, 0)


                    P13 = part.SketchManager.CreatePoint(-矩形长 / 2， P9.Y， 0)

                    P9.Select4(False, Nothing)
                    P13.Select4(True, Nothing)
                    part.AddDimension2(P9.X - 0.05, P9.Y - 0.1, 0)

                    P1 = part.SketchManager.CreatePoint(（矩形长 / 2 - 距离矩形侧边距离 + 槽圆弧半径）, -两槽之间y方向距离 / 2, 0)
                    P2 = part.SketchManager.CreatePoint(（矩形长 / 2 - 距离矩形侧边距离 + 槽圆弧半径）, 两槽之间y方向距离 / 2, 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    part.AddDimension2(矩形长 / 2 + 0.05, 0, 0)


                    P1 = part.SketchManager.CreatePoint(0, 两槽之间y方向距离 / 2, 0)
                    P2 = part.SketchManager.CreatePoint(-两槽之间x方向距离, 两槽之间y方向距离 / 2, 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    part.AddDimension2(-两槽之间x方向距离 / 2, 两槽之间y方向距离 / 2 + 0.05, 0)


                    part.SketchManager.InsertSketch(True)
                    AllCut(1)


                    Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                    Feature.Select2(False, 1)

                    part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    part.FeatureManager.InsertMirrorFeature(False, False, False, False)










                End If
            End Sub
            Public Sub Notch_on_circle(x总长#, y总长#， 槽长#, 槽宽#， x间距#, y间距#, x阵列#， y阵列#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateSketchSlot(1, 0, 槽宽#, 槽长# / 2 + x间距# / 2, y间距# / 2 + 槽宽# / 2, 0, 槽长# + x间距# / 2 - 槽宽# / 2, y间距# / 2 + 槽宽# / 2, 0, 槽长# / 2 + x间距# / 2, y间距# / 2 + 槽宽, 0, 1, False)
                part.SketchManager.CreateLinearSketchStepAndRepeat(x阵列# / 2, y阵列# / 2, 槽长# + x间距#, y间距# + 槽宽#, 0, PI / 2, "(4, 9) (4, 8) (4, 7) (4, 6) (4, 5) (3, 9) (3, 8) ", False, False, False, True, True)
                AllCut(1)

                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                Feature.Select2(False, 1)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                Feature.Select2(False, 1)
                Feature2.Select2(True, 1)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)


                '标注尺寸
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                P4 = part.SketchManager.CreatePoint(-x总长# / 2， 0， 0)
                P5 = part.SketchManager.CreatePoint(x总长# / 2， 0， 0)
                P6 = part.SketchManager.CreatePoint(0， -y总长# / 2， 0)
                P7 = part.SketchManager.CreatePoint(0， y总长# / 2， 0)
                P4.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(0, -y总长# / 2 - 0.1, 0)
                'part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", coment1, True, "", "", "", False, 1, "")
                P7.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                part.AddDimension2(x总长# / 2 + 0.1, 0, 0)
                'part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, "", coment2, True, "", "", "", False, 1, "")
                'A1.select2(False, Nothing)
                'part.AddDimension2(-(长度2 / 2 + 0.15), 0, 0)

                P1 = part.SketchManager.CreatePoint(x间距# / 2， -y总长# / 2， 0)
                P2 = part.SketchManager.CreatePoint(x间距# / 2 + 槽长#， -y总长# / 2， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(x间距# / 2 + 槽长# / 2, -（y总长# / 2 + 0.05）, 0)


                P3 = part.SketchManager.CreatePoint(x间距# / 2 + 槽长#， -y总长# / 2 + 槽宽# / 2， 0)
                P4 = part.SketchManager.CreatePoint(x间距# / 2 + 槽长# + x间距#， -y总长# / 2 + 槽宽# / 2， 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.AddDimension2(x间距# + 槽长#, -（y总长# / 2 + 0.05）, 0)


                P7 = part.SketchManager.CreatePoint(-(x间距# * 3 / 2 + 2 * 槽长#）， -y总长# / 2， 0)
                P8 = part.SketchManager.CreatePoint(-（x间距# * 3 / 2 + 2 * 槽长#）， -y总长# / 2 + 槽宽#， 0)
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(-(x间距# * 3 / 2 + 2 * 槽长#）, -（y总长# / 2 + 0.05）, 0)

                P9 = part.SketchManager.CreatePoint(-（x间距# * 3 / 2 + 2 * 槽长#）， -y总长# / 2 + 槽宽# + y间距#， 0)

                P9.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(-(x间距# * 3 / 2 + 3 * 槽长#）, -（y总长# / 2 + 0.05）, 0)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub 矩形凸台圆孔（矩形长#， 两槽之间y方向距离#， 距离矩形侧边距离#， 槽圆弧直径#， x阵列个数#, y阵列个数#）

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(-(矩形长# / 2 - 距离矩形侧边距离#), 两槽之间y方向距离# / 2, 0, 槽圆弧直径# / 2)
                AllCut(1)
                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                Feature.Select2(False, 1)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                Feature2 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择
                Feature2.Select2(False, 1)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

            End Sub
            Public Sub 半圆弧弯曲（矩形长#, 厚度#）
                part.Extension.SelectByID2(part.GetTitle, "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddConfiguration2("弯曲", "", "", False, False, False, True, 256)
                part.ShowConfiguration2("弯曲")
                part.Extension.SelectByID2("镜向1", "SOLIDBODY", 0, 0, -0, False, 1, Nothing, 0)
                part.FeatureManager.InsertFlexFeature(0, 1, 0, 1, 0, 0, 0, 0, 1, PI, 0, 0, -厚度# / 2, 0, 矩形长# / 2, 矩形长# / 2, True)
                part.ForceRebuild3(True)
                part.ShowConfiguration2("默认")
                part.ForceRebuild3(True)
            End Sub
            Public Sub 矩形拉伸（矩形长#， 矩形宽#， 厚度#）

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, 矩形长 / 2， 矩形宽 / 2， 0)


                P1 = part.SketchManager.CreatePoint(矩形长# / 2, 矩形宽# / 2, 0)
                P2 = part.SketchManager.CreatePoint(-矩形长# / 2, 矩形宽# / 2, 0)
                P3 = part.SketchManager.CreatePoint(矩形长# / 2, -矩形宽# / 2, 0)


                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, 矩形宽# / 2 + 0.02, 0)


                P1.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                part.AddDimension2(矩形长# / 2 + 0.02, 0, 0)

                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5

                part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金
            End Sub
            Public Sub 左侧平底槽型孔(矩形长#， 矩形宽#， 宽度2#, 槽长#， 槽宽#, x间距#， y间距#， X阵列个数#， Y阵列个数#， 距离1#)
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16 As SketchPoint
                Dim line1Segment As SketchSegment
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)

                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(矩形长 / 2 - 距离1 - 槽长 / 2), -(宽度2 / 2 - 槽宽 / 2）， 0)
                line1Segment.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数， Y阵列个数， x间距 + 槽长， y间距 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                AllCut(2)

            End Sub
            Public Sub 右侧平底槽型孔(矩形长#， 矩形宽#， 宽度2#, 槽长#， 槽宽#, x间距#， y间距#， X阵列个数#， Y阵列个数#， 距离8#， 距离9#)
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16 As SketchPoint
                Dim line1Segment As SketchSegment
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)

                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, (矩形长 / 2 - 距离9 - 距离8 + 槽长 / 2), -(宽度2 / 2 - 槽宽 / 2）， 0)
                line1Segment.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数， Y阵列个数， x间距 + 槽长， y间距 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                AllCut(2)

            End Sub
            Public Sub 竖向扇形窗（矩形长#， 扇形长#， 扇形宽#， x方向间距#， x阵列个数#, 突出距离#， 厚度#， 距离1#， 距离2#， 距离3#， 距离4#， 距离5#， 距离6#， 距离7#，
                          Optional 距离8# = 0， Optional 距离9# = 0）
                Dim l1, l2 As SketchLine
                Dim p1, p2, p3, p4, p5, p6, P7, P8, P9, P10, P11, P12 As SketchPoint
                Dim a1, a2 As SketchArc
                Dim l1Segment As SketchSegment
                'SelectPlane("front")
                part.Extension.SelectByRay(0, 0, -1, 0, 0, 1, 0.0001, 2, False, 0, 0)
                part.SketchManager.InsertSketch(True)
                l1 = part.SketchManager.CreateLine（（矩形长# / 2 - 距离1 - 距离2 - 距离3）， -扇形长 / 2， 0， （矩形长# / 2 - 距离1 - 距离2 - 距离3）， 扇形长 / 2， 0)

                p1 = l1.GetStartPoint2
                p2 = l1.GetEndPoint2
                a1 = part.SketchManager.CreateArc(p1.X, p1.Y + 扇形宽, 0, p1.X, p1.Y, 0, p1.X - 扇形宽, p1.Y + 扇形宽， 0， -1) '逆时针
                ADDConstraints(1)
                a2 = part.SketchManager.CreateArc(p2.X, p2.Y - 扇形宽, 0, p2.X, p2.Y, 0, p2.X - 扇形宽, p2.Y - 扇形宽， 0， 1)
                ADDConstraints(1)
                p3 = a1.GetEndPoint2
                p4 = a2.GetEndPoint2
                l2 = part.SketchManager.CreateLine（-0.01， 0.01， 0， -0.01， 0.02， 0）
                p5 = l2.GetStartPoint2
                p6 = l2.GetEndPoint2

                p3.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                ADDConstraints(8)

                p4.Select4(False, Nothing)
                p6.Select4(True, Nothing)
                ADDConstraints(8)


                l1.select2(False, 16)

                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, Asin(突出距离 / 扇形宽）, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

                Feature = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择

                part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureLinearPattern5(x阵列个数, 扇形宽 + x方向间距, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                Feature1 = SelectionMgr.GetSelectedObject6(1, -1) '获得所选择的对象引用，无论标记如何，所有选择


                Dim AXI As SldWorks.Feature

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '创建x偏心基准面
                part.SketchManager.InsertSketch(True)
                l1 = part.SketchManager.CreateCenterLine(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 - 距离5 / 2), 0, 0, -(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 - 距离5 / 2), -0.01, 0)
                l1Segment = l1
                sketch = SketchManager.ActiveSketch
                Feature = sketch
                part.InsertSketch2(True)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2(l1Segment.GetName & "@" & Feature.Name, "EXTSKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)

                AXI = part.FeatureManager.InsertRefPlane(1, 0, 4, 0, 0, 0)


                Feature.Select2(False, 1)
                Feature1.Select2(True, 1)

                part.Extension.SelectByID2(AXI.Name, "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                If 距离8# <> 0 Then
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    P7 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 扇形宽), -扇形长 / 2， 0）
                    P8 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 扇形宽), 扇形长 / 2， 0）
                    P7.Select4(False, Nothing)
                    P8.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 - 0.01), 0， 0)
                    P9 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6), -扇形长 / 2 + 扇形宽 / 2， 0）
                    P12 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 扇形宽), -扇形长 / 2 + 扇形宽 / 2， 0）
                    P12.Select4(False, Nothing)
                    P9.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 扇形长 / 2), -(扇形长 / 2 + 2 * 扇形宽）， 0)

                    P10 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 3 * 扇形宽 + 3 * x方向间距), -扇形长 / 2 + 扇形宽， 0）
                    P11 = part.SketchManager.CreatePoint（(矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 4 * 扇形宽 + 4 * x方向间距), -扇形长 / 2 + 扇形宽， 0）
                    P10.Select4(False, Nothing)
                    P11.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 - 距离7 - 距离6 + 3 * 扇形宽 + 3 * x方向间距 + 扇形宽 / 2 + x方向间距 / 2), -(扇形长 / 2 + 2 * 扇形宽）， 0)
                    part.SketchManager.InsertSketch(True)
                End If
            End Sub
            Public Sub 防护罩（矩形长#， 矩形宽#， 厚度#， 宽度2#, 槽长#， 槽宽#, x间距#， y间距#， X阵列个数1#， X阵列个数2#， Y阵列个数#, 孔之间Y距离#， 离侧边距离#， 圆孔半径#, 隔板长#, type#, max#， x_arry1$， x_arry2$， y_arry$， Optional 距离1# = 0， Optional 距离2# = 0， Optional 距离3# = 0， Optional 距离4# = 0， Optional 距离5# = 0， Optional 距离6# = 0， Optional 距离7# = 0，
                          Optional 距离8# = 0， Optional 距离9# = 0）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, 矩形长 / 2 + 隔板长， 矩形宽 / 2， 0)
                Dim lc1, lc2, L1, L2, L3, L4, L5, L6 As SketchLine
                Dim a1, a2, arc1, arc2 As SketchArc
                Dim P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18， P19, P20, P21, P22, P23 As SketchPoint
                Dim line1Segment As SketchSegment

                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                ADDConstraints(2)
                L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L6.select2(False, Nothing)
                L5.select2(True, Nothing)
                lc1.select2(True, Nothing)
                ADDConstraints(6)
                L5.select2(False, Nothing)
                L6.select2(True, Nothing)
                ADDConstraints(7)
                L5.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                ChangeDimensionVaule(槽长 - 槽宽)
                P9.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)
                P11.Select4(False, Nothing)
                lc2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                ChangeDimensionVaule((槽长 - 槽宽) / 2)


                L6.select2(False, Nothing)
                lc1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                ChangeDimensionVaule(槽宽# / 2)
                a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i
                line1Segment = L5
                line1Segment.SelectChain(False, Nothing)

                part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, -(矩形长 / 2 - 距离1 - 槽长 / 2), -(宽度2 / 2 - 槽宽 / 2）， 0)
                line1Segment.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数1， Y阵列个数， x间距 + 槽长， y间距 + 槽宽， 0， PI / 2, "", False, False, False, False, False)

                If 距离8# <> 0 Then
                    lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                    ADDConstraints(1)
                    lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                    ADDConstraints(1)
                    L5 = part.SketchManager.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                    ADDConstraints(2)
                    L6 = part.SketchManager.CreateLine(-0.01, -0.01, 0, 0.01, -0.01, 0)
                    ADDConstraints(2)
                    P9 = L5.GetStartPoint2
                    P10 = L5.GetEndPoint2
                    P11 = L6.GetStartPoint2
                    P12 = L6.GetEndPoint2
                    L6.select2(False, Nothing)
                    L5.select2(True, Nothing)
                    lc1.select2(True, Nothing)
                    ADDConstraints(6)
                    L5.select2(False, Nothing)
                    L6.select2(True, Nothing)
                    ADDConstraints(7)
                    L5.select2(False, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.1, P9.Y + 0.1, 0)
                    ChangeDimensionVaule(槽长 - 槽宽)
                    P9.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P9.X + 0.2, P9.Y + 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)
                    P11.Select4(False, Nothing)
                    lc2.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(P11.X - 0.2, P11.Y - 0.2, 0)
                    ChangeDimensionVaule((槽长 - 槽宽) / 2)


                    L6.select2(False, Nothing)
                    lc1.select2(True, Nothing)
                    DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
                    ChangeDimensionVaule(槽宽# / 2)
                    a1 = part.SketchManager.CreateArc(P9.X, P9.Y - 槽宽# / 2, 0, P9.X, P9.Y, 0, P11.X, P11.Y, 0, 1)
                    a2 = part.SketchManager.CreateArc(P10.X, P10.Y - 槽宽# / 2, 0, P10.X, P10.Y, 0, P12.X, P12.Y, 0, -1)
                    sketch = SketchManager.ActiveSketch
                    SketchSegments = sketch.GetSketchSegments
                    For i = 0 To UBound(SketchSegments)
                        SketchSegment = SketchSegments(i)
                        [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                        part.SketchConstraintsDelAll()
                    Next i
                    line1Segment = L5
                    line1Segment.SelectChain(False, Nothing)

                    part.Extension.MoveOrCopy(False, 1, True, 0, 0, 0, (矩形长 / 2 - 距离9 - 距离8 + 槽长 / 2), -(宽度2 / 2 - 槽宽 / 2）， 0)
                    line1Segment.SelectChain(False, Nothing)
                    part.SketchManager.CreateLinearSketchStepAndRepeat(X阵列个数2， Y阵列个数， x间距 + 槽长， y间距 + 槽宽， 0， PI / 2, "", False, False, False, False, False)
                End If
                arc1 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离 + 隔板长）, -孔之间Y距离 / 2, 0, 圆孔半径)

                arc2 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离 + 隔板长）, 孔之间Y距离 / 2, 0, 圆孔半径)

                arc1.select2(False, Nothing)
                arc2.select2(True, Nothing)
                lc2.select2(True, Nothing)
                ADDConstraints(9)
                '尺寸标注


                P1 = part.SketchManager.CreatePoint(矩形长 / 2， 矩形宽 / 2, 0)
                P2 = part.SketchManager.CreatePoint(-矩形长 / 2， 矩形宽 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, 矩形宽, 0)
                part.EditDimensionProperties2(type, max, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                P3 = part.SketchManager.CreatePoint(-(矩形长 / 2), (宽度2 / 2 - 槽宽 / 2), 0）
                P4 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1), (宽度2 / 2 - 槽宽 / 2), 0）
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 / 2), 矩形宽 / 2 + 0.02, 0)
                P5 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 距离2), (宽度2 / 2 - 槽宽 / 2), 0）
                P5.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 - 距离2 / 2), 矩形宽 / 2 + 0.02, 0)
                P6 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 距离2 - 距离3), (宽度2 / 2 - 槽宽 / 2), 0）
                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 / 2), 矩形宽 / 2 + 0.02, 0)
                P7 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4), (宽度2 / 2 - 槽宽 / 2), 0）
                P7.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 / 2), 矩形宽 / 2 + 0.02, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", x_arry1$, True, "", "", False)
                P8 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 - 距离5), (宽度2 / 2 - 槽宽 / 2), 0）
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 - 距离5 / 2), 矩形宽 / 2 + 0.02, 0)
                P9 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离9 - 距离8 - 距离7), (宽度2 / 2 - 槽宽 / 2), 0）
                P9.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.AddDimension2(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 距离4 - 距离5 - 距离6 / 2), 矩形宽 / 2 + 0.02, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", x_arry1$, True, "", "", False)
                If 距离8# <> 0 Then
                    P10 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离9 - 距离8), (宽度2 / 2 - 槽宽 / 2), 0）
                    P9.Select4(False, Nothing)
                    P10.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 - 距离7 / 2), 矩形宽 / 2 + 0.02, 0)
                    P11 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离9), (宽度2 / 2 - 槽宽 / 2), 0）
                    P11.Select4(False, Nothing)
                    P10.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 / 2), 矩形宽 / 2 + 0.02, 0)
                    part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", x_arry2$, True, "", "", False)
                    P23 = part.SketchManager.CreatePoint((矩形长 / 2), (宽度2 / 2 - 槽宽 / 2), 0）
                    P11.Select4(False, Nothing)
                    P23.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 + 隔板长), 矩形宽 / 2 + 0.02, 0)
                    P13 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 槽宽 / 2), (宽度2 / 2), 0）
                    P14 = part.SketchManager.CreatePoint(-(矩形长 / 2 - 距离1 - 槽宽 / 2), -(宽度2 / 2), 0）
                    P13.Select4(False, Nothing)
                    P14.Select4(True, Nothing)
                    part.AddDimension2(-(矩形长 / 2 + 2 * 隔板长), 0, 0)

                    part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", y_arry$, True, "", "", False)
                    a1.select2(False, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离9 - 距离8 - 0.01), -(宽度2 / 2 + 2 * 槽宽）， 0)
                    P15 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 2 * 槽长 + 2 * x间距), -(宽度2 / 2 - 槽宽 / 2), 0）
                    P16 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 3 * 槽长 + 2 * x间距), -(宽度2 / 2 - 槽宽 / 2), 0）

                    P15.Select4(False, Nothing)
                    P16.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离8 - 距离9 + 5 * 槽长 / 2 + 2 * x间距), -(宽度2 / 2 + 2 * 槽宽）, 0)

                    P17 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 6 * 槽长 + 5 * x间距), -(宽度2 / 2 - 槽宽 / 2), 0）
                    P18 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 6 * 槽长 + 6 * x间距), -(宽度2 / 2 - 槽宽 / 2), 0）
                    P17.Select4(False, Nothing)
                    P18.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离8 - 距离9 + 7 * 槽长 + 7 * x间距), -(宽度2 / 2 + 2 * 槽宽）, 0)
                    P19 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 10 * 槽长 + 9 * x间距 + 槽长 / 2), -(宽度2 / 2), 0）
                    P20 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 10 * 槽长 + 9 * x间距 + 槽长 / 2), -(宽度2 / 2 - 槽宽), 0）
                    P19.Select4(False, Nothing)
                    P20.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离8 - 距离9 + 10 * 槽长 + 9 * x间距 + 槽长 / 2), -(宽度2 / 2 + 3 * 槽宽）, 0)
                    P21 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 12 * 槽长 + 11 * x间距 + 槽长 / 2), -(宽度2 / 2 - 槽宽 - y间距), 0）
                    P22 = part.SketchManager.CreatePoint((矩形长 / 2 - 距离8 - 距离9 + 12 * 槽长 + 11 * x间距 + 槽长 / 2), -(宽度2 / 2 - 槽宽), 0）
                    P21.Select4(False, Nothing)
                    P22.Select4(True, Nothing)
                    part.AddDimension2((矩形长 / 2 - 距离8 - 距离9 + 12 * 槽长 + 11 * x间距 + 槽长 / 2), -(宽度2 / 2 + 2 * 槽宽）, 0)

                End If

                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5
                part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金




            End Sub
            Public Sub 圆角凸台（凸台直径1#, 凸台直径2#, 厚度1#, 厚度2#, 圆角半径#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 凸台直径1# / 2)
                part.FeatureManager.FeatureExtrusion3(True, False, True, 0, 0, 厚度1, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸


                part.Extension.SelectByRay（0， 0， 0.01, 0， 0， -1, 0.001， 2, False， 1， 0）
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 凸台直径2# / 2)
                Feature1 = part.FeatureManager.FeatureExtrusion3(True, False, True, 0, 0, 厚度2, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸


                Dim Object数组1, Object数组2, Object数组5, Object数组4, facenumber5 As Object
                Dim swface, swface2 As SldWorks.Face2
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)

                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组1 = Feature.GetFaces()
                facenumber5 = Feature.GetFaceCount()


                '遍历（1， Object数组1， 1000， 0）
                swface = Object数组1(1)
                Object数组2 = swface.GetEdges()
                '遍历（1， Object数组2， 1000， 0）
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(Object数组2(1), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组2(0), Nothing)

                part.FeatureManager.FeatureFillet3(195, 圆角半径, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                part.Extension.SelectByRay（0， 0， 厚度2#, 0， 0， -1, 0.001， 2, False， 1， 0）
                part.InsertFeatureShell（0.001, False）





            End Sub
            Public Sub 侧面孔（矩形长#， 矩形宽#， 孔之间Y距离#， 离侧边距离#， 圆孔半径#）
                Dim lc1, lc2， L5, L6 As SketchLine
                Dim arc1, arc2 As SketchArc
                Dim A1, L1 As SketchSegment
                Dim P9, P10, P11, P12 As SketchPoint
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                lc1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                lc2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                arc1 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离）, -孔之间Y距离 / 2, 0, 圆孔半径)

                arc2 = part.SketchManager.CreateCircleByRadius(-（矩形长 / 2 - 离侧边距离）, 孔之间Y距离 / 2, 0, 圆孔半径)

                arc1.select2(False, Nothing)
                arc2.select2(True, Nothing)
                lc2.select2(True, Nothing)
                ADDConstraints(9)




            End Sub
            Public Sub 折弯（矩形长#， 矩形宽#, 隔板长度#, 孔之间Y距离#, 圆孔半径#, 距离侧边距离#）
                Dim lc1, lc2 As SketchLine
                Dim a1 As SketchSegment
                Dim p1, p2, p3, p4, p5, p6 As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                lc1 = part.SketchManager.CreateLine(-（矩形长 / 2）, -（矩形宽 / 2 + 0.01）, 0, -（矩形长 / 2）, （矩形宽 / 2 + 0.01）, 0)

                lc2 = part.SketchManager.CreateLine(（矩形长 / 2）, -（矩形宽 / 2 + 0.01）, 0, （矩形长 / 2）, （矩形宽 / 2 + 0.01）, 0)
                part.SetPickMode()
                part.ClearSelection2(True)
                part.Extension.SelectByRay(0, 矩形宽# / 2 - 0.001, 0.1, 0, 0, -0.01, 0.001, 2, True, 0, 0)
                'part.Extension.SelectByRay(0, 0, 0.01, 0, 0, -0.01, 0.001, 2, True, 0, 0)

                Dim CBAObject As Object

                Feature1 = part.FeatureManager.InsertSheetMetal3dBend(PI / 2, False, 0.000001, True, 2, CBAObject)

                'If Feature1 Is Nothing Then
                '    part.Extension.SelectByRay(0, 矩形宽# / 2 - 0.001, 0.1, 0, 0, -0.01, 0.001, 2, True, 0, 0)
                '    part.FeatureManager.InsertSheetMetal3dBend(PI / 2, False, 0.000001, False, 2, CBAObject)
                'End If

                part.SketchManager.InsertSketch(True)

                part.Extension.SelectByRay(矩形长 / 2 + 隔板长度， 0， -隔板长度 / 2， -1， 0， 0， 0.0001， 2, False, 0, 0)
                part.SketchManager.InsertSketch(True)
                a1 = part.SketchManager.CreateCircleByRadius(-（隔板长度# - 距离侧边距离）, 孔之间Y距离 / 2, 0, 圆孔半径)
                part.SketchManager.CreateConstructionGeometry()
                a1.Select4(False, Nothing)
                part.AddDimension2(矩形长 / 2, 矩形宽 / 2, 隔板长度 * 3)
                p1 = part.SketchManager.CreatePoint(-（隔板长度# - 距离侧边距离）, 孔之间Y距离 / 2, 0)
                p2 = part.SketchManager.CreatePoint(-（隔板长度# - 距离侧边距离）, -孔之间Y距离 / 2, 0)
                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                part.AddDimension2(矩形长 / 2, 0, -2 * 隔板长度)
                p3 = part.SketchManager.CreatePoint(0, 矩形宽 / 2, 0)
                p4 = part.SketchManager.CreatePoint(0, -矩形宽 / 2, 0)
                p3.Select4(False, Nothing)
                p4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(矩形长 / 2, 0, -3 * 隔板长度 - 0.01)
                part.EditDimensionProperties2(2, 0, -0.001, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                p5 = part.SketchManager.CreatePoint(-隔板长度, -矩形宽 / 2, 0)
                p6 = part.SketchManager.CreatePoint(-（隔板长度# - 距离侧边距离）, -矩形宽 / 2, 0)

                p5.Select4(False, Nothing)
                p4.Select4(True, Nothing)

                part.AddDimension2(矩形长 / 2, -矩形宽 / 2 - 0.03, -2 * 隔板长度)
                p5.Select4(False, Nothing)
                p6.Select4(True, Nothing)

                part.AddDimension2(矩形长 / 2, -矩形宽 / 2 - 0.02, -隔板长度)
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub 弯曲(矩形长#， 矩形宽#, 圆柱直径#)
                Dim lc1, lc2 As SketchLine
                'part.Extension.SelectByRay(0, 矩形宽# / 2 - 0.001, -0.01, 0, 0, 0.01, 0.001, 2, True, 0, 0)

                'part.SketchManager.InsertSketch(True)

                'lc1 = part.SketchManager.CreateLine(0, -矩形宽 / 2, 0, 0, 矩形宽 / 2, 0)
                ''part.SetPickMode()
                'part.ClearSelection2(True)
                ''MsgBox(1)
                'part.Extension.SelectByRay(0, 矩形宽# / 2 - 0.001, -0.1, 0, 0, 0.01, 0.001, 2, True, 0, 0)

                'Dim CBAObject As Object
                'part.FeatureManager.InsertSheetMetal3dBend(359 / 360 * 2 * PI, False, 圆柱直径 / 2 - 0.5 / 1000, False, 0, CBAObject)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                lc1 = part.SketchManager.CreateLine(0, -矩形宽 / 2, 0, 0, 矩形宽 / 2, 0)
                part.SetPickMode()
                part.ClearSelection2(True)

                part.Extension.SelectByRay(0, 0.01, 0.01, 0, 0, -0.01, 0.001, 2, True, 0, 0)

                Dim CBAObject As Object
                part.FeatureManager.InsertSheetMetal3dBend(359 / 360 * 2 * PI, False, 圆柱直径 / 2 - 0.5 / 1000, False, 0, CBAObject)


            End Sub
            Public Sub 筒体卷曲（矩形宽#, 圆柱直径#, 厚度#）
                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)

                'part.SketchManager.CreateLine(0, -矩形宽 / 2, 0, 0, 矩形宽 / 2, 0)
                'part.SetPickMode()
                'part.ClearSelection2(True)

                'part.Extension.SelectByRay(0, 0.01, 0.01, 0, 0, -0.01, 0.001, 2, True, 0, 0)

                'Dim CBAObject As Object
                'part.FeatureManager.InsertSheetMetal3dBend(359 / 360 * 2 * PI, False, 圆柱直径 / 2 - 0.5 / 1000, False, 0, CBAObject)


                part.Extension.SelectByID2("", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)

                part.FeatureManager.InsertFlexFeature(0, 1, 0, 1, 0, 0, 0, 0, 1, 359 / 360 * 2 * PI, 0, 0, -厚度# / 2, 0, （(圆柱直径# - 厚度) * PI） / 2, （(圆柱直径 - 厚度) * PI） / 2, True)
                'part.FeatureManager.InsertFlexFeature(0, 1, 0, 1, 0, 0, 0, 0, 1, 6.27445866091963, 0, 0, -0.003, 0, 1.24721228347515, 1.24721228347515, True)
                'part.FeatureManager.InsertFlexFeature(0, 1, 0, 1, 0, 0, 0, 0, 1, 6.28143997792761, 0, 0.0359117807379359, -0.0025, 0, 1.06814150222053, 1.06814150222053, True)


            End Sub
            Public Sub Two_stage_round_table_stretch（直径1#， 直径2#， 厚度1#， 厚度2#, 倒角长度#, Max#, Min#, Type#, arc_table_tol_max1$, arc_table_tol_min1$, Type5#）
                Dim p2, p3, p4, p5, p6, p7, p8, p9, p10, p11 As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1 / 2)
                'part.AddDimension2(直径1 / 2 + 0.02, 0, 0)
                part.SketchManager.InsertSketch(True)

                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度1, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                part.Extension.SelectByID2("", "FACE", 0, 0, 厚度1, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                'part.AddDimension2(0, -(直径2 / 2 + 0.02), 0)

                part.ClearSelection2(True)

                Feature = part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度2, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)

                part.Extension.SelectByRay（0， 直径1 / 2， 0, 0， -1， 0, 0.000001， 1, False， 0， 0）

                part.FeatureManager.InsertFeatureChamfer(6, 1, 倒角长度, PI / 4, 0, 0, 0, 0)

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)

                p2 = part.SketchManager.CreatePoint(-厚度1, 直径1 / 2, 0)
                p3 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2), 直径1 / 2, 0)


                p2.Select4(False, Nothing)
                p3.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 直径2 / 2 + 0.005, 厚度1 + 厚度2 + 0.015)

                p4 = part.SketchManager.CreatePoint(0, 直径1 / 2, 0)
                p5 = part.SketchManager.CreatePoint(0, -直径1 / 2, 0)
                p4.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.01, -0.1)
                part.EditDimensionProperties2(Type5#, Max, Min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                p8 = part.SketchManager.CreatePoint(0, 直径1 / 2, 0)
                p9 = part.SketchManager.CreatePoint(0, -直径1 / 2, 0)
                p8.Select4(False, Nothing)
                p9.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.01, 厚度1 + 厚度2 + 0.1)
                SetTolvalue(Type, arc_table_tol_max1, arc_table_tol_min1)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                p6 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2), 直径2 / 2, 0)
                p7 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2), -直径2 / 2, 0)
                p6.Select4(False, Nothing)
                p7.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.01, 厚度1 + 厚度2 + 0.12)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线

                part.SketchManager.InsertSketch(True)


            End Sub
            Public Sub 缺口（直径1#， 直径3#， 厚度1#， 厚度3#， 缺口厚度#, type#, max$, min$）
                Dim L1, L2, L3, L4, L5 As SketchLine
                Dim L2S As SketchSegment

                Dim p1, p2, p3, p4, p5 As SketchPoint
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                初始设置(1)
                L1 = part.SketchManager.CreateLine(-(厚度1 - 厚度3 - 缺口厚度)， 直径1 / 2， 0， -(厚度1 - 厚度3 - 缺口厚度)， 直径3 / 2， 0)
                L2 = part.SketchManager.CreateLine(-(厚度1 - 厚度3 - 缺口厚度)， 直径3 / 2， 0， -(厚度1 - 厚度3)， 直径3 / 2， 0)
                L3 = part.SketchManager.CreateLine(-(厚度1 - 厚度3)， 直径3 / 2， 0， -(厚度1 - 厚度3)， 直径1 / 2， 0)
                L4 = part.SketchManager.CreateLine(-(厚度1 - 厚度3 - 缺口厚度)， 直径1 / 2， 0， -(厚度1 - 厚度3)， 直径1 / 2， 0)
                p1 = L4.GetEndPoint2
                p4 = L1.GetEndPoint2
                p5 = part.SketchManager.CreatePoint(p4.X, -p4.Y, 0)
                p4.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.01, -0.08)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                'L2S = L2
                'L2S.Select4(False, Nothing)
                'part.AddDimension2(0.01, 直径1 / 2 + 0.03, 0)
                p2 = part.SketchManager.CreatePoint(-厚度1, 直径1 / 2, 0)
                p3 = part.SketchManager.CreatePoint(0, 直径1 / 2, 0)
                p2.Select4(False, Nothing)
                p1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-厚度1 / 2, 直径1 / 2 + 0.015, 厚度1 / 2)
                SetTolvalue(type#, max$, min$)
                DisplayDimension.CenterText = True

                p2.Select4(False, Nothing)
                p3.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 直径1 / 2 + 0.03, 厚度1 / 2)
                SetTolvalue(type#, max$, min$)

                DisplayDimension.CenterText = True


                'L5 = part.SketchManager.CreateLine(0， 0， 0， 0.1， 0， 0)
                'L1S = L1
                'part.Extension.SelectByID2("草图6", "SKETCH", -0.0522720713388387, 0.0617699299569898, 0.00918372880415322, True, 2, Nothing, 0)
                'part.SelectionManager.EnableContourSelection = True
                'L1S.SelectChain(False, Nothing)
                L4.select2(False, Nothing)
                part.AddDimension2(0, 直径1 / 2 + 0.015, -0.015)
                AxisZ.Select2(True, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)



            End Sub
            Public Sub Rectangular_protruding_reverse_hole（直径#， 长度#， 宽度#， 厚度1#， 厚度2#, arc_table_tol_min$, arc_table_tol_max$, arc_table_tol_max1$, max#, type6#, type7#）
                Dim LC1, LC2, L1, L2, L3 As SketchLine
                Dim A1 As SketchSegment
                Dim p1, p2, p3, p4, p5, p6, p7， p8, P9, P10 As SketchPoint
                Dim SF, SF1, SF2 As Object
                part.Extension.SelectByID2("", "FACE", 直径# / 2, 0, 厚度1 + 厚度2, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                LC1 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                LC2 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径 / 2)
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(-宽度 / 2, (长度 - 直径 / 2)， 0， 宽度 / 2, (长度 - 直径 / 2)， 0)
                ADDConstraints(1)
                p1 = L1.GetStartPoint2

                p2 = L1.GetEndPoint2

                p7 = part.SketchManager.CreatePoint(0， -直径 / 2， 0)
                L1.Select2(False, Nothing)
                p7.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-长度， -0.02， 0)
                part.EditDimensionProperties2(2, max, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                'Dimension = DisplayDimension.GetDimension2(0)
                'Dimension.SetArcEndCondition(1, 3)
                'DisplayDimension.GetAnnotation.SetPosition(长度 + 0.1， 0， 0)
                'ChangeDimensionVaule(长度 - 直径 / 2)

                L1.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(-0.02， (长度 - 0.02)， 0)
                SetTolvalue(type6#, arc_table_tol_max1, arc_table_tol_min)
                L3 = part.SketchManager.CreateLine(-0.01， 0， -0.01, 0, 0.01， 0)
                ADDConstraints(3)
                L2 = part.SketchManager.CreateLine(0.01， 0， 0.01, 0, 0.01， 0)
                ADDConstraints(3)
                p3 = L2.GetStartPoint2
                p4 = L2.GetEndPoint2
                p5 = L3.GetStartPoint2
                p6 = L3.GetEndPoint2

                p3.Select4(False, Nothing)
                p1.Select4(True, Nothing)
                ADDConstraints(8)
                p5.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                ADDConstraints(8)
                p4.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)
                p6.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)
                LC1.Select2(False, Nothing)
                LC2.Select2(True, Nothing)
                part.EditDelete()
                A1.Select4(False, Nothing)
                SketchManager.SketchTrim(0, 0, 直径 / 2, 0)

                A1.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(-（直径 + 0.08）， -(长度 + 0.02)， 0)

                SetTolvalue(type7#, arc_table_tol_max, arc_table_tol_min)

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF1.GetAnnotation().SetPosition2(0, -(直径 / 2), 0)


                'p8 = part.SketchManager.CreatePoint(-（直径 + 0.08）， -(长度 + 0.02)， 0)
                'part.Extension.SelectByID2(A1.GetName, "SKETCHSEGMENT", -（直径 + 0.08）， -(长度 + 0.03)， 0, False, 0, Nothing, 0)
                'Dim myDatumTag As DatumTag

                'myDatumTag = part.InsertDatumTag2()

                'myDatumTag.SetLabel("A")
                'myDatumTag.GetAnnotation()
                'myDatumTag.GetAnnotation().SetPosition(-（直径 + 0.08）， -(长度 + 0.03)， 0)
                ''myDatumTag.SetAngle(180 * PI / 180)
                'part.ClearSelection2(True)

                AllCut(1)
                'SelectPlane("right")
                'part.SketchManager.InsertSketch(True)
                'P10 = part.SketchManager.CreatePoint(0, 直径1 / 2, 0)
                'P9 = part.SketchManager.CreatePoint(0, -直径1 / 2, 0)



            End Sub
            Public Sub Arc_cut(internal_diameter1#, thickness1#, thickness2#， Depth_of_cut#, type8#, Min4#) '反向圆切除
                Dim P9, P10 As SketchPoint
                part.Extension.SelectByID2("", "FACE", internal_diameter1 / 2, 0, thickness1# + thickness2, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, internal_diameter1 / 2)
                part.AddDimension2(-(internal_diameter1 / 2 + 0.01), 0.02, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, thickness1# + thickness2# - Depth_of_cut, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                P10 = part.SketchManager.CreatePoint(0, 0.02, 0)
                P9 = part.SketchManager.CreatePoint(-Depth_of_cut, 0.02, 0)
                P9.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.02, Depth_of_cut / 2)
                part.EditDimensionProperties2(type8#, 0, Min4#, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)




                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub Ring_excision(Ring_diameter1#, Ring_diameter2#, Resection_depth1#, Resection_depth2#, type#, thickness1#, thickness2#, Fillet_radius#)
                If type = 1 Then
                    Dim p1, p2, p3, p4, p5, p6, p7, p8 As SketchPoint
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, Ring_diameter1 / 2)
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, Ring_diameter2 / 2)
                    'part.FeatureCut(True, False, True, 0, 0, Resection_depth1#, 0, True, False, 0, 0, 0, 0, 0, 0)
                    Feature = part.FeatureManager.FeatureCut4(True, False, True, 0, 0, Resection_depth1#, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                    'part.Extension.SelectByRay(0, 0, Resection_depth1#, 0, 1, 0, 0.000001, 1, False, 0, 0)
                    Dim swface() As Object
                    Dim swedge() As Object
                    Dim swedge2() As Object
                    swface = Feature.GetFaces()
                    Dim i As Integer
                    part.ClearSelection2(True)
                    'i = 0
                    'Do Until i > 100
                    '    SelectionMgr.AddSelectionListObject(swface(i), Nothing)
                    '    'MsgBox(i)
                    '    part.ClearSelection2(True)
                    '    i = i + 1
                    'Loop
                    SelectionMgr.AddSelectionListObject(swface(0), Nothing)
                    Dim face0 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)
                    swedge = face0.GetEdges
                    SelectionMgr.AddSelectionListObject(swedge(0), Nothing)
                    part.FeatureManager.FeatureFillet3(2, Fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                    part.ClearSelection2(True)

                    SelectionMgr.AddSelectionListObject(swface(1), Nothing)
                    Dim face1 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)

                    swedge2 = face1.GetEdges
                    SelectionMgr.AddSelectionListObject(swedge2(0), Nothing)
                    part.FeatureManager.FeatureFillet3(2, Fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                    part.ClearSelection2(True)
                    'i = 0
                    'Do Until i > 100
                    '    SelectionMgr.AddSelectionListObject(swedge2(i), Nothing)
                    '    'MsgBox(i)
                    '    part.ClearSelection2(True)
                    '    i = i + 1
                    'Loop


                    'SelectionMgr.AddSelectionListObject(swedge2(0), Nothing)
                    'part.FeatureManager.FeatureFillet3(195, Fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                    SelectPlane("right")
                    part.SketchManager.InsertSketch(True)
                    p1 = part.SketchManager.CreatePoint(0, Ring_diameter1 / 2, 0)
                    p2 = part.SketchManager.CreatePoint(0, -Ring_diameter1 / 2, 0)
                    p3 = part.SketchManager.CreatePoint(0, Ring_diameter2 / 2, 0)
                    p4 = part.SketchManager.CreatePoint(0, -Ring_diameter2 / 2, 0)
                    p5 = part.SketchManager.CreatePoint(0, Ring_diameter2 / 2 + 0.005, 0)
                    p6 = part.SketchManager.CreatePoint(-Resection_depth1, Ring_diameter2 / 2 + 0.005, 0)
                    'p7 = part.SketchManager.CreatePoint(-Resection_depth1, Ring_diameter2 / 2 + 0.015, 0)
                    'p8 = part.SketchManager.CreatePoint(-（Resection_depth1 + Resection_depth2）, Ring_diameter2 / 2 + 0.015, 0)
                    ''MsgBox(1)
                    p1.Select4(False, Nothing)
                    p2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(0, 0.01, -0.06)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    p3.Select4(False, Nothing)
                    p4.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(0, 0.01, -0.04)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    p5.Select4(False, Nothing)
                    p6.Select4(True, Nothing)
                    part.AddDimension2(0, Ring_diameter2 / 2 + 0.01, Resection_depth1 / 2)
                    'p7.Select4(False, Nothing)
                    'p8.Select4(True, Nothing)
                    'part.AddDimension2(0, Ring_diameter2 / 2 + 0.02, Resection_depth1 / 2 + Resection_depth2 / 2)
                    ''MsgBox(1)
                    part.SketchManager.InsertSketch(True)


                ElseIf type = 2 Then
                    Dim p1, p2, p3, p4， p7, p8 As SketchPoint
                    part.Extension.SelectByID2("", "FACE", Ring_diameter1 / 2, 0, thickness1 + thickness2, False, 0, Nothing, 0)
                    part.SketchManager.InsertSketch(True)
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, Ring_diameter1 / 2)
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, Ring_diameter2 / 2)
                    part.SketchManager.InsertSketch(True)

                    'part.FeatureCut(True, False, True, 0, 0, thickness1# + thickness2# - Resection_depth1 - Resection_depth2, 0, False, False, 0, 0, 0, 0, 0, 0)

                    Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 0, 0, thickness1# + thickness2# - Resection_depth1 - Resection_depth2, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                    Dim swface() As Object
                    Dim swedge() As Object
                    Dim swedge2() As Object
                    swface = Feature1.GetFaces()
                    Dim i As Integer
                    part.ClearSelection2(True)
                    'i = 0
                    'Do Until i > 100
                    '    SelectionMgr.AddSelectionListObject(swface(i), Nothing)
                    '    'MsgBox(i)
                    '    part.ClearSelection2(True)
                    '    i = i + 1
                    'Loop
                    SelectionMgr.AddSelectionListObject(swface(0), Nothing)
                    Dim face0 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)
                    swedge = face0.GetEdges
                    SelectionMgr.AddSelectionListObject(swedge(0), Nothing)
                    part.FeatureManager.InsertFeatureChamfer(6, 1, 0.001, PI / 4, 0, 0, 0, 0)
                    part.ClearSelection2(True)


                    SelectionMgr.AddSelectionListObject(swface(1), Nothing)
                    Dim face1 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)
                    swedge2 = face1.GetEdges
                    SelectionMgr.AddSelectionListObject(swedge2(9), Nothing)

                    part.FeatureManager.FeatureFillet3(2, Fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                    part.ClearSelection2(True)

                    SelectionMgr.AddSelectionListObject(swedge2(8), Nothing)

                    part.FeatureManager.FeatureFillet3(2, Fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                    part.ClearSelection2(True)


                    'SelectionMgr.AddSelectionListObject(swface(1), Nothing)
                    'Dim face2 As Face2 = SelectionMgr.GetSelectedObject6(1, -1)
                    'swedge = face2.GetEdges
                    'i = 0
                    'Do Until i > 100
                    '    SelectionMgr.AddSelectionListObject(swedge(i), Nothing)
                    '    'MsgBox(i)
                    '    part.ClearSelection2(True)
                    '    i = i + 1
                    'Loop
                    SelectPlane("right")
                    part.SketchManager.InsertSketch(True)
                    p1 = part.SketchManager.CreatePoint(-(thickness1 + thickness2), Ring_diameter1 / 2, 0)
                    p2 = part.SketchManager.CreatePoint(-(thickness1 + thickness2), -Ring_diameter1 / 2, 0)
                    p3 = part.SketchManager.CreatePoint(-(thickness1 + thickness2), Ring_diameter2 / 2, 0)
                    p4 = part.SketchManager.CreatePoint(-(thickness1 + thickness2), -Ring_diameter2 / 2, 0)
                    p7 = part.SketchManager.CreatePoint(-Resection_depth1, Ring_diameter2 / 2 + 0.01, 0)
                    p8 = part.SketchManager.CreatePoint(-（Resection_depth1 + Resection_depth2）, Ring_diameter2 / 2 + 0.01, 0)

                    p1.Select4(False, Nothing)
                    p2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(0, 0.01, thickness1 + thickness2 + 0.08)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    p3.Select4(False, Nothing)
                    p4.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(0, 0.01, thickness1 + thickness2 + 0.06)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    p7.Select4(False, Nothing)
                    p8.Select4(True, Nothing)
                    part.AddDimension2(0, Ring_diameter2 / 2 + 0.015, Resection_depth1 + Resection_depth2 / 2)

                    part.SketchManager.InsertSketch(True)

                End If






            End Sub
            Public Sub 筒体矩形钣金（直径1#， 矩形宽#， 厚度#）

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, （直径1 * PI） / 2， 矩形宽 / 2， 0)


                'P1 = part.SketchManager.CreatePoint(（直径1 * PI） / 2, 矩形宽# / 2, 0)
                'P2 = part.SketchManager.CreatePoint(-（直径1 * PI） / 2, 矩形宽# / 2, 0)
                'P3 = part.SketchManager.CreatePoint(（直径1 * PI） / 2, -矩形宽# / 2, 0)


                'P1.Select4(False, Nothing)
                'P2.Select4(True, Nothing)
                'part.AddDimension2(0, 矩形宽# / 2 + 0.05, 0)


                'P1.Select4(False, Nothing)
                'P2.Select4(True, Nothing)
                'part.AddDimension2(（直径1 * PI） / 2 + 0.05, 0, 0)

                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5

                part.FeatureManager.InsertSheetMetalBaseFlange2(厚度, False, 0.0007366, 0.02, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 0, 0.0001, 0.0001, 0.5, True, False, True, True) '钣金

            End Sub
            Public Sub 筒体矩形切除（直径1#， 矩形宽#， 孔长#， 孔宽#， 孔间间隙#， 距离底板距离#， 圆角#， 个数#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                初始设置（1）
                'L1 = part.SketchManager.CreateLine(-(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                L1 = part.SketchManager.CreateLine(-(直径1 * PI / 2 - 孔间间隙# / 2)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(直径1 * PI / 2 - 孔间间隙# / 2)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X + 孔长, P1.Y, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L3 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X + 孔长, P2.Y, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(P4.X, P4.Y, 0, P6.X, P6.Y, 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2


                初始设置（0）
                'P1.Select4（False， Nothing）
                'P3.Select4（True， Nothing）
                'ADDConstraints(8)

                'P2.Select4（False， Nothing）
                'P5.Select4（True， Nothing）
                'ADDConstraints(8)
                ''MsgBox(1)
                'P4.Select4（False， Nothing）
                'P7.Select4（True， Nothing）
                'ADDConstraints(8)


                'P6.Select4（False， Nothing）
                'P8.Select4（True， Nothing）
                'ADDConstraints(8)
                P1.Select4（False， Nothing）
                P2.Select4（True， Nothing）
                P7.Select4（True， Nothing）
                P8.Select4（True， Nothing）
                part.SketchManager.CreateFillet(圆角#, 1)
                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                Feature2 = part.FeatureManager.FeatureLinearPattern5(个数# / 2, 孔长# + 孔间间隙#, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)


            End Sub
            Public Sub 矩形切除（直径1#， 矩形宽#， 孔长#， 孔宽#， 孔间间隙#， 距离底板距离#， 圆角#， 个数#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                初始设置（1）
                'L1 = part.SketchManager.CreateLine(-(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                L1 = part.SketchManager.CreateLine(-(孔长# + 孔间间隙# / 2)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(孔长# + 孔间间隙# / 2)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X + 孔长, P1.Y, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L3 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X + 孔长, P2.Y, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(P4.X, P4.Y, 0, P6.X, P6.Y, 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2


                初始设置（0）
                'P1.Select4（False， Nothing）
                'P3.Select4（True， Nothing）
                'ADDConstraints(8)

                'P2.Select4（False， Nothing）
                'P5.Select4（True， Nothing）
                'ADDConstraints(8)
                ''MsgBox(1)
                'P4.Select4（False， Nothing）
                'P7.Select4（True， Nothing）
                'ADDConstraints(8)


                'P6.Select4（False， Nothing）
                'P8.Select4（True， Nothing）
                'ADDConstraints(8)
                P1.Select4（False， Nothing）
                P2.Select4（True， Nothing）
                P7.Select4（True， Nothing）
                P8.Select4（True， Nothing）
                part.SketchManager.CreateFillet(圆角#, 1)
                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)

                'part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisX.Select2(True, 1) '选择并标记
                'Feature2 = part.FeatureManager.FeatureLinearPattern5(个数# / 2, 孔长# + 孔间间隙#, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)


            End Sub
            Public Sub 矩形切除2（矩形宽#， 孔长#， 孔宽#， 距离底板距离#， 圆角#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                初始设置（1）
                'L1 = part.SketchManager.CreateLine(-(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(个数 / 2 * 孔长# + （个数 / 2 - 1 + 0.5） * 孔间间隙#)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                L1 = part.SketchManager.CreateLine(-(孔长# / 2)， -（矩形宽# / 2 - 距离底板距离#）， 0， -(孔长# / 2)， -（矩形宽# / 2 - 距离底板距离# - 孔宽#）， 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X + 孔长, P1.Y, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L3 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X + 孔长, P2.Y, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(P4.X, P4.Y, 0, P6.X, P6.Y, 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2


                初始设置（0）
                'P1.Select4（False， Nothing）
                'P3.Select4（True， Nothing）
                'ADDConstraints(8)

                'P2.Select4（False， Nothing）
                'P5.Select4（True， Nothing）
                'ADDConstraints(8)
                ''MsgBox(1)
                'P4.Select4（False， Nothing）
                'P7.Select4（True， Nothing）
                'ADDConstraints(8)


                'P6.Select4（False， Nothing）
                'P8.Select4（True， Nothing）
                'ADDConstraints(8)
                P1.Select4（False， Nothing）
                P2.Select4（True， Nothing）
                P7.Select4（True， Nothing）
                P8.Select4（True， Nothing）
                part.SketchManager.CreateFillet(圆角#, 1)
                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)

                'part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisX.Select2(True, 1) '选择并标记
                'Feature2 = part.FeatureManager.FeatureLinearPattern5(个数# / 2, 孔长# + 孔间间隙#, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)

                'part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                ''part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0) '选择特征
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                'part.FeatureManager.InsertMirrorFeature(False, False, False, False)
            End Sub
            Public Sub 筒体圆切除（直径1#， 矩形宽#， 圆离侧边距离#， 圆离底边距离#， 直径#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)


                part.SketchManager.CreateCircleByRadius(-(圆离侧边距离)， -矩形宽# / 2 + 圆离侧边距离， 0， 直径 / 2)

                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)

            End Sub
            Public Sub 筒体标注（直径1#， 直径2#, 矩形宽#， 厚度#）

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)

                P1 = part.SketchManager.CreatePoint(0, 矩形宽# / 2, 0)
                P2 = part.SketchManager.CreatePoint(0, -矩形宽# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, 0, 0.05)

                part.SketchManager.InsertSketch(True)

                SelectPlane("up")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 厚度 / 2 + 直径2 / 2， 0， 直径1 / 2)
                A2 = part.SketchManager.CreateCircleByRadius(0, 厚度 / 2 + 直径2 / 2， 0， 直径2 / 2)

                A1.select2(False, Nothing)
                part.AddDimension2(直径1# / 4, 厚度 / 2 + 直径2 / 2， 0)

                A2.select2(False, Nothing)
                part.AddDimension2(-直径1# / 4, 厚度 / 2 + 直径2 / 2， 0)

                part.SketchManager.InsertSketch(True)

                'P3 = part.SketchManager.CreatePoint(0, 0, 0)

            End Sub
            Public Sub 筒体槽口（直径2#, 矩形宽#， 槽长#， 槽宽#， x向间距#， y向间距#， 距侧边距离#， 距底边距离#， x阵列个数#, y阵列个数#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateSketchSlot(1, 0, 槽宽#, -((直径2# * PI) / 2 - 距侧边距离# - 槽宽# / 2), -(矩形宽# / 2 - 距底边距离# - 槽长# / 2), 0, -((直径2# * PI) / 2 - 距侧边距离# - 槽宽# / 2), -(矩形宽# / 2 - 距底边距离# - 槽宽# / 2), 0, -((直径2# * PI) / 2 - 距侧边距离# - 槽宽#), -(矩形宽# / 2 - 距底边距离# - 槽宽# / 2), 0, 1, False)

                part.SketchManager.CreateLinearSketchStepAndRepeat(x阵列个数# / 2, y阵列个数#, 槽宽# + x向间距#, 槽长# + y向间距#, 0, PI / 2, "", False, False, False, False, False)
                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, True, True, False, 0, 0, False, True)


                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0) '选择特征
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

            End Sub
            Public Sub 绑线棒（直径1#， 半径2#， 半径3#， 半径4#， 长1#， 长2#， 宽#， 角度#）
                初始设置（1）
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)


                Feature1 = part.FeatureManager.InsertRefPlane(8, 长1# / 2, 0, 0, 0, 0)

                part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)


                A1 = part.SketchManager.CreateCircleByRadius(0, 直径1# / 2, 0, 直径1# / 2)

                part.SketchManager.InsertSketch(True)


                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)


                'Feature1 = part.FeatureManager.InsertRefPlane(264, 长1# / 2, 0, 0, 0, 0)

                'part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                'part.SketchManager.InsertSketch(True)


                'A4 = part.SketchManager.CreateCircleByRadius(0, 直径1# / 2, 0, 直径1# / 2)

                'part.SketchManager.InsertSketch(True)





                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                L1 = part.SketchManager.CreateLine(长1# / 2, 直径1# / 2, 0, 长1# / 2 - 长2#, 直径1# / 2, 0)

                ADDConstraints(1)

                P1 = L1.GetEndPoint2


                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X, P1.Y + 0.01, 0)
                P2 = L2.GetEndPoint2

                P1.Select4(False, Nothing)
                ADDConstraints(1)


                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P1.X + 0.01, P1.Y + 0.01, 0)
                ChangeDimensionVaule(角度# / 180 * PI)

                'L2.select2(False, Nothing)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(长1# / 2, 宽# / 2, 0)
                ChangeDimensionVaule((宽# - 直径1#) / Cos(PI / 6))


                L3 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X - 0.01, P2.Y, 0)
                ADDConstraints(2)
                P3 = L3.GetEndPoint2


                A2 = part.SketchManager.CreateCircleByRadius(0, 半径4# + 直径1# / 2, 0, 半径4#)
                ADDConstraints(1)
                A3 = part.SketchManager.CreateCircleByRadius(0.05, 0, 0, 半径3#)




                A3.select2(False, Nothing)
                L3.select2(True, Nothing)
                ADDConstraints(4)

                A3.select2(False, Nothing)
                A2.select2(True, Nothing)
                ADDConstraints(4)

                A3.select2(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(5)

                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments

                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i




                P2.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                part.SketchManager.CreateFillet(半径2#, 1)

                初始设置（0）

                P5 = A2.IGetCenterPoint2
                P6 = A3.IGetCenterPoint2
                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)


                'P5.Select4(False, Nothing)
                A2.select2（False, Nothing)

                part.SketchManager.SketchTrim(0, P5.X + 半径4#, P5.Y, 0)

                A2.select2（False, Nothing)
                part.SketchManager.SketchTrim(0, P5.X - 半径4#, P5.Y, 0)

                A3.select2（False, Nothing)
                part.SketchManager.SketchTrim(0, P6.X + 半径3#, P6.Y, 0)



                L1Segment = L1

                L1Segment.SelectChain(False, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)


                part.Extension.SelectByID2("草图4", "SKETCH", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("草图5", "SKETCH", 0, 0, 0, True, 4, Nothing, 0)
                part.InsertProtrusionSwept3(False, False, 0, False, False, 0, 0)



            End Sub
            Public Sub 绑线棒2(直径1#， 半径2#， 长1#， 宽#)


                SelectPlane("up")
                part.SketchManager.InsertSketch(True)


                A1 = part.SketchManager.CreateCircleByRadius(长1# / 2 - 直径1# / 2, 0, 0, 直径1# / 2)
                part.SketchManager.InsertSketch(True)
                初始设置（1）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)


                L1 = part.SketchManager.CreateLine(长1# / 2 - 直径1# / 2, 0, 0, 长1# / 2 - 直径1# / 2, 宽#, 0)

                P1 = L1.IGetEndPoint2

                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X - 长1# + 直径1#, P1.Y, 0)
                P2 = L2.IGetEndPoint2


                L2 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, -(长1# / 2 - 直径1# / 2), 0, 0)


                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.SketchManager.CreateFillet(半径2#, 1)

                part.Extension.SelectByID2("草图4", "SKETCH", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("草图5", "SKETCH", 0, 0, 0, True, 4, Nothing, 0)
                part.InsertProtrusionSwept3(False, False, 0, False, False, 0, 0)

            End Sub
            Public Sub Boss(直径1#, 直径2#, 高#)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                初始设置（1）

                L1 = part.SketchManager.CreateLine(0, 0, 0, 0, 高， 0)
                ADDConstraints(1)

                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(0, 0, 0, 直径1# / 2, 0， 0)
                ADDConstraints(1)
                P3 = L2.GetEndPoint2
                L3 = part.SketchManager.CreateLine(0, 高， 0, 直径2# / 2, 高， 0)
                ADDConstraints(1)
                P4 = L3.GetEndPoint2


                L4 = part.SketchManager.CreateLine(-0.01, 0， 0, -0.01, 0.01， 0)
                P5 = L4.GetStartPoint2
                P6 = L4.GetEndPoint2

                P4.Select4(False, Nothing)
                ADDConstraints(1)
                P3.Select4(False, Nothing)
                ADDConstraints(1)

                P5.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)

                P4.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(P2.X - 直径1, P2.Y / 2, 0)


                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                part.AddDimension2(P5.X / 2, P5.Y / 2 - 0.01, 0)
                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.AddDimension2(P4.X / 2, P4.Y / 2 + 0.01, 0)

                L1.select2(False, 16)

                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

                初始设置（0）


            End Sub
            Public Sub Supporting_board(length#, right_height#, right_angle#, left_height#, left_angle#, thick#, House_shell_diameter#, select1#, Optional Chamfer# = 0)
                '支板(长,右高,右角,左高,左角,厚,筒体直径)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(0, 0, 0, length, 0, 0)
                L2 = part.SketchManager.CreateLine(length, 0, 0, length - thick, right_height, 0)
                L3 = part.SketchManager.CreateLine(0, 0, 0, -thick, left_height, 0)
                L1Segment = L1
                L2Segment = L2
                L3Segment = L3
                L1Segment.Select4(False, Nothing)
                '草图方法("水平")
                ADDConstraints(2)
                'DisplayDimension = part.AddDimension2(宽 / 2, -厚, 0) '标注尺寸
                'ChangeDimensionVaule(宽)
                P1 = L2.GetStartPoint2
                P2 = L2.GetEndPoint2
                P3 = L3.GetStartPoint2
                P4 = L3.GetEndPoint2
                P6 = L1.GetStartPoint2
                P1.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(1)
                L1Segment.Select4(False, Nothing)
                L2Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, length / 2, 0)
                ChangeDimensionVaule(right_angle * PI / 180)
                L2Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(3 * length / 2, right_height / 2, 0)
                If select1 = 1 Then
                    ChangeDimensionVaule(right_height * Sin((180 - right_angle) / 180 * PI))
                ElseIf select1 = 2 Then
                    ChangeDimensionVaule(right_height)

                End If
                L1Segment.Select4(False, Nothing)
                L3Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-2 * length / 3, length / 2, 0)
                ChangeDimensionVaule(left_angle * PI / 180)
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(-length / 2, left_height / 2, 0)
                If select1 = 1 Then
                    ChangeDimensionVaule(left_height * Sin((180 - left_angle) / 180 * PI))
                ElseIf select1 = 2 Then
                    ChangeDimensionVaule(left_height)

                End If
                A1 = part.SketchManager.CreateCircleByRadius(2 * length#, 2 * left_height#, 0, House_shell_diameter#)



                'A1Segment = part.SketchManager.Create3PointArc(P2.X, P2.Y, 0, P4.X, P4.Y, 0, length, right_height, 0)
                A1.Select2(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(5)

                A1.Select2(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(5)

                P5 = A1.GetCenterPoint2

                A1.Select2(False, Nothing)
                SketchManager.SketchTrim(0, P5.X, P5.Y + House_shell_diameter#, 0)

                'DisplayDimension = part.AddDimension2(0, right_height / 2, 0)
                'ChangeDimensionVaule(House_shell_diameter / 2)

                If Chamfer# <> 0 Then
                    P6.Select4(False, Nothing)

                    part.SketchManager.CreateChamfer(0, Chamfer#, 50 / 180 * PI)

                End If




                part.Extension.SelectByID2("D5@草图1@S150_3350.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P1 = part.SketchManager.CreatePoint(0, 0, 0)
                P2 = part.SketchManager.CreatePoint(length, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, -thick, 0) '标注尺寸
                ChangeDimensionVaule(length)
                part.SketchManager.InsertSketch(True) '插入新的草图



            End Sub
            Public Sub Supporting_board2(length#, length2#, right_height#, right_angle#, left_height#, left_angle#, thick#, House_shell_diameter#, select1#)
                '支板(长,右高,右角,左高,左角,厚,筒体直径)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(0, 0, 0, length, 0, 0)
                L2 = part.SketchManager.CreateLine(length, 0, 0, length - thick, right_height, 0)
                L3 = part.SketchManager.CreateLine(0, 0, 0, -thick, left_height, 0)
                L1Segment = L1
                L2Segment = L2
                L3Segment = L3
                L1Segment.Select4(False, Nothing)
                '草图方法("水平")
                ADDConstraints(2)
                'DisplayDimension = part.AddDimension2(宽 / 2, -厚, 0) '标注尺寸
                'ChangeDimensionVaule(宽)
                P1 = L2.GetStartPoint2
                P2 = L2.GetEndPoint2
                P3 = L3.GetStartPoint2
                P4 = L3.GetEndPoint2
                P6 = L1.GetStartPoint2
                P1.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(1)
                L1Segment.Select4(False, Nothing)
                L2Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, length / 2, 0)
                ChangeDimensionVaule(right_angle * PI / 180)
                L2Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(3 * length / 2, right_height / 2, 0)
                If select1 = 1 Then
                    ChangeDimensionVaule(right_height * Sin((180 - right_angle) / 180 * PI))
                ElseIf select1 = 2 Then
                    ChangeDimensionVaule(right_height)

                End If
                L1Segment.Select4(False, Nothing)
                L3Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-2 * length / 3, length / 2, 0)
                ChangeDimensionVaule(left_angle * PI / 180)
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(-length / 2, left_height / 2, 0)
                If select1 = 1 Then
                    ChangeDimensionVaule(left_height * Sin((180 - left_angle) / 180 * PI))
                ElseIf select1 = 2 Then
                    ChangeDimensionVaule(left_height)

                End If

                L5 = part.SketchManager.CreateLine(P4.X, P4.Y, 0, P4.X + length2#, P4.Y, 0)
                P6 = L5.GetEndPoint2




                A1 = part.SketchManager.CreateCircleByRadius(2 * length#, 2 * left_height#, 0, House_shell_diameter#)



                'A1Segment = part.SketchManager.Create3PointArc(P2.X, P2.Y, 0, P4.X, P4.Y, 0, length, right_height, 0)
                A1.Select2(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(5)

                A1.Select2(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(5)

                P5 = A1.GetCenterPoint2

                A1.Select2(False, Nothing)
                SketchManager.SketchTrim(0, P5.X, P5.Y + House_shell_diameter#, 0)

                'DisplayDimension = part.AddDimension2(0, right_height / 2, 0)
                'ChangeDimensionVaule(House_shell_diameter / 2)

                'If Chamfer# <> 0 Then
                '    P6.Select4(False, Nothing)

                '    part.SketchManager.CreateChamfer(0, Chamfer#, 50 / 180 * PI)

                'End If




                part.Extension.SelectByID2("D5@草图1@S150_3350.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P1 = part.SketchManager.CreatePoint(0, 0, 0)
                P2 = part.SketchManager.CreatePoint(length, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, -thick, 0) '标注尺寸
                ChangeDimensionVaule(length)
                part.SketchManager.InsertSketch(True) '插入新的草图



            End Sub
            Public Sub H_c_1(thick#, width#, length#, angle#, r#, d#, fillet#) '底圆，顶平，中间开孔

                '拉伸凸台
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L01Segment = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                '草图方法("固定")
                ADDConstraints(1)
                A1Segment = part.SketchManager.CreateCircleByRadius(0, -r, 0, r)
                '草图方法("固定")
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(width / 2, 0, 0, 0.01, length, 0)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, 0, 0)
                ChangeDimensionVaule(angle / 2 * PI / 180)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P1.Select4(False, Nothing)
                A1Segment.Select4(True, Nothing)
                '草图方法("重合")
                ADDConstraints(5)
                P1.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, -0.01, 0)
                ChangeDimensionVaule(width / 2)
                L2 = part.SketchManager.CreateLine(0, length, 0, 0.02, length, 0)
                '草图方法("水平")
                ADDConstraints(2)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2
                P3.Select4(False, Nothing)
                '草图方法("固定")
                ADDConstraints(1)
                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                '草图方法("合并")
                ADDConstraints(8)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet, 1) '圆角
                L1Segment = L1
                L1Segment.SelectChain(False, Nothing)
                L01Segment.Select4(True, Nothing)
                part.SketchMirror()
                A1Segment.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -2 * r, 0)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸,单向,

                '圆孔切除
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                part.SketchManager.CreateCircleByRadius(0, length / 2, 0, d / 2)
                DisplayDimension = part.AddDimension2(0, length / 2, 0)
                part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0) '反向贯穿切除,单向




            End Sub
            Public Sub H_c_2(w#, l#, t#, r#, d#, arc_l#, fillet#) '直角
                'Initial_setting(1)
                初始设置（1）
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(0, 0, 0, 0, l, 0)
                '草图方法("固定")
                ADDConstraints(1)
                L2 = part.SketchManager.CreateLine(0, l, 0, w, l, 0)
                '草图方法("固定")
                ADDConstraints(1)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P3 = L2.GetEndPoint2
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet, 1)
                part.Create3PointArc(P1.X, P1.Y, 0, P3.X, P3.Y, 0, arc_l, l - arc_l, 0)
                DisplayDimension = part.AddDimension2(l / 2, 0, 0)
                ChangeDimensionVaule(r)
                part.SketchManager.CreateCircleByRadius(arc_l, l - arc_l, 0, d / 2)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, t, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸,单向,


            End Sub
            Public Sub H_c_3(thick#, width#, length#, angle#, r#, d#, fillet#, d_l#) '底圆，顶圆
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L01Segment = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                '草图方法("固定")
                ADDConstraints(1)
                A1Segment = part.SketchManager.CreateCircleByRadius(0, -r, 0, r)
                '草图方法("固定")
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(width / 2, 0, 0, 0.01, length, 0)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, 0, 0)
                ChangeDimensionVaule(angle / 2 * PI / 180)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P1.Select4(False, Nothing)
                A1Segment.Select4(True, Nothing)
                '草图方法("重合")
                ADDConstraints(5)
                P1.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, -0.01, 0)
                ChangeDimensionVaule(width / 2)
                P2.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                '草图方法("重合")
                ADDConstraints(5)
                L1Segment = L1
                L1Segment.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                part.SketchMirror()
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet, 1)
                A1Segment.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -2 * r, 0)
                A2 = part.SketchManager.CreateCircleByRadius(0, d_l, 0, d / 2)

                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸,单向,

            End Sub
            Public Sub H_c_4(base_board_length#, width#, hole_board_length#, fillet_radius#, thick#, slanted_board_length#, circle_edge_distance#, diameter#, slanted_angle#) '两直角折弯
                '吊攀(底板长,宽,孔板长,圆角半径,厚,斜板长,圆边距,直径,斜角)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(thick, 0, 0, base_board_length - thick, 0, 0)
                L2 = part.SketchManager.CreateLine(thick, 0, 0, thick, -(hole_board_length - thick), 0)
                L3 = part.SketchManager.CreateLine(0, thick, 0, base_board_length, thick, 0)
                L4 = part.SketchManager.CreateLine(0, thick, 0, 0, -(hole_board_length - thick), 0)

                L5 = part.SketchManager.CreateLine(base_board_length - thick, -0.001, 0, base_board_length - thick, -(slanted_board_length - thick) + 0.001, 0)
                L6 = part.SketchManager.CreateLine(base_board_length, thick, 0, base_board_length, -(slanted_board_length - thick) + 0.001, 0)
                L7 = part.SketchManager.CreateLine(0, -(hole_board_length - thick), 0, thick, -(hole_board_length - thick), 0)
                L8 = part.SketchManager.CreateLine(base_board_length - thick, -(slanted_board_length - thick), 0, base_board_length, -(slanted_board_length - thick), 0)

                L1Segment = L1
                L3Segment = L3
                L4Segment = L4
                L5Segment = L5
                L6Segment = L6
                L7Segment = L7
                L8Segment = L8
                L1Segment.Select4(False, Nothing)
                L3Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-thick, -thick, 0) '标注尺寸
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(base_board_length / 2, 2 * thick, 0) '标注尺寸
                L6Segment.Select4(False, Nothing)
                L3Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(2 * base_board_length / 3, -base_board_length / 3, 0) '标注尺寸
                ChangeDimensionVaule(slanted_angle * PI / 180)
                'part.Extension.RotateOrCopy(False, 1, False, 长, 厚, 0, 0, 0, 1, -Pi * (角度 - 90) / 180) '旋转、缩放和复制草图
                L6Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(3 * base_board_length / 2, -slanted_board_length / 3, 0) '标注尺寸
                ChangeDimensionVaule(slanted_board_length)
                L4Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(-3 * thick, -hole_board_length / 2, 0) '标注尺寸

                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P3 = L3.GetStartPoint2
                P4 = L3.GetEndPoint2
                P5 = L5.GetStartPoint2
                P6 = L5.GetEndPoint2
                P7 = L6.GetEndPoint2
                P8 = L8.GetStartPoint2
                P9 = L8.GetEndPoint2

                P7.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                '草图方法(“合并”)
                ADDConstraints(8)
                L8Segment.Select4(False, Nothing)
                L6Segment.Select4(True, Nothing)
                '草图方法(“相互垂直”)
                ADDConstraints(14)
                L8Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(3 * base_board_length / 2, -slanted_board_length, 0) '标注尺寸
                ChangeDimensionVaule(thick)
                L5Segment.Select4(False, Nothing)
                L6Segment.Select4(True, Nothing)
                '草图方法(“平行”)
                ADDConstraints(15)
                P8.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                '草图方法(“合并”)
                ADDConstraints(8)
                P2.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                '草图方法(“合并”)
                ADDConstraints(8)
                P1.Select4(False, Nothing)

                part.SketchManager.CreateFillet(fillet_radius, 1)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius, 1)
                P3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius + thick, 1)
                P4.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius + thick, 1)

                L7Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(thick / 2, -hole_board_length - thick, 0) '标注尺寸
                L5Segment.Select4(False, Nothing)
                L1Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(3 * base_board_length / 4, -base_board_length / 4, 0) '标注尺寸

                part.Extension.SelectByID2("D7@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(2 * thick, -thick, 0) '移动标注
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D8@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(base_board_length - 3 * thick / 2, -thick, 0) '移动标注
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D10@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D9@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D3@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D6@草图1@H472_2056.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.EditDelete()
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, width, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P10 = part.SketchManager.CreatePoint(0, thick, 0)
                P11 = part.SketchManager.CreatePoint(0, -circle_edge_distance, 0)
                P10.Select4(False, Nothing)
                P11.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-thick, -circle_edge_distance / 2, 0) '标注尺寸
                part.SketchManager.InsertSketch(True)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                part.SketchManager.CreateCircleByRadius(-width / 2, -circle_edge_distance, 0, diameter / 2)
                DisplayDimension = part.AddDimension2(0, -circle_edge_distance, width / 2) '标注尺寸
                part.SketchManager.InsertSketch(True)
                part.FeatureCut(True, False, True, 2, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0) '反向切除,到下一面
            End Sub
            Public Sub Rear_h_c(length#, width#, height1#, height2#, height3#, thick#, band_fillet_radius#, base_circle_edge_distance#, base_center_distance#,
                        base_circle_diameter#, top_circle_edge_distance#, top_circle_diameter#, board_fillet_radius#, chamfer_length#)
                '后端吊攀(长,宽,高1,高2,高3,厚,折弯圆角半径,底圆边距,底圆中心距,底圆半径,顶圆边距,顶圆直径,板圆角半径,倒角长)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(width - thick, 0, 0, width, 0, 0)
                L2 = part.SketchManager.CreateLine(width - thick, 0, 0, width - thick, height1, 0)
                L3 = part.SketchManager.CreateLine(width - thick, height1, 0, 0, height1 + height2, 0)
                L4 = part.SketchManager.CreateLine(0, height1 + height2, 0, 0, height1 + height2 + height3, 0)
                L5 = part.SketchManager.CreateLine(0, height1 + height2 + height3, 0, thick, height1 + height2 + height3, 0)

                L6 = part.SketchManager.CreateLine(width, 0, 0, width, height1, 0)
                L7 = part.SketchManager.CreateLine(thick, height1 + height2 + height3, 0, thick, height1 + height2, 0)
                L8 = part.SketchManager.CreateLine(thick, height1 + height2 - 0.001, 0, width / 2, height1 + height2 / 2, 0)
                L1Segment = L1
                L2Segment = L2
                L3Segment = L3
                L4Segment = L4
                L5Segment = L5

                L1Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(0, -thick, -(width + thick)) '标注尺寸
                L2Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(0, height1 / 2, thick) '标注尺寸
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(0, height1 + height2 / 2, thick) '标注尺寸
                L3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddHorizontalDimension2(0, -thick, -width / 2) '标注尺寸
                L4Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(0, height1 + height2 + height3 / 2, thick) '标注尺寸

                L1Segment.Select4(False, Nothing)
                L5Segment.Select4(True, Nothing)
                '草图方法("平行")
                ADDConstraints(15)
                L1Segment.Select4(False, Nothing)
                L5Segment.Select4(True, Nothing)
                '草图方法("相等")
                ADDConstraints(7)
                L6Segment = L6
                L7Segment = L7
                L8Segment = L8
                'L2Segment.Select4(False, Nothing)
                L7Segment.Select4(False, Nothing)
                '草图方法("垂直")
                ADDConstraints(3)
                L6Segment.Select4(False, Nothing)
                '草图方法("垂直")
                ADDConstraints(3)
                L3Segment.Select4(False, Nothing)
                L8Segment.Select4(True, Nothing)
                '草图方法("平行")
                ADDConstraints(15)
                'L4Segment.Select4(False, Nothing)
                L3Segment.Select4(False, Nothing)
                L8Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(width / 2, height1 + height2 / 2, 0) '标注尺寸
                ChangeDimensionVaule(thick)
                ''MsgBox(1)
                P2 = L2.GetEndPoint2
                P3 = L3.GetEndPoint2
                P6 = L6.GetEndPoint2
                P7 = L7.GetEndPoint2
                P8 = L8.GetStartPoint2
                P9 = L8.GetEndPoint2
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                '草图方法("合并")
                ADDConstraints(8)
                P6.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                '草图方法("合并")
                ADDConstraints(8)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(band_fillet_radius, 1)
                P3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(band_fillet_radius + thick, 1)
                P6.Select4(False, Nothing)
                part.SketchManager.CreateFillet(band_fillet_radius + thick, 1)
                P7.Select4(False, Nothing)
                part.SketchManager.CreateFillet(band_fillet_radius, 1)
                L1Segment.Select4(False, Nothing)
                L6Segment.Select4(True, Nothing)
                part.SketchManager.CreateChamfer(2, chamfer_length, 0) '倒角
                L4Segment.Select4(False, Nothing)
                L6Segment.Select4(True, Nothing)
                DisplayDimension = part.AddHorizontalDimension2(0, -2 * thick, -width / 2) '标注尺寸

                part.Extension.SelectByID2("D4@草图1@H472_2057.SLDPRT", "DIMENSION", 0.165327830771286, 0.0970706398837024, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D9@草图1@H472_2057.SLDPRT", "DIMENSION", 0.138455779065175, 0.140267692284992, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D6@草图1@H472_2057.SLDPRT", "DIMENSION", 0.180990219865215, 0.159212397024313, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D10@草图1@H472_2057.SLDPRT", "DIMENSION", 0.182225109117289, 0.178786429556451, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D8@草图1@H472_2057.SLDPRT", "DIMENSION", 0.197819075778652, 0.174075752127498, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D13@草图1@H472_2057.SLDPRT", "DIMENSION", 0.197819075778652, 0.174075752127498, 0, True, 0, Nothing, 1)
                part.EditDelete()
                part.Extension.SelectByID2("D13@草图1@H472_2057.SLDPRT", "DIMENSION", 0.197819075778652, 0.174075752127498, 0, False, 0, Nothing, 0)
                part.EditDelete()

                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, length, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸,单向

                part.ClearSelection2(True)
                part.Extension.SelectByRay（-thick, 0, -(width - 3 * thick / 4), 1, 0, 0, 0.001, 1, False, 1, 0）
                part.Extension.SelectByRay（length + thick, 0, -(width - 3 * thick / 4), -1, 0, 0, 0.001, 1, True, 1, 0）
                part.Extension.SelectByRay（-thick, height1 + height2 + height3, -thick / 4, 1, 0, 0, 0.001, 1, False, 1, 0）
                part.Extension.SelectByRay（length + thick, height1 + height2 + height3, -thick / 4, -1, 0, 0, 0.001, 1, True, 1, 0）
                part.FeatureManager.FeatureFillet3(2, board_fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '创建圆角特征
                part.Extension.SelectByID2("D1@圆角1@零件6.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(-thick, board_fillet_radius, 0) '移动标注
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                A1 = part.SketchManager.CreateCircleByRadius((length - base_center_distance) / 2, base_circle_edge_distance, 0, base_circle_diameter / 2) '用半径画圆
                A2 = part.SketchManager.CreateCircleByRadius((length + base_center_distance) / 2, base_circle_edge_distance, 0, base_circle_diameter / 2) '用半径画圆
                A3 = part.SketchManager.CreateCircleByRadius(length / 2, height1 + height2 + height3 - top_circle_edge_distance, 0, top_circle_diameter / 2) '用半径画圆
                A1Segment = A1
                A2Segment = A2
                A3Segment = A3
                A2Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(length + 2 * thick, height1, 0) '标注尺寸
                DisplayDimension.SetBrokenLeader2(False, 2) '直径标注类型,水平
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "2x<MOD-DIAM>", "", True, "", "", False) '修改尺寸内容
                A3Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, height1 + height2 + height3 - top_circle_edge_distance, 0) '标注尺寸
                A1Segment.Select4(False, Nothing)
                A2Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, -thick, 0) '标注尺寸
                part.SketchManager.InsertSketch(True)
                part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0) '正向贯穿切除,单向
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P1 = part.SketchManager.CreatePoint(0, 0, 0)
                P2 = part.SketchManager.CreatePoint(length, base_circle_edge_distance, 0)
                P3 = part.SketchManager.CreatePoint(length / 2, height1 + height2 + height3 - top_circle_edge_distance, 0)
                P4 = part.SketchManager.CreatePoint(length / 2, height1 + height2 + height3, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddHorizontalDimension2(length / 2, -2 * thick, 0) '标注尺寸
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddVerticalDimension2(length + thick, base_circle_edge_distance / 2, 0) '标注尺寸
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddVerticalDimension2(length + thick, height1 + height2 + height3 - top_circle_edge_distance / 2, 0) '标注尺寸
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub H_c_5(长#， 长2#, 宽1#， 宽2#， 圆弧半径1#， 圆弧2#, 厚度#, 圆角#) '直角2 
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图

                初始设置（1）
                L1 = part.SketchManager.CreateLine(0, 0, 0, 0, 宽1， 0)
                ADDConstraints(1)
                P1 = L1.GetStartPoint2
                P4 = L1.GetEndPoint2
                L1.select2(False, Nothing)
                part.AddDimension2(-0.02, 宽1 / 2, 0)


                L2 = part.SketchManager.CreateLine(0, 宽1， 0, 长#, 宽1， 0)
                'ADDConstraints(1)

                L2.select2(False, Nothing)
                part.AddDimension2(长 / 2, 宽1 + 0.02, 0)


                L3 = part.SketchManager.CreateLine(长#, 宽1， 0, 长#, 宽1 - 宽2， 0)
                ADDConstraints(1)
                L3.select2(False, Nothing)
                part.AddDimension2(长 + 0.02, 宽1 - 宽2 / 2, 0)
                P2 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(0, 0, 0, 长2, 0， 0)

                P5 = L4.GetEndPoint2
                P5.Select4(False, Nothing)
                ADDConstraints(1)

                A1 = part.SketchManager.CreateCircleByRadius(长#, 0, 0, 圆弧半径1#)
                P3 = A1.GetCenterPoint2

                P5.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                A1.select2(True, Nothing)

                part.AddDimension2(P2.X, P2.Y, 0)

                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, P3.X + 圆弧半径1#, P3.Y, 0)



                part.SketchManager.CreateCircleByRadius(圆角#, 宽1 - 圆角#, 0, 圆弧2 / 2)
                part.AddDimension2(圆角#, 宽1 - 2 * 圆角#, 0)

                P4.Select4(False, Nothing)
                part.SketchManager.CreateFillet(圆角#, 1) '圆角


                初始设置（0）



                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)




            End Sub
            Public Sub H_c_6(长#， 长2#, 宽1#， 宽2#, 圆弧1#) '圆台吊攀
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图

                初始设置（0）


                L1 = part.SketchManager.CreateLine(长2 / 2， 宽1， 0， 0， 宽1， 0)
                ADDConstraints(1)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(长 / 2， 0， 0， 0， 0， 0)
                ADDConstraints(1)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L3 = part.SketchManager.CreateLine(0， 宽1， 0， 0， 宽1 - 宽2， 0)
                ADDConstraints(1)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2


                L4 = part.SketchManager.CreateLine(-0.1， 0， 0， -0.11， 0， 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2



                P5.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(8)

                'P6.Select4(False, Nothing)
                'P3.Select4(True, Nothing)
                'ADDConstraints(8)

                P7.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)

                P8.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                ADDConstraints(8)


                L2.select2(False, Nothing)
                part.EditDelete()

                P7.Select4(False, Nothing)
                ADDConstraints(1)


                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 圆弧1)


                P7.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                'L3.Select2(False, Nothing)
                P6.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)
                'MsgBox(1)
                P9 = A1.GetCenterPoint2

                A1.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, P9.X, P9.Y - 圆弧1, 0)

                L1.select2(False, Nothing)
                part.AddDimension2(0, 宽1 + 0.02, 0)

                L3.Select2(False, Nothing)
                part.AddDimension2(0, 宽1 + 0.05, 0)



                'P11 = part.SketchManager.CreatePoint(0, 0, 0)
                'P10 = part.SketchManager.CreatePoint(0, 宽1, 0)

                'P11.Select4(False, Nothing)
                'P10.Select4(True, Nothing)
                ''L4.select2(False, Nothing)
                'part.AddDimension2(长2 / 2 + 0.03, 宽1 / 2, 0)

                A1.select2(False, Nothing)
                part.AddDimension2(0, 0, 0)


                L3.Select2(False, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

            End Sub
            Public Sub Additive(length#, angle#, rop_circle_radius#, base_circle_diameter#, chamfer_length#, chamfer_angle#, thick#)
                '搭子(长,角度,顶圆半径,底圆直径,倒角长,倒角角度,厚)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L01Segment = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                L02Segment = part.SketchManager.CreateCenterLine(-0.01, 0, 0.01, 0, 0, 0)
                L1 = part.SketchManager.CreateLine(length / 4, length / 2, 0, length / 2, 0, 0)
                L2 = part.SketchManager.CreateLine(-length / 4, length / 2, 0, -length / 2, 0, 0)
                L1Segment = L1
                L2Segment = L2
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2
                L02Segment.Select4(False, Nothing)

                '草图方法("水平")
                ADDConstraints(2)
                P2.Select4(False, Nothing)
                L02Segment.Select4(True, Nothing)
                '草图方法("重合")
                ADDConstraints(5)
                P4.Select4(False, Nothing)
                L02Segment.Select4(True, Nothing)
                '草图方法("重合")
                ADDConstraints(5)
                L1Segment.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 4, -length / 3, 0)
                ChangeDimensionVaule(angle * PI / 360)
                P2.Select4(False, Nothing)
                L01Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 4, 0, 0)
                ChangeDimensionVaule(length / 2)
                L1Segment.Select4(False, Nothing)
                L2Segment.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -length / 2, 0)
                ChangeDimensionVaule(angle * PI / 180)
                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, length, 0)
                ChangeDimensionVaule(length)
                A1 = part.SketchManager.Create3PointArc(P1.X, P1.Y, 0, P3.X, P3.Y, 0, 0, P3.Y + rop_circle_radius / 2, 0)
                A1Segment = A1
                A1Segment.Select4(False, Nothing)
                L2Segment.Select4(True, Nothing)
                '草图方法("相切")
                ADDConstraints(4)
                A1Segment.Select4(False, Nothing)
                L1Segment.Select4(True, Nothing)
                '草图方法("相切")
                ADDConstraints(4)
                A1Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(length / 4, length / 2, 0)
                ChangeDimensionVaule(rop_circle_radius)
                P5 = A1.GetStartPoint2
                P6 = A1.GetEndPoint2
                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                '草图方法("合并")
                ADDConstraints(8)
                P3.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                '草图方法("合并")
                ADDConstraints(8)
                A2Segment = part.SketchManager.Create3PointArc(P2.X, P2.Y, 0, P4.X, P4.Y, 0, 0, 0.005, 0)
                A2Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(0, -length / 4, 0)
                ChangeDimensionVaule(base_circle_diameter)
                part.Extension.SelectByID2("D6@草图1@A472_2008.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@草图1@A472_2008.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D2@草图1@A472_2008.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.EditDelete()
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByRay（0, 0, 0, 0, 1, 0, 0.001, 1, False, 1, 0）
                part.Extension.SelectByRay（0, 0, thick, 0, 1, 0, 0.001, 1, True, 1, 0）
                part.FeatureManager.InsertFeatureChamfer(1, 1, chamfer_length, chamfer_angle * PI / 180, 0, 0, 0, 0) '倒角

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P7 = part.SketchManager.CreatePoint(0, 2 * chamfer_length, 0)
                P8 = part.SketchManager.CreatePoint(-thick, 2 * chamfer_length, 0)
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, length, thick / 2)
                part.SketchManager.InsertSketch(True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                part.SketchManager.CreateCenterLine(0, -thick, 0, 0, length - 0.005, 0)
                part.SketchManager.InsertSketch(True)
                Dim Annotation As SldWorks.Annotation
                part.Extension.SelectByID2("D2@倒角1@A472_2008.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 1)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(0, chamfer_length / 2, -thick / 2) '移动标注
            End Sub
            Public Sub Front_and_rear_panel_installation_platform(length#, width#, height#, fillet_radius#, thick#)
                '前后板安装平台(长,宽,高,圆角半径,厚)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(thick, 0, 0, length, 0, 0)
                L2 = part.SketchManager.CreateLine(thick, 0, 0, thick, -(height - thick), 0)
                L3 = part.SketchManager.CreateLine(0, thick, 0, length, thick, 0)
                L4 = part.SketchManager.CreateLine(0, thick, 0, 0, -(height - thick), 0)
                L5 = part.SketchManager.CreateLine(0, -(height - thick), 0, thick, -(height - thick), 0)
                L6 = part.SketchManager.CreateLine(length, 0, 0, length, thick, 0)
                L4Segment = L4
                L5Segment = L5
                L4Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(-height / 2, -height / 2 + thick, 0)
                L5Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(thick / 2, -3 * height / 2, 0)
                P1 = L1.GetStartPoint2
                P3 = L3.GetStartPoint2
                P1.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius, 1)
                P3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius + thick, 1)
                part.Extension.SelectByID2("D2@草图1@F126_2055.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                'Annotation = DisplayDimension.GetAnnotation()
                'Annotation.SetPosition(2 * thick, -thick / 2, 0) '移动标注
                'part.ClearSelection2(True)
                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, width, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P4 = part.SketchManager.CreatePoint(0, 0, 0)
                P5 = part.SketchManager.CreatePoint(length, 0, 0)
                P4.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, 0, width + thick)
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub Outlet_board_installation_platform(length#, width#, height#, fillet_radius#, thick#)
                '出线板安装平台(长,宽,高,圆角半径,厚)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                L1 = part.SketchManager.CreateLine(thick, 0, 0, length - thick, 0, 0)
                L2 = part.SketchManager.CreateLine(thick, 0, 0, thick, -(height - thick), 0)
                L3 = part.SketchManager.CreateLine(0, thick, 0, length, thick, 0)
                L4 = part.SketchManager.CreateLine(0, thick, 0, 0, -(height - thick), 0)
                L5 = part.SketchManager.CreateLine(length - thick, 0, 0, length - thick, -(height - thick), 0)
                L6 = part.SketchManager.CreateLine(length, thick, 0, length, -(height - thick), 0)
                L7 = part.SketchManager.CreateLine(0, -(height - thick), 0, thick, -(height - thick), 0)
                L8 = part.SketchManager.CreateLine(length - thick, -(height - thick), 0, length, -(height - thick), 0)

                L6Segment = L6
                L7Segment = L7
                L6Segment.Select4(False, Nothing)
                DisplayDimension = part.AddVerticalDimension2(3 * length / 2, -height / 2, 0)
                L7Segment.Select4(False, Nothing)
                DisplayDimension = part.AddDimension2(thick / 2, -height - thick, 0)

                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2
                P3 = L3.GetStartPoint2
                P4 = L3.GetEndPoint2
                P1.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius, 1)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius, 1)
                P3.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius + thick, 1)
                P4.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fillet_radius + thick, 1)
                part.Extension.SelectByID2("D3@草图1@O126_2061.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                'Annotation = DisplayDimension.GetAnnotation()
                'Annotation.SetPosition(3 * thick / 2, -thick / 2, 0) '移动标注
                part.Extension.SelectByID2("D4@草图1@O126_2061.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0) '删除标注
                part.Extension.SelectByID2("D6@草图1@O126_2061.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D5@草图1@O126_2061.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.EditDelete()

                'Dim SF2, SF3 As Object
                'SF2 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "") '添加粗糙度标识,不允许切削
                'SF2.GetAnnotation().SetPosition2(长 / 2, 厚, 0)
                'SF2.SetAngle(0)

                'SF3 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF3.GetAnnotation().SetPosition2(长 / 2, 0, 0)
                'SF3.SetAngle(90 * Pi / 180)


                part.SketchManager.InsertSketch(True) '结束草图编辑
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, width, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P6 = part.SketchManager.CreatePoint(0, 0, 0)
                P5 = part.SketchManager.CreatePoint(length, 0, 0)
                P6.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(length / 2, 0, width + thick)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub installation_platform(长#， 宽1#， 宽2#， 圆弧半径#， 厚度#)


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图

                初始设置（1）
                L1 = part.SketchManager.CreateLine(0, 0, 0, 0, 宽1， 0)
                ADDConstraints(1)
                P1 = L1.GetStartPoint2

                L1.select2(False, Nothing)
                part.AddDimension2(-0.02, 宽1 / 2, 0)


                L2 = part.SketchManager.CreateLine(0, 宽1， 0, 长#, 宽1， 0)
                'ADDConstraints(1)

                L2.select2(False, Nothing)
                part.AddDimension2(长 / 2, 宽1 + 0.02, 0)


                L3 = part.SketchManager.CreateLine(长#, 宽1， 0, 长#, 宽1 - 宽2， 0)
                ADDConstraints(1)
                L3.select2(False, Nothing)
                part.AddDimension2(长 + 0.02, 宽1 - 宽2 / 2, 0)
                P2 = L3.GetEndPoint2

                A1 = part.SketchManager.CreateCircleByRadius(长#, 0, 0, 圆弧半径#)
                P3 = A1.GetCenterPoint2

                P1.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                A1.select2(True, Nothing)

                part.AddDimension2(P2.X, P2.Y, 0)

                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, P3.X + 圆弧半径#, P3.Y, 0)

                初始设置（0）



                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
            End Sub
            Public Sub Flange(outer_diameter#, thick#, resection_diameter#, step_diameter#, step_thick#, chamfer#, down_cut#)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                A1Segment = part.SketchManager.CreateCircleByRadius(0, 0, 0, outer_diameter / 2) '用半径画圆
                DisplayDimension = part.AddDimension2(resection_diameter * 1 / 4 * Cos(75 * PI / 180), resection_diameter * 1 / 4 * Sin(75 * PI / 180), 0) '标注尺寸
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thick, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸,单向,
                '不合并实体,特征影响所有实体,选择特征影响的实体,从基准面开始拉伸

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                part.SketchManager.CreateCircleByRadius(0, 0, 0, resection_diameter / 2) '用半径画圆
                DisplayDimension = part.AddDimension2(resection_diameter * 1 / 4 * Cos(45 * PI / 180), resection_diameter * 1 / 4 * Sin(45 * PI / 180), 0) '标注尺寸
                Sketch = part.SketchManager.ActiveSketch
                part.SketchManager.InsertSketch(True) '结束草图编辑
                Feature = part.FeatureManager.FeatureCut4(True, False, True, 0, 0, thick, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '切除,单向,指定深度

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                part.SketchManager.InsertSketch(True) '插入新的草图
                P1 = part.SketchManager.CreatePoint(0, outer_diameter / 2, 0)
                P2 = part.SketchManager.CreatePoint(-thick, outer_diameter / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddHorizontalDimension2(0, outer_diameter / 2 + thick, thick / 2)
                part.SketchManager.InsertSketch(True)



                If Not step_diameter = 0 Then

                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                    part.SketchManager.InsertSketch(True) '插入新的草图
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, outer_diameter / 2) '用半径画圆
                    part.SketchManager.CreateCircleByRadius(0, 0, 0, step_diameter / 2) '用半径画圆
                    part.FeatureCut(True, False, True, 0, 0, step_thick, 0, False, False, 0, 0, 0, 0, 0, 0) '切除指定厚度

                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                    part.SketchManager.InsertSketch(True) '插入新的草图
                    A1Segment = part.SketchManager.CreateCircleByRadius(0, 0, 0, step_diameter / 2) '用半径画圆
                    part.SketchManager.CreateConstructionGeometry() '设置为辅助线
                    A1Segment.Select4(False, Nothing)
                    DisplayDimension = part.AddDimension2(resection_diameter * 1 / 4 * Cos(15 * PI / 180), resection_diameter * 1 / 4 * Sin(15 * PI / 180), 0) '标注尺寸
                    part.SketchManager.InsertSketch(True)

                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                    part.SketchManager.InsertSketch(True) '插入新的草图
                    P1 = part.SketchManager.CreatePoint(0, step_diameter / 2, 0)
                    P2 = part.SketchManager.CreatePoint(-step_thick, step_diameter / 2, 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    DisplayDimension = part.AddHorizontalDimension2(0, outer_diameter / 2 + thick / 2, 2 * step_thick)
                    part.SketchManager.InsertSketch(True)
                End If


                If Not chamfer = 0 Then
                    face1 = Feature.GetFaces
                    '遍历(1, face1, 10)
                    part.ClearSelection2(True)
                    edge1 = face1(0).GetEdges

                    part.ClearSelection2(True)
                    edge1(0).select2(False, Nothing)
                    part.FeatureManager.InsertFeatureChamfer(6, 1, chamfer, 45 * PI / 180, 0, 0, 0, 0) '倒角，距离，角度
                End If

                If Not down_cut = 0 Then
                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                    part.SketchManager.InsertSketch(True) '插入新的草图
                    part.SketchManager.CreateCornerRectangle(-outer_diameter / 2, -(down_cut - outer_diameter / 2), 0, outer_diameter / 2, -outer_diameter / 2, 0)
                    part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0) '反向贯穿切除,单向

                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0) '选中对象,在前视基准面
                    part.SketchManager.InsertSketch(True) '插入新的草图
                    P1 = part.SketchManager.CreatePoint(0, outer_diameter / 2, 0)
                    P2 = part.SketchManager.CreatePoint(0, -(down_cut - outer_diameter / 2), 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    DisplayDimension = part.AddHorizontalDimension2(2 * outer_diameter / 3, 0, 0)
                End If


            End Sub
            Public Sub 圆孔阵列(diameter1#, Hole_diameter#, number#, coment1$, coment2$) '
                'Dim Line1 As SketchLine
                Dim Arc1, Arc2 As SketchSegment

                Dim sww As Object
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                Arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1 / 2)
                part.SketchManager.CreateConstructionGeometry()
                Arc1.Select4(False, Nothing)
                part.AddDimension2(-diameter1, 0, 0)
                Arc2 = part.SketchManager.CreateCircleByRadius(0, diameter1 / 2, 0, Hole_diameter# / 2)
                part.AddDimension2(0.02, diameter1 / 2 + 0.02, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 0, 2, False, 12, 12, coment1$, "", True, "", coment2$, "", False, 1, "")

                'part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, angle# * PI / 180)
                Arc2.Select4(False, Nothing)
                part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number * PI / 180)
                'part.EditDelete()
                part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)

                Feature = SelectionMgr.GetSelectedObject6(-1, 1)
                If Feature Is Nothing Then
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)

                End If
                part.ClearSelection2(True)

            End Sub
            Public Sub Straight_slot_On_side(直径1#， 直径2#, 槽长度#, 槽宽#， 厚度1#， 厚度2#, 切除口距离#, Type#, arc_table_tol_max1$, arc_table_tol_min1$, Min#)
                Dim P1, P2, P3, p4, p5, p6 As SketchPoint

                SelectPlane("right")
                Feature = part.FeatureManager.InsertRefPlane(8, 直径2# / 2, 0, 0, 0, 0)

                part.Extension.SelectByID2(Feature.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateSketchSlot(1, 1, 槽宽， -(厚度1 + 厚度2) / 2 - 0.001, 0, 0, -(厚度1 + 厚度2) / 2 + 槽长度 / 2 - 槽宽 / 2 - 0.001， 0， 0， -(厚度1 + 厚度2) / 2 - 槽宽 / 2 - 0.001, 槽宽 / 2， 0， 1， False)
                p4 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2 - 0.001 + 槽长度 / 2, 0, 0)
                p5 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2 - 0.001 - 槽长度 / 2, 0, 0)
                p6 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2 - 0.001 - 槽长度 / 2 + 0.004, 0, 0)
                p4.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                part.AddDimension2(0, -0.03, (厚度1 + 厚度2) / 2)
                p6.Select4(False, Nothing)
                p5.Select4(True, Nothing)
                part.AddDimension2(0, -0.027, (厚度1 + 厚度2) + 0.01)


                part.FeatureCut(True, False, False, 0, 0, （直径1# - 切除口距离#） + （直径2 - 直径1） / 2, 0, False, False, 0, 0, 0, 0, 0, 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(切除口距离 - 直径1 / 2, 槽宽 / 2, 0)
                P2 = part.SketchManager.CreatePoint(切除口距离 - 直径1 / 2, -槽宽 / 2, 0)
                P3 = part.SketchManager.CreatePoint(-直径1 / 2, -槽宽 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(切除口距离 - 直径1 / 2 + 0.02, 槽宽 / 2 + 0.02, 0)
                SetTolvalue(Type, arc_table_tol_max1, arc_table_tol_min1)
                P3.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(切除口距离 - 直径1 / 2 - 0.03, -槽宽 / 2 - 0.02, 0)
                part.EditDimensionProperties2(2, 0, Min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub 孔导向2（直径2#， 直径3#， 螺纹孔规格$, 孔直径#， 孔个数#， 孔深度#， 孔X方向距离#， 厚度1#, 厚度2#, symbol1$, Geometric_tolerance1$, letter1$, coment3$, coment4$）
                Dim p1, p2 As SketchPoint
                Dim a1, a2 As SketchArc
                part.Extension.SelectByID2("", "FACE", 直径2 / 2, 0, 厚度1 + 厚度2, False, 0, Nothing, 0)
                Feature1 = part.FeatureManager.InsertRefPlane(4, 0, 0, 0, 0, 0)
                part.Extension.SelectByID2(Feature1.Name, "PLANE", 孔X方向距离 / 2, ((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2), 0, False, 0, Nothing, 0)
                ''MsgBox(Sin(Acos(孔X方向距离 / 2 / 直径3 / 2)) * 直径3 / 2)
                ''MsgBox(((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2))
                Feature2 = part.FeatureManager.HoleWizard5(2, 13, 357, 螺纹孔规格, 0, 孔直径, 孔深度, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)

                part.Extension.SelectByID2(Feature1.Name, "PLANE", -孔X方向距离 / 2, ((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2), 0, False, 0, Nothing, 0)
                ''MsgBox(Sin(Acos(孔X方向距离 / 2 / 直径3 / 2)) * 直径3 / 2)
                ''MsgBox(((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2))
                Feature3 = part.FeatureManager.HoleWizard5(2, 13, 357, 螺纹孔规格, 0, 孔直径, 孔深度, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)

                Feature2.Select2(False, 1)
                Feature3.Select2(True, 1)

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisZ.Select2(True, 1) '选择并标记
                'part.FeatureManager.FeatureCircularPattern5(孔个数#, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                AxisZ.Select2(False, Nothing) '基准轴与阵列特征相关联不能删除
                part.BlankRefGeom() '隐藏


                part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)

                part.SketchManager.InsertSketch(True)
                p1 = part.SketchManager.CreatePoint(孔X方向距离 / 2, ((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2), 0)
                p2 = part.SketchManager.CreatePoint(-孔X方向距离 / 2, ((直径3 / 2) ^ 2 - (孔X方向距离 / 2) ^ 2) ^ (1 / 2), 0)
                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                part.AddDimension2(0, 直径2 / 2 + 0.02, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                a1 = part.SketchManager.CreateCircleByRadius(p2.X, p2.Y, 0, 孔直径 / 2)
                'part.SketchManager.InsertSketch(True)
                'part.AddDimension2(p2.X - 0.05, p2.Y + 0.05, 0)
                'part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 2, Nothing, 0)
                'part.Extension.SelectByID2("", "FACE", 直径2 / 2, 0, 厚度1 + 厚度2, False, 0, Nothing, 0)
                'part.SketchManager.InsertSketch(True)
                'a1.Select2(False, Nothing)
                part.Extension.SelectByID2(a1.GetName, "SKETCHSEGMENT", p2.X, p2.Y, 0, False, 0, Nothing, 0)
                Dim myGtol As Object
                Dim myAnno As Annotation
                Dim myNote As Object
                Dim myAnnotation As Object
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, symbol1$, False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, Geometric_tolerance1$, "", letter1$, "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(p2.X - 0.1, p2.Y + 0.05, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)

                myNote = part.InsertNote(coment3 + Chr(13) + Chr(10) +
                 coment4)

                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()

                myAnnotation.SetLeader3(0, 0, True, False, False, False)
                myAnnotation.SetPosition(p2.X - 0.04, p2.Y + 0.05, 0)
                'myAnnotation.SetLeaderAttachmentPointAtIndex(1, p2.X, p2.Y, 0)

                a2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径3 / 2)
                part.SketchManager.CreateConstructionGeometry()
                a2.Select2(False, Nothing)
                part.AddDimension2(直径3 / 2 + 0.03, 0.03, 0)

                'Dim myDatumTag As Object
                'Dim myAnnotation As Object
                'myDatumTag = part.InsertDatumTag2()
                'myDatumTag.Shoulder = False
                'myDatumTag.SetLabel("A")
                'myAnnotation = myDatumTag.GetAnnotation()
                'myAnnotation.SetPosition(-0.175955828086925, -0.0434847823493707, 0.0447245156851998)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub 孔导向3（螺纹孔规格$, 孔直径#， 孔个数#， 孔深度#， 厚度#）
                Dim p1, p2, p3 As SketchPoint
                If 孔个数 = 1 Then
                    part.Extension.SelectByRay(-1, 0, 0, 1, 0, 0, 0.00001, 2, False, 0, 0)


                    ' part.Extension.SelectByID2("", "FACE", 0, 0, 0, False, 0, Nothing, 0)

                    Feature1 = part.FeatureManager.InsertRefPlane(4, 0, 0, 0, 0, 0)

                    part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                    Feature2 = part.FeatureManager.HoleWizard5(2, 13, 357, 螺纹孔规格, 0, 孔直径, 孔深度, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                End If
                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                'AxisZ.Select2(True, 1) '选择并标记
                'part.FeatureManager.FeatureCircularPattern5(孔个数#, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                'AxisZ.Select2(False, Nothing) '基准轴与阵列特征相关联不能删除
                'part.BlankRefGeom() '隐藏
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                p1 = part.SketchManager.CreatePoint(0, -孔直径 / 2, 0)
                p2 = part.SketchManager.CreatePoint(孔深度, -孔直径 / 2, 0)
                p3 = part.SketchManager.CreatePoint(0, 孔直径 / 2, 0)

                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                part.AddDimension2(孔深度 / 2, -(孔直径 / 2 + 0.01), 0)
                p1.Select4(False, Nothing)
                p3.Select4(True, Nothing)
                part.AddDimension2(-孔深度 / 2, 0, 0)
                part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 9, 2, False, 12, 12, "M", "", True, "", "", "", False, 1, "")
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub 倒角凸台(diameter#, thickness#, 倒角长#， 倒角角度#, Chamfering_parameters$， Tolerance_size#, Optional Tolerance$ = "", Optional Type# = 0, Optional Max$ = "", Optional Min$ = "") '凸台拉伸

                Dim SF As Object
                Dim p1, p2, p3, p4 As SketchPoint
                SelectPlane("right")

                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter# / 2)
                'part.AddDimension2(diameter# / 2 + 0.02, 0, -0.005)









                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thickness#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                part.Extension.SelectByID2("", "FACE", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("", "FACE", thickness, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 倒角长, 倒角角度 * PI / 180, 0, 0, 0, 0)


                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                Dim l1, L2 As SldWorks.SketchPoint

                sketch = SketchManager.ActiveSketch
                Feature = sketch
                'SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF.GetAnnotation().SetPosition2(thickness / 2 + 0.1, diameter / 2, 0)

                l1 = part.SketchManager.CreatePoint((thickness# - 0.035), diameter# / 2, 0)
                'part.SketchManager.InsertSketch(True)


                'Debug.Print("Point1@" & Feature.Name)
                'part.Extension.SelectByID2("Point1@" & Feature.Name, "SKETCHPOINT", l1.X, l1.Y, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", l1.X, l1.Y, 0, False, 0, Nothing, 0)

                'part.ShowNamedView2("*右视", 4)
                'part.ViewZoomtofit2()
                Dim myGtol As Object
                Dim myAnno As Annotation
                Dim myNote As Object
                Dim myAnnotation As Object

                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2（1, "<IGTOL-STRAIGHT>", False, "", False, "", "", "", ""）
                myGtol.SetFrameValues（1, Tolerance_size, "", "", "", ""）
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition((thickness# - 0.02), diameter# / 2 + 0.02, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)

                'myGtol = part.InsertGtol()
                'myGtol.SetFrameSymbols2(1, "<IGTOL-STRAIGHT>", False, "", False, "", "", "", "")
                'myGtol.SetFrameValues(1, "0.1", "", "", "", "")
                'myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                'myGtol.SetFrameValues(2, "", "", "", "", "")
                'myGtol.SetPTZHeight("", False)
                'myGtol.SetCompositeFrame(False)
                'myGtol.SetText(4, "")
                'myGtol.SetBetweenTwoPoints(False, "", "")
                'myAnno = myGtol.GetAnnotation()
                'myAnno.SetPosition(-(thickness# / 2 - 0.1), diameter# / 2 + 0.02, 0)
                'myAnno.SetLeader3(2, 0, True, False, False, False)
                ''myAnno.SetLeaderAttachmentPointAtIndex(0, l1.X, l1.Y, 0)


                p1 = part.SketchManager.CreatePoint(倒角长, diameter# / 2, 0)
                myNote = part.InsertNote(Chamfering_parameters)

                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)

                myAnnotation.SetPosition(倒角长 + 0.01, diameter# / 2 + 0.015, 0)
                p2 = part.SketchManager.CreatePoint(0, diameter# / 2, 0)
                p3 = part.SketchManager.CreatePoint(0, -diameter# / 2, 0)
                p4 = part.SketchManager.CreatePoint(thickness, -diameter# / 2, 0)
                p3.Select4(False, Nothing)
                p4.Select4(True, Nothing)
                part.AddDimension2(thickness / 2, -diameter# / 2 - 0.015, 0)
                If Not Tolerance Is Nothing Then
                    p3.Select4(False, Nothing)
                    p2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(-0.02, 0, 0)
                    part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 9, 2, False, 12, 12, "<MOD-DIAM>", "", True, "", "", "", False, 1, "")
                    SetTolvalue(Type, Max, Min)
                    part.SketchManager.InsertSketch(True)

                Else
                    p3.Select4(False, Nothing)
                    p2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(-0.02, 0, 0)
                    part.Extension.EditDimensionProperties(0, 0, 0, "", "", False, 9, 2, False, 12, 12, "<MOD-DIAM>", "", True, "", "", "", False, 1, "")
                    part.SketchManager.InsertSketch(True)
                End If

            End Sub
            Public Sub Circle_excision(internal_diameter1#, 厚度1#, 厚度2#, max#, min#, arc_table_tol_max$, arc_table_tol_min$, Optional Type# = 0, Optional thickness# = 0) 'Circle_excision

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, internal_diameter1 / 2)
                'part.AddDimension2(internal_diameter1 / 2 + 0.01, 0, 0)
                If Type <> 0 Then
                    part.SketchManager.InsertSketch(True)
                    part.FeatureCut(True, False, True, 0, 0, thickness#, 0, False, False, 0, 0, 0, 0, 0, 0)
                    'part.FeatureManager.FeatureCut4(True, False, False, 0, 0, thickness#, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                    part.ClearSelection2(True)
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    P1 = part.SketchManager.CreatePoint(thickness#, internal_diameter1# / 2 - 0.03, 0)
                    P2 = part.SketchManager.CreatePoint(厚度1, internal_diameter1# / 2 - 0.03, 0)
                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(厚度1 + 0.02, internal_diameter1# / 2 - 0.03, 0)

                    P3 = part.SketchManager.CreatePoint(0, internal_diameter1 / 2, 0)
                    P4 = part.SketchManager.CreatePoint(0, -internal_diameter1 / 2, 0)
                    P3.Select4(False, Nothing)
                    P4.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(-0.05, 0, 0)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    P5 = part.SketchManager.CreatePoint(thickness#, 0, 0)
                    P6 = part.SketchManager.CreatePoint(厚度1 + 厚度2, 0, 0)
                    P5.Select4(False, Nothing)
                    P6.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(-厚度1 - 0.01, -internal_diameter1 / 4, 0)
                    SetTolvalue(8, arc_table_tol_max, arc_table_tol_min)
                    part.SketchManager.InsertSketch(True)
                Else
                    part.SketchManager.InsertSketch(True)
                    part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                    part.ClearSelection2(True)
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)

                    P3 = part.SketchManager.CreatePoint(0, internal_diameter1 / 2, 0)
                    P4 = part.SketchManager.CreatePoint(0, -internal_diameter1 / 2, 0)
                    P3.Select4(False, Nothing)
                    P4.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(厚度1 + 0.04, 0, 0)
                    DisplayDimension.LeaderVisibility = 2 '或者1
                    DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                    part.EditDimensionProperties2(2, max, min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                    P3 = part.SketchManager.CreatePoint(厚度1 + 0.04, internal_diameter1 / 2, 0)
                    P3.Select4(False, Nothing)
                    part.Extension.InsertSurfaceFinishSymbol3(1, 0, P3.X, P3.Y, 0, 0, 1, "", "", "", "", "", "3.2", "")
                    part.SketchManager.InsertSketch(True)

                End If
            End Sub
            Public Sub Two_stage_round_table（直径1#， 直径2#， 厚度1#， 厚度2#, Type#, Optional max# = 0, Optional min# = 0）


                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1 / 2)
                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度1, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                part.Extension.SelectByID2("", "FACE", 厚度1, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                part.ClearSelection2(True)
                Feature = part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, 厚度2, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                ' part.FeatureManager.FeatureFillet3(195, 圆角半径, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                '标注
                If Type = 1 Then
                    SelectPlane("front")
                    part.SketchManager.InsertSketch(True)
                    P1 = part.SketchManager.CreatePoint(0, 直径1# / 2, 0)
                    P2 = part.SketchManager.CreatePoint(0, -直径1# / 2, 0)
                    P3 = part.SketchManager.CreatePoint(厚度1, 直径2# / 2, 0)
                    P4 = part.SketchManager.CreatePoint(厚度1, -直径2# / 2, 0)

                    P1.Select4(False, Nothing)
                    P2.Select4(True, Nothing)
                    DisplayDimension = part.AddDimension2(厚度1 + 0.08, 0, 0)
                    part.EditDimensionProperties2(2, max, min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)


                    P3.Select4(False, Nothing)
                    P4.Select4(True, Nothing)
                    part.AddDimension2(厚度1 + 0.06, 0, 0)

                    P5 = part.SketchManager.CreatePoint(0, 直径1# / 2, 0)
                    P6 = part.SketchManager.CreatePoint(厚度1, 直径1# / 2, 0)
                    P5.Select4(False, Nothing)
                    P6.Select4(True, Nothing)
                    part.AddDimension2(厚度1 / 2, 直径1# / 2 + 0.001, 0)
                    part.SketchManager.InsertSketch(True)
                Else
                End If

            End Sub
            Public Sub 圆角及倒角处理（直径1#, 直径2#, 直径3#, 直径4#, thickness#, 厚度1#, 倒角半径#）

                '倒角
                part.Extension.SelectByRay(0, 直径2 / 2 - thickness, 0, 1, 1, 0, 0.000000001, 1, False, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 倒角半径#, PI / 4, 0, 0, 0, 0)

                ' part.Extension.SelectByRay(0, 直径2 / 2 - thickness, 0, 1, 1, 0, 0.000000001, 1, False, 0, 0)
                part.Extension.SelectByRay(1, 直径4 / 2, 0, -1, 0, 0, 0.000000001, 1, False, 0, 0)
                part.Extension.SelectByRay(-1, 直径4 / 2, 0, 1, 0, 0, 0.000000001, 1, True, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 2, 0.001, 0, 0.001, 0, 0, 0)
                '圆角
                part.Extension.SelectByRay(1, 直径1 / 2, 0, -1, 0, 0, 0.000000001, 1, False, 0, 0)
                part.Extension.SelectByRay(1, 直径3 / 2, 0, -1, 0, 0, 0.000000001, 1, True, 0, 0)
                part.Extension.SelectByRay(厚度1 + 0.002, 直径3 / 2 + 0.002, 0, -1, -1, 0, 0.000000001, 1, True, 0, 0)
                part.FeatureManager.FeatureFillet3(195, 0.001, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                '标注
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreatePoint(0, 直径4 / 2, 0)

                Dim myNote As Object
                Dim myAnnotation As Object
                Dim myTextFormat As Object
                myNote = part.InsertNote("1x45°两端")

                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()

                myAnnotation.SetLeader3(3, 2, True, False, False, False)
                myAnnotation.SetPosition(-0.04, 直径4 / 2 + 0.03, 0)

                part.SketchManager.InsertSketch(True)




            End Sub
            Public Sub slot_wedge(长1#， 长2#， 宽#, 圆角半径#, high#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                L1 = part.SketchManager.CreateLine(0, 长1 / 2， 0， 0, -长1 / 2， 0)
                ADDConstraints(1)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(1)

                L2 = part.SketchManager.CreateLine(宽， 长2 / 2， 0， 宽, -长2 / 2， 0)
                ADDConstraints(1)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(1)

                L3 = part.SketchManager.CreateLine(0.01， 0， 0， 0.02, 0， 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(-0.01， 0， 0， -0.02, 0， 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2



                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                ADDConstraints(8)

                P3.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)

                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                ADDConstraints(8)

                P4.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                ADDConstraints(8)

                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i


                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.SketchManager.CreateFillet(圆角半径#, 1)
                part.SketchManager.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, high#, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)


            End Sub
            Public Sub slot_wedge_Label(长1#， 长2#， 宽#, high#, Max#, Min#, angle#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)


                P1 = part.SketchManager.CreatePoint(0, 长1 / 2， 0)
                P2 = part.SketchManager.CreatePoint(0, -长1 / 2， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.02, 0, 0)
                part.EditDimensionProperties2(4, Max, Min, "", "", True, 9, 2, True, 12, 12, "(x)", "", True, "", "", False)

                P3 = part.SketchManager.CreatePoint(宽， 长2 / 2， 0)
                P4 = part.SketchManager.CreatePoint(宽， -长2 / 2， 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(宽 + 0.02, 0, 0)
                part.EditDimensionProperties2(4, Max, Min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)


                P5 = part.SketchManager.CreatePoint(0， -长1 / 2， 0)
                P6 = part.SketchManager.CreatePoint(宽， -长1 / 2， 0)
                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(宽 / 2, -长1 / 2 - 0.02, 0)


                L1 = part.SketchManager.CreateCenterLine(宽， 长2 / 2, 0， 宽， 长2 / 2 + 0.01, 0)
                ADDConstraints(1)
                L2 = part.SketchManager.CreateCenterLine(宽， 长2 / 2, 0， 宽 - 0.01， 长2 / 2, 0)
                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(宽 - 0.01， 长2 / 2 + 0.01, 0)
                ChangeDimensionVaule(angle# / 180 * PI)
                part.SketchManager.InsertSketch(True)

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)

                P7 = part.SketchManager.CreatePoint(-high， -长1 / 2， 0)
                P8 = part.SketchManager.CreatePoint(0， -长1 / 2， 0)
                P7.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -长1, high / 2)
                part.SketchManager.InsertSketch(True)



            End Sub
            Public Sub Grounding_plate_Appearance(直径1#， 直径2#， 长#， 宽#, 厚度#)


                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateArc(0， 0， 0， -直径1 / 2， 0， 0， 直径1 / 2， 0， 0， -1)
                P1 = A1.GetStartPoint2
                P2 = A1.GetEndPoint2




                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)


                L1 = part.SketchManager.CreateLine(-宽 / 2， -长， 0， 宽 / 2， -长， 0)
                P3 = L1.GetStartPoint2
                P4 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                P3.Select4(True, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(1)


                L3 = part.SketchManager.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
                L4 = part.SketchManager.CreateLine(0.01, 0, 0, 0.01, 0.01, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2

                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                ADDConstraints(8)

                P6.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)

                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                ADDConstraints(8)

                P8.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(8)

                part.ClearSelection2(True)



                'sketch = SketchManager.ActiveSketch
                'SketchSegments = sketch.GetSketchSegments
                'For i = 0 To UBound(SketchSegments)
                '    SketchSegment = SketchSegments(i)
                '    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                '    part.SketchConstraintsDelAll()
                'Next i



                P6.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                part.SketchManager.CreateFillet(0.001, 1)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, 厚度, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)






            End Sub
            Public Sub 接地牌蚀刻（直径1#， 直径3#， 长#， 长1#， 间距#， 深度#, 蚀刻矩形宽1#， 蚀刻矩形长1#， 蚀刻矩形宽2#， 蚀刻矩形长2#， 蚀刻矩形宽3#， 蚀刻矩形长3#， 蚀刻矩形宽4#， 蚀刻矩形长4#， 蚀刻间间距1#， 蚀刻间间距2#， 蚀刻间间距3#）
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateCircleByRadius(0, -(长 - 长1)， 0， 直径3 / 2)
                part.SketchManager.CreateCircleByRadius(0, -(长 - 长1)， 0， （直径3 - 2 * 间距） / 2)
                part.FeatureCut(True, False, True, 0, 0, 深度#, 0, False, False, 0, 0, 0, 0, 0, 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateCornerRectangle(-蚀刻矩形宽1 / 2， -(长 - 长1 + 蚀刻间间距1#)， 0， 蚀刻矩形宽1 / 2， -(长 - 长1 + 蚀刻间间距1# - 蚀刻矩形长1#)， 0)
                part.FeatureCut(True, False, True, 0, 0, 深度#, 0, False, False, 0, 0, 0, 0, 0, 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCornerRectangle（-蚀刻矩形长2 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2)， 0， 蚀刻矩形长2 / 2， -(长 - 长1 + 蚀刻间间距1#)， 0）
                part.FeatureCut(True, False, True, 0, 0, 深度#, 0, False, False, 0, 0, 0, 0, 0, 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCornerRectangle（-蚀刻矩形长3 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3)， 0， 蚀刻矩形长3 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2#)， 0）
                part.FeatureCut(True, False, True, 0, 0, 深度#, 0, False, False, 0, 0, 0, 0, 0, 0)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCornerRectangle(-蚀刻矩形长4 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3 + 蚀刻间间距3# + 蚀刻矩形宽4)， 0， 蚀刻矩形长4 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3 + 蚀刻间间距3#)， 0)
                part.FeatureCut(True, False, True, 0, 0, 深度#, 0, False, False, 0, 0, 0, 0, 0, 0)

            End Sub
            Public Sub 接地牌标注（直径1#， 直径2#， 长#， 宽#, 长1#, 直径3#, 间距#, 蚀刻矩形宽1#， 蚀刻矩形长1#， 蚀刻矩形宽2#， 蚀刻矩形长2#， 蚀刻矩形宽3#， 蚀刻矩形长3#， 蚀刻矩形宽4#， 蚀刻矩形长4#， 蚀刻间间距1#， 蚀刻间间距2#， 蚀刻间间距3#）

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateArc(0， 0， 0， -直径1 / 2， 0， 0， 直径1 / 2， 0， 0， -1)
                part.SketchManager.CreateConstructionGeometry()
                A2 = part.SketchManager.CreateArc(0， 0， 0， -直径2 / 2， 0， 0， 直径2 / 2， 0， 0， -1)
                part.SketchManager.CreateConstructionGeometry()

                A1.select2(False, Nothing)
                part.AddDimension2(直径1# / 2, 直径1# / 2, 0)
                A2.select2(False, Nothing)
                part.AddDimension2(-(直径1# / 2), 直径1# / 2, 0)

                P1 = part.SketchManager.CreatePoint(0, 0, 0)
                P2 = part.SketchManager.CreatePoint(0, -长, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(直径1#, -长 / 2, 0)

                P3 = part.SketchManager.CreatePoint(宽 / 2, -长, 0)
                P4 = part.SketchManager.CreatePoint(-宽 / 2, -长, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -长 / 2 - 0.02, 0)

                P5 = part.SketchManager.CreatePoint(0, -长 + 长1, 0)
                P2.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(直径1# / 2, -长 + 长1 / 2, 0)


                A3 = part.SketchManager.CreateCircleByRadius(0, -(长 - 长1)， 0， 直径3 / 2)
                part.SketchManager.CreateConstructionGeometry()
                A1.select2(False, Nothing)
                part.AddDimension2(-0.005, -(长 - 长1) + 0.005， 0)


                P1 = part.SketchManager.CreatePoint(直径3 / 2, -(长 - 长1)， 0)
                P2 = part.SketchManager.CreatePoint(直径3 / 2 - 间距#, -(长 - 长1), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(直径3# / 2, -(长 - 长1) - 直径3# / 2, 0)

                P1 = part.SketchManager.CreatePoint(0， -(长 - 长1 + 蚀刻间间距1#)， 0)
                P2 = part.SketchManager.CreatePoint(0, -(长 - 长1), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(直径3# / 4, -(长 - 长1) + 0.005, 0)
                '
                P1 = part.SketchManager.CreatePoint(蚀刻矩形宽1 / 2， -(长 - 长1）， 0)
                P2 = part.SketchManager.CreatePoint(-蚀刻矩形宽1 / 2， -(长 - 长1), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(蚀刻矩形长1 / 2 + 0.005, -(长 - 长1) + 直径3 / 2 + 0.001, 0)



                P1 = part.SketchManager.CreatePoint(蚀刻矩形宽1 / 2， -(长 - 长1 + 蚀刻间间距1# - 蚀刻矩形长1#)， 0)
                P2 = part.SketchManager.CreatePoint(蚀刻矩形宽1 / 2， -(长 - 长1 + 蚀刻间间距1#), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(直径3# / 2 + 0.001, -(长 - 长1) + 0.005, 0)


                P1 = part.SketchManager.CreatePoint(0， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2)， 0)
                P2 = part.SketchManager.CreatePoint(0， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-（直径3# / 2 + 0.002）, -(长 - 长1), 0)

                P1 = part.SketchManager.CreatePoint(0， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2 + 蚀刻矩形宽3)， 0)
                P2 = part.SketchManager.CreatePoint(0， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2 + 蚀刻矩形宽3 + 蚀刻间间距3), 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-（直径3# / 2 + 0.002）, -(长 - 长1 + 0.002), 0)

                '
                P1 = part.SketchManager.CreatePoint(-蚀刻矩形长2 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2)， 0)
                P2 = part.SketchManager.CreatePoint(蚀刻矩形长2 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2)， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -(长 - 长1) - 直径3# / 2 - 0.005, 0)


                P1 = part.SketchManager.CreatePoint(-蚀刻矩形长3 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3)， 0)
                P2 = part.SketchManager.CreatePoint(蚀刻矩形长3 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3)， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -(长 - 长1) - 直径3# / 2 - 0.003, 0)

                P1 = part.SketchManager.CreatePoint(-蚀刻矩形长4 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3 + 蚀刻间间距3# + 蚀刻矩形宽4)， 0)
                P2 = part.SketchManager.CreatePoint(蚀刻矩形长4 / 2， -(长 - 长1 + 蚀刻间间距1# + 蚀刻矩形宽2 + 蚀刻间间距2# + 蚀刻矩形宽3 + 蚀刻间间距3# + 蚀刻矩形宽4)， 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -(长 - 长1) - 直径3# / 2 - 0.001， 0)
                part.SketchManager.InsertSketch(True)







            End Sub
            Public Sub Gap(直径2#， 直径3#， 厚度1#， gap_thinckness#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCornerRectangle(厚度1#， 直径3# / 2， 0， 厚度1 + gap_thinckness， 直径2 / 2， 0）

                AxisX.Select2(True, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

            End Sub
            Public Sub Cut_arc（厚度1#， 厚度2#, 直径4#， cut_thinckness#）

                part.Extension.SelectByID2("", "FACE", 厚度1# + 厚度2#, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径4 / 2)
                part.FeatureCut(True, False, False, 0, 0, cut_thinckness#, 0, False, False, 0, 0, 0, 0, 0, 0)

            End Sub
            Public Sub Gap_Fillal(直径2#, 倒角半径#)
                part.Extension.SelectByRay(1, 直径2 / 2， 0， -1， 0， 0， 0.00001， 1， False, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 倒角半径#, PI / 4, 0, 0, 0, 0)

            End Sub
            Public Sub gap_Label(直径1#, 直径2#, 直径3#, 直径4#, 厚度1#， 厚度2#, cut_thinckness#, 倒角半径#, gap_thinckness#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(0, 直径1 / 2, 0)
                P2 = part.SketchManager.CreatePoint(0, -直径1 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.02, 0, 0)

                P3 = part.SketchManager.CreatePoint(厚度1, 直径3 / 2, 0)
                P4 = part.SketchManager.CreatePoint(厚度1, -直径3 / 2, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.01, 0, 0)

                P4 = part.SketchManager.CreatePoint(厚度1 + gap_thinckness#, 直径3 / 2, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(厚度1 + 厚度2# - cut_thinckness# / 2, 直径1 / 2 + 0.01, 0)

                P4 = part.SketchManager.CreatePoint(0, 直径3 / 2, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.01, 直径1 / 2 + 0.01, 0)

                P3 = part.SketchManager.CreatePoint(厚度1 + 厚度2, 直径3 / 2, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2((厚度1 + 厚度2) / 2, 直径1 / 2 + 0.015, 0)



                P3 = part.SketchManager.CreatePoint(厚度1 + 厚度2, 直径2 / 2, 0)
                P4 = part.SketchManager.CreatePoint(厚度1 + 厚度2, -直径2 / 2, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(厚度1 + 厚度2 + 0.015, 0, 0)

                P1 = part.SketchManager.CreatePoint(厚度1 + 厚度2#, 直径4 / 2, 0)
                P2 = part.SketchManager.CreatePoint(厚度1 + 厚度2#, -直径4 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(厚度1 + 厚度2 + 0.01, 0, 0)

                P1 = part.SketchManager.CreatePoint(厚度1 + 厚度2#, 0, 0)
                P2 = part.SketchManager.CreatePoint(厚度1 + 厚度2# - cut_thinckness#, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(厚度1 + 厚度2# - cut_thinckness# / 2, 直径1 / 2 + 0.005, 0)


                part.SketchManager.CreatePoint(厚度1 + 厚度2, -直径3 / 2, 0)

                Dim myNote As Object
                Dim myAnnotation As Object
                Dim myTextFormat As Object
                myNote = part.InsertNote("2x45°")

                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()

                myAnnotation.SetLeader3(3, 2, True, False, False, False)
                myAnnotation.SetPosition((厚度1 + 厚度2) / 2, -直径1 / 2 - 0.005, 0)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub bushing(diamter1#， diamter2#, spacing1#, spacing2#, thinckness#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, diamter2 / 2)

                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thinckness, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diamter1 / 2)
                ADDConstraints(1)
                A1Segment = A1

                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diamter2 / 2)
                ADDConstraints(1)
                A2Segment = A2

                P1 = part.SketchManager.CreatePoint(spacing1# / 2, diamter1# / 2, 0)
                P2 = part.SketchManager.CreatePoint(spacing2# / 2, diamter1# / 2, 0)
                P3 = part.SketchManager.CreatePoint(spacing1# / 2, 0, 0)
                P4 = part.SketchManager.CreatePoint(spacing2# / 2, 0 / 2, 0)


                P1.Select4(False, Nothing)
                P3.Select4(True, Nothing)

                ADDConstraints(11)

                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(11)

                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(1)


                P1.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                'P3.Select4(False, Nothing)
                'A2.Select2(True, Nothing)
                'ADDConstraints(5)
                P2.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)


                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                part.EditDelete()


                'P4.Select4(False, Nothing)
                'A1.Select2(True, Nothing)
                'ADDConstraints(5)

                L1 = part.SketchManager.CreateLine(0.01, 0, 0, 0.02, 0, 0)
                P3 = L1.GetStartPoint2
                P4 = L1.GetEndPoint2

                P3.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                ADDConstraints(5)

                P4.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(5)


                L2 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.05, 0)
                L3 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.05, 0, 0)


                L2.Select2(False, 2)
                L1.Select2(True, 1)
                ADDConstraints(9)

                L1YL2_L2(L2) '获得对称线
                L4 = part.SelectionManager.GetSelectedObject6(1, -1)
                part.ClearSelection2(True)

                L3.Select2(False, 2)
                L1.Select2(True, 1)
                L4.Select2(True, 1)
                ADDConstraints(9)

                A1.Select2(False, Nothing)
                'part.Extension.SelectByID2(A1Segment.GetName, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                SketchManager.SketchTrim(0, -diamter1 / 2, 0, 0)
                'part.SketchManager.SketchTrim(1, -diamter1# / 2, 0, 0)

                A1.Select2(False, Nothing)
                part.SketchManager.SketchTrim(0, diamter1# / 2, 0, 0)

                A2Segment.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, -diamter2# / 2, 0, 0)
                A2Segment.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, diamter2# / 2, 0, 0)
                part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thinckness, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸




                '标注

            End Sub
            Public Sub Side_ring(diamter1#， diamter2#, spacing1#, spacing2#, thinckness#)

                SelectPlane("up")
                part.SketchManager.InsertSketch(True)
                L1 = part.SketchManager.CreateLine(diamter2 / 2, spacing1 / 2 - thinckness# / 2, 0, diamter2 / 2, -spacing1 / 2 - thinckness# / 2, 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(diamter1 / 2, spacing2 / 2 - thinckness# / 2, 0, diamter1 / 2, -spacing2 / 2 - thinckness# / 2, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                P3.Select4(True, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(1)

                part.ClearSelection2(True)


                L3 = part.SketchManager.CreateLine(0.01, 0.01, 0, 0.02, 0.01, 0)
                L4 = part.SketchManager.CreateLine(0.01, -0.01, 0, 0.02, -0.01, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2

                P1.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                ADDConstraints(8)

                P3.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)

                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                ADDConstraints(8)

                P4.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                ADDConstraints(8)

                AxisZ.Select2(True, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)


            End Sub
            Public Sub Set_configuration(直径1#， 直径2#， 长度#， 宽度#)
                part.ShowConfiguration2("默认")

                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1 / 2)
                AllCut(2)
                part.ForceRebuild3(True)
                part.Extension.SelectByID2(part.GetTitle, "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddConfiguration2("加工", "", "", False, False, False, True, 256)
                part.ShowConfiguration2("加工")
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                L5 = part.SketchManager.CreateCenterLine(-0.2, 0, 0, 0.2, 0, 0)
                ADDConstraints(1)
                L6 = part.SketchManager.CreateCenterLine(0, -0.2, 0, 0, 0.2, 0)
                ADDConstraints(1)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2 / 2)
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(-宽度 / 2, -(长度 - 直径2 / 2)， 0， 宽度 / 2, -(长度 - 直径2 / 2)， 0)

                ADDConstraints(1)
                P1 = L1.GetStartPoint2

                P2 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                ADDConstraints(1)
                L3 = part.SketchManager.CreateLine(-0.01， 0， -0.01, 0, 0.01， 0)
                ADDConstraints(3)
                L2 = part.SketchManager.CreateLine(0.01， 0， 0.01, 0, 0.01， 0)
                ADDConstraints(3)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                P3.Select4(False, Nothing)
                P1.Select4(True, Nothing)
                ADDConstraints(8)
                P5.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(8)
                P4.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)
                P6.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                L5.Select2(False, Nothing)
                L6.Select2(True, Nothing)
                part.EditDelete()
                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -直径2 / 2, 0)

                AllCut(2)

                part.ForceRebuild3(True)

                part.ShowConfiguration2("默认")
                part.ForceRebuild3(True)

            End Sub
            Public Sub As_Label(diamter1#， diamter2#, diamter3#， diamter4#, spacing1#, spacing2#, spacing3#, spacing4#, thinckness#, thinckness2#)
                SelectPlane("up")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(-diamter1# / 2, -thinckness# / 2, 0)
                P2 = part.SketchManager.CreatePoint(diamter1# / 2, -thinckness# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, 0, -0.03)

                P1 = part.SketchManager.CreatePoint(-diamter2# / 2, 0, 0)
                P2 = part.SketchManager.CreatePoint(diamter2# / 2, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0, 0, -0.02)


                Dim dia4 As String = diamter4
                Dim thin2 As String = thinckness2



                P1 = part.SketchManager.CreatePoint(-diamter3# / 2, 0, 0)
                P2 = part.SketchManager.CreatePoint(diamter3# / 2, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, -0.0125)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "(" + dia4 + ")", True, "", "", False)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线

                P1 = part.SketchManager.CreatePoint(-spacing1# / 2, 0, 0)
                P2 = part.SketchManager.CreatePoint(spacing1# / 2, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, thinckness# + 0.015)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线


                P1 = part.SketchManager.CreatePoint(-spacing2# / 2, 0, 0)
                P2 = part.SketchManager.CreatePoint(spacing2# / 2, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, thinckness# + 0.01)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线


                P1 = part.SketchManager.CreatePoint(diamter1# / 2, -thinckness# / 2 - spacing4# / 2, 0)
                P2 = part.SketchManager.CreatePoint(diamter1# / 2, -thinckness# / 2 + spacing4# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(diamter1# / 2 + 0.01, 0, thinckness# / 2)

                P1 = part.SketchManager.CreatePoint(diamter2# / 2, -thinckness# / 2 - spacing3# / 2, 0)
                P2 = part.SketchManager.CreatePoint(diamter2# / 2, -thinckness# / 2 + spacing3# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(diamter1# / 2 + 0.02, 0, thinckness# / 2)

                P1 = part.SketchManager.CreatePoint(diamter2# / 2, -thinckness#, 0)
                P2 = part.SketchManager.CreatePoint(diamter2# / 2, 0, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(diamter1# / 2 + 0.03, 0, thinckness# / 2)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "(" + thin2 + ")", True, "", "", False)

                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub windshield(diamter1#, diamter2#， thincknes1#, thincknes2#, 圆角半径#)
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                初始设置（1）
                L1 = part.SketchManager.CreateLine(0, diamter1# / 2, 0, 0, diamter2# / 2, 0)
                P2 = L1.GetEndPoint2
                P1 = L1.GetStartPoint2



                L6 = part.SketchManager.CreateLine(0, diamter2# / 2, 0, thincknes1#, diamter2# / 2, 0)

                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                初始设置（0）

                L2 = part.SketchManager.CreateLine(0, 0.02, 0, thincknes2#, 0.02, 0)
                P4 = L2.GetEndPoint2
                P3 = L2.GetStartPoint2


                L3 = part.SketchManager.CreateLine(0.01, 0, 0, 0.01, （diamter1# - diamter2#） / 2 - thincknes2#, 0)
                P6 = L3.GetEndPoint2
                P5 = L3.GetStartPoint2

                L4 = part.SketchManager.CreateLine(0, 0, 0, thincknes1# - thincknes2#, 0, 0)
                P8 = L4.GetEndPoint2
                P7 = L4.GetStartPoint2

                L5 = part.SketchManager.CreateLine(-0.01, 0, 0, -0.01, thincknes2#, 0)
                P10 = L5.GetEndPoint2
                P9 = L5.GetStartPoint2


                L1.select2(False, Nothing)

                L6.select2(True, Nothing)
                ADDConstraints(1)

                P1.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)


                P4.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)


                P5.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                ADDConstraints(8)

                P8.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                ADDConstraints(8)

                'P9.Select4(False, Nothing)
                'P12.Select4(True, Nothing)
                'ADDConstraints(8)



                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(2 * 圆角半径#, 1)
                P5.Select4(False, Nothing)
                'L10Segment.SelectChain(False, Nothing)
                part.SketchManager.CreateFillet(圆角半径#, 1)

                AxisZ.Select2(True, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)



            End Sub
            Public Sub Ws_label(diamter1#, diamter2#, diamter3#, Hole_diameter#, thincknes1#, 圆角半径#, Max#, Min#)

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(0, -diamter1# / 2, 0)
                P2 = part.SketchManager.CreatePoint(0, diamter1# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, 0.01)
                'DisplayDimension.LeaderVisibility = 2 '或者1
                'DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线

                P1 = part.SketchManager.CreatePoint(thincknes1#, diamter3# / 2, 0)
                P2 = part.SketchManager.CreatePoint(thincknes1#, diamter3# / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, diamter1# / 2 + 0.01, -thincknes1# / 2)
                part.SketchManager.InsertSketch(True)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diamter2# / 2)
                part.SketchManager.CreateConstructionGeometry()
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diamter3# / 2)
                part.SketchManager.CreateConstructionGeometry()


                A1.select2(False, Nothing)
                part.AddDimension2(0, 0, 0)

                A2.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0, diamter3 / 4, 0)
                part.EditDimensionProperties2(2, Max, Min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                'A3 = part.SketchManager.CreateCircleByRadius(0, diamter2 / 2, 0, Hole_diameter# / 2)
                'part.SketchManager.CreateConstructionGeometry()


                'A3.select2(False, Nothing)
                'DisplayDimension = part.AddDimension2(0, diamter3 / 4, 0)
                'part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "4-", "", True, "均布", "", False)
                part.SketchManager.InsertSketch(True)

            End Sub
            Public Sub Internal_fan(Bushing_diameter1#, Bushing_diameter2#, Bushing_thickness1#, Bushing_thickness2#, Bushing_thickness3#, fan_diameter1#, fan_diameter2#, fan_diameter3#, fan_thickness1#, Center1_x#, Center1_y#, Center2_x#, Center2_y#, Center3_x#, Center3_y#, Center4_x#, Center4_y#, arc1#, arc2#, arc3#,
                                    arc4#, arc5#, arc6#, arc7#, fan_long1#, fan_wight1#, fan_wight2#, fan_wight3#, spacing1#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                L6 = part.SketchManager.CreateLine(0, Bushing_diameter2# / 2, 0, 0, fan_diameter1 / 2, 0)
                ADDConstraints(1)
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2
                L7 = part.SketchManager.CreateLine(Bushing_thickness1#, Bushing_diameter2# / 2, 0, Bushing_thickness1#, fan_diameter1 / 2, 0)
                ADDConstraints(1)
                P13 = L7.GetStartPoint2
                P14 = L7.GetEndPoint2


                P14.Select4(False, Nothing)
                ADDConstraints(1)

                L8 = part.SketchManager.CreateLine(0, fan_diameter2# / 2, 0, fan_thickness1, fan_diameter2# / 2, 0)
                ADDConstraints(2)

                P15 = L8.GetStartPoint2
                P16 = L8.GetEndPoint2

                P15.Select4(False, Nothing)
                ADDConstraints(1)


                A1 = part.SketchManager.CreateCircleByRadius(-Center1_x, Center1_y, 0, arc1)
                ADDConstraints(1)

                A2 = part.SketchManager.CreateCircleByRadius(P14.X + arc2 / 2, P14.Y + arc2 / 2, 0, arc2)

                P14.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                A1.Select2(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(4)
                '初始设置（0）

                P16.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                L9 = part.SketchManager.CreateLine(P16.X, P16.Y, 0, P16.X - fan_thickness1, P16.Y, 0)

                L8.select2(False, Nothing)
                part.EditDelete()

                P15 = L9.GetStartPoint2
                P16 = L9.GetEndPoint2

                P1 = A1.IGetCenterPoint2
                P2 = A2.IGetCenterPoint2

                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y + arc1, 0)

                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, P2.X + arc2, P2.Y, 0)


                A3 = part.SketchManager.CreateCircleByRadius(-Center2_x, Center2_y, 0, arc3)

                P12.Select4(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(5)
                P16.Select4(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(5)



                P1 = A3.IGetCenterPoint2
                A3.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y + arc3, 0)



                'part.SketchManager.CreateCircle(P16.X, P16.Y, 0, P12.X, P12.Y, arc3)

                初始设置（1）
                L1 = part.SketchManager.CreateLine(0, Bushing_diameter2# / 2, 0, (Bushing_thickness1# - Bushing_thickness2#) / 2, Bushing_diameter2# / 2, 0)
                ADDConstraints(1)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine((Bushing_thickness1# - Bushing_thickness3#) / 2, Bushing_diameter1# / 2, 0, (Bushing_thickness1# + Bushing_thickness3#) / 2, Bushing_diameter1# / 2, 0)
                ADDConstraints(1)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2
                L3 = part.SketchManager.CreateLine((Bushing_thickness1# + Bushing_thickness2#) / 2, Bushing_diameter2# / 2, 0, Bushing_thickness1#, Bushing_diameter2# / 2, 0)
                ADDConstraints(1)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L4 = part.SketchManager.CreateLine(0.01, 0, 0, 0.02, 0, 0)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2
                L5 = part.SketchManager.CreateLine(-0.01, 0, 0, -0.02, 0, 0)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2

                P2.Select4(False, Nothing)
                P7.Select4(True, Nothing)
                ADDConstraints(8)

                P3.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                ADDConstraints(8)

                P4.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                ADDConstraints(8)

                P5.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                ADDConstraints(8)

                初始设置（0）

                part.ClearSelection2(True)

                'part.Extension.SelectByID2("基准轴2", "AXIS", 0, 0, 0, False, 16, Nothing, 0)

                AxisX.Select2(False, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)

                '1


                SelectPlane("front")
                part.SketchManager.InsertSketch(True)




                A3 = part.SketchManager.CreateCircleByRadius(-Center3_x, Center3_y, 0, arc6)
                ADDConstraints(1)

                A4 = part.SketchManager.CreateCircleByRadius(-Center4_x, Center4_y, 0, arc7)
                ADDConstraints(1)

                L3 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(-Center3_x + fan_long1, 0, 0, -Center3_x, 0, 0)
                ADDConstraints(2)
                P5 = L1.GetStartPoint2
                P6 = L1.GetEndPoint2
                P5.Select4(False, Nothing)
                A4.select2(True, Nothing)
                ADDConstraints(5)

                P5.Select4(False, Nothing)
                L3.Select2(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.02, -0.05, 0)
                ChangeDimensionVaule(fan_wight1# - fan_long1)


                P6.Select4(False, Nothing)
                L3.Select2(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.02, -0.1, 0)
                ChangeDimensionVaule(fan_wight1#)

                P1 = A4.IGetCenterPoint2
                A4.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y + arc7, 0)

                L8 = part.SketchManager.CreateLine(0, fan_diameter2# / 2, 0, fan_thickness1, fan_diameter2# / 2, 0)
                ADDConstraints(2)
                P15 = L8.GetStartPoint2
                P16 = L8.GetEndPoint2

                P15.Select4(False, Nothing)
                ADDConstraints(1)

                P16.Select4(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(5)

                L9 = part.SketchManager.CreateLine(P16.X, P16.Y, 0, P16.X + fan_thickness1, P16.Y, 0)
                L8.select2(False, Nothing)
                part.EditDelete()

                P15 = L9.GetStartPoint2
                P16 = L9.GetEndPoint2

                P1 = A3.IGetCenterPoint2
                A3.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y + arc6, 0)


                P1 = A4.GetEndPoint2

                A4.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y, 0)

                'L1 = part.SketchManager.CreateLine(-fan_wight1#, fan_diameter3# / 2, 0, -fan_wight1#, fan_diameter3# / 2 + fan_long1, 0)

                '2
                A1 = part.SketchManager.CreateCircleByRadius(-Center3_x, Center3_y, 0, arc4)
                ADDConstraints(1)

                A2 = part.SketchManager.CreateCircleByRadius(-Center4_x, Center4_y, 0, arc5)
                ADDConstraints(1)

                P16.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                P1 = A1.IGetCenterPoint2
                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y + arc4, 0)

                L1 = part.SketchManager.CreateLine(-0.01, 0, 0, -0.01, 0.02, 0)
                ADDConstraints(3)

                P3 = L1.IGetStartPoint2
                P4 = L1.IGetEndPoint2

                P6.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)

                A2.Select2(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(5)

                P2 = A2.IGetCenterPoint2
                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, P2.X, P2.Y + arc5, 0)

                P1 = A2.GetEndPoint2
                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, P1.X, P1.Y, 0)

                AxisX.Select2(False, 16)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * PI, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
            End Sub
            Public Sub fan_leaf(fan_diameter2#, Center2_x#, Center2_y#, Center3_x#, Center3_y#, Center4_x#, Center4_y#, arc3#, arc4#, arc5#, fan_wight1#, fan_wight2#, Fan_blade_gap#, Corner_radius#, angle#, spacing1#, Fan_blade_thickness#, Fillet1#, Fillet2#,
                                Fan_blade_angle1#, Fan_blade_angle2#, Fan_blade_angle3#, Fan_blade_angle4#, Fan_blade_angle5#, Fan_blade_angle6#, Fan_blade_angle7#, Fan_blade_angle8#, Fan_blade_angle9#, Fan_blade_angle10#, Fan_blade_angle11#, Fan_blade_angle12#, Fan_blade_angle13#, Fan_blade_angle14#, Fan_blade_angle15#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A3 = part.SketchManager.CreateCircleByRadius(-Center2_x, Center2_y, 0, arc3)
                ADDConstraints(1)
                A4 = part.SketchManager.CreateCircleByRadius(-Center3_x, Center3_y, 0, arc4)
                ADDConstraints(1)
                A5 = part.SketchManager.CreateCircleByRadius(-Center4_x, Center4_y, 0, arc5)
                ADDConstraints(1)

                L1 = part.SketchManager.CreateCenterLine(-fan_wight1#, 0, 0, -fan_wight1#, 0.1, 0)
                ADDConstraints(1)

                P1 = part.SketchManager.CreatePoint(-fan_wight1# + Fan_blade_gap#, 0.1, 0)

                P1.Select4(False, Nothing)
                L1.select2(True, Nothing)
                part.AddDimension2(-fan_wight1# - 0.02, 0, 0)

                P1.Select4(False, Nothing)
                A5.select2(True, Nothing)
                ADDConstraints(5)


                L2 = part.SketchManager.CreateLine(P1.X, P1.Y, 0, P1.X, P1.Y - 0.05, 0)
                L3 = part.SketchManager.CreateCenterLine(P1.X, P1.Y, 0, P1.X + 0.05, P1.Y, 0)
                ADDConstraints(1)
                L2.select2(False, Nothing)
                L3.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P1.X + 0.05, P1.Y - 0.05, 0)
                ChangeDimensionVaule(angle / 180 * PI)



                P2 = L2.GetEndPoint2
                A6 = part.SketchManager.CreateCircleByRadius(P1.X, P1.Y - Corner_radius, 0, Corner_radius)

                A6.select2(False, Nothing)
                L2.select2(True, Nothing)
                ADDConstraints(4)

                A6.select2(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(4)


                A6.select2(False, Nothing)
                P2.Select4(True, Nothing)
                ADDConstraints(5)


                P3 = A6.GetCenterPoint2

                A6.select2(False, Nothing)
                SketchManager.SketchTrim(0, P3.X - Corner_radius, P3.Y, 0)





                L4 = part.SketchManager.CreateCenterLine(0, fan_diameter2# / 2, 0, -0.05, fan_diameter2# / 2, 0)
                ADDConstraints(1)

                L5 = part.SketchManager.CreateLine(0, fan_diameter2# / 2 - spacing1, 0, -0.05, fan_diameter2# / 2 - spacing1, 0)
                ADDConstraints(2)

                L4.select2(False, Nothing)
                L5.select2(True, Nothing)
                part.AddDimension2(0, fan_diameter2# / 2 + 0.01, 0)

                P4 = L5.GetStartPoint2
                P5 = L5.GetEndPoint2

                P4.Select4(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(5)

                P5.Select4(False, Nothing)
                A4.select2(True, Nothing)
                ADDConstraints(5)

                P3 = A3.GetCenterPoint2

                A3.select2(False, Nothing)
                SketchManager.SketchTrim(0, P3.X, P3.Y + arc3 / 2, 0)



                P3 = A4.GetCenterPoint2

                A4.select2(False, Nothing)
                SketchManager.SketchTrim(0, P3.X, P3.Y + arc4 / 2, 0)


                P3 = A5.GetCenterPoint2

                A5.select2(False, Nothing)
                SketchManager.SketchTrim(0, P3.X, P3.Y + arc5 / 2, 0)

                '切除多余线
                P10 = A5.GetEndPoint2
                A5.select2(False, Nothing)
                SketchManager.SketchTrim(0, P10.X, P10.Y, 0)

                P10 = A5.GetEndPoint2
                A5.select2(False, Nothing)
                SketchManager.SketchTrim(0, P10.X, P10.Y, 0)

                P10 = A3.GetStartPoint2
                A3.select2(False, Nothing)
                SketchManager.SketchTrim(0, P10.X, P10.Y, 0)

                Feature1 = part.FeatureManager.FeatureExtrusion2(True, False, False, 6, 0, Fan_blade_thickness#, Fan_blade_thickness#, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                Dim Object数组1, Object数组2, Object数组5, Object数组4, facenumber5 As Object
                Dim swface As SldWorks.Face2
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组1 = Feature.GetFaces()
                facenumber5 = Feature.GetFaceCount()

                swface = Object数组1(4)
                Object数组2 = swface.GetEdges()
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(Object数组2(3), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组2(1), Nothing)
                Feature2 = part.FeatureManager.FeatureFillet3(195, Fillet1# / 2, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                swface = Object数组1(2)
                Object数组4 = swface.GetEdges()
                part.ClearSelection2(True)

                swface = Object数组1(3)
                Object数组5 = swface.GetEdges()
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(Object数组4(3), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组4(4), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组5(4), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组5(5), Nothing)

                Feature3 = part.FeatureManager.FeatureFillet3(195, Fillet1# / 2, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)


                '遍历（1, Object数组5, 10）
                SelectionMgr.AddSelectionListObject(Object数组4(0), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组4(2), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组4(5), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组5(0), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组5(2), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组5(5), Nothing)

                Feature4 = part.FeatureManager.FeatureFillet3(195, Fillet2#, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)





                'Feature1.Select2(False, 4)
                '1
                'Dim count As Integer = 1
                'Do Until count >= 16
                '    For i = 0 To 15
                '        part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                '        part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                '        part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                '        part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                '        AxisX.Select2(True, 1) '选择并标记

                '    Next
                'Loop
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, Fan_blade_angle1# / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '2
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2#) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '3
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2# + Fan_blade_angle3#) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '4
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2# + Fan_blade_angle3# + Fan_blade_angle4#) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '5
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2# + Fan_blade_angle3# + Fan_blade_angle4# + Fan_blade_angle5) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '6
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2# + Fan_blade_angle3# + Fan_blade_angle4# + Fan_blade_angle5 + Fan_blade_angle6) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '7
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle1# + Fan_blade_angle2# + Fan_blade_angle3# + Fan_blade_angle4# + Fan_blade_angle5 + Fan_blade_angle6 + Fan_blade_angle7) / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '8
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15#) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '9
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14#) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '10
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '11
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13 + Fan_blade_angle12) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '12
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13 + Fan_blade_angle12 + Fan_blade_angle11) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '13
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13 + Fan_blade_angle12 + Fan_blade_angle11 + Fan_blade_angle10) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '14
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13 + Fan_blade_angle12 + Fan_blade_angle11 + Fan_blade_angle10 + Fan_blade_angle9) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                ''15
                'part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                'part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                'part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0) '选择特征
                'AxisX.Select2(True, 1) '选择并标记
                'part.FeatureManager.FeatureCircularPattern5(2, (Fan_blade_angle15# + Fan_blade_angle14# + Fan_blade_angle13 + Fan_blade_angle12 + Fan_blade_angle11 + Fan_blade_angle10 + Fan_blade_angle9 + Fan_blade_angle8) / 180 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
            End Sub
            Public Sub fan_hole(angle#, fan_diameter1#, long1#, wight#, angle2#)
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                L1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)

                L2 = part.SketchManager.CreateCenterLine(0, 0, 0, -0.1, 0, 0)
                ADDConstraints(1)

                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.05, 0.05, 0)
                ChangeDimensionVaule(angle# / 180 * PI)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, fan_diameter1# / 2)
                ADDConstraints(1)
                'part.SketchManager.CreateConstructionGeometry()


                L3 = part.SketchManager.CreateLine(-fan_diameter1# / 2 - 0.05, 0, 0, -fan_diameter1# / 2 - 0.06, 0, 0)
                P1 = L3.GetStartPoint2
                P2 = L3.GetEndPoint2

                L3.select2(False, Nothing)
                L1.select2(True, Nothing)
                ADDConstraints(15)

                L3.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P1.X, P1.Y + 0.005, 0)
                ChangeDimensionVaule(wight / 2)

                P1.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)


                L3.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P1.X - 0.005, P1.Y, 0)
                ChangeDimensionVaule(long1#)


                L4 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X - 0.001, P2.Y + 0.001, 0)
                L3.select2(False, Nothing)
                L4.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P2.X, P2.Y + 0.005, 0)
                ChangeDimensionVaule(angle2# / 180 * PI)

                P3 = L4.GetEndPoint2

                P3.Select4(False, Nothing)
                L1.select2(True, Nothing)
                ADDConstraints(5)

                L4.select2(False, Nothing)
                L3.select2(True, Nothing)
                L1.select2(True, Nothing)
                ADDConstraints(9)


                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, fan_diameter1# / 2, 0)

                Feature1 = part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '选择特征
                AxisX.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)


            End Sub
            Public Sub groove(diameter2#, diameter3#, long1#, long2#, wight1#, wight2#, max#, number#)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter2 / 2)
                ADDConstraints(1)
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter3# / 2)
                part.SketchManager.CreateConstructionGeometry()

                L1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)

                A2.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.015, 0)
                SetTolvalue(8, "H11", "")


                L2 = part.SketchManager.CreateLine(0.05, diameter2 / 2, 0, 0.05, diameter2 / 2 + 0.01, 0)
                ADDConstraints(3)
                P1 = L2.GetStartPoint2
                P2 = L2.GetEndPoint2


                L2.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0, diameter2 / 2, 0)
                ChangeDimensionVaule(wight1# / 2)
                'part.EditDimensionProperties2(3, max, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                P1.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                L2.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P1.X + 0.01, P1.Y + 0.005, 0)
                ChangeDimensionVaule(long2)


                L3 = part.SketchManager.CreateLine(P2.X, P2.Y, 0, P2.X - (wight1# - wight2#) / 2, P2.Y, 0)
                ADDConstraints(2)
                'P3 = L3.GetStartPoint2
                P4 = L3.GetEndPoint2

                'P4.Select4(False, Nothing)
                'P2.Select4(True, Nothing)
                'ADDConstraints(8)

                'L3.select2(False, Nothing)
                'DisplayDimension = part.AddDimension2(P4.X, P4.Y + 0.005, 0)
                'ChangeDimensionVaule((wight1# - wight2#) / 2)


                L4 = part.SketchManager.CreateLine(P4.X, P4.Y, 0, P4.X, P4.Y + long1 - long2, 0)
                ADDConstraints(1)
                P5 = L4.GetEndPoint2

                L2.select2(False, Nothing)
                L3.select2(True, Nothing)
                L4.select2(True, Nothing)
                L1.select2(True, Nothing)
                ADDConstraints(9)
                L5 = L1YL2_L2(L4)

                P6 = L5.GetEndPoint2

                L6 = part.SketchManager.CreateLine(-0.001, 0, 0, 0, 0, 0)
                P7 = L6.GetStartPoint2
                P8 = L6.GetEndPoint2

                P7.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                ADDConstraints(8)
                P8.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                ADDConstraints(8)

                L6.select2(False, Nothing)
                part.AddDimension2(0, P7.Y + 0.01, 0)



                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -diameter2 / 2, 0)


                Feature1 = part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(number, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                '标注
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                P9 = part.SketchManager.CreatePoint(P1.X, P1.Y, 0)

                P10 = part.SketchManager.CreatePoint(P1.X, P1.Y + long1#, 0)
                P9.Select4(False, Nothing)
                P10.Select4(True, Nothing)
                part.AddDimension2(P1.X + 0.01, P1.Y + long1# / 2, 0)


                'part.SketchManager.CreateCornerRectangle(-P9.X - 0.003, P9.Y - 0.005, 0, P10.X + 0.003, P10.Y + 0.01, 0)

                part.ClearSelection2(True)

                P10.Select4(False, Nothing)
                myNote = part.InsertNote("I 48槽均布")
                Dim myAnnotation As Object
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()

                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                myAnnotation.SetPosition(P10.X + 0.02, P10.Y + 0.05, 0)


                'R1(0, 1, 2, 3).Select4(True, Nothing)
                ''MsgBox(1)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub windshield_wipers(diameter1#, long1#, wight1#, thinkness1#, angle#, fille#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                ADDConstraints(1)
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2 + wight1#)
                ADDConstraints(1)


                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.01, 0, 0)
                ADDConstraints(1)
                L1 = part.SketchManager.CreateLine(-0.001, -0.001, 0, 0.001, -0.001, 0)
                ADDConstraints(2)

                P1 = L1.IGetStartPoint2
                P2 = L1.IGetEndPoint2

                DL1.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, 0)
                ChangeDimensionVaule(long1)


                P1.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A1.select2(True, Nothing)
                ADDConstraints(5)

                A1.Select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -diameter1 / 2, 0)

                P1.Select4(True, Nothing)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fille#, 1)

                L1 = part.SketchManager.CreateLine(-0.001, -0.001, 0, 0.001, -0.001, 0)
                ADDConstraints(2)

                P1 = L1.IGetStartPoint2
                P2 = L1.IGetEndPoint2

                DL1.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, 0, 0)

                ChangeDimensionVaule(long1 + wight1#)

                P1.Select4(False, Nothing)
                A2.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A2.select2(True, Nothing)
                ADDConstraints(5)

                A2.Select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -diameter1 / 2 - wight1, 0)

                P1.Select4(True, Nothing)
                P2.Select4(False, Nothing)
                part.SketchManager.CreateFillet(fille#, 1)




                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, thinkness1#, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
            End Sub
            Public Sub windshield_hold(long1#, long2#, hold_diameter1#， angle1#, keyway_long#, keyway_wight#)
                SelectPlane("up")
                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateCircleByRadius(0, -long1 - long2, 0, hold_diameter1 / 2)
                part.FeatureManager.FeatureCut4(False, False, False, 1, 1, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '两侧完全贯穿

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                L1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.01, 0, 0)
                ADDConstraints(1)
                L2 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                L2.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, 0.01, 0)
                ChangeDimensionVaule(angle1 / 180 * PI)
                sketch = SketchManager.ActiveSketch
                Feature1 = sketch
                part.SketchManager.InsertSketch(True)

                SelectPlane("up")
                part.SketchManager.InsertSketch(True)
                L3 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)




                L2Segment = L2
                L3Segment = L3
                sketch = SketchManager.ActiveSketch
                Feature2 = sketch
                part.InsertSketch2(True)

                'part.InsertSketch2(True)
                part.Extension.SelectByID2(L2Segment.GetName & "@" & Feature1.Name, "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2(L3Segment.GetName & "@" & Feature2.Name, "EXTSKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)

                Feature3 = part.FeatureManager.InsertRefPlane(4, 0, 4, 0, 0, 0)
                part.Extension.SelectByID2(Feature3.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.InsertSketch2(True)
                part.SketchManager.CreateSketchSlot(1, 0, 2 * keyway_wight#, long1#, 0, 0, long1#, keyway_long# / 2, 0, 0, 0, 0, 1, False)

                Feature4 = part.FeatureManager.FeatureCut4(False, False, False, 1, 1, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '两侧完全贯穿

                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0) '
                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(2, 2 * angle1# / 180 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

            End Sub
            Public Sub WW_lable(diameter1#, long1#, max#, min#, thinkness1#, thinkness2#, thinkness3#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1 / 2)

                A1.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(diameter1# / 4, diameter1# / 4, 0)

                part.EditDimensionProperties2(2, max, min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                P1 = part.SketchManager.CreatePoint(0, 0, 0)


                P2 = part.SketchManager.CreatePoint(0, -long1# / 2, 0)

                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(diameter1# / 2, -long1# / 2, 0)

                part.EditDimensionProperties2(2, max, min, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)


                L1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)
                L2 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.1, 0.1, 0)
                ADDConstraints(1)
                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(long1# / 4, long1# / 4, 0)

                part.SketchManager.InsertSketch(True)

                SelectPlane("right")
                part.SketchManager.InsertSketch(True)

                'L1 = part.SketchManager.CreateLine(0, diameter1# / 2, 0, thinkness1#, diameter1# / 2, 0)

                P4 = part.SketchManager.CreatePoint(0, diameter1# / 2, 0)


                P3 = part.SketchManager.CreatePoint(thinkness1#, diameter1# / 2, 0)

                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, diameter1# / 2 + 0.015, thinkness1# / 2)


                P5 = part.SketchManager.CreatePoint(thinkness1#, thinkness2#, 0)

                P5.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, diameter1# / 2 + 0.01, thinkness2# / 2)

                P6 = part.SketchManager.CreatePoint(thinkness1#, thinkness2# + thinkness3#, 0)
                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, diameter1# / 2 + 0.01, thinkness3# / 2 + thinkness2#)

                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub Ring_excision_cut(厚度1#， 直径1#, 直径2#, 直径3#, 厚度2#， 厚度3#, cut_thickness#)


                part.Extension.SelectByID2("", "FACE", 直径1# / 2 - 0.01, 0, 厚度1, False, 0, Nothing, 0)


                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1# / 2)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2# / 2)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 厚度1 - 厚度2 - 厚度3, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径1# / 2)
                part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径3# / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, 厚度3, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)
                'part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2# / 2)
                ''part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径3# / 2)
                'part.FeatureManager.FeatureCut4(True, False, True, 0, 0, 厚度3, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)


            End Sub
            Public Sub four_Notch(槽外径#， 直径2#， 槽厚度#, 宽度#， 厚度2#， 厚度3#， 厚度4#， 厚度5#， angle#, number#, 圆角半径#)

                part.Extension.SelectByRay(直径2 / 2 + 0.01, 0, 1, 0, 0, -1, 0.001, 2, False, 0, 0)
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 槽外径# / 2)
                ADDConstraints(1)
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2# / 2)
                ADDConstraints(1)
                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)
                DL2 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.01, 0, 0, 0.01, 0.01, 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                L2 = part.SketchManager.CreateLine(0.02, 0.01, 0, 0.03, 0.01, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2


                L1.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDiameterDimension2(（槽厚度 + 宽度 / 2） / 2， 0.01， 0)
                ChangeDimensionVaule(槽厚度 + 宽度 / 2)

                P1.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                L2.select2(False, Nothing)
                DL2.select2(True, Nothing)
                DisplayDimension = part.AddDiameterDimension2(0.01， （槽厚度 + 宽度 / 2） / 2， 0)
                ChangeDimensionVaule(槽厚度 + 宽度 / 2)

                P3.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                P4.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                DL1.select2(False, Nothing)
                DL2.select2(True, Nothing)
                part.EditDelete()


                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, 槽外径# / 2, 0)

                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, 直径2# / 2, 0)



                P2.Select4(True, Nothing)

                P4.Select4(True, Nothing)
                part.SketchManager.CreateFillet(0.003, 1)





                Feature1 = part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 厚度2# + 厚度3# - 厚度4# - 厚度5#, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                Dim Object数组1, Object数组2, Object数组5, Object数组4, facenumber5 As Object
                Dim swface, swface2 As SldWorks.Face2
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)

                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组1 = Feature.GetFaces()
                facenumber5 = Feature.GetFaceCount()


                '遍历（1， Object数组1， 1000， 0）
                swface = Object数组1(2)
                Object数组2 = swface.GetEdges()
                'part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(Object数组1(2), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                part.Extension.SelectByRay(直径2 / 2 + 0.01, 0, 1, 0, 0, -1, 0.001, 2, True, 1, 0)

                Feature2 = part.FeatureManager.InsertMultiFaceDraft(angle# / 180 * PI, False, False, 0, False, False)
                part.ClearSelection2(True)

                'part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                ''MsgBox(1)
                'Feature3 = SelectionMgr.GetSelectedObject6(1, -1)
                'Object数组2 = Feature3.GetFaces()



                SelectionMgr.AddSelectionListObject(Object数组2(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                Feature3 = part.FeatureManager.FeatureFillet3(195, 0.003, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(Object数组2(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                Feature4 = part.FeatureManager.FeatureFillet3(195, 0.003, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                '遍历（1， Object数组1， 1000， 0）
                swface2 = Object数组1(0)
                Object数组4 = swface2.GetEdges()
                '遍历（1， Object数组4， 1000， 0）
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(Object数组4(6), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记

                Feature5 = part.FeatureManager.FeatureFillet3(194, 圆角半径#, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                part.ClearSelection2(True)

                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature3.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature4.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature5.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(number, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)



            End Sub
            Public Sub six_Notch(直径3#, 槽外径2#， 直径2#, 厚度4#， 厚度5#, angle#, Tendon_width#, Tendon_Number#, 圆角半径2#)
                part.Extension.SelectByRay(直径3 / 2 + 0.01, 0, -1, 0, 0, 1, 0.001, 2, False, 0, 0)
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 槽外径2# / 2)
                ADDConstraints(1)
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, 直径2# / 2)
                ADDConstraints(1)
                'DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                'ADDConstraints(1)
                'DL2 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                'ADDConstraints(1)

                Feature2 = part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 厚度4#, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2(Feature2.Name, "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组4 = Feature.GetFaces()

                Dim swface, swface2, swface3 As SldWorks.Face2

                swface3 = Object数组4(1)
                Object数组5 = swface3.GetEdges()
                part.ClearSelection2(True)
                'facenumber5 = Feature.GetFaceCount()
                '遍历（1， Object数组5， 1000， 0）
                SelectionMgr.AddSelectionListObject(Object数组5(0), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                part.FeatureManager.FeatureFillet3(195, 圆角半径2#, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(Object数组5(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0) '设定标记
                part.FeatureManager.FeatureFillet3(195, 圆角半径2#, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Feature1 = part.FeatureManager.InsertRefPlane(8, 厚度4 - 厚度5, 0, 0, 0, 0)
                part.Extension.SelectByID2(Feature1.Name, "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.InsertSketch2(True)

                L1 = part.SketchManager.CreateLine(0, 直径2# / 2 - 0.001, 0, 0, 槽外径2# / 2 + 0.001, 0)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, angle / 2 / 180 * PI)

                part.FeatureManager.InsertRib(True, False, Tendon_width# / 2, 0, True, False, True, 0, True, False)

                part.Extension.SelectByID2("筋1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Object数组1 = Feature.GetFaces()



                swface = Object数组1(0)
                Object数组2 = swface.GetEdges()
                swface2 = Object数组1(1)
                Object数组3 = swface2.GetEdges()
                part.ClearSelection2(True)


                '遍历（1， Object数组3， 1000， 0）
                SelectionMgr.AddSelectionListObject(Object数组2(1), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组2(3), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组3(0), Nothing)
                SelectionMgr.AddSelectionListObject(Object数组3(2), Nothing)

                Feature1 = part.FeatureManager.FeatureFillet3(195, 0.003, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)


                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2(Feature.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)

                AxisZ.Select2(True, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(Tendon_Number#, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

            End Sub
            Public Sub T_slot(T_slot_diameter1#, T_slot_diameter2#, diameter2#, angle#, number#, Fillet#, 槽厚度#， 厚度2#, 厚度3#, 宽度#)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, T_slot_diameter1# / 2)
                ADDConstraints(1)
                A2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, T_slot_diameter2# / 2)
                ADDConstraints(1)

                A3 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter2# / 2)
                ADDConstraints(1)


                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.01, 0.01, 0, 0.02, 0.02, 0)
                P1 = L1.IGetStartPoint2
                P2 = L1.IGetEndPoint2


                L1.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.005, 0.005, 0)
                ChangeDimensionVaule(angle / 2 / 180 * PI)


                P1.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                L2 = part.SketchManager.CreateLine(0.01, 0, 0, 0.02, 0, 0)
                ADDConstraints(3)
                P3 = L2.IGetStartPoint2
                P4 = L2.IGetEndPoint2

                L2.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(宽度# / 4, 0, 0)
                ChangeDimensionVaule(宽度# / 2)


                P3.Select4(False, Nothing)
                A2.Select2(True, Nothing)
                ADDConstraints(5)

                P4.Select4(False, Nothing)
                A3.Select2(True, Nothing)
                ADDConstraints(5)


                L2.select2(False, Nothing)
                L1.select2(True, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)

                A1.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -T_slot_diameter1# / 2, 0)

                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -T_slot_diameter2# / 2, 0)

                A2.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, T_slot_diameter2# / 2, 0)

                A3.select2(False, Nothing)
                SketchManager.SketchTrim(0, 0, -diameter2 / 2, 0)

                L3 = L1YL2_L2(L1)
                L4 = L1YL2_L2(L2)

                P5 = L3.IGetStartPoint2
                P6 = L3.IGetEndPoint2

                P7 = L4.IGetStartPoint2
                P8 = L4.IGetEndPoint2
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                P5.Select4(True, Nothing)
                P6.Select4(True, Nothing)
                P4.Select4(True, Nothing)
                P8.Select4(True, Nothing)
                part.SketchManager.CreateFillet(Fillet#, 1)
                Feature1 = part.FeatureManager.FeatureCut4(True, False, True, 0, 0, 厚度2# + 厚度3# - 槽厚度#, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2(Feature1.Name, "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                AxisZ.Select2(True, 1) '选择并标记
                'MsgBox(1)
                part.FeatureManager.FeatureCircularPattern5(number, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
            End Sub
            Public Sub 槽型(diameter3#, diameter4#, long1#, long2#, wight1#, wight2#, angle1#, number1#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A3 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter3# / 2)
                ADDConstraints(1)
                A4 = part.SketchManager.CreateCircleByRadius(0, diameter3# / 2 + 0.01, 0, diameter4# / 2)
                ADDConstraints(1)

                A3.select2(False, Nothing)
                A4.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.01, diameter3# / 2, 0)
                Dimension = DisplayDimension.GetDimension2(0)
                Dimension.SetArcEndCondition(1, 2)
                DisplayDimension.GetAnnotation.SetPosition(0.01, diameter3# / 2 + long1# / 2, 0)
                ChangeDimensionVaule(long1# - diameter4# / 2)

                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.05, 0)
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.005, diameter3# / 2 + long1#, 0, 0.005, diameter3# / 2 + long1# + long2#, 0)
                ADDConstraints(3)

                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                DL1.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(wight2# / 4, diameter3# / 2, 0)
                ChangeDimensionVaule(wight2# / 2)

                P1.Select4(False, Nothing)
                A3.select2(True, Nothing)
                ADDConstraints(5)

                L1.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P1.X + 0.005, P1.Y, 0)
                ChangeDimensionVaule(long2#)


                L2 = part.SketchManager.CreateLine(0.005, diameter3# / 2 + long1#, 0, 0.005 + wight2 / 2, diameter3# / 2 + long1#, 0)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2


                P2.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                ADDConstraints(8)

                L2.select2(False, Nothing)
                L1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P2.X + 0.01, P2.Y, 0)
                ChangeDimensionVaule(PI / 2 - angle1 / 180 * PI)

                P4.Select4(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0, P4.Y, 0)
                ChangeDimensionVaule(wight1 / 2)

                L3 = part.SketchManager.CreateLine(0.005, diameter3# / 2 + long1#, 0, 0.005 + wight2 / 2, diameter3# / 2 + long1#, 0)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L3.Select2(False, Nothing)
                A4.select2(True, Nothing)
                ADDConstraints(4)

                P5.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(8)

                P6.Select4(False, Nothing)
                A4.select2(True, Nothing)
                ADDConstraints(5)

                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                L3.select2(True, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)

                DP1 = A3.GetCenterPoint2
                DP2 = A4.GetCenterPoint2

                DL1.select2(False, Nothing)
                part.EditDelete()

                A3.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, DP1.X, DP1.Y - diameter3 / 2, 0)

                A4.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, DP2.X, DP2.Y - diameter4 / 2, 0)

                L1Segment = L1

                L1Segment.SelectChain(False, Nothing)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, 360 / number1 / 180 * PI / 2)

                L1Segment.SelectChain(False, Nothing)
                part.Extension.RotateOrCopy(True, number1 - 1, False, 0, 0, 0, 0, 0, 1, 360 / number1 / 180 * PI)

                AllCut(2)
            End Sub
            Public Sub 外部槽楔(diameter1#, wight1#, wight2#, wight3#, long1#, long2#, angle2#)
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                ADDConstraints(1)

                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, diameter1# / 2, 0)
                DP1 = DL1.GetEndPoint2
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.005, 0.03, 0, 0.006, 0.03, 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                L1.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.002, 0.002, 0)
                ChangeDimensionVaule((angle2) / 180 * PI)

                P2.Select4(False, Nothing)
                DL1.Select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P2.X, P2.Y, 0)
                ChangeDimensionVaule(wight1# / 2)

                L2 = part.SketchManager.CreateLine(0.005, 0.003, 0, 0.006, 0.003, 0)
                ADDConstraints(2)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                DP1.Select4(False, Nothing)
                ADDConstraints(1)

                L2.select2(False, Nothing)
                DP1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(DP1.X + 0.005, DP1.Y - 0.005, 0)
                ChangeDimensionVaule(long1#)

                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(8)

                P3.Select4(False, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(5)

                L3 = part.SketchManager.CreateLine(0.005, 0.003, 0, 0.005, 0.002, 0)
                ADDConstraints(3)
                P5 = L3.GetStartPoint2
                P6 = L3.GetEndPoint2

                L3.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P6.X + 0.005, P6.Y - 0.005, 0)
                ChangeDimensionVaule(wight2# / 2)

                P6.Select4(False, Nothing)
                L2.Select2(True, Nothing)
                ADDConstraints(5)

                P5.Select4(False, Nothing)
                L1.select2(True, Nothing)
                ADDConstraints(5)

                L2.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, P4.X, P4.Y, 0)

                L1.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, P2.X, P2.Y, 0)

                'L01Segment = L1
                'L1Segment.SelectChain(False, Nothing)
                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                L3.select2(True, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)

                L4 = part.SketchManager.CreateLine(0.005, P5.Y, 0, 0.005, P5.Y - long2#, 0)
                ADDConstraints(3)
                P7 = L4.GetStartPoint2
                P8 = L4.GetEndPoint2

                L4.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(wight3# / 2, P6.Y - 0.005, 0)
                ChangeDimensionVaule(wight3#)

                P7.Select4(False, Nothing)
                L2.select2(True, Nothing)
                ADDConstraints(5)
                L4.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(P7.X + 0.005, P7.Y - 0.005, 0)
                ChangeDimensionVaule(long2#)


                L5 = part.SketchManager.CreateLine(0.005, 0, 0, 0.004, 0, 0)
                ADDConstraints(2)
                P9 = L5.GetStartPoint2
                P10 = L5.GetEndPoint2

                P9.Select4(False, Nothing)
                P8.Select4(True, Nothing)
                ADDConstraints(8)

                P10.Select4(False, Nothing)
                DL1.Select2(True, Nothing)
                ADDConstraints(5)

                L6 = part.SketchManager.CreateLine(0.005, 0, 0, 0.005, 0.005, 0)
                ADDConstraints(3)
                P11 = L6.GetStartPoint2
                P12 = L6.GetEndPoint2

                P10.Select4(False, Nothing)
                P11.Select4(True, Nothing)
                ADDConstraints(8)

                P12.Select4(False, Nothing)
                L2.Select2(True, Nothing)
                ADDConstraints(5)

                L2Segment = L2
                L2Segment.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, P12.X + 0.001, P12.Y, 0)

                A1.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -diameter1 / 2, 0)

                AllCut(2)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                ADDConstraints(1)

                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, diameter1# / 2, 0)
                DP1 = DL1.GetEndPoint2
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.005, 0.03, 0, 0.006, 0.03, 0)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                L1.select2(False, Nothing)
                DL1.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(0.002, 0.002, 0)
                ChangeDimensionVaule((angle2) / 180 * PI)

                P2.Select4(False, Nothing)
                DL1.Select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P2.X, P2.Y, 0)
                ChangeDimensionVaule(wight1# / 2)

                L2 = part.SketchManager.CreateLine(0.005, 0.003, 0, 0.006, 0.003, 0)
                ADDConstraints(2)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L2.select2(False, Nothing)
                DP1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(DP1.X + 0.005, DP1.Y - 0.005, 0)
                ChangeDimensionVaule(long1#)

                P3.Select4(False, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(8)

                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)

                DL1.select2(True, Nothing)
                part.EditDelete()

                A1.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -diameter1 / 2, 0)

                L1Segment = L1

                L1Segment.SelectChain(False, Nothing)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI / 2)

                L1Segment.SelectChain(False, Nothing)
                part.Extension.RotateOrCopy(True, 3, False, 0, 0, 0, 0, 0, 1, PI / 2)
                AllCut(2)


            End Sub
            Public Sub 压圈槽楔(diameter1#, wight1#, long1#, number#)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)

                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1# / 2)
                ADDConstraints(1)

                DL1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, diameter1# / 2, 0)
                DP1 = DL1.GetEndPoint2
                ADDConstraints(1)

                L1 = part.SketchManager.CreateLine(0.005, 0.03, 0, 0.006, 0.03, 0)
                ADDConstraints(3)
                P1 = L1.GetStartPoint2
                P2 = L1.GetEndPoint2

                P1.Select4(False, Nothing)
                A1.Select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                DL1.Select2(True, Nothing)
                DisplayDimension = part.AddDimension2(P2.X, P2.Y, 0)
                ChangeDimensionVaule(wight1# / 2)

                L2 = part.SketchManager.CreateLine(0.005, 0.003, 0, 0.006, 0.003, 0)
                ADDConstraints(2)
                P3 = L2.GetStartPoint2
                P4 = L2.GetEndPoint2

                L2.select2(False, Nothing)
                DP1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(DP1.X + 0.005, DP1.Y - 0.005, 0)
                ChangeDimensionVaule(long1#)

                DP1.Select4(True, Nothing)
                ADDConstraints(1)

                P3.Select4(False, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(5)

                P2.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                ADDConstraints(8)

                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DL1.select2(True, Nothing)
                ADDConstraints(9)

                DL1.select2(True, Nothing)
                part.EditDelete()

                A1.select2(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -diameter1 / 2, 0)

                L1Segment = L1
                L1Segment.SelectChain(False, Nothing)
                part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number / 180 * PI)
                AllCut(2)

                'SelectPlane("front")
                'part.SketchManager.InsertSketch(True)

                'A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter1 / 2)
                'A1Segment = A1

                'A1Segment.Select4(False, Nothing)
                'part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number / 180 * PI)
            End Sub
            Public Function L1YL2_L2(line1 As SldWorks.SketchLine) As SldWorks.SketchLine '获得对称线
                sketch = part.SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    If SketchSegment.GetType = 0 Then '0表示线段
                        If SketchSegment.GetStartPoint2.Y = line1.GetStartPoint2.Y And SketchSegment.GetStartPoint2.X = -line1.GetStartPoint2.X Then
                            L1YL2_L2 = SketchSegment '获得Line1的对称线
                        End If
                    End If
                Next i
            End Function
            Public Function 竖直线() As SldWorks.SketchLine
                sketch = part.SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    If SketchSegment.GetType = 0 Then '0表示线段
                        If SketchSegment.GetStartPoint2.X = SketchSegment.GetEndPoint2.X Then
                            竖直线 = SketchSegment '
                            Exit For
                        End If
                    End If
                Next i
            End Function
            Public Function 水平下线() As SldWorks.SketchLine
                sketch = part.SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    If SketchSegment.GetType = 0 Then '0表示线段
                        If SketchSegment.GetStartPoint2.Y = SketchSegment.GetEndPoint2.Y And SketchSegment.GetStartPoint2.Y < 0 Then
                            水平下线 = SketchSegment '
                        End If
                    End If
                Next i
            End Function
            Public Function 筋180线() As SldWorks.SketchLine
                sketch = part.SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    If SketchSegment.GetType = 0 Then '0表示线段
                        'MsgBox(SketchSegment.GetStartPoint2.Y = SketchSegment.GetEndPoint2.Y)
                        'MsgBox(SketchSegment.GetStartPoint2.Y < 0)
                        If SketchSegment.GetStartPoint2.Y = SketchSegment.GetEndPoint2.Y And SketchSegment.GetStartPoint2.Y < 0 Then
                            筋180线 = SketchSegment '
                            Exit For
                        End If
                    End If
                Next i
            End Function
            Public Function 水平上线() As SldWorks.SketchLine
                sketch = part.SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    If SketchSegment.GetType = 0 Then '0表示线段
                        If SketchSegment.GetStartPoint2.Y = SketchSegment.GetEndPoint2.Y And ((SketchSegment.GetStartPoint2.X < 0 And SketchSegment.GetEndPoint2.X > 0) Or (SketchSegment.GetStartPoint2.X > 0 And SketchSegment.GetEndPoint2.X < 0)) Then
                            水平上线 = SketchSegment '
                        End If
                    End If
                Next i
            End Function
            Public Sub [End2](dz$)
                part.SaveAs3(dz, 0, 2)
            End Sub
            Public Sub [End3](dz$)
                part.SaveAs3(dz, 0, 1)
            End Sub
            Public Sub Add_sectionView_toleranceFit(TolType#, Optional TolMax# = 0, Optional TolMin# = 0, Optional TolMaxFit$ = "", Optional TolMinFit$ = "")
                TolMax = TolMax / 1000 ： TolMin = TolMin / 1000
                Dim Dimension As SldWorks.Dimension
                Dim DimensionTolerance As Object

                part.EditDimensionProperties2(TolType, TolMax#, TolMin#, TolMaxFit$, TolMinFit$, True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", True)
                Dimension = DisplayDimension.GetDimension2(0)
                DimensionTolerance = Dimension.Tolerance
                DimensionTolerance.Type = TolType
                DimensionTolerance.SetFitValues(TolMaxFit$, TolMinFit$)
            End Sub
            Public Sub [End](dz$)
                part.SaveAs3(dz, 0, 8)
            End Sub
            Public Sub ChangeDimensionVaule(vaule#) '修改标注尺寸
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
                Dimension.SystemValue = vaule
            End Sub
            Public Sub ADDConstraints(type#) '各种草图方法
                If type = 1 Then '固定
                    part.SketchAddConstraints("sgFIXED")
                ElseIf type = 2 Then '水平
                    part.SketchAddConstraints("sgHORIZONTAL2D")
                ElseIf type = 3 Then '竖直
                    part.SketchAddConstraints("sgVERTICAL2D")
                ElseIf type = 4 Then '相切
                    part.SketchAddConstraints("sgTANGENT")
                ElseIf type = 5 Then '重合
                    part.SketchAddConstraints("sgCOINCIDENT")
                ElseIf type = 6 Then '对称
                    part.SketchAddConstraints("sgSYMMETRIC")
                ElseIf type = 7 Then '相等
                    part.SketchAddConstraints("sgSAMELENGTH")
                ElseIf type = 8 Then '合并
                    part.SketchAddConstraints("sgMERGEPOINTS")
                ElseIf type = 9 Then '镜像
                    part.SketchMirror()
                ElseIf type = 10 Then '点水平排布
                    part.SketchAddConstraints("sgHORIZONTALPOINTS2D")
                ElseIf type = 11 Then '点竖直排布
                    part.SketchAddConstraints("sgVERTICALPOINTS2D")
                ElseIf type = 12 Then '共线
                    part.SketchAddConstraints("sgCOLINEAR")
                ElseIf type = 13 Then '全等
                    part.SketchAddConstraints("sgCORADIAL")
                ElseIf type = 14 Then '相互垂直
                    part.SketchAddConstraints("sgPERPENDICULAR")
                ElseIf type = 15 Then '平行
                    part.SketchAddConstraints("sgPARALLEL")
                ElseIf type = 16 Then '同心
                    part.SketchAddConstraints("sgCONCENTRIC")
                ElseIf type = 17 Then '相等曲率
                    part.SketchAddConstraints("sgEQUALCURV3DALIGN")
                ElseIf type = 18 Then '曲线长度相等
                    part.SketchAddConstraints("sgSAMECURVELENGTH")
                End If

            End Sub
            Public Sub AllCut(vaule#) '完全贯穿 2反向 
                If vaule = 1 Then
                    part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                ElseIf vaule = 2 Then
                    part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                End If
            End Sub
            Public Sub SelectPlane(plane$) '选择基准面


                If plane = "front" Then
                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                ElseIf plane = "up" Then
                    part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                ElseIf plane = "right" Then
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                End If
            End Sub
            Public Function AXIS(Reference$) As SldWorks.Feature '插入基准轴
                Dim AXI As SldWorks.Feature
                Dim line1 As SldWorks.SketchLine
                Dim line1Segment As SldWorks.SketchSegment
                If Reference = "Z" Then
                    part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                    part.SketchManager.InsertSketch(True)
                    line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, -0.01, 0)
                    line1Segment = line1
                    part.InsertSketch2(True)
                    line1Segment.Select4(False, Nothing)
                    part.InsertAxis2(True)
                    AXI = SelectionMgr.GetSelectedObject6(1, -1)
                    AXI.Select2(False, Nothing)
                End If
                If Reference = "Y" Then
                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                    part.SketchManager.InsertSketch(True)
                    line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                    line1Segment = line1
                    part.InsertSketch2(True)
                    line1Segment.Select4(False, Nothing)
                    part.InsertAxis2(True)
                    AXI = SelectionMgr.GetSelectedObject6(1, -1)
                    AXI.Select2(False, Nothing)
                End If
                If Reference = "X" Then
                    part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                    part.SketchManager.InsertSketch(True)
                    line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.01, 0, 0)
                    line1Segment = line1
                    part.InsertSketch2(True)
                    line1Segment.Select4(False, Nothing)
                    part.InsertAxis2(True)
                    AXI = SelectionMgr.GetSelectedObject6(1, -1)
                    AXI.Select2(False, Nothing)
                End If
                AXI = SelectionMgr.GetSelectedObject6(1, -1)
                AXIS = AXI

            End Function
            Public Sub AllExtrusion(vaule#) '完全拉伸 2反向 
                If vaule = 1 Then
                    part.FeatureManager.FeatureExtrusion2(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                ElseIf vaule = 2 Then
                    part.FeatureManager.FeatureExtrusion2(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                End If
            End Sub
            Public Sub SetTolvalue(type#, max$, min$)
                Dimension = DisplayDimension.GetDimension2(0)
                DimensionTolerance = Dimension.Tolerance
                DimensionTolerance.Type = type
                DimensionTolerance.SetFitValues(max, min)
            End Sub
            Public Sub 设置材料（type#）
                Dim swmater As Object

                If type = 1 Then '钢
                    swmater = part.SetMaterialPropertyName2（"默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "合金钢"）
                    'part.SetMaterialPropertyName2("默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "AISI 4340 钢，正火")
                    If swmater Is Nothing Then
                        swmater = part.SetMaterialPropertyName2（"默认", "D:\SOLIDWORKS\lang\chinese-simplified\sldmaterials\solidworks materials.sldmat", "合金钢"）
                    End If

                ElseIf type = 2 Then ' 铜
                    swmater = part.SetMaterialPropertyName2（"默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "铜"）
                    'part.SetMaterialPropertyName2("默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "AISI 4340 钢，正火")
                    If swmater Is Nothing Then
                        swmater = part.SetMaterialPropertyName2（"默认", "D:\SOLIDWORKS\lang\chinese-simplified\sldmaterials\solidworks materials.sldmat", "铜"）
                    End If
                    '" 灰铸铁"
                ElseIf type = 3 Then '灰铸铁
                    swmater = part.SetMaterialPropertyName2（"默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "灰铸铁"）
                    'part.SetMaterialPropertyName2("默认", "C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/solidworks materials.sldmat", "AISI 4340 钢，正火")
                    If swmater Is Nothing Then
                        swmater = part.SetMaterialPropertyName2（"默认", "D:\SOLIDWORKS\lang\chinese-simplified\sldmaterials\solidworks materials.sldmat", "灰铸铁"）
                    End If


                End If
            End Sub
            Public Sub Insert_a3(dz$, front#, right#, up#, 视图X#, 视图Y#, 视图X2#, 视图Y2#, 图纸比例值#, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$, name$, material$, code$) 'Company $, name $, material $, code $
                'Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")

                'Dim OpenDoc7 As SldWorks.ModelDoc2 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                'Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                'Dim SketchManager As SldWorks.SketchManager = part.SketchManager
                'Dim FeatureManager As SldWorks.FeatureManager = part.FeatureManager
                'Dim Dimension As SldWorks.Dimension
                'Dim DisplayDimension As SldWorks.DisplayDimension
                'Dim sketch As SldWorks.Sketch
                'Dim Feature As SldWorks.Feature
                'Dim SelectionMgr As SldWorks.SelectionMgr = part.SelectionManager

                'Dim Draw As SldWorks.DrawingDoc = swapp.ActiveDoc
                'Dim View As SldWorks.View '视图对象
                'Dim Notes As Object
                'Dim Count As Long
                'Dim Annpos() As Double
                'Dim Annotation As SldWorks.Annotation
                'Dim myView As SldWorks.View
                'Dim Displaydimention As SldWorks.DisplayDimension

                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                Dim SF, SF1, SF2, SF3, SF4 As Object
                'NewDocument = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 视图X#, 视图Y#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", 视图X2#, 视图Y2#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", 视图X2#, 视图Y2#, 0)
                End If


                myViewname = myView.Name
                Debug.Print(myViewname)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    'Annotation.SetPosition(0.375, 0.055, 0)
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.075, 0.07, 0)



                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                'SheetPr(2) = 1
                'SheetPr(3) = 1 / 图纸比例值
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, True, True, True)
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'myView1 = part.SelectionManager.GetSelectedObject6(1, -1)
                'myView1.InsertBreak3(2, -0.3, 0.3, 1, 2, True)
                'part.BreakView

                'SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF.GetAnnotation().SetPosition2(0.157, 0.188, 0)
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.385, 0.271, 0)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0, 85 / 1000, 0， 0, -85 / 1000, 0)
                Dim excludedComponents As Object
                part.CreateSectionViewAt5(0.15 + 0.15, 0.18, 0, "B", 128, (excludedComponents), 0)
                part.ActivateView("工程图视图2")
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)


                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF.GetAnnotation().SetPosition2(0.087， 0.181， 0)

                SF3 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF3.GetAnnotation().SetPosition2(0.204， 0.196， 0)
                SF3.SetAngle(90 * PI / 180)
                SF4 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF4.GetAnnotation().SetPosition2(0.312， 0.122， 0)
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()
                part.Extension.SelectByID2("图纸1", "SHEET", 0.088, 0.174, 0, False, 0, Nothing, 0)
                Dim myDatumTag As DatumTag

                myDatumTag = part.InsertDatumTag2()
                myDatumTag.FilledTriangle = True
                myDatumTag.Shoulder = False
                myDatumTag.SetLabel("A")
                myDatumTag.GetAnnotation()
                myDatumTag.GetAnnotation().SetPosition(0.084, 0.166, 0)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Sub 结束(dz$)
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 3) '长度精度保留小数点后3位
                part.SaveAs3(dz, 0, 8)
            End Sub
            Public Sub 结束1(dz$)

                part.SaveAs3(dz, 0, 8)
            End Sub
            Public Sub InsertA4pDrawings(dz$, Scale2#, front#, right#, up#, name$, material$, code$, 视图X#, 视图Y#, 视图X2#, 视图Y2#，
                                    skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$)
                'Dim Draw As SldWorks.DrawingDoc
                'Dim View As SldWorks.View '视图对象
                'Dim Notes As Object
                'Dim Count As Long
                'Dim Annpos() As Double
                'Dim Annotation As SldWorks.Annotation
                'Dim myView As SldWorks.View
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见
                Draw = swapp.ActiveDoc

                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 视图X#, 视图Y#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", 视图X2#, 视图Y2#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", 视图X2#, 视图Y2#, 0)
                End If


                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.164, 0.055, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText("江西兰叶科技有限公司")


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = Scale2
                SheetPr(4) = False
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild3()
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4）
                myNote.GetAnnotation().SetPosition(0.034, 0.09, 0)
                'part.FontPoints(22)
                'myNote = part.InsertNote(skills_requirement1 + Chr(13) + Chr(10) +
                '                             skills_requirement2 + Chr(13) + Chr(10) +
                '                             skills_requirement3 + Chr(13) + Chr(10) +
                '                             skills_requirement4）
                'myNote.GetAnnotation().SetPosition(0.038, 0.064, 0)

                'part.WindowRedraw()
                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072, True, True, True, True) '导入要显示的对象
                'Dim SF As Object
                'SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "12.5", "", "RZ", "", "", "")
                'SF.GetAnnotation().SetPosition2((-直径 / 2 * Cos(60 * PI / 180)) / Scale2 + 114 / 1000, (直径 / 2 * Sin(60 * PI / 180)) / Scale2 + 180 / 1000, 0)
                'SF.SetAngle(15 * PI / 180)
                'SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "12.5", "", "RZ", "", "", "")
                'SF.GetAnnotation().SetPosition2(0, -直径 / 2, 0)
                'SF.SetAngle(0)
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.185, 0.275, 0)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Function 开始BI(dz$, 主视图X#, 主视图Y#, name$, material$, code$, Optional skills_requirement_title$ = "", Optional skills_requirement1$ = "", Optional skills_requirement2$ = "", Optional skills_requirement3$ = "", Optional skills_requirement4$ = "") 'Company $, name $, material $, code $
                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView， myView1 As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Dim l1, l2 As SketchPoint
                Dim SF, SF1, SF2 As Object
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4.drwdot", 1, 0, 0)
                ' Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                'Dim DrawTitle As String
                'DrawTitle = Draw.GetTitle
                Dim myViewname As String
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 主视图X#, 主视图Y#, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0, 0 + 35 / 1000, 0， 0, 0 - 35 / 1000, 0)
                Dim excludedComponents As Object
                part.CreateSectionViewAt5(0.2, 0, 0, "B", 128, (excludedComponents), 0)
                'part.Extension.InsertSurfaceFinishSymbol3(2, 0, l2.X, l2.Y, 0, 0, 1, "", "", "", "", "", "", "")
                SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                SF.GetAnnotation().SetPosition2(0.2 + 0.001, -0.018 + 0.13, 0)
                SF.SetAngle(270 * PI / 180)
                part.ClearSelection2(True)


                'part.ActivateView("工程图视图2")
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                SF1.SetAngle(90 * PI / 180)




                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0.383, 0.256, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.271, 0.189, 0)


                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                myViewname = myView.Name
                Debug.Print(myViewname)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.251, 0.055, 0)
                part.ClearSelection2(True)
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 192 / 1000 And Annpos(0) < 240.7 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 24 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 12.16 / 1000 And Annpos(1) < 24 / 1000 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 191 / 1000 And Annpos(1) < 205 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                             skills_requirement1 + Chr(13) + Chr(10) +
                                             skills_requirement2 + Chr(13) + Chr(10) +
                                             skills_requirement3 + Chr(13) + Chr(10) +
                                             skills_requirement4）
                'myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                '    "1.平整去毛刺；" + Chr(13) + Chr(10) +
                '    "2.镀锌；" + Chr(13) + Chr(10) +
                '    "3.未注公差尺寸的极限偏差按GB/T1804-m 级精度。"）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.03, 0.052, 0)



                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                'Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                'SheetPr(2) = 1
                'SheetPr(3) = 1 / 图纸比例值
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, True, False, True, True)

                part.Extension.SelectByID2("D1@凸台-拉伸1@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图3@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图1@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()

                'Debug.Print(tablefeat.Name)
                'Debug.Print(title)

                'Debug.Print("D1@" & tablefeat.Name & "@" & Left(title, 5) & "-SectionAssembly-1-1@工程图视图2")
                'part.Extension.SelectByID2("D1@" & tablefeat.Name & " @" & title & "-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0.256499764091295, 0.187148863969507, 0, False, 0, Nothing, 0)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Function 开始PC1(dz$, 主视图X#, 主视图Y#, 左视图X2#, 左视图Y2#， 图纸比例值#, name$, material$, code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$) 'Company $, name $, material $, code $
                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView， myView1 As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Dim l1, l2 As SketchPoint
                Dim SF, SF1, SF2 As Object
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc

                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                myView = Draw.CreateDrawViewFromModelView3(dz, "*后视", 主视图X#, 主视图Y#, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz, "*右视", 左视图X2#, 左视图Y2#, 0)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4）
                'myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                '"1.冲制后无裂纹；" + Chr(13) + Chr(10) +
                '"2.去棱边、倒毛刺；" + Chr(13) + Chr(10) +
                '"3.未注公差尺寸的极限偏差按GB/T1804-m 级精度。"）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.075, 0.07, 0)


                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = 图纸比例值
                SheetPr(4) = 1
                'SheetPr(2) = 1
                'SheetPr(3) = 5
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                ''MsgBox(111)
                Draw.EditRebuild()
                'part.Extension.SelectByID2("D4@阵列(线性)1@11113-1@工程图视图1", "DIMENSION", 0.180536195921 675, 0.14647163063835, 0, False, 0, Nothing, 0)
                'part.HideDimension()
                part.InsertModelAnnotations3(0, 32864 + 2, True, True, True, True) '不允许有重复标注


                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()
                'part.ActivateView("工程图视图2")
                'part.Extension.SelectByID2("D1@凸台-拉伸1@工程图2-SectionAssembly-2-2@工程图视图2", "DIMENSION", 0.294897878257871, 0.190638897831835, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.ActivateView("工程图视图1")
                'part.Extension.SelectByID2("D4@阵列(线性)1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0.18089929225977, 0.147315442207338, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("D1@草图13@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D4@阵列(线性)1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@草图15@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D4@阵列(线性)2@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)

                part.EditDelete()
                part.Extension.SelectByID2("Overall width@100x121@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Overall width@100x122@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Depth@100x121@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Depth@100x122@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Depth@100x122@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.HideDimension()
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Function 开始PC2(dz$, 主视图X#, 主视图Y#, 图纸比例值#, name$, material$, code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$) 'Company $, name $, material $, code $
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 主视图X#, 主视图Y#, 0)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4）
                'myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                '"1.冲制后无裂纹；" + Chr(13) + Chr(10) +
                '"2.去棱边、倒毛刺；" + Chr(13) + Chr(10) +
                '"3.未注公差尺寸的极限偏差按GB/T1804-m 级精度。"）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.075, 0.07, 0)


                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = 图纸比例值
                SheetPr(4) = 1
                'SheetPr(2) = 1
                'SheetPr(3) = 4
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                ''MsgBox(111)
                Draw.EditRebuild()
                part.InsertModelAnnotations3(0, 32864 + 2, True, False, True, True) '允许有重复标注
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小

                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Function 开始PC3(dz$, front#, right#, up#, 视图X#, 视图Y#, 视图X2#, 视图Y2#, 图纸比例值#, name$, material$, code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$) 'Company $, name $, material $, code $
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim myView， myView1 As SldWorks.View
                Dim DrawTitle As String
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                Dim SF1 As Object
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 视图X#, 视图Y#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", 视图X2#, 视图Y2#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", 视图X2#, 视图Y2#, 0)
                End If


                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.29, 0.13, 0)


                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = 图纸比例值
                SheetPr(4) = 1
                'SheetPr(2) = 1
                'SheetPr(3) = 4
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                ''MsgBox(111)
                Draw.EditRebuild()
                part.InsertModelAnnotations3(0, 32864 + 2, True, False, True, True) '允许有重复标注


                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")

                myView = part.SelectionManager.GetSelectedObject5(1)
                myView.InsertBreak(0, -0.11, -0.0075, 3)

                part.BreakView
                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("D11@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D17@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D18@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@阵列(线性)1@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.393, 0.27, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.393, 0.27, 0)

                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Function 局部视图(矩形长#， 矩形宽#， 距离1#， 距离2#， 距离3#， 扇形窗厚度#， x间距#)
                Dim l1 As SketchLine
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(-(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 扇形窗厚度 * 2 - x间距 * 2), 矩形宽 / 2, 0， -(矩形长 / 2 - 距离1 - 距离2 - 距离3 - 扇形窗厚度), 矩形宽 / 2, 0)
                '（矩形长/2-距离1-距离2-距离3-扇形窗厚度*2-x间距*2）
                'l1.select2(False, Nothing)
                Dim excludedComponents As Object
                part.CreateSectionViewAt5(0, 0.175, 0, "B", 148, (excludedComponents), 0)


                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("Point2@草图13@*@工程图视图2", "EXTSKETCHPOINT", -0.01, 0.055, 0, False, 0, Nothing, 0)
                Dim myNote As Object
                Dim myAnnotation As Object
                myNote = part.InsertNote("4-8x12")
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                myAnnotation.SetPosition(0.376, 0.24, 0.1759)





            End Function
            Public Function 弯曲视图视图(dz$, 视图X#, 视图Y#)
                Dim Draw As SldWorks.DrawingDoc = swapp.ActiveDoc
                Dim View， View1， View2 As SldWorks.View '视图对象
                Dim myView, myView1 As SldWorks.View
                Dim arc1 As SldWorks.SketchArc
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                Dim SelectionMgr As SelectionMgr = part.SelectionManager
                myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", 视图X#, 视图Y#, 0)
                Dim vComponents As Object
                Dim vComponent As Object
                Dim vEdges1, vPoint1 As Object
                Dim P1 As SketchPoint

                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = SelectionMgr.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges1 = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                'vPoint1 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合
                'part.ClearSelection2(True)
                'Dim i As Integer
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(vPoint1(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop

                part.ActivateView("工程图视图3")
                P1 = part.SketchManager.CreatePoint(-6 / 1000, -6.5 / 1000, 0)

                SelectionMgr.AddSelectionListObject(vEdges1(2), Nothing)
                P1.Select4(True, Nothing)
                part.ActivateView("工程图视图3")
                part.AddDimension2(0.045, 0.175, 0)


                part.Extension.SelectByID2("工程图视图4", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = SelectionMgr.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges1 = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                'vPoint1 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合
                'part.ClearSelection2(True)
                Dim i As Integer
                i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(vEdges1(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop


                'SelectionMgr.AddSelectionListObject(vEdges1(9), Nothing)
                'part.AddDimension2(0.12, 0.128, 0)

                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View1 = part.SelectionManager.GetSelectedObject5(1)
                'Dim BaseView As Object
                View1.AlignWithView(0, View1)
                'View1.SetPosition（0.062, 0.167, 0）
                Dim pos() As Double
                pos = View1.Position
                pos(0) = 0.1
                pos(1) = 0.167
                View1.Position = pos '设置视图位置
                part.ClearSelection2(True)

            End Function
            Public Function Insert_a3EX(dz$, 主视图X#, 主视图Y#, name$, material$, code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$, skills_requirement5$, skills_requirement6$) 'Company $, name $, material $, code $
                Dim OpenDoc7 As SldWorks.ModelDoc2 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                Dim SketchManager As SldWorks.SketchManager = part.SketchManager
                Dim FeatureManager As SldWorks.FeatureManager = part.FeatureManager
                Dim Dimension As SldWorks.Dimension
                Dim DisplayDimension As SldWorks.DisplayDimension
                Dim sketch As SldWorks.Sketch
                Dim Feature As SldWorks.Feature
                Dim SelectionMgr As SldWorks.SelectionMgr = part.SelectionManager

                Dim Draw As SldWorks.DrawingDoc = swapp.ActiveDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView, myView1 As SldWorks.View
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                Dim SF, SF1, SF2, SF3, SF4 As Object
                'NewDocument = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 主视图X#, 主视图Y#, 0)
                part.ViewDisplayHidden


                'myViewname = myView.Name
                'Debug.Print(myViewname)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1 + Chr(13) + Chr(10) +
                                         skills_requirement2 + Chr(13) + Chr(10) +
                                         skills_requirement3 + Chr(13) + Chr(10) +
                                         skills_requirement4 + Chr(13) + Chr(10) +
                                         skills_requirement5 + Chr(13) + Chr(10) +
                                         skills_requirement6）

                'myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                '"1.铸件应符合GB/T11352一般工程用铸造碳钢件。；" + Chr(13) + Chr(10) +
                '"2.铸件加工余量按GB/T6414-H级，铸件尺寸公差按GB/T6414-9级；" + Chr(13) + Chr(10) +
                '"3.铸件清沙去毛，表面平整，清理后非加工表面涂磷化底漆X06-1，铁红环氧底漆H06-2各一次。；" + Chr(13) + Chr(10) +
                '"4.未注机加工公差尺寸的极限偏差按GB/T1804-m级精度。；" + Chr(13) + Chr(10) +
                '"5.未注明铸造圆角R不大于2，未注倒角为C1。；" + Chr(13) + Chr(10) +
                '"5.湿热带电机技术要求按0EQ.684.3000。；" + Chr(13) + Chr(10)
                '）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.26, 0.122, 0)



                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                'SheetPr(2) = 1
                'SheetPr(3) = 1 / 图纸比例值
                'SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, True, True, True)
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'myView1 = part.SelectionManager.GetSelectedObject6(1, -1)
                'myView1.InsertBreak3(2, -0.3, 0.3, 1, 2, True)
                'part.BreakView

                'SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                'SF.GetAnnotation().SetPosition2(0.157, 0.188, 0)
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.385, 0.271, 0)

                'part.ActivateView("工程图视图1")
                'part.SketchManager.CreateLine(0, 85 / 1000, 0， 0, -85 / 1000, 0)
                'Dim excludedComponents As Object
                'part.CreateSectionViewAt5(0.15 + 0.15, 0.18, 0, "B", 128, (excludedComponents), 0)
                'part.ActivateView("工程图视图2")
                'part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.385, 0.271, 0)
                'SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                'SF.GetAnnotation().SetPosition2(0.087， 0.19， 0)

                'SF3 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                'SF3.GetAnnotation().SetPosition2(0.204， 0.196， 0)
                'SF3.SetAngle(90 * PI / 180)
                'SF4 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                'SF4.GetAnnotation().SetPosition2(0.312， 0.122， 0)
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()
                part.Extension.SelectByID2("图纸1", "SHEET", 0.043, 0.13, 0, False, 0, Nothing, 0)
                Dim myDatumTag As DatumTag

                myDatumTag = part.InsertDatumTag2()
                myDatumTag.FilledTriangle = True
                myDatumTag.Shoulder = False
                myDatumTag.SetLabel("A")
                myDatumTag.GetAnnotation()
                myDatumTag.GetAnnotation().SetPosition(0.043, 0.12, 0)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                'part.Extension.SelectByID2("D1@草图12@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                'part.Extension.SelectByID2("D2@草图17@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D1@草图8@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D1@基准面1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D2@草图12@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D1@草图17@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                'part.EditDelete()
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Function 矩形凸出反向孔局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, 局部视图圆直径#)
                Dim arc1 As SldWorks.SketchArc
                Dim arc1Segment As SldWorks.SketchSegment
                Dim LINE01 As SldWorks.SketchSegment
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                part.ActivateView("工程图视图1") '局部视图
                arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0#, 局部视图圆直径 / 2 + 0.01)
                arc1Segment = arc1
                part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 1 / 局部视图图纸比例值#, "K", 0, False, False, True, False)
                part.ActivateView("工程图视图2")
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True)

                'part.Extension.SelectByID2("D1@基准面1@DrawTitle-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D1@草图18@工程图1-SectionAssembly-1-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D3@草图10@工程图1-SectionAssembly-1-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D1@草图8@工程图1-SectionAssembly-1-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D1@基准面1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D1@草图8@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("D1@草图8@工程图1-SectionAssembly-1-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                part.Extension.SelectByID2("D1@草图12@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D2@草图17@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@基准面1@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D2@草图12@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图17@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@草图17@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图17@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图22@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@草图12@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图8@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@基准面1@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D2@草图22@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.EditDelete()





            End Function
            Public Function 侧边槽局部视图(dz$， 主视图X#, 主视图Y#， 直径1#, 局部视图X2#, 局部视图Y2#, 局部视图图纸比例值#)
                Dim Draw As SldWorks.DrawingDoc = swapp.ActiveDoc
                Dim View As SldWorks.View '视图对象
                Dim myView, myView1 As SldWorks.View
                Dim arc1 As SldWorks.SketchArc
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(dz, "*后视", 主视图X#, 主视图Y#, 0)
                part.ActivateView("工程图视图3") '局部视图
                arc1 = part.SketchManager.CreateCircleByRadius(-直径1# / 2, 0, 0#, 0.015)
                part.CreateDetailViewAt4(局部视图X2#, 局部视图Y2#, 0, 0, 1, 1 / 局部视图图纸比例值#, "F", 0, False, False, True, False)

                part.ActivateSheet("图纸1")
                'part.ActivateView("工程图视图4")
                part.SketchManager.CreateCircleByRadius(2 * 局部视图X2#, 2 * 局部视图Y2#, 0#, 0.02)

                part.CreateBreakOutSection(0.01)
                part.ClearSelection2(True)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True)
                part.Extension.SelectByID2("D1@基准面1@*@工程图视图4", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("D1@基准面1@*@工程图视图4", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("D1@切除-拉伸6@*@工程图视图4", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()





                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.SuppressView
                part.ClearSelection2(True)

                part.Extension.SelectByID2("D2@草图12@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@草图12@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D2@草图17@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@草图17@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@基准面1@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D3@草图12@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D2@草图22@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@基准面1@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@草图8@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.EditDelete()




            End Function
            Public Function 半剖视图(直径1#, 厚度1#， 厚度2#， 长度#, 槽宽#, 切除口距离#, Resection_depth1#, Ring_diameter1#, Ring_diameter3#, Fillet_radius#)
                Dim p1, P2 As SketchPoint
                Dim SF, SF1, SF2， SF3， SF4， SF5， SF6 As Object
                初始设置(1)
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                part.ActivateView("工程图视图1") '局部视图
                Dim excludedComponents As Object
                part.SketchManager.CreateLine(0#, 直径1# / 2, 0#, 0, 0, 0#)
                part.SketchManager.CreateLine(0, 0, 0#, 直径1# / 2, 0, 0#)



                part.CreateSectionViewAt5(0.3115, 0.189, 0, "A", 128, (excludedComponents), 0)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, True, True, True)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("D1@草图8@8EQ_150_1005-1@工程图视图1", "DIMENSION", 0.106321875323854, 0.193922589996506, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.ActivateView("工程图视图5")
                part.Extension.SelectByID2("D1@凸台-拉伸2@*@工程图视图5", "DIMENSION", 0.29393626424158, 0.200477072648401, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@凸台-拉伸1@*@工程图视图5", "DIMENSION", 0.307488157245637, 0.199509080290969, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@切除-拉伸2@*@工程图视图5", "DIMENSION", 0.31845873729654, 0.197895759695248, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@倒角2@*@工程图视图5", "DIMENSION", 0.306036168709488, 0.190151820835787, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@切除-拉伸1@*@工程图视图5", "DIMENSION", 0.299582886326604, 0.184343866691191, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("D1@切除-拉伸5@*@工程图视图5", "DIMENSION", 0.302002867220185, 0.181439889618893, 0, True, 0, Nothing, 1)
                part.EditDelete()
                part.ActivateView("工程图视图5")
                part.SketchManager.CreatePoint((厚度1 + 厚度2) / 2, 直径1 / 2 + 0.022, 0)
                ''MsgBox(1)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "6.3", "", "RZ", "", "", "")
                'SF1.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                'SF1.SetAngle(90 * PI / 180)
                part.ActivateView("工程图视图5")
                part.SketchManager.CreatePoint((厚度1 + 厚度2) / 2, -直径1 / 2 + 0.025, 0)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, (厚度1 + 厚度2) / 2, -直径1 / 2 + 0.025, 0, 0, 1, "", "6.3", "", "RZ", "", "", "")
                'SF.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                SF.SetAngle(270 * PI / 180)
                part.ActivateView("工程图视图5")
                part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2, -直径1 / 2 + 0.03, 0)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, -(厚度1 + 厚度2) / 2, -直径1 / 2 + 0.03, 0, 0, 1, "", "6.3", "", "RZ", "", "", "")
                'SF1.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                SF1.SetAngle(90 * PI / 180)
                part.ActivateView("工程图视图5")
                part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2 + 厚度2, -直径1 / 2 + 0.025， 0)
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, -(厚度1 + 厚度2) / 2 + 厚度2, -直径1 / 2 + 0.025, 0, 0, 1, "", "6.3", "", "RZ", "", "", "")
                'SF2.GetAnnotation().SetPosition2(0.1989, 0.116, 0)
                SF2.SetAngle(270 * PI / 180)


                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(0.01, (长度 - 0.02), 0)
                SF3 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0.02, (长度 + 0.01), 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(-长度， 0.02, 0)
                SF4 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, -长度， 0.02, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF4.SetAngle(90 * PI / 180)
                part.ActivateView("工程图视图4")
                part.SketchManager.CreatePoint(-(切除口距离 - 直径1 / 2 + 0.02), -槽宽 / 2 - 0.02, 0)
                SF5 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 切除口距离 - 直径1 / 2 - 0.015, -槽宽 / 2 - 0.02, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                part.ActivateView("工程图视图4")
                part.SketchManager.CreatePoint(-(切除口距离 - 直径1 / 2 + 0.03), 0, 0)
                SF5 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 切除口距离 - 直径1 / 2 + 0.02, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                SF5.SetAngle(90 * PI / 180)
                Dim myNote As Object
                Dim myAnnotation As Object
                part.ActivateView("工程图视图5")
                p1 = part.SketchManager.CreatePoint((厚度1 + 厚度2) / 2 - Resection_depth1 + Fillet_radius, Ring_diameter1 / 2, 0)
                part.ActivateSheet("图纸1")
                p1.Select4(False, Nothing)
                myNote = part.InsertNote("R5")
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)

                myAnnotation.SetPosition(0.338, 0.248, 0)

                part.ActivateView("工程图视图5")
                P2 = part.SketchManager.CreatePoint(-(厚度1 + 厚度2) / 2 + 厚度1 + 厚度2 - 2 * Resection_depth1 - Fillet_radius, Ring_diameter3 / 2, 0)
                part.ActivateSheet("图纸1")
                P2.Select4(False, Nothing)
                myNote = part.InsertNote("R5")
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)

                myAnnotation.SetPosition(0.28, 0.238, 0)
                part.ClearSelection2(True)


            End Function
            Public Function 开始DS(dz$, 主视图X#, 主视图Y#, 图纸比例值#, name$, material$, code$, skills_requirement_title$, skills_requirement1$, Optional type1# = 0, Optional 厚度# = 0， Optional 孔深度# = 0) 'Company $, name $, material $, code $
                Dim OpenDoc7 As SldWorks.ModelDoc2 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                Dim NewDocument As SldWorks.ModelDoc2 = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                Dim SketchManager As SldWorks.SketchManager = part.SketchManager
                Dim FeatureManager As SldWorks.FeatureManager = part.FeatureManager
                Dim Dimension As SldWorks.Dimension
                Dim DisplayDimension As SldWorks.DisplayDimension
                Dim sketch As SldWorks.Sketch
                Dim Feature As SldWorks.Feature
                Dim SelectionMgr As SldWorks.SelectionMgr = part.SelectionManager

                Dim Draw As SldWorks.DrawingDoc = swapp.ActiveDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView, myView1 As SldWorks.View
                Draw = swapp.ActiveDoc
                part = swapp.ActiveDoc
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Dim myViewname As String
                part.ViewZoomtofit2()
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", 主视图X#, 主视图Y#, 0)


                part.ActivateView("工程图视图1")

                myViewname = myView.Name
                Debug.Print(myViewname)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                         skills_requirement1）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.075, 0.07, 0)



                Dim Sheet1 As SldWorks.Sheet '图纸对象

                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = 1 / 图纸比例值
                SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 65536 + 131072, True, False, True, True)



                If Not type1 = 0 Then
                    part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                    myView1 = part.SelectionManager.GetSelectedObject6(1, -1)
                    myView1.InsertBreak(0, -0.186, 0.154, 1)

                    part.BreakView
                    SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                    SF.GetAnnotation().SetPosition2(0.157, 0.1891, 0)
                    part.ActivateSheet("图纸1")
                    part.ActivateView("工程图视图1")
                    part.SketchManager.CreateCircleByRadius(-厚度 / 2 + 孔深度 / 2, 0, 0#, 0.01)
                    part.CreateBreakOutSection(0.01)
                    part.ClearSelection2(True)
                Else part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                    myView1 = part.SelectionManager.GetSelectedObject6(1, -1)
                    myView1.InsertBreak3(2, -0.3, 0.3, 1, 2, True)
                    part.BreakView
                    SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                    SF.GetAnnotation().SetPosition2(0.157, 0.188, 0)

                End If
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "12.5", "")
                SF2.GetAnnotation().SetPosition2(0.385, 0.271, 0)
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()
                'part.Extension.SelectByID2("草图1@*@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.BlankSketch()
                part.Extension.SelectByID2("D2@倒角1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0.130211915159816, 0.204016506610149, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0.209414928203991, 0.180525386240571, 0, True, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.003) '修改箭头大小
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Function
            Public Sub Clsasp_A4pDrw(dz$, Scale2#, front#, right#, up#, name$, material$, code$,
                                 frontX#, frontY#, rightX#, rightY#, upX#, upY#,
                                 skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$,
                                 length#)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见


                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", frontX#, frontY#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", rightX#, rightY#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", upX#, upY#, 0)
                End If


                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.164, 0.055, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText("江西兰叶科技有限公司")


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = Scale2
                SheetPr(4) = False
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild3()
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                 skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4）
                myNote.GetAnnotation().SetPosition(0.034, 0.09, 0)

                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象

                part.ClearSelection2(True)
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                Dim myBreakLine1 As Object
                Dim myView1 As Object
                myView1 = part.SelectionManager.GetSelectedObject5(1)
                myBreakLine1 = myView1.InsertBreak(0, -(length / 2 - 0.06), length / 2 - 0.06, 1) '断线方向，竖直为0
                part.BreakView
                part.Extension.SelectByID2("D2@草图1@C146_2046-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@草图1@C146_2046-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                part.EditDelete()
                part.ClearSelection2(True)
                Dim myBreakLine2 As Object
                Dim myView2 As Object
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图2")
                myView2 = part.SelectionManager.GetSelectedObject5(1)
                myBreakLine2 = myView2.InsertBreak(0, -(length / 2 - 0.06), length / 2 - 0.06, 1) '断线方向，竖直为0
                part.BreakView
                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("D1@凸台-拉伸1@C146_2046-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(0.2, upY, 0) '移动标注
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Sub Oil_pan_Drawings(dz3$, material$, company$, name$, Code$, 直径1#, 厚度1#， 厚度2#, skills_requirement$, proportion$)
                inA3(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.15, 0.18, 0)

                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.29, 0.18, 0)
                part.ViewDisplayHidden

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle

                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(proportion)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)


                part.ActivateView("工程图视图1")

                part.SketchManager.CreateCornerRectangle(-(厚度1# + 厚度2#) / 2 - 0.01, 0, 0, (厚度1# + 厚度2#) / 2 + 0.01, 直径1# / 2 + 0.01, 0)
                part.CreateBreakOutSection(直径1# / 2)
                part.ClearSelection2(True)




                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.ActivateView("工程图视图1")
                'part.Extension.SelectByID2("D1@凸台-拉伸1@DrawTitle@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                'part.Extension.SelectByID2("D1@凸台-拉伸2@DrawTitle@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("D1@圆角1@DrawTitle@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸2@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@圆角1@工程图1-SectionAssembly-1-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@倒角2@*-2@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub slot_wedge_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                A4P(material$, company$, name$, Code$)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.155, 0.225, 0)

                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.08, 0.225, 0)
                part.ViewDisplayHidden

                设置图纸比例(proportion)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                myView1 = part.SelectionManager.GetSelectedObject6(1, -1)
                myView1.InsertBreak3(0, -0.1, 0.1, 1, 2, True)
                part.BreakView
                part.Extension.SelectByID2("D1@凸台-拉伸1@*-2@工程图视图2", "DIMENSION", 0.0797544272687842, 0.235294624711867, 0, False, 0, Nothing, 0)
                part.EditDelete()




                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub Grounding_plate_Appearance_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                A4P(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*后视", 0.11, 0.22, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)


                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.SketchManager.CreatePoint(0.175, 0.27, 0)
                Dim mySFSymbol As Object
                mySFSymbol = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.175, 0.27, 0, 0, 1, "", "", "镀镍", "", "", "", "")
                Dim myAnnotation As Object
                myAnnotation = mySFSymbol.GetAnnotation()



                part.Extension.SelectByID2("D6@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D9@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D8@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D10@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D11@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D12@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D7@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D13@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D14@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D15@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                part.ActivateView("工程图视图1")

                'part.SketchManager.CreatePoint(0, 0, 0)

                part.SketchManager.CreateCircleByRadius(0, -0.0075, 0, 0.006)
                part.CreateDetailViewAt3(0.11, 0.13, 0, 0, 5, 1, "I", 1, False)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub PS_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$, diameter1#, thickness1#， thickness2#)

                A4P(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.22, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-（thickness1# + thickness2） / 2 - 0.002， -diameter1# / 2 - 0.002， 0， （thickness1# + thickness2） / 2 + 0.002， diameter1# / 2 + 0.002， 0)
                part.CreateBreakOutSection(diameter1# / 2)
                part.ClearSelection2(True)



                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                part.Extension.SelectByID2("D1@凸台-拉伸1@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@凸台-拉伸2@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@切除-拉伸1@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@倒角1@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()



                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub AS_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)


                A4P(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.11, 0.23, 0)
                part.ViewDisplayHidden

                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.15, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)


                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.09， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4））

                part.Extension.SelectByID2("D1@凸台-拉伸1@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸2@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)


            End Sub
            Public Sub WS_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)


                inA4(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.11, 0.125, 0)
                part.ViewDisplayHidden

                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.2, 0.125, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)


                part.Extension.SelectByID2("D1@草图5@*-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)


                part.Extension.SelectByID2("D1@草图4@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)


            End Sub
            Public Sub SC_Drawings(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$, diameter2#, diameter3#, wight1#)


                inA4(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.125, 0)
                part.ViewDisplayHidden

                'myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.2, 0.125, 0)
                'part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                'part.ViewDisplayHidden

                'part.Extension.SelectByID2("D4@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                'part.Extension.SelectByID2("D2@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D3@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                'part.Extension.SelectByID2("D1@草图7@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                'part.EditDelete()


                设置图纸比例(proportion)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-wight1# / 2 - 0.003， diameter2# / 2 - 0.005， 0， wight1# / 2 + 0.003， diameter3# / 2 + 0.005， 0)
                part.CreateDetailViewAt3(0.23, 0.125, 0, 0, 1, 1, "I", 0, False)
                part.ClearSelection2(True)


                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, False, True, True)
                'part.InsertModelAnnotations3(0, 10519023, False, True, True, True)

                part.Extension.SelectByID2("D4@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("D2@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D3@草图6@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("D1@草图7@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()



                'part.Extension.SelectByID2("D1@草图5@*-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)


                'part.Extension.SelectByID2("D1@草图4@*-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                'part.EditDelete()
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1））
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)


            End Sub
            Public Sub SM_DrawingsA4(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                inA4(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*后视", 0.15, 0.125, 0)
                part.ViewDisplayHidden
                设置图纸比例(proportion)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, False, True, True)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2））

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.28, 0.19, 0)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub SM_DrawingsA3(dz3$, dz$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                inA3(material$, company$, name$, Code$)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.2, 0.214, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.36, 0.214, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                Draw.CreateDrawViewFromModelView3(dz, "*上视", 0.2, 0.115, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")

                myView = part.SelectionManager.GetSelectedObject5(1)
                myView.InsertBreak(0, -0.11, -0.0075, 3)

                part.BreakView


                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2））
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.393, 0.27, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub SM_DrawingsA32(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                inA3(material$, company$, name$, Code$)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*后视", 0.2, 0.214, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.36, 0.214, 0)

                part.ViewDisplayHidden
                设置图纸比例(proportion)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                'Draw.CreateDrawViewFromModelView3(dz, "*上视", 0.2, 0.115, 0)

                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2））
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.393, 0.27, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)




            End Sub
            Public Sub SM_DrawingsA42(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                inA4(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*后视", 0.15, 0.125, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.27, 0.125, 0)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                'myView2 = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.15, 0.175, 0)



                part.ViewDisplayHidden
                设置图纸比例(proportion)

                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3））

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.28, 0.19, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)



            End Sub
            Public Sub SM_DrawingsA43(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)

                inA4(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*后视", 0.15, 0.125, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.27, 0.125, 0)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                part.ViewDisplayHidden
                设置图纸比例(proportion)

                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2））

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.28, 0.19, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)



            End Sub
            Public Sub CY_DrawingsA4(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$, 直径1#)

                inA4(material$, company$, name$, Code$)


                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.1, 0.14, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.23, 0.14, 0)

                'myView2 = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.15, 0.175, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.DrawingViewRotate(PI / 2)




                part.ViewDisplayHidden
                设置图纸比例(proportion)
                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(0, 直径1# / 2, 0)

                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-BUSQ>", "", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(False, "", False)

                part.ClearSelection2(True)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3））
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.28, 0.19, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)



            End Sub
            Public Sub CY_DrawingsA3(dz3$, dz$, material$, company$, name$, Code$, skills_requirement$, proportion$, 直径1#)

                inA3(material$, company$, name$, Code$)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.2, 0.214, 0)
                myView1 = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.36, 0.214, 0)

                part.ViewDisplayHidden

                'part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                Draw.CreateDrawViewFromModelView3(dz, "*前视", 0.2, 0.115, 0)

                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'part.ActivateView("工程图视图1")

                'myView = part.SelectionManager.GetSelectedObject5(1)
                'myView.InsertBreak(0, -0.11, -0.0075, 3)

                'part.BreakView
                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(0, 直径1# / 2, 0)

                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-BUSQ>", "", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(False, "", False)
                part.ClearSelection2(True)

                设置图纸比例(proportion)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.035, 0.04， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3））
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.28, 0.19, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.393, 0.27, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

            End Sub
            Public Sub TR_DrawingsA4(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)


                A4P(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.25, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.11, 0.15, 0)
                part.ViewDisplayHidden
                设置图纸比例(proportion)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)

                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.175, 0.275, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.175, 0.275, 0)


                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Sub RT_DrawingsA4(dz3$, material$, company$, name$, Code$, skills_requirement$, proportion$)


                A4P(material$, company$, name$, Code$)

                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.22, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*上视", 0.11, 0.15, 0)
                part.ViewDisplayHidden
                设置图纸比例(proportion)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.175, 0.275, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.175, 0.275, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Sub Flange_drw(company$, name$, material$, code$, dz1$, proportion$， skills_requirement$, roughness#, outer_diameter#, step_diameter#)
                A4P(material, company, name, code)
                myView = Draw.CreateDrawViewFromModelView3(dz1, "*前视", 0.09, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象

                设置图纸比例(proportion)
                'part.ViewDisplayHidden '隐藏线不可见
                Object数组1 = 索引字符串（skills_requirement）
                技术要求（0.13, 0.09, Object数组1（0）, Object数组1（1）, Object数组1（2）, Object数组1（3））

                Dim SF1 As Object
                If Not roughness = 0 Then
                    SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "")
                    SF1.GetAnnotation().SetPosition2(0.19, 0.275, 0)
                End If

                part.ActivateView("工程图视图1")
                L1Segment = part.SketchManager.CreateLine(0, -outer_diameter / 2 - 0.005, 0, 0, outer_diameter / 2 + 0.005, 0)
                L1Segment.Select4(False, Nothing)
                part.CreateSectionViewAt5(0.17, 0.19, 0, " ", 128, Nothing, 0) '创建剖面图
                part.ActivateView("工程图视图2")
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象
                If Not step_diameter = 0 Then
                    part.ActivateView("工程图视图2")
                    part.Extension.SelectByID2("D1@凸台-拉伸1@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                    part.Extension.SelectByID2("D1@切除-拉伸1@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                    part.Extension.SelectByID2("D1@切除-拉伸2@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                    part.Extension.SelectByID2("D1@草图2@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                    part.Extension.SelectByID2("D1@草图5@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                    part.Extension.SelectByID2("D1@草图1@工程图4-SectionAssembly-1-1@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 1)
                    part.EditDelete()
                End If

                part.ClearSelection2(True)
            End Sub
            Public Sub H_c_1(company$, name$, material$, code$, dz1$, proportion$， skills_requirement$, roughness#)
                A4P(material, company, name, code)
                myView = Draw.CreateDrawViewFromModelView3(dz1, "*前视", 0.09, 0.19, 0)
                Draw.CreateDrawViewFromModelView3(dz1, "*右视", 0.15, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象

                设置图纸比例(proportion)
                'part.ViewDisplayHidden '隐藏线不可见
                Object数组1 = 索引字符串（skills_requirement）
                技术要求（0.13, 0.09, Object数组1（0）, Object数组1（1）, Object数组1（2））
                Dim SF1 As Object
                If Not roughness = 0 Then
                    SF1 = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "")
                    SF1.GetAnnotation().SetPosition2(0.19, 0.275, 0)
                End If


            End Sub
            Public Sub H_c_4(company$, name$, material$, code$, dz1$, proportion$， skills_requirement$, roughness#， circle_edge_distance#)
                A4P(material, company, name, code)
                myView = Draw.CreateDrawViewFromModelView3(dz1, "*前视", 0.09, 0.19, 0)
                Draw.CreateDrawViewFromModelView3(dz1, "*左视", 0.15, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象

                设置图纸比例(proportion)
                'part.ViewDisplayHidden '隐藏线不可见
                Object数组1 = 索引字符串（skills_requirement）
                技术要求（0.13, 0.09, Object数组1（0）, Object数组1（1）, Object数组1（2））
                Dim SF As Object
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "") '插入右上角粗糙度
                SF.GetAnnotation().SetPosition2(190 / 1000, 275 / 1000, 0)

                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(proportion, ":")
                分母 = a(1)

                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("D1@凸台-拉伸1@H472_2056-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                Annotation = DisplayDimension.GetAnnotation()
                Annotation.SetPosition(0.15, 0.19 + 3 * circle_edge_distance / 分母 / 2, 0) '移动标注
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D10@草图1@H472_2056-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
            End Sub
            Public Sub Rear_h_c_drw(company$, name$, material$, code$, dz1$, proportion$， skills_requirement$, roughness#,
                                            width#, height1#, height2#, height3#, chamfer_length#, chamfer_label$)
                A4P(material, company, name, code)
                myView = Draw.CreateDrawViewFromModelView3(dz1, "*前视", 0.09, 0.19, 0)
                Draw.CreateDrawViewFromModelView3(dz1, "*右视", 0.15, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象

                设置图纸比例(proportion)
                'part.ViewDisplayHidden '隐藏线不可见
                Object数组1 = 索引字符串（skills_requirement）
                技术要求（0.13, 0.09, Object数组1（0）, Object数组1（1）, Object数组1（2））

                Dim SF As Object
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "") '插入右上角粗糙度
                SF.GetAnnotation().SetPosition2(190 / 1000, 275 / 1000, 0)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("D13@草图1@H472_2057-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@草图1@H472_2057-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸1@H472_2057-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@草图1@H472_2057-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D5@草图1@H472_2057-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(proportion, ":")
                分母 = a(1)
                part.ActivateView("工程图视图2")
                Dim P1 As SldWorks.SketchPoint
                P1 = part.SketchManager.CreatePoint(-width / 2, -（height1 + height2 + height3) / 2 + chamfer_length, 0)
                P1.Select4(False, Nothing)
                'Dim myNote As Object
                Dim myAnnotation As Object
                myNote = part.InsertNote(chamfer_label)
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                myAnnotation.SetPosition(0.15 - width / 分母, 0.19 - （height2 + height3) / 2 / 分母, 0)


            End Sub
            Public Sub Additive_A4pDrw(dz$, Scale2#, front#, right#, up#, name$, material$, code$,
                               frontX#, frontY#, rightX#, rightY#, upX#, upY#,
                               skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$, roughness$)
                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见


                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", frontX#, frontY#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", rightX#, rightY#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", upX#, upY#, 0)
                End If


                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.164, 0.055, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText("江西兰叶科技有限公司")


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = Scale2
                SheetPr(4) = False
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild3()
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                 skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4）
                myNote.GetAnnotation().SetPosition(0.034, 0.09, 0)

                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象
                Dim SF As Object
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "") '插入右上角粗糙度
                SF.GetAnnotation().SetPosition2(190 / 1000, 275 / 1000, 0)
                part.Extension.SelectByID2("D1@凸台-拉伸1@A472_2008-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()


            End Sub
            Public Sub Front_and_rear_panel_installation_platform_A4pDrw(dz$, Scale2#, front#, right#, up#, name$, material$, code$,
                                                                frontX#, frontY#, rightX#, rightY#, upX#, upY#,
                                                                 skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$,
                                                                 roughness$)
                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见


                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", frontX#, frontY#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*右视", rightX#, rightY#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", upX#, upY#, 0)
                End If


                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.164, 0.055, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText("江西兰叶科技有限公司")


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = Scale2
                SheetPr(4) = False
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild3()
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                 skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4）
                myNote.GetAnnotation().SetPosition(0.034, 0.09, 0)

                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象
                Dim SF As Object
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "") '插入右上角粗糙度
                SF.GetAnnotation().SetPosition2(190 / 1000, 275 / 1000, 0)
                part.Extension.SelectByID2("D3@草图1@F126_2055-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0) '删除尺寸标注
                part.EditDelete()


            End Sub
            Public Sub Outlet_board_installation_platform_A4pDrw(dz$, Scale2#, front#, right#, up#, name$, material$, code$,
                                                         frontX#, frontY#, rightX#, rightY#, upX#, upY#,
                                                         skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$,
                                                         thick#, height#, roughness$)
                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见


                If front = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*前视", frontX#, frontY#, 0)
                End If
                If right = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*左视", rightX#, rightY#, 0)
                End If
                If up = 1 Then
                    myView = Draw.CreateDrawViewFromModelView3(dz, "*上视", upX#, upY#, 0)
                End If


                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.164, 0.055, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText("江西兰叶科技有限公司")


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = 1
                SheetPr(3) = Scale2
                SheetPr(4) = False
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild3()
                myNote = part.InsertNote(skills_requirement_title + Chr(13) + Chr(10) +
                                 skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4）
                myNote.GetAnnotation().SetPosition(0.034, 0.09, 0)

                part.ActivateView("工程图视图1")
                part.InsertModelAnnotations3(0, 32768, True, False, True, True)
                part.EditUndo2(1)
                part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128, True, False, True, True) '导入要显示的对象
                Dim SF, SF2, SF3 As Object
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", roughness, "", "") '插入右上角粗糙度
                SF.GetAnnotation().SetPosition2(190 / 1000, 275 / 1000, 0)
                part.ActivateView("工程图视图1")
                Dim P1, P2 As SketchPoint
                P1 = part.SketchManager.CreatePoint(0, height / 2, 0)
                SF2 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "") '添加粗糙度标识,不允许切削
                SF2.GetAnnotation().SetPosition2(P1.X, P1.Y, P1.Z)
                SF2.SetAngle(0)
                part.ActivateView("工程图视图1")
                P2 = part.SketchManager.CreatePoint(0, height / 2 - thick, 0)
                SF3 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                SF3.GetAnnotation().SetPosition2(P2.X, P2.Y, P2.Z)
                SF3.SetAngle(180 * PI / 180)
                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("D2@草图1@O126_2061-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
            End Sub
            Public Sub 工程图(id$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=123213;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from a123456", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = id$
                    dr.Read()
                Loop
                'part = swapp.ActiveDoc

                'swapp.OpenDoc6("E:\works\generator_parts_library\fan\assembly\5LY.435.002.SLDDRW", 3, 32, "", errors, longwarnings)
                ''MsgBox(1)
                'part.ActivateView("工程图视图1")
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'myView = part.SelectionManager.GetSelectedObject6(1, -1)
                ''MsgBox(1)
                A4P("", dr("company"), dr("name"), dr("Code"))
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.115, 0.2, 0)


                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(dr("proportion"), ":")
                分母 = a(1)


                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(0.09 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)

                myView = part.ActiveDrawingView
                myView.Crop()
                'MsgBox(1)
                'Dim myView1 As View
                'part.ActivateView("工程图视图1")
                'Dim L1s As SketchSegment
                'L1s = part.SketchManager.CreateLine(0, 0, 0, 0, 0.09 * 分母, 0)
                'L1s.Select4(False, Nothing)
                'myView1 = part.CreateSectionViewAt5(0.115, 0.2, 0, " ", 128, Nothing, 0) '创建剖面图,并切换方向

                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '隐藏视图
                'part.SuppressView
                'part.ClearSelection2(True)


                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                myNote = part.InsertNote(Object数组1（0） + Chr(13) + Chr(10) +
                Object数组1（1） + Chr(13) + Chr(10)）
                'Object数组1（2） + Chr(13) + Chr(10)

                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                myNote.GetAnnotation().SetPosition(0.031, 0.139, 0)
                插入零件标号(myView)
                插入BOM表(myView)
                'part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                'part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                'MsgBox(1)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()

            End Sub
            Public Sub A4PPP(dz3$, company$, name$, Code$, skills_requirement$)

                A4P("", company$, name$, Code$)

                'myView = Draw.CreateDrawViewFromModelView3(dz3$, "*前视", 0.11, 0.22, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz3$, "*右视", 0.11, 0.2, 0)
                part.ViewDisplayHidden
                '设置图纸比例(proportion)
                Object数组1 = 索引字符串（skills_requirement$）
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                'part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64 + 128 + 131072 + 1024, True, True, True, True)
                SF1 = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.175, 0.275, 0, 0, 1, "", "", "", "", "", "", "")
                SF1.GetAnnotation().SetPosition2(0.175, 0.275, 0)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
            End Sub
            Public Function 初始设置(类型#)
                If 类型 = 0 Then '关闭捕捉
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False) '捕捉
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
                ElseIf 类型 = 1 Then '激活捕捉,打开端点和草图点
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
                ElseIf 类型 = 2 Then '激活捕捉,打开端点和草图点
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, True) '靠近
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
                ElseIf 类型 = 3 Then '激活捕捉,打开端点和草图点
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                    swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
                End If

            End Function
            Public Sub 装配图初始化()
                swapp.Visible = True
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
                AssemblyDoc = swapp.ActiveDoc
                AssemblyTitle = AssemblyDoc.GetTitle
                part = swapp.ActiveDoc
                SketchManager = part.SketchManager
                FeatureManager = part.FeatureManager
                SelectionMgr = part.SelectionManager
                part.Extension.InsertScene("\scenes\01 basic scenes\00 soft box.p2s")

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swEdgesDefaultBulkSelection, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swEdgesHiddenEdgeSelectionInWireframe, True)

                swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swEdgesTangentEdgeDisplay, 0) '切边不可见
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swDisplayGraphicsComponents, True)


                'swapp.GetM

            End Sub
            Public Sub 定子铁芯装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_672_2126", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop


                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _8EQ_660_2007 As SldWorks.Component2
                Dim _8EQ_090_2040 As SldWorks.Component2
                Dim _8EQ_146_2064 As SldWorks.Component2
                Dim _8EQ_660_2007name As String
                Dim _8EQ_090_2040name As String
                Dim _8EQ_146_2064name As String
                Dim _8EQ_660_2007edge() As Object
                Dim _8EQ_090_2040edge() As Object
                Dim _8EQ_146_2064edge() As Object
                Dim _8EQ_660_2007face() As Object
                Dim _8EQ_090_2040face() As Object
                Dim _8EQ_146_2064face() As Object
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                'Dim I As Long
                'For I = 1 To 3
                '    Dim X As Double
                '    swapp.OpenDoc6(dr("Part address") + dr("Part" + I.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                '    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                '    X = 0
                '    Component2 = part.AddComponent5(dr("Part address") + dr("Part" + I.ToString + " Code") + dr("dz2"), 0, "", False, "", X, 0, 0)
                '    swapp.CloseDoc(dr("Part address") + dr("Part" + I.ToString + " Code") + dr("dz2"))
                '    Select Case I > 0
                '        Case I = 1
                '            _8EQ_146_2064 = Component2
                '        Case I = 2
                '            _8EQ_660_2007 = Component2
                '        Case I = 3
                '            _8EQ_090_2040 = Component2
                '    End Select
                '    X = X + 0.05
                'Next
                swapp.OpenDoc6(dr("Part address") + dr("Part3 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Part address") + dr("Part3 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Part address") + dr("Part3 Code") + dr("dz2"))
                _8EQ_090_2040 = Component2
                swapp.OpenDoc6(dr("Part address") + dr("Part1 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Part address") + dr("Part1 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Part address") + dr("Part1 Code") + dr("dz2"))
                _8EQ_146_2064 = Component2
                swapp.OpenDoc6(dr("Part address") + dr("Part2 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Part address") + dr("Part2 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Part address") + dr("Part2 Code") + dr("dz2"))
                _8EQ_660_2007 = Component2



                '渲染(_8EQ_660_2007, "c:\program files\solidworks corp\solidworks\data\graphics\materials\metal\aluminum\cast aluminum.p2m") '铸铝
                '渲染(_8EQ_090_2040, "c:\program files\solidworks corp\solidworks\data\graphics\materials\metal\aluminum\cast aluminum.p2m") '铸铝
                '渲染(_8EQ_146_2064, "c:\program files\solidworks corp\solidworks\data\graphics\materials\metal\aluminum\cast aluminum.p2m") '铸铝
                _8EQ_660_2007name = _8EQ_660_2007.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_660_2007.IGetBody.Name + "@" + _8EQ_660_2007name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_660_2007edge = swbody.GetEdges()
                _8EQ_660_2007face = swbody.GetFaces()
                facenumber1 = swbody.GetFaceCount()
                edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_090_2040name = _8EQ_090_2040.Name2()
                part.Extension.SelectByID2(_8EQ_090_2040.IGetBody.Name + "@" + _8EQ_090_2040name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_090_2040edge = swbody.GetEdges()
                _8EQ_090_2040face = swbody.GetFaces()
                facenumber2 = swbody.GetFaceCount()
                edgenumber2 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_146_2064name = _8EQ_146_2064.Name2()
                part.Extension.SelectByID2(_8EQ_146_2064.IGetBody.Name + "@" + _8EQ_146_2064name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_146_2064edge = swbody.GetEdges()
                _8EQ_146_2064face = swbody.GetFaces()
                facenumber3 = swbody.GetFaceCount()
                edgenumber3 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                '_8EQ_090_2040face（2edgenumber1
                '_8EQ_090_2040edge（1）
                '_8EQ_660_2007face3
                '_8EQ_090_2040face2
                ' _8EQ_146_2064face11
                SelectionMgr.AddSelectionListObject(_8EQ_660_2007face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_090_2040face（2）, Nothing)

                配合1("重合", 1)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_090_2040edge（1）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_660_2007edge（0）, Nothing)
                配合1("同轴")


                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_660_2007face（14）, Nothing)

                SelectionMgr.AddSelectionListObject(_8EQ_146_2064face（1）, Nothing)

                配合1("相切", 1)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_146_2064face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_090_2040face（1）, Nothing)
                配合1("重合", 1)



                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_146_2064edge（12）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 1, True, 10 / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                '配合1("距离", 1， True， 20 / 1000， 1， 0)


                part.ClearSelection2(True)
                part.Extension.SelectByID2("8EQ.090.2040-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)

                part.FeatureManager.FeatureLinearPattern5(2, 0.39, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)

                'part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                'Dim compsToMirror(0) As Component2
                'Dim swMirrorPlane As Feature
                'compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                'swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                'AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_090_2040edge（1）, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2("8EQ.660.2007-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                'SelectionMgr.AddSelectionListObject(_8EQ_090_2040edge（1）, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(6, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_090_2040edge（1）, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2("8EQ.146.2064-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)

                'SelectionMgr.AddSelectionListObject(_8EQ_090_2040edge（1）, 1) '选择并标记
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)




                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "定子铁芯装配")
                cusproper.Set2("代号", "5EQ.672.2126")
                cusproper.Set2("材料", " ")


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                '工程图
                inA3("", dr("company"), dr("name"), dr("Code"))
                'Dim myView As Object

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.13, 0.185, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.28, 0.185, 0)
                part.ViewDisplayHidden
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))

                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.34, 0.225， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6）, Object数组1（7）, Object数组1（8）, Object数组1（9））
                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.03, dr（"diameter2"） / 1000 / 2, 0, dr("length") / 1000 / 2 + 0.03, dr（"diameter1"） / 1000 / 2 + 0.01, 0)

                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2 - 0.01)
                part.ClearSelection2(True)
                Dim p1, p2, p3, p4, p5, p6 As SketchPoint
                Dim l1, l2, l3 As SketchLine
                Dim a1 As SketchArc
                part.ActivateView("工程图视图1")
                p1 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2 - 0.01, dr（"diameter1"） / 1000 / 2, 0)
                part.ActivateView("工程图视图1")
                p2 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2 - 0.01, dr（"diameter1"） / 1000 / 2 - dr（"width1"） / 1000, 0)
                part.ActivateView("工程图视图1")
                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                part.AddDimension2(0.08, 0.225, 0)

                part.ActivateView("工程图视图1")
                p3 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2, 0)
                part.ActivateView("工程图视图1")
                p4 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2, 0)
                p3.Select4(False, Nothing)
                p4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.13, 0.12, 0)
                part.EditDimensionProperties2(dr("type1"), dr("MAX2") / 1000, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.ActivateView("工程图视图1")
                p5 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, -dr（"diameter2"） / 1000 / 2, 0)
                part.ActivateView("工程图视图1")
                p6 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, dr（"diameter2"） / 1000 / 2, 0)
                p5.Select4(False, Nothing)
                p6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.18, 0.185, 0)
                SetTolvalue(dr("type2"), dr("arc_table_tol_max1"), dr("arc_table_tol_min"))
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                初始设置（1）
                part.ActivateView("工程图视图1")
                l1 = part.SketchManager.CreateLine(-dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2, 0, dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2, 0)
                part.ActivateView("工程图视图1")
                l2 = part.SketchManager.CreateLine(dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2, 0, dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2 + dr（"width2"） / 1000, 0)
                part.ActivateView("工程图视图1")
                l3 = part.SketchManager.CreateLine(dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2 + dr（"width2"） / 1000, 0, -dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2 - 0.2, 0)
                l1.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.13, 0.08, 0)
                part.EditDimensionProperties2(dr("type1"), dr("MAX2") / 1000, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                l2.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.18, 0.11, 0)
                SetTolvalue(dr("type2"), dr("arc_table_tol_max2"), dr("arc_table_tol_min"))
                Dim myNote As Object
                Dim myAnnotation As Object
                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(-0.17349, 0.172229, 0#)
                myNote = part.InsertNote(dr("note1"))
                myNote.LockPosition = False
                myNote.Angle = 0
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)

                myAnnotation.SetPosition(0.245, 0.24, 0)
                part.ClearSelection2(True)

                myNote = part.InsertNote(dr("note2"))

                myNote.LockPosition = False
                myNote.Angle = PI / 2
                myNote.SetBalloon(0, 0)
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(0, 0, True, False, False, False)
                myAnnotation.SetPosition(0.185, 0.11, 0)
                part.ActivateView("工程图视图2")
                a1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, dr("diameter1") / 1000 / 2)
                DisplayDimension = part.AddDimension2(0.32, 0.23, 0)
                SetTolvalue(dr("type2"), dr("arc_table_tol_max3"), dr("arc_table_tol_min"))

                part.ActivateView("工程图视图1")
                part.SketchManager.CreatePoint(dr("length") / 1000 / 2, dr（"diameter2"） / 1000 / 2 + 0.05, 0)
                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, dr（"welding1"）, dr（"welding2"）, "", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, dr（"welding3"）, False)




                'Dim vComponents As Object

                'Dim vEdges1, vPoint1 As Object


                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'View = SelectionMgr.GetSelectedObject6(1, -1)
                'vComponents = View.GetVisibleComponents() '获得可视组件集合
                'vEdges1 = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                'vPoint1 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合
                'part.ClearSelection2(True)
                'Dim i As Integer
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(vEdges1(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop

                初始设置（0）


                插入零件标号(myView1)
                插入BOM表(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()

            End Sub
            Public Sub 励磁机定子铁心装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_682_2019", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _8EQ_660_2046 As SldWorks.Component2
                Dim _8EQ_660_2046name As String
                Dim _8EQ_660_2046edge() As Object
                Dim _8EQ_660_2046face() As Object
                AssemblyDoc = swapp.ActiveDoc
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                swapp.OpenDoc6(dr("Part address") + dr("Part1 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Part address") + dr("Part1 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Part address") + dr("Part1 Code") + dr("dz2"))
                _8EQ_660_2046 = Component2


                _8EQ_660_2046name = _8EQ_660_2046.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_660_2046.IGetBody.Name + "@" + _8EQ_660_2046name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_660_2046edge = swbody.GetEdges()
                _8EQ_660_2046face = swbody.GetFaces()
                facenumber1 = swbody.GetFaceCount()
                edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)


                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "励磁机定子铁心装配")
                cusproper.Set2("代号", "5EQ.682.2019")
                cusproper.Set2("材料", " ")
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                '工程图
                inA3("", dr("company"), dr("name"), dr("Code"))
                'Dim myView As Object

                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.15, 0.18, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*左视", 0.32, 0.18, 0)
                part.ViewDisplayHidden
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.06, 0.06， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.03, dr（"diameter4"） / 1000 / 2, 0, dr("length") / 1000 / 2 + 0.03, dr（"diameter1"） / 1000 / 2 + 0.01, 0)

                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2 - 0.01)
                part.ClearSelection2(True)
                Dim p1, p2, p3, p4, p5, p6 As SketchPoint
                Dim l1, l2, l3 As SketchLine
                Dim a1, a2, a3, a4 As SketchArc
                part.ActivateView("工程图视图1")
                a1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, dr("diameter2") / 1000 / 2)
                part.SketchManager.CreateConstructionGeometry()
                a1.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.176, 0.143, 0)
                'DisplayDimension.LeaderVisibility = 2 '或者1
                'DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                part.ActivateView("工程图视图1")
                a2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, dr("diameter3") / 1000 / 2)
                part.SketchManager.CreateConstructionGeometry()
                a2.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.2, 0.2, 0)
                'DisplayDimension.LeaderVisibility = 2 '或者1
                'DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                part.ActivateView("工程图视图1")
                a3 = part.SketchManager.CreateCircleByRadius(0, 0, 0, dr("diameter4") / 1000 / 2)
                part.SketchManager.CreateConstructionGeometry()
                a3.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.1, 0.18, 0)
                SetTolvalue(8, dr("arc_table_tol_max1"), dr("arc_table_tol_min1"))
                'DisplayDimension.LeaderVisibility = 2 '或者1
                'DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                part.ActivateView("工程图视图1")
                a4 = part.SketchManager.CreateCircleByRadius(dr("diameter2") / 1000 / 2, 0, 0, dr("diameter5") / 1000 / 2)
                part.SketchManager.CreateConstructionGeometry()
                a4.Select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0.255, 0.18, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "7x<MOD-DIAM>", "", True, "", "", False)
                'DisplayDimension.LeaderVisibility = 2 '或者1
                'DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线

                part.ActivateView("工程图视图2")
                p1 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, -dr（"diameter1"） / 1000 / 2, 0)
                part.ActivateView("工程图视图2")
                p2 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, dr（"diameter1"） / 1000 / 2, 0)
                p1.Select4(False, Nothing)
                p2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.28, 0.18, 0)
                SetTolvalue(8, dr("arc_table_tol_max2"), dr("arc_table_tol_min2"))

                part.ActivateView("工程图视图2")
                p3 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, 0.05, 0)
                part.ActivateView("工程图视图2")
                p4 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, 0.05, 0)
                p3.Select4(False, Nothing)
                p4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.32, 0.18 + 0.05, 0)
                part.ClearSelection2(True)
                Dim myGtol As Object
                Dim myAnno As Annotation
                Dim myNote As Object
                Dim myAnnotation As Object
                p2.Select4(False, Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2（1, dr("symbol1"), False, "", False, "", "", "", ""）
                myGtol.SetFrameValues（1, dr("Geometric_tolerance1"), "", dr("letter1"), "", ""）
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.265, 0.28, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                p5 = part.SketchManager.CreatePoint(0, -dr("diameter4") / 1000 / 2, 0)

                p5.Select4(False, Nothing)
                'part.Extension.SelectByID2(a3.GetName, "SKETCHSEGMENT", 0.123, 0.12, 0, False, 0, Nothing, 0)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2（1, dr("symbol2"), False, "", False, "", "", "", ""）
                myGtol.SetFrameValues（1, dr("Geometric_tolerance2"), "", dr("letter2"), "", ""）
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.145, 0.13, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)

                part.Extension.SelectByID2("图纸1", "SHEET", 0.1, 0.188, 0, False, 0, Nothing, 0)
                Dim myDatumTag As DatumTag

                myDatumTag = part.InsertDatumTag2()
                myDatumTag.FilledTriangle = True
                myDatumTag.Shoulder = False
                myDatumTag.SetLabel("A")
                myDatumTag.GetAnnotation()
                myDatumTag.GetAnnotation().SetPosition(0.1, 0.2, 0)



                part.Extension.SelectByID2("图纸1", "SHEET", 0.3, 0.14, 0, False, 0, Nothing, 0)


                myDatumTag = part.InsertDatumTag2()
                myDatumTag.FilledTriangle = True
                myDatumTag.Shoulder = False
                myDatumTag.SetLabel("B")
                myDatumTag.GetAnnotation()
                myDatumTag.GetAnnotation().SetPosition(0.29, 0.15, 0)
                'myDatumTag.SetAngle(90 * PI / 180)

                part.Extension.SelectByID2("图纸1", "SHEET", 0.148, 0.133, 0, False, 0, Nothing, 0)
                part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                part.ActivateView("工程图视图2")
                p6 = part.SketchManager.CreatePoint(0, dr（"diameter1"） / 1000 / 2, 0)
                p6.Select4(False, Nothing)
                part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "3.2", "", "RZ", "", "", "")
                part.ClearSelection2(True)
                part.SketchManager.CreatePoint(0.14, 0.176, 0)

                part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.395, 0.27, 0, 0, 1, "", "", "", "", "", "", "")

                Dim vComponents As Object

                Dim vEdges1, vPoint1 As Object


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = SelectionMgr.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges1 = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                vPoint1 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合
                part.ClearSelection2(True)
                'Dim i As Integer
                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(vEdges1(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop
                SelectionMgr.AddSelectionListObject(vEdges1(7), Nothing)
                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "3", "<WELD-BACK>", "", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "6", False)



                插入零件标号(myView)
                插入BOM表(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 带绕组定子铁心装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_673_2191", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop


                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _5EQ_672_2126 As SldWorks.Component2
                Dim _8EQ_526_2268 As SldWorks.Component2
                Dim _8EQ_769_2235 As SldWorks.Component2
                Dim _8EQ_769_2236 As SldWorks.Component2
                Dim _8EQ_783_2112 As SldWorks.Component2

                Dim _5EQ_682_2019name As String
                Dim _8EQ_526_2268name As String
                Dim _8EQ_769_2235name As String
                Dim _8EQ_769_2236name As String
                Dim _8EQ_783_2112name As String

                Dim _5EQ_682_2019edge() As Object
                Dim _8EQ_526_2268edge() As Object
                Dim _8EQ_769_2235edge() As Object
                Dim _8EQ_769_2236edge() As Object
                Dim _8EQ_783_2112edge() As Object


                Dim _5EQ_682_2019face() As Object
                Dim _8EQ_526_2268face() As Object
                Dim _8EQ_769_2235face() As Object
                Dim _8EQ_769_2236face() As Object
                Dim _8EQ_783_2112face() As Object

                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                'swapp.OpenDoc6(dr("Part address") + dr("Part3 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                'part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'Component2 = part.AddComponent5(dr("Part address") + dr("Part3 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                'swapp.CloseDoc(dr("Part address") + dr("Part3 Code") + dr("dz2"))
                '_5EQ_682_2019 = Component2

                Dim i As Integer = 1
                For i = 1 To 1
                    swapp.OpenDoc6(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 0, "", False, "", 0.05 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"))
                    Select Case i > 0
                        Case i = 1
                            _5EQ_672_2126 = Component2

                    End Select
                Next



                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "带绕组定子铁心装配")
                cusproper.Set2("代号", "5EQ.673.2191")
                cusproper.Set2("材料", " ")

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 8)
                inA4("", dr("company"), dr("name"), dr("Code"))
                'Dim myView As Object


                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*左视", 0.135, 0.125, 0)
                part.ViewDisplayHidden


                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.03, dr（"diameter2"） / 1000 / 2, 0, dr("length") / 1000 / 2 + 0.03, dr（"diameter1"） / 1000 / 2 + 0.01, 0)

                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2 - 0.01)
                part.ClearSelection2(True)
                'part.ActivateView("工程图视图1")
                'P3 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, 0.05, 0)
                'part.ActivateView("工程图视图1")
                'P4 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, 0.05, 0)
                'P3.Select4(False, Nothing)
                'P4.Select4(True, Nothing)
                'DisplayDimension = part.AddDimension2(0.115, 0.15 + 0.05, 0)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.01, 0, 0, dr("length") / 1000 / 2 + 0.01, dr("diameter1") / 1000 / 2 + 0.01, 0)
                myView1.Crop()





                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.187, 0.178， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6）, Object数组1（7）, Object数组1（8）, Object数组1（9）, Object数组1（10）, Object数组1（11）, Object数组1（12）, Object数组1（13））

                'myNote = part.InsertNote(Object数组1（0） + Chr(13) + Chr(10) +
                '                          Object数组1（1） + Chr(13) + Chr(10) +
                '                          Object数组1（2） + Chr(13) + Chr(10) +
                '                          Object数组1（3） + Chr(13) + Chr(10) +
                '                          Object数组1（4） + Chr(13) + Chr(10) +
                '                          Object数组1（5） + Chr(13) + Chr(10) +
                '                          Object数组1（6） + Chr(13) + Chr(10)
                '                        ）
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("细节项目257@工程图视图1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("细节项目256@工程图视图1", "NOTE", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                插入零件标号(myView1)

                插入BOM表2(myView1, 2)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()


            End Sub
            Public Sub 带绕组励磁机定子铁心装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_673_2081", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop


                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _5EQ_682_2019 As SldWorks.Component2
                Dim _8EQ_526_2268 As SldWorks.Component2
                Dim _8EQ_769_2235 As SldWorks.Component2
                Dim _8EQ_769_2236 As SldWorks.Component2
                Dim _8EQ_783_2112 As SldWorks.Component2

                Dim _5EQ_682_2019name As String
                Dim _8EQ_526_2268name As String
                Dim _8EQ_769_2235name As String
                Dim _8EQ_769_2236name As String
                Dim _8EQ_783_2112name As String

                Dim _5EQ_682_2019edge() As Object
                Dim _8EQ_526_2268edge() As Object
                Dim _8EQ_769_2235edge() As Object
                Dim _8EQ_769_2236edge() As Object
                Dim _8EQ_783_2112edge() As Object


                Dim _5EQ_682_2019face() As Object
                Dim _8EQ_526_2268face() As Object
                Dim _8EQ_769_2235face() As Object
                Dim _8EQ_769_2236face() As Object
                Dim _8EQ_783_2112face() As Object

                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                'swapp.OpenDoc6(dr("Part address") + dr("Part3 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                'part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'Component2 = part.AddComponent5(dr("Part address") + dr("Part3 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                'swapp.CloseDoc(dr("Part address") + dr("Part3 Code") + dr("dz2"))
                '_5EQ_682_2019 = Component2

                Dim i As Integer = 1
                For i = 1 To 1
                    swapp.OpenDoc6(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 0, "", False, "", 0.05 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"))
                    Select Case i > 0
                        Case i = 1
                            _5EQ_682_2019 = Component2
                        Case i = 2
                            _8EQ_526_2268 = Component2
                        Case i = 3
                            _8EQ_769_2235 = Component2
                        Case i = 4
                            _8EQ_769_2236 = Component2
                        Case i = 5
                            _8EQ_783_2112 = Component2

                    End Select
                Next


                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "带绕组励磁机定子铁心装配")
                cusproper.Set2("代号", "5EQ.673.2081")
                cusproper.Set2("材料", " ")
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)
                A4P("", dr("company"), dr("name"), dr("Code"))

                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.115, 0.15, 0)


                part.ViewDisplayHidden

                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.03, dr（"diameter2"） / 1000 / 2, 0, dr("length") / 1000 / 2 + 0.03, dr（"diameter1"） / 1000 / 2 + 0.01, 0)

                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2 - 0.01)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                P3 = part.SketchManager.CreatePoint(-dr("length") / 1000 / 2, 0.05, 0)
                part.ActivateView("工程图视图1")
                P4 = part.SketchManager.CreatePoint(dr("length") / 1000 / 2, 0.05, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.115, 0.15 + 0.05, 0)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr("length") / 1000 / 2 - 0.01, 0, 0, dr("length") / 1000 / 2 + 0.01, dr("diameter1") / 1000 / 2 + 0.01, 0)
                myView.Crop()

                Object数组1 = 索引字符串（dr（"skills_requirement"））
                '技术要求（0.031, 0.139， Object数组1（0）， Object数组1（1）， Object数组1（2））
                'myNote = part.InsertNote(Object数组1（0））

                myNote = part.InsertNote(Object数组1（0） + Chr(13) + Chr(10) +
                                          Object数组1（1） + Chr(13) + Chr(10) +
                                          Object数组1（2） + Chr(13) + Chr(10) +
                                          Object数组1（3） + Chr(13) + Chr(10) +
                                          Object数组1（4） + Chr(13) + Chr(10) +
                                          Object数组1（5） + Chr(13) + Chr(10) +
                                          Object数组1（6） + Chr(13) + Chr(10)
                                        ）
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                myNote.GetAnnotation().SetPosition(0.031, 0.139, 0)

                插入零件标号(myView)

                插入BOM表(myView)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()


            End Sub
            Public Sub 励磁机定子装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_681_2026", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")

                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _5EQ_673_2081 As SldWorks.Component2
                Dim _8EQ_013_2010 As SldWorks.Component2
                Dim 小垫圈 As SldWorks.Component2
                Dim 弹簧垫圈 As SldWorks.Component2
                Dim 六角螺栓 As SldWorks.Component2

                Dim _5EQ_673_2081name As String
                Dim _8EQ_013_2010name As String
                Dim 小垫圈name As String
                Dim 弹簧垫圈name As String
                Dim 六角螺栓name As String


                Dim _5EQ_673_2081edge() As Object
                Dim _8EQ_013_2010edge() As Object
                Dim 小垫圈edge() As Object
                Dim 弹簧垫圈edge() As Object
                Dim 六角螺栓edge() As Object

                Dim _5EQ_673_2081face() As Object
                Dim _8EQ_013_2010face() As Object
                Dim 小垫圈face() As Object
                Dim 弹簧垫圈face() As Object
                Dim 六角螺栓face() As Object
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)

                swapp.OpenDoc6(dr("Part address") + dr("Part5 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Part address") + dr("Part5 Code") + dr("dz2"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Part address") + dr("Part5 Code") + dr("dz2"))
                _8EQ_013_2010 = Component2
                swapp.OpenDoc6(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"), 0, "", False, "", 1, 0, 0)
                swapp.CloseDoc(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"))
                _5EQ_673_2081 = Component2
                For i = 2 To 4
                    swapp.OpenDoc6(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 0, "", False, "", 0.5 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"))
                    Select Case i > 0
                        Case i = 2
                            六角螺栓 = Component2
                        Case i = 3
                            弹簧垫圈 = Component2
                        Case i = 4
                            小垫圈 = Component2
                    End Select
                Next

                '_5EQ_673_2081name = _5EQ_673_2081.Name2()
                'part.Extension.SelectByID2(_5EQ_673_2081.IGetBody.Name + "@" + _5EQ_673_2081name + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                '_5EQ_673_2081edge = swbody.GetEdges()
                '_5EQ_673_2081face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                'part.ClearSelection2(True)

                _8EQ_013_2010name = _8EQ_013_2010.Name2()
                part.Extension.SelectByID2(_8EQ_013_2010.IGetBody.Name + "@" + _8EQ_013_2010name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_013_2010edge = swbody.GetEdges()
                _8EQ_013_2010face = swbody.GetFaces()
                facenumber2 = swbody.GetFaceCount()
                edgenumber2 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                六角螺栓name = 六角螺栓.Name2()
                part.Extension.SelectByID2(六角螺栓.IGetBody.Name + "@" + 六角螺栓name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                六角螺栓edge = swbody.GetEdges()
                六角螺栓face = swbody.GetFaces()
                facenumber3 = swbody.GetFaceCount()
                edgenumber3 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                弹簧垫圈name = 弹簧垫圈.Name2()
                part.Extension.SelectByID2(弹簧垫圈.IGetBody.Name + "@" + 弹簧垫圈name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                弹簧垫圈edge = swbody.GetEdges()
                弹簧垫圈face = swbody.GetFaces()
                facenumber4 = swbody.GetFaceCount()
                edgenumber4 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                小垫圈name = 小垫圈.Name2()
                part.Extension.SelectByID2(小垫圈.IGetBody.Name + "@" + 小垫圈name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                小垫圈edge = swbody.GetEdges()
                小垫圈face = swbody.GetFaces()
                facenumber5 = swbody.GetFaceCount()
                edgenumber5 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                'part.Extension.SelectByID2("5EQ.673.2081-1@*/5EQ.682.2019-1@5EQ.673.2081/8EQ.660.2046-1@5EQ.682.2019", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2(dr("Part1 Code") + "-1@*/" + dr("PA1") + "-1@" + dr("Part1 Code") + "/" + dr("PA1 Code") + "-1@" + dr("PA1"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)


                Dim com1 As Component2
                Dim body1() As Object
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face6 = body1(0).GetFaces
                edge6 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                '遍历（1, edge6, 1000, 0）
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(edge6（9）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_013_2010face（297）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_013_2010face（13）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（2）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_013_2010face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（236）, Nothing)
                ''MsgBox(1)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(六角螺栓face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(弹簧垫圈face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(六角螺栓face（21）, Nothing)
                SelectionMgr.AddSelectionListObject(弹簧垫圈face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(六角螺栓face（21）, Nothing)
                SelectionMgr.AddSelectionListObject(小垫圈face（0）, Nothing)
                配合1("同轴", 1)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(小垫圈face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(弹簧垫圈face（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                '遍历（1, face6, 1000, 5）
                SelectionMgr.AddSelectionListObject(小垫圈face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(edge6（3）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(六角螺栓face（21）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（236）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                '遍历（1, _8EQ_013_2010edge, 1000, 370）
                SelectionMgr.AddSelectionListObject(_8EQ_013_2010edge（371）, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                'part.Extension.SelectByID2("8EQ.660.2007-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T5782_2000_六角螺栓M6-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T93_1987_弹簧垫圈6-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T848_2002_小垫圈6-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(dr("number"), 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "励磁机定子装配")
                cusproper.Set2("代号", "5EQ.681.2026")
                cusproper.Set2("材料", " ")


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 8)

                A4P("", dr("company"), dr("name"), dr("Code"))

                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.115, 0.15, 0)



                part.ViewDisplayHidden
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-0.0145, 0, 0, (dr("width1") / 1000 + dr("width2") / 1000 + dr("width2") / 1000) / 2, dr("diameter1") / 1000 / 2 + 0.01, 0)
                part.CreateBreakOutSection(dr("diameter1") / 1000 / 2)
                part.ClearSelection2(True)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-(dr("width1") / 1000 + dr("width2") / 1000 + dr("width2") / 1000) / 2, 0, 0, (dr("width1") / 1000 + dr("width2") / 1000 + dr("width2") / 1000) / 2, dr("diameter1") / 1000 / 2 + 0.01, 0)
                myView.Crop()

                Object数组1 = 索引字符串（dr（"skills_requirement"））
                '技术要求（0.031, 0.139， Object数组1（0）， Object数组1（1）， Object数组1（2））
                'myNote = part.InsertNote(Object数组1（0））

                myNote = part.InsertNote(Object数组1（0） + Chr(13) + Chr(10) +
                                          Object数组1（1） + Chr(13) + Chr(10) +
                                          Object数组1（2） + Chr(13) + Chr(10)
                                        ）
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                myNote.GetAnnotation().SetPosition(0.031, 0.139, 0)

                插入零件标号(myView)

                插入BOM表(myView)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()

            End Sub
            Public Sub 机座装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_034_2175", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop


                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc

                Dim _8EQ_180_2057 As SldWorks.Component2
                Dim _8EQ_004_2163 As SldWorks.Component2
                Dim _8EQ_130_2187 As SldWorks.Component2
                Dim _8EQ_180_2058 As SldWorks.Component2
                Dim _8EQ_472_2008 As SldWorks.Component2
                Dim _8EQ_472_2056 As SldWorks.Component2
                Dim _8EQ_150_3350 As SldWorks.Component2
                Dim _8EQ_150_3351 As SldWorks.Component2
                Dim _8EQ_150_3349 As SldWorks.Component2
                Dim _8EQ_126_2055 As SldWorks.Component2
                Dim _8EQ_126_2061 As SldWorks.Component2





                Dim _8EQ_180_2057name As String
                Dim _8EQ_004_2163name As String
                Dim _8EQ_130_2187name As String
                Dim _8EQ_180_2058name As String
                Dim _8EQ_472_2008name As String
                Dim _8EQ_472_2056name As String
                Dim _8EQ_150_3350name As String
                Dim _8EQ_150_3351name As String
                Dim _8EQ_150_3349name As String
                Dim _8EQ_126_2055name As String
                Dim _8EQ_126_2061name As String


                Dim _8EQ_180_2057edge() As Object
                Dim _8EQ_004_2163edge() As Object
                Dim _8EQ_130_2187edge() As Object
                Dim _8EQ_180_2058edge() As Object
                Dim _8EQ_472_2008edge() As Object
                Dim _8EQ_472_2056edge() As Object
                Dim _8EQ_150_3350edge() As Object
                Dim _8EQ_150_3351edge() As Object
                Dim _8EQ_150_3349edge() As Object
                Dim _8EQ_126_2055edge() As Object
                Dim _8EQ_126_2061edge() As Object



                Dim _8EQ_180_2057face() As Object
                Dim _8EQ_004_2163face() As Object
                Dim _8EQ_130_2187face() As Object
                Dim _8EQ_180_2058face() As Object
                Dim _8EQ_472_2008face() As Object
                Dim _8EQ_472_2056face() As Object
                Dim _8EQ_150_3350face() As Object
                Dim _8EQ_150_3351face() As Object
                Dim _8EQ_150_3349face() As Object
                Dim _8EQ_126_2055face() As Object
                Dim _8EQ_126_2061face() As Object
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                Dim i As Integer

                For i = 1 To 5
                    swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 0, "", False, "", 0.05 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"))
                    Select Case i > 0
                        Case i = 1
                            _8EQ_180_2057 = Component2
                        Case i = 2
                            _8EQ_004_2163 = Component2
                        Case i = 3
                            _8EQ_130_2187 = Component2

                        Case i = 4
                            _8EQ_180_2058 = Component2
                        Case i = 5
                            _8EQ_472_2008 = Component2
                            'Case i = 6
                            '    _8EQ_472_2056 = Component2
                            'Case i = 7
                            '    _8EQ_150_3350 = Component2
                            'Case i = 8
                            '    _8EQ_150_3351 = Component2
                            'Case i = 9
                            '    _8EQ_150_3349 = Component2

                            'Case i = 10
                            '    _8EQ_126_2055 = Component2
                            'Case i = 11
                            '    _8EQ_126_2061 = Component2
                            'Case i = 12
                            '    _8EQ_472_2056 = Component2

                    End Select
                Next

                For i = 6 To 11
                    swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 0, "", False, "", -dr("diameter1") / 1000 - 0.05 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"))
                    Select Case i > 0
                        Case i = 6
                            _8EQ_472_2056 = Component2
                        Case i = 7
                            _8EQ_150_3350 = Component2
                        Case i = 8
                            _8EQ_150_3351 = Component2
                        Case i = 9
                            _8EQ_150_3349 = Component2

                        Case i = 10
                            _8EQ_126_2055 = Component2
                        Case i = 11
                            _8EQ_126_2061 = Component2
                    End Select

                Next
                _8EQ_180_2057name = _8EQ_180_2057.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_180_2057.IGetBody.Name + "@" + _8EQ_180_2057name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_180_2057edge = swbody.GetEdges()
                _8EQ_180_2057face = swbody.GetFaces()
                facenumber1 = swbody.GetFaceCount()
                edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_004_2163name = _8EQ_004_2163.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_004_2163.IGetBody.Name + "@" + _8EQ_004_2163name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_004_2163edge = swbody.GetEdges()
                _8EQ_004_2163face = swbody.GetFaces()
                facenumber2 = swbody.GetFaceCount()
                edgenumber2 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_130_2187name = _8EQ_130_2187.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_130_2187.IGetBody.Name + "@" + _8EQ_130_2187name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_130_2187edge = swbody.GetEdges()
                _8EQ_130_2187face = swbody.GetFaces()
                facenumber3 = swbody.GetFaceCount()
                edgenumber3 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_180_2058name = _8EQ_180_2058.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_180_2058.IGetBody.Name + "@" + _8EQ_180_2058name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_180_2058edge = swbody.GetEdges()
                _8EQ_180_2058face = swbody.GetFaces()
                facenumber4 = swbody.GetFaceCount()
                edgenumber4 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_472_2008name = _8EQ_472_2008.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_472_2008.IGetBody.Name + "@" + _8EQ_472_2008name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_472_2008edge = swbody.GetEdges()
                _8EQ_472_2008face = swbody.GetFaces()
                facenumber5 = swbody.GetFaceCount()
                edgenumber5 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_472_2056name = _8EQ_472_2056.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_472_2056.IGetBody.Name + "@" + _8EQ_472_2056name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_472_2056edge = swbody.GetEdges()
                _8EQ_472_2056face = swbody.GetFaces()
                facenumber6 = swbody.GetFaceCount()
                edgenumber6 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_150_3350name = _8EQ_150_3350.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_150_3350.IGetBody.Name + "@" + _8EQ_150_3350name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_150_3350edge = swbody.GetEdges()
                _8EQ_150_3350face = swbody.GetFaces()
                facenumber7 = swbody.GetFaceCount()
                edgenumber7 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_150_3351name = _8EQ_150_3351.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_150_3351.IGetBody.Name + "@" + _8EQ_150_3351name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_150_3351edge = swbody.GetEdges()
                _8EQ_150_3351face = swbody.GetFaces()
                facenumber8 = swbody.GetFaceCount()
                edgenumber8 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_150_3349name = _8EQ_150_3349.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_150_3349.IGetBody.Name + "@" + _8EQ_150_3349name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_150_3349edge = swbody.GetEdges()
                _8EQ_150_3349face = swbody.GetFaces()
                facenumber9 = swbody.GetFaceCount()
                edgenumber9 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_126_2055name = _8EQ_126_2055.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_126_2055.IGetBody.Name + "@" + _8EQ_126_2055name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_126_2055edge = swbody.GetEdges()
                _8EQ_126_2055face = swbody.GetFaces()
                facenumber10 = swbody.GetFaceCount()
                edgenumber10 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                _8EQ_126_2061name = _8EQ_126_2061.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(_8EQ_126_2061.IGetBody.Name + "@" + _8EQ_126_2061name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                _8EQ_126_2061edge = swbody.GetEdges()
                _8EQ_126_2061face = swbody.GetFaces()
                facenumber11 = swbody.GetFaceCount()
                edgenumber11 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_180_2057edge（3）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163edge（107）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_180_2058edge（3）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163edge（105）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_180_2057face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_130_2187face（7）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_130_2187face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（36）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)
                '1

                SelectionMgr.AddSelectionListObject(_8EQ_130_2187edge（14）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 1, False, dr("Rib width") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_130_2187edge（14）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(16, 1, False, 0, 0， 0, 0, 0, 0, 0, 0, False, False, 0, 0)

                '遍历（1, _8EQ_472_2008face, 1000, 0）
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_180_2057face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_472_2008face（4）, Nothing)

                AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_180_2057face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_472_2008edge（8）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_472_2008edge（12）, Nothing)
                AxisY.Select2(True, Nothing)
                AssemblyDoc.AddMate5(6, 1, True, 0, 0, 0, 0, 0, 83 / 180 * PI, PI, 0, False, False, 0, 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_180_2057face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_472_2008edge（11）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_150_3350edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("重合", 0)

                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_150_3350face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_180_2057face（2）, Nothing)

                AssemblyDoc.AddMate5(5, 0, False, （dr("Thickness7") - dr("Thickness8") + dr("Thickness9")） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离

                part.ClearSelection2(True)



                part.Extension.SelectByID2(dr("Part7 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                Feature1 = part.FeatureManager.FeatureLinearPattern5(2, (2 * dr("Thickness8") - 2 * dr("Thickness9") - dr("Thickness10")) / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(_8EQ_472_2056edge（10）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_472_2056edge（3）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_472_2056face（9）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_472_2056face（12）, Nothing)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, False, （dr("Thickness1") - dr("Thickness2") - dr("Thickness3") - dr("Thickness4") - dr("Thickness5") - dr("Thickness6") / 2） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离

                part.ClearSelection2(True)


                part.Extension.SelectByID2("重合8", "MATE", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("重合9", "MATE", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                SelectionMgr.AddSelectionListObject(_8EQ_150_3350edge（1）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_150_3349edge（11）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_150_3350face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_150_3349face（1）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, （dr("Thickness9")） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_150_3350face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_150_3351face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_150_3350edge（11）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_150_3351edge（6）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_150_3349edge（9）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_150_3351edge（7）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_126_2055edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_126_2055face（3）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_126_2055edge（7）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(_8EQ_126_2055face（9）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_180_2058face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, （dr("width3") + dr("width2") - dr("width4") / 2） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_126_2061face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_180_2058face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness11") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(_8EQ_126_2061face（12）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, True, dr("width5") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_126_2061face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(_8EQ_004_2163face（37）, Nothing)
                配合1("相切", 1)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("重合7", "MATE", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("重合13", "MATE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("重合14", "MATE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("重合15", "MATE", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(_8EQ_180_2057edge（1）, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part3 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part5 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(_8EQ_180_2057edge（1）, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part5 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(2, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part8 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part10 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part10 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part10 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part11 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, (dr("Thickness12") - dr("width5")) / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                '尺寸标注
                Dim P1, P2, P3, P4, P5, P6 As SketchPoint
                SelectPlane("right")
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint((dr("Thickness1")) / 1000, dr("diameter1") / 2 / 1000, 0)
                P2 = part.SketchManager.CreatePoint((dr("Thickness1")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, -(dr("Thickness1")) / 1000 - 0.1)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                part.ClearSelection2(True)


                P3 = part.SketchManager.CreatePoint((dr("Thickness1")) / 1000, dr("diameter2") / 2 / 1000, 0)
                P4 = part.SketchManager.CreatePoint((dr("Thickness1")) / 1000, -dr("diameter2") / 2 / 1000, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, 0, -(dr("Thickness1")) / 1000 - 0.04)
                DisplayDimension.LeaderVisibility = 2 '或者1
                DisplayDimension.WitnessVisibility = 2 '或者1‘隐藏尺寸线和延伸线
                SetTolvalue(8, dr("arc_table_tol_max1"), dr("arc_table_tol_min1"))
                part.ClearSelection2(True)

                P5 = part.SketchManager.CreatePoint((-dr("Thickness6") / 2) / 1000, dr("diameter1") / 2 / 1000, 0)
                P6 = part.SketchManager.CreatePoint((dr("Thickness1") - dr("Thickness6") / 2) / 1000, dr("diameter1") / 2 / 1000, 0)
                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, dr("diameter1") / 2 / 1000 + 0.05, -(dr("Thickness1") - dr("Thickness6") / 2) / 2 / 1000)
                SetTolvalue(8, dr("arc_table_tol_max2"), dr("arc_table_tol_min2"))
                part.ClearSelection2(True)

                P1 = part.SketchManager.CreatePoint((dr("Thickness6") / 2) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P2 = part.SketchManager.CreatePoint((dr("Thickness6") / 2 + dr("Thickness7")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -dr("diameter1") / 2 / 1000 - 0.2, (dr("Thickness6") / 2 - dr("Thickness7")) / 1000 / 2)
                SetTolvalue(8, dr("arc_table_tol_max3"), dr("arc_table_tol_min3"))
                part.ClearSelection2(True)


                P1 = part.SketchManager.CreatePoint((-dr("Thickness6") / 2 + dr("Thickness7") + dr("Thickness8")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P2 = part.SketchManager.CreatePoint((-dr("Thickness6") / 2 + dr("Thickness7") - dr("Thickness8")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -dr("diameter1") / 2 / 1000 - 0.15, -(-dr("Thickness6") / 2 + dr("Thickness7") + dr("Thickness8")) / 1000 / 2)
                part.ClearSelection2(True)

                P3 = part.SketchManager.CreatePoint((-dr("Thickness6") / 2 + dr("Thickness7") - dr("Thickness8") + dr("Thickness9")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P3.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -dr("diameter1") / 2 / 1000 - 0.1, -(-dr("Thickness6") / 2 + dr("Thickness7") - dr("Thickness8") - 2 * dr("Thickness9")) / 1000 / 2)
                part.ClearSelection2(True)

                P4 = part.SketchManager.CreatePoint((-dr("Thickness6") / 2 + dr("Thickness7") - dr("Thickness8") + dr("Thickness9") + dr("Thickness10")) / 1000, -dr("diameter1") / 2 / 1000, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -dr("diameter1") / 2 / 1000 - 0.08, -(-dr("Thickness6") / 2 + dr("Thickness7") - dr("Thickness8") + 2 * dr("Thickness9") + 2 * dr("Thickness10")) / 1000 / 2)
                part.ClearSelection2(True)
                part.SketchManager.InsertSketch(True)

                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                A1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, dr("diameter3") / 1000 / 2)
                part.SketchManager.CreateConstructionGeometry()
                A1.select2(False, Nothing)
                part.AddDimension2(0.1, 0.02, 0)

                L1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, dr("diameter1") / 1000 / 2, 0)
                ADDConstraints(1)
                L2 = part.SketchManager.CreateCenterLine(0, 0, 0, -dr("diameter1") / 1000 / 2, 0, 0)
                L1.select2(False, Nothing)
                L2.select2(True, Nothing)
                DisplayDimension = part.AddDimension2(-0.1, 0.1, 0)
                ChangeDimensionVaule(dr("Angle1") / 180 * PI)

                P1 = part.SketchManager.CreatePoint(dr("diameter1") / 2 / 1000, 0, 0)
                P2 = part.SketchManager.CreatePoint(dr("diameter1") / 2 / 1000, -dr("distance2") / 1000, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("diameter1") / 2 / 1000 + 0.15, -dr("distance2") / 1000 / 2, 0)
                part.EditDimensionProperties2(2, dr("max1") / 1000, dr("min1") / 1000, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)


                P3 = part.SketchManager.CreatePoint(dr("diameter1") / 2 / 1000 - 0.07, -dr("distance2") / 1000, 0)
                P4 = part.SketchManager.CreatePoint(dr("diameter1") / 2 / 1000 - 0.07, -dr("distance2") / 1000 + dr("distance3") / 1000, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("diameter1") / 2 / 1000 + 0.2, 0, 0)
                part.ClearSelection2(True)

                P5 = part.SketchManager.CreatePoint(dr("lenght2") / 2 / 1000, -dr("distance2") / 1000, 0)
                P6 = part.SketchManager.CreatePoint(-dr("lenght2") / 2 / 1000, -dr("distance2") / 1000, 0)
                P5.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, -dr("diameter1") / 2 / 1000 + 0.2, 0)
                part.ClearSelection2(True)

                P7 = part.SketchManager.CreatePoint(dr("lenght2") / 2 / 1000, -dr("distance2") / 1000 + dr("width6") / 1000, 0)
                P7.Select4(False, Nothing)
                P5.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("lenght2") / 2 / 1000 + 0.1, -dr("distance2") / 1000 + dr("width6") / 1000 + 0.08, 0)
                part.ClearSelection2(True)
                part.SketchManager.InsertSketch(True)



                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)

                part.FeatureManager.InsertRefPlane(8, dr("diameter1") / 2 / 1000, 0, 0, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                P1 = part.SketchManager.CreatePoint(dr("distance4") / 2 / 1000, (dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2") - dr("Thickness3") - dr("Thickness4")) / 1000, 0)
                P2 = part.SketchManager.CreatePoint(-dr("distance4") / 2 / 1000, (dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2") - dr("Thickness3") - dr("Thickness4")) / 1000, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, dr("diameter1") / 2 / 1000, -0.15)

                part.ClearSelection2(True)

                '
                P3 = part.SketchManager.CreatePoint(dr("distance5") / 2 / 1000, (dr("Thickness1") - dr("Thickness2")) / 1000, 0)
                P4 = part.SketchManager.CreatePoint(-dr("distance5") / 2 / 1000, (dr("Thickness1") - dr("Thickness2")) / 1000, 0)
                P3.Select4(False, Nothing)
                P4.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, dr("diameter1") / 2 / 1000, -(dr("Thickness1") + dr("Thickness2")) / 1000)
                part.ClearSelection2(True)

                P5 = part.SketchManager.CreatePoint(dr("distance5") / 2 / 1000, (dr("Thickness1")) / 1000, 0)
                'P6 = part.SketchManager.CreatePoint(-dr("diameter5") / 2 / 1000, (dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2")) / 1000, 0)
                P5.Select4(False, Nothing)
                P3.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("diameter1") / 2 / 1000 + 0.05, dr("diameter1") / 2 / 1000, -(dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2") / 2) / 1000)
                part.ClearSelection2(True)

                P6 = part.SketchManager.CreatePoint(dr("distance5") / 2 / 1000, (dr("Thickness1") - dr("Thickness2") - dr("Thickness3")) / 1000, 0)
                P3.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("diameter1") / 2 / 1000 + 0.05, dr("diameter1") / 2 / 1000, -(dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2") - dr("Thickness3") / 2) / 1000)
                part.ClearSelection2(True)

                P7 = part.SketchManager.CreatePoint(dr("distance5") / 2 / 1000, (dr("Thickness1") - dr("Thickness2") - dr("Thickness3") - dr("Thickness4")) / 1000, 0)
                P7.Select4(False, Nothing)
                P6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(dr("diameter1") / 2 / 1000 + 0.05, dr("diameter1") / 2 / 1000, -(dr("Thickness1") - dr("Thickness6") / 2 - dr("Thickness2") - dr("Thickness3") - dr("Thickness4") / 2) / 1000)
                part.ClearSelection2(True)


                P8 = part.SketchManager.CreatePoint(0, (dr("Thickness1")) / 1000, 0)
                P9 = part.SketchManager.CreatePoint(0, (dr("Thickness1") - dr("Thickness11")) / 1000, 0)
                P8.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.1, dr("diameter1") / 2 / 1000, -(dr("Thickness1") - dr("Thickness11") / 2) / 1000)
                part.ClearSelection2(True)

                P10 = part.SketchManager.CreatePoint(0, (dr("Thickness1") - dr("Thickness11") - dr("Thickness12")) / 1000, 0)
                P10.Select4(False, Nothing)
                P9.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.1, dr("diameter1") / 2 / 1000, -(dr("Thickness1") - dr("Thickness11") - dr("Thickness12") / 2) / 1000)
                part.ClearSelection2(True)

                part.SketchManager.InsertSketch(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "机座装配")
                cusproper.Set2("代号", "5EQ.034.2175")
                cusproper.Set2("材料", " ")


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.DrawingViewRotate(270 / 360 * 2 * PI)
                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr（"lenght"） / 1000 / 2 - 0.02, dr（"diameter1"） / 1000 / 2 - 0.1, 0, dr（"lenght"） / 1000 / 2 + 0.02, dr（"diameter1"） / 1000 / 2 + 0.02, 0)
                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2)
                part.ClearSelection2(True)


                'Dim vComponents As Object

                'Dim vEdges1, vPoint1 As Object
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'View = SelectionMgr.GetSelectedObject6(1, -1)
                'vComponents = View.GetVisibleComponents() '获得可视组件集合
                'vEdges1 = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                'vPoint1 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合
                'part.ClearSelection2(True)

                'i = 0
                'Do Until i > 100
                '    SelectionMgr.AddSelectionListObject(vEdges1(i), Nothing)
                '    'MsgBox(i)
                '    part.ClearSelection2(True)
                '    i = i + 1
                'Loop
                'SelectionMgr.AddSelectionListObject(vEdges1(7), Nothing)

                'part.ClearSelection2(True)
                'Dim vEdgeCount As Integer
                'vEdgeCount = 0
                'Do Until vEdgeCount >= 1000
                '    For i = vEdgeCount To vEdgeCount + 1 - 1
                '        SelectionMgr.AddSelectionListObject(vEdges1(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 1
                '    'MsgBox(vEdgeCount - 1)
                '    part.ClearSelection2(True)
                'Loop
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.104863150371992, 0.362612239053446, 0, False, 0, Nothing, 0)

                part.InsertModelAnnotations3(3, 11043311, False, True, True, True)



                Object数组1 = myView1.GetDimensionIds4()
                '遍历（1， Object数组1， 1000， 0）
                part.Extension.SelectByID2(Object数组1(0), "DIMENSION", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(15), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(16), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(17), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(18), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(19), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(20), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(21), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(22), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(23), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.EditDelete()



                part.SketchManager.CreatePoint(0.093297, 0.274132, 0#)
                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "4", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetText(False, "", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "8", False)
                part.ActivateView("工程图视图1")
                P3 = part.SketchManager.CreatePoint((dr("Thickness1")) / 1000 / 2, dr("diameter2") / 2 / 1000, 0)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "16", False)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreatePoint(-0.202943, -0.258493, 0#)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "6", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetText(False, "", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "4", False)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreatePoint(-0.201852, -0.189784, 0#)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "5", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetText(False, "", "<WELD-FILL>", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "4", False)


                part.ActivateView("工程图视图2")
                part.SketchManager.CreatePoint(-0.237595, 0.137997, 0#)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "8", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "4", False)
                part.ActivateView("工程图视图3")
                part.SketchManager.CreatePoint(0.207343, 0.371936, 0#)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "4", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "2", False)
                part.ActivateView("工程图视图3")
                P2 = part.SketchManager.CreatePoint(0.175473, -0.054464, 0)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "6", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "2", False)
                part.ActivateView("工程图视图3")
                part.SketchManager.CreatePoint(0.023541, 0.26288, 0)
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "4", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(False)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "2", False)

                'Do Until i >= 1000
                '    For i = 0 To 30
                '        part.Extension.SelectByID2(Object数组1(i), "DIMENSION", 0, 0, 0, False, 1, Nothing, 0)
                '    Next
                '    i = i + 1
                '    'MsgBox(i - 1)
                '    part.ClearSelection2(True)
                'Loop
                '
                ''MsgBox(1)
                'part.Extension.SelectByID2(Object数组1(3), "DIMENSION", 0, 0, 0, False, 1, Nothing, 0)
                ''MsgBox(1)
                'part.Extension.SelectByID2("工程图61-SectionAssembly-1-1@/发电机-1@工程图61-SectionAssembly-1/转轴（G）-1@发电机", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                '修改后：part.Extension.SelectByID2("发电机-2@工程图61-SectionAssembly-1-1/发电机-1@工程图视图1/转轴（G）-1@发电机", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)


                'DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                'part.Extension.EditDimensionProperties(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", "", False, 1, "")
                'Annotation = DisplayDimension.GetAnnotation
                part.InsertModelAnnotations3(3, 11043311, True, True, True, True)
                part.Extension.SelectByID2(Object数组1(2), "DIMENSION", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(3), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(4), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(5), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(6), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(Object数组1(7), "DIMENSION", 0, 0, 0, True, 1, Nothing, 0)
                part.EditDelete()
                插入零件标号(myView)
                插入零件标号(myView1)
                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 定子装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _5eq_671_2193", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2

                Dim _5EQ_673_2126 As SldWorks.Component2
                Dim _5EQ_034_2175 As SldWorks.Component2
                Dim 螺栓 As SldWorks.Component2

                Dim _5EQ_673_2126name As String
                Dim _5EQ_034_2175name As String
                Dim 螺栓name As String

                Dim _5EQ_673_2126edge() As Object
                Dim _5EQ_034_2175edge() As Object
                Dim 螺栓edge() As Object

                Dim _5EQ_673_2126face() As Object
                Dim _5EQ_034_2175face() As Object
                Dim 螺栓face() As Object
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)

                swapp.OpenDoc6(dr("Assembly Part address") + dr("Part2 Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part2 Code") + dr("dz4"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Assembly Part address") + dr("Part2 Code") + dr("dz4"))
                _5EQ_034_2175 = Component2
                swapp.OpenDoc6(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"), 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc(dr("Assembly Part address") + dr("Part1 Code") + dr("dz4"))
                _5EQ_673_2126 = Component2

                'swapp.OpenDoc6(dr("Standard Parts address") + dr("Part3 Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                'part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'Component2 = part.AddComponent5(dr("Standard Parts address") + dr("Part3 Code") + dr("dz2"), 0, "", False, "", 0.05, 0, 0)
                'swapp.CloseDoc(dr("Standard Parts address") + dr("Part3 Code") + dr("dz2"))
                '螺栓 = Component2

                part.Extension.SelectByID2(dr("Part2 Code") + "-1@*/" + dr("PA1") + "-1@" + dr("Part2 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                Dim com1, com2, com3, com4, com5 As Component2
                Dim body1(), body2(), body3(), body4(), body5() As Object
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face1 = body1(0).GetFaces
                edge1 = body1(0).GetEdges
                part.ClearSelection2(True)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                part.Extension.SelectByID2(dr("Part2 Code") + "-1@*/" + dr("PA2") + "-1@" + dr("Part2 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com2 = SelectionMgr.GetSelectedObject6(1, -1)
                body2 = com2.GetBodies3(0, 0)
                face2 = body2(0).GetFaces
                edge2 = body2(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part2 Code") + "-1@*/" + dr("PA3") + "-1@" + dr("Part2 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com3 = SelectionMgr.GetSelectedObject6(1, -1)
                body3 = com3.GetBodies3(0, 0)
                face3 = body3(0).GetFaces
                edge3 = body3(0).GetEdges
                part.ClearSelection2(True)

                'part.Extension.SelectByID2("5EQ.673.2191-1@*/5EQ.672.2126-1@5EQ.673.2191/8EQ.660.2007-1@5EQ.672.2126", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2(dr("Part1 Code") + "-1@*/" + dr("PA6") + "-1@" + dr("Part1 Code") + "/" + dr("PA4") + "-1@" + dr("PA6"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)

                com4 = SelectionMgr.GetSelectedObject6(1, -1)
                body4 = com4.GetBodies3(0, 0)
                face4 = body4(0).GetFaces
                edge4 = body4(0).GetEdges
                part.ClearSelection2(True)

                'part.Extension.SelectByID2(dr("Part1 Code") + "-1@*/" + dr("PA5") + "-1@" + dr("Part1 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                'com5 = SelectionMgr.GetSelectedObject6(1, -1)
                'body5 = com5.GetBodies3(0, 0)
                'face5 = body5(0).GetFaces
                'edge3 = body5(0).GetEdges
                'part.ClearSelection2(True)

                '螺栓name = 螺栓.Name2()
                'part.Extension.SelectByID2(螺栓.IGetBody.Name + "@" + 螺栓name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                '螺栓edge = swbody.GetEdges()
                '螺栓face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                'part.ClearSelection2(True)
                '遍历（1， face4， 100， 0）
                SelectionMgr.AddSelectionListObject(face4（3）, Nothing)
                SelectionMgr.AddSelectionListObject(face1（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "定子装配")
                cusproper.Set2("代号", "5EQ.671.2193")
                cusproper.Set2("材料", " ")
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)
                inA2("", dr("company"), dr("name"), dr("Code"))
                'Dim myView As Object
                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.3, 0.25, 0)
                part.ViewDisplayHidden
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.08, 0.06， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4））
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr（"lenght"） / 1000 / 2 - 0.02, 0, 0, dr（"lenght"） / 1000 / 2 + 0.02, dr（"wight"） / 1000 / 2 + 0.02, 0)
                part.CreateBreakOutSection(dr（"wight"） / 1000 / 2)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(-dr（"lenght"） / 1000 / 2 - 0.02, 0, 0, dr（"lenght"） / 1000 / 2 + 0.04, dr（"wight"） / 1000 / 2 + 0.04, 0)
                myView = part.ActiveDrawingView
                myView.Crop()
                part.ClearSelection2(True)
                P1 = part.SketchManager.CreatePoint(-dr（"lenght"） / 1000 / 2 - 0.005, dr（"diameter1"） / 1000 / 2, 0)
                P2 = part.SketchManager.CreatePoint(-dr（"lenght"） / 1000 / 2 - 0.005 + dr（"distance1"） / 1000, dr（"diameter1"） / 1000 / 2, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0.185, 0.285, 0)
                P2 = part.SketchManager.CreatePoint(-dr（"lenght"） / 1000 / 2 + dr（"distance1"） / 1000, dr（"diameter2"） / 1000 / 2, 0)
                Dim weldSymbol As IWeldSymbol
                weldSymbol = part.InsertWeldSymbol3()
                weldSymbol.SetText(True, "", "<WELD-FILL>", "5", "", 1)
                weldSymbol.SetText(False, "", "", "", "", 1)
                weldSymbol.SetFieldWeld(1)
                weldSymbol.SetPeripheral(True)
                weldSymbol.SetStagger(False)
                weldSymbol.SetSymmetric(3)
                weldSymbol.SetProcess(True, "4", False)
                插入零件标号(myView1)
                插入BOM表2（myView1， 2）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 电机总装配()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from _1eq_214_2431", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)

                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")

                For i = 1 To 31
                    swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 0, "", False, "", 0.3 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"))

                Next


                For i = 1 To 31
                    swapp.OpenDoc6(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 2, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"), 0, "", False, "", 1 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Assembly Part address") + dr("Part" + i.ToString + " Code") + dr("dz4"))

                Next


                For i = 1 To 31
                    swapp.OpenDoc6(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                    part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                    Component2 = part.AddComponent5(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 0, "", False, "", -0.5 * (i - 1), 0, 0)
                    swapp.CloseDoc(dr("Standard Parts address") + dr("Part" + i.ToString + " Code") + dr("dz2"))

                Next
                Dim com1 As Component2
                Dim body1() As Object

                'part.Extension.SelectByID2(dr("Part1 Code") + "-1@*/" + dr("PA5") + "-1@" + dr("Part1 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2(dr("Part1 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face1 = body1(0).GetFaces
                edge1 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part2 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face2 = body1(0).GetFaces
                edge2 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part16 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face16 = body1(0).GetFaces
                edge16 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part22 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face22 = body1(0).GetFaces
                edge22 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part30 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face30 = body1(0).GetFaces
                edge30 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part3 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face3 = body1(0).GetFaces
                edge3 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part4 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face4 = body1(0).GetFaces
                edge4 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face5 = body1(0).GetFaces
                edge5 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face6 = body1(0).GetFaces
                edge6 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face7 = body1(0).GetFaces
                edge7 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face8 = body1(0).GetFaces
                edge8 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face9 = body1(0).GetFaces
                edge9 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part13 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face13 = body1(0).GetFaces
                edge13 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part14 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face14 = body1(0).GetFaces
                edge14 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part15 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face15 = body1(0).GetFaces
                edge15 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part17 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face17 = body1(0).GetFaces
                edge17 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part18 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face18 = body1(0).GetFaces
                edge18 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part19 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face19 = body1(0).GetFaces
                edge19 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part20 Code") + "-2@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face20 = body1(0).GetFaces
                edge20 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part21 Code") + "-2@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face21 = body1(0).GetFaces
                edge21 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part23 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face23 = body1(0).GetFaces
                edge23 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part24 Code") + "-3@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face24 = body1(0).GetFaces
                edge24 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part25 Code") + "-3@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                face25 = body1(0).GetFaces
                edge25 = body1(0).GetEdges
                part.ClearSelection2(True)

                'part.Extension.SelectByID2(dr("Part26 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                'com1 = SelectionMgr.GetSelectedObject6(1, -1)
                'body1 = com1.GetBodies3(0, 0)
                'face26 = body1(0).GetFaces
                'edge26 = body1(0).GetEdges
                'part.ClearSelection2(True)

                'part.Extension.SelectByID2(dr("Part27 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                'com1 = SelectionMgr.GetSelectedObject6(1, -1)
                'body1 = com1.GetBodies3(0, 0)
                'face27 = body1(0).GetFaces
                'edge27 = body1(0).GetEdges
                'part.ClearSelection2(True)

                'part.Extension.SelectByID2(dr("Part28 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                'com1 = SelectionMgr.GetSelectedObject6(1, -1)
                'body1 = com1.GetBodies3(0, 0)
                'face28 = body1(0).GetFaces
                'edge28 = body1(0).GetEdges
                'part.ClearSelection2(True)

                'part.Extension.SelectByID2(dr("Part29 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                'com1 = SelectionMgr.GetSelectedObject6(1, -1)
                'body1 = com1.GetBodies3(0, 0)
                'face29 = body1(0).GetFaces
                'edge29 = body1(0).GetEdges
                'part.ClearSelection2(True)




                part.Extension.SelectByID2(dr("Part22 Code") + "-1@*/", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                Dim swComp As Component2
                swComp = part.SelectionManager.GetSelectedObjectsComponent4(1, -1)
                swComp.ReferencedConfiguration = "弯曲"
                part.EditRebuild3()
                part.ClearSelection2(True)


                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                Dim PAface1(), PAedge1(), PAface2(), PAedge2(), PAface3(), PAedge3(), PAface4(), PAedge4(), PAface5(), PAedge5(), PAface6(), PAedge6() As Object
                part.Extension.SelectByID2(dr("Part11 Code") + "-1@*/" + dr("PA1") + "-1@" + dr("Part11 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface1 = body1(0).GetFaces
                PAedge1 = body1(0).GetEdges
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part10 Code") + "-1@*/" + dr("SPA1") + "-1@" + dr("Part10 Code") + "/" + dr("PA2") + "-1@" + dr("SPA1"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface2 = body1(0).GetFaces
                PAedge2 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10 Code") + "-1@*/" + dr("SPA1") + "-1@" + dr("Part10 Code") + "/" + dr("PA3") + "-1@" + dr("SPA1"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface3 = body1(0).GetFaces
                PAedge3 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10 Code") + "-1@*/" + dr("SPA1") + "-1@" + dr("Part10 Code") + "/" + dr("PA4") + "-1@" + dr("SPA1"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface4 = body1(0).GetFaces
                PAedge4 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10 Code") + "-1@*/" + dr("SPA1") + "-1@" + dr("Part10 Code") + "/" + dr("PA5") + "-1@" + dr("SPA1"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface5 = body1(0).GetFaces
                PAedge5 = body1(0).GetEdges
                part.ClearSelection2(True)

                'part.Extension.SelectByID2("5EQ.681.2026-1@*/8EQ.013.2010-1@5EQ.681.2026", "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2(dr("Part12 Code") + "-1@*/" + dr("PA6") + "-1@" + dr("Part12 Code"), "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                com1 = SelectionMgr.GetSelectedObject6(1, -1)
                body1 = com1.GetBodies3(0, 0)
                PAface6 = body1(0).GetFaces
                PAedge6 = body1(0).GetEdges
                part.ClearSelection2(True)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                Dim tittle As String = part.GetTitle
                Dim feaa As SldWorks.IFeature

                SelectionMgr.AddSelectionListObject(edge1（1）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge1（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face1（11）, Nothing)
                SelectionMgr.AddSelectionListObject(PAface1（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge1（0）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge2（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face1（4）, Nothing)
                SelectionMgr.AddSelectionListObject(PAface2（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge1（0）, Nothing)
                SelectionMgr.AddSelectionListObject(edge2（1648）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face1（69）, Nothing)
                SelectionMgr.AddSelectionListObject(face2（625）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge1（219）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge3（14）, Nothing)
                配合1("平行", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge22（6）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge4（3）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(PAface5（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face22（21）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face22（2）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge18（2）, Nothing)
                SelectionMgr.AddSelectionListObject(edge19（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face18（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face19（37）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face18（2）, Nothing)
                SelectionMgr.AddSelectionListObject(PAface6（118）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("基体-法兰1@8EQ.314.2021-1@" + tittle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)

                feaa = SelectionMgr.GetSelectedObject6(1, -1)
                face26 = feaa.GetFaces()
                edge26 = face26(0).Getedges()
                '遍历（1， edge26, 1000, 239）

                SelectionMgr.AddSelectionListObject(edge26（249）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge6（368）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(PAedge6（368）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge4（3）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(PAface4（2）, Nothing)
                SelectionMgr.AddSelectionListObject(PAface6（122）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge18（2）, Nothing)
                SelectionMgr.AddSelectionListObject(PAedge6（368）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)
                '
                SelectionMgr.AddSelectionListObject(PAface6（125）, Nothing)
                SelectionMgr.AddSelectionListObject(edge26（249）, Nothing)
                ''MsgBox(1)
                '遍历（1， face16， 1000， 0）

                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(PAedge6（503）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(PAface6（116）, Nothing)
                SelectionMgr.AddSelectionListObject(face30（3）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸1@5EQ.681.2026-1@" + tittle + "/8EQ.013.2010-1@5EQ.681.2026", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feaa = SelectionMgr.GetSelectedObject6(1, -1)
                face31 = feaa.GetFaces()
                edge31 = face31(2).Getedges()
                SelectionMgr.AddSelectionListObject(edge30（51）, Nothing)
                SelectionMgr.AddSelectionListObject(edge31（11）, Nothing)

                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(edge30（52）, Nothing)
                SelectionMgr.AddSelectionListObject(edge31（6）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face2（13）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)
                '标准件装配 
                SelectionMgr.AddSelectionListObject(face3（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face3（0）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face5（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face6（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face3（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face5（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(face2（13）, Nothing)
                SelectionMgr.AddSelectionListObject(face5（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face2（8）, Nothing)
                SelectionMgr.AddSelectionListObject(face3（19）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(face4（8）, Nothing)
                SelectionMgr.AddSelectionListObject(face2（8）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face5（2）, Nothing)
                SelectionMgr.AddSelectionListObject(face4（6）, Nothing)
                AssemblyDoc.AddMate5(5, 1, False, 2.5 / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part3 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part4 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part5 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part6 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance2") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face7（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face8（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face7（0）, Nothing)
                SelectionMgr.AddSelectionListObject(face8（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face9（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face8（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face7（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face9（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face9（2）, Nothing)
                SelectionMgr.AddSelectionListObject(PAface3（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face7（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face1（89）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part8 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part9 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 1)
                Dim compsToMirror(2) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                compsToMirror(1) = SelectionMgr.GetSelectedObjectsComponent4(2, 1)
                compsToMirror(2) = SelectionMgr.GetSelectedObjectsComponent4(3, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part7 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part8 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part9 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part7 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part8 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part9 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 1)
                Dim compsToMirror2(5) As Component2
                Dim swMirrorPlane2 As Feature
                compsToMirror2(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                compsToMirror2(1) = SelectionMgr.GetSelectedObjectsComponent4(2, 1)
                compsToMirror2(2) = SelectionMgr.GetSelectedObjectsComponent4(3, 1)
                compsToMirror2(3) = SelectionMgr.GetSelectedObjectsComponent4(4, 1)
                compsToMirror2(4) = SelectionMgr.GetSelectedObjectsComponent4(5, 1)
                compsToMirror2(5) = SelectionMgr.GetSelectedObjectsComponent4(6, 1)
                swMirrorPlane2 = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane2, Nothing, 1, True, compsToMirror2, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face13（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face14（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face13（0）, Nothing)
                SelectionMgr.AddSelectionListObject(face14（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face15（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face14（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face13（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face15（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face15（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face30（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face13（19）, Nothing)
                SelectionMgr.AddSelectionListObject(face30（21）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part13 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part14 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part15 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)

                AxisX.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance3") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸6@5EQ.681.2026-1@" + tittle + "/8EQ.013.2010-1@5EQ.681.2026", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feaa = SelectionMgr.GetSelectedObject6(1, -1)
                face31 = feaa.GetFaces()
                edge31 = face31(1).Getedges()

                SelectionMgr.AddSelectionListObject(edge31（28）, Nothing)
                SelectionMgr.AddSelectionListObject(edge26（247）, Nothing)

                配合1("同轴", 1)
                part.ClearSelection2(True)

                '
                SelectionMgr.AddSelectionListObject(face17（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face21（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face17（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face21（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face20（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face21（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face17（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face20（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(face17（4）, Nothing)
                SelectionMgr.AddSelectionListObject(edge26（247）, Nothing)

                配合1("同轴", 1)
                part.ClearSelection2(True)

                '遍历（1， face26， 1000， 0）

                SelectionMgr.AddSelectionListObject(face20（2）, Nothing)
                SelectionMgr.AddSelectionListObject(face26（1）, Nothing)

                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(edge26（249）, Nothing)
                'MsgBox(1)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part17 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part20 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part21 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                '

                SelectionMgr.AddSelectionListObject(face23（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face25（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face23（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face25（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face24（1）, Nothing)
                SelectionMgr.AddSelectionListObject(face25（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face23（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face24（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face23（4）, Nothing)
                SelectionMgr.AddSelectionListObject(face22（850）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(face24（2）, Nothing)
                SelectionMgr.AddSelectionListObject(face22（1）, Nothing)
                配合1("相切", 1)
                part.ClearSelection2(True)
                part.Extension.SelectByID2(dr("Part23 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part24 Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part25 Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance4") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2(dr("Part23 Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part24 Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part25 Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part23 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part24 Code") + "-12@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part25 Code") + "-12@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 1)
                Dim compsToMirror3(5) As Component2
                Dim swMirrorPlane3 As Feature
                compsToMirror3(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                compsToMirror3(1) = SelectionMgr.GetSelectedObjectsComponent4(2, 1)
                compsToMirror3(2) = SelectionMgr.GetSelectedObjectsComponent4(3, 1)
                compsToMirror3(3) = SelectionMgr.GetSelectedObjectsComponent4(4, 1)
                compsToMirror3(4) = SelectionMgr.GetSelectedObjectsComponent4(5, 1)
                compsToMirror3(5) = SelectionMgr.GetSelectedObjectsComponent4(6, 1)
                swMirrorPlane3 = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane3, Nothing, 1, True, compsToMirror3, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "电机总装配")
                cusproper.Set2("代号", "1EQ.214.2431")
                cusproper.Set2("材料", " ")
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)
                inA2("", dr("company"), dr("name"), dr("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*后视", 0.447, 0.15, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.2, 0.15, 0)
                part.ViewDisplayHidden
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                初始设置（1）
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(-(dr("lenght") / 2 / 1000 + 0.2), 0.4, 0, (dr("lenght") / 2 / 1000 + 0.2), 0.4 + dr("diameter1") / 1000 / 2 + 0.2, 0)
                part.CreateBreakOutSection(dr（"diameter1"） / 1000 / 2)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图2")
                P1 = part.SketchManager.CreatePoint(0.5412, 0.3, 0)
                part.ActivateView("工程图视图2")
                P2 = part.SketchManager.CreatePoint(0.5412 - 0.0254, 0.3, 0)
                P1.Select4(False, Nothing)
                P2.Select4(True, Nothing)
                part.AddDimension2(0.305, 0.155, 0)
                初始设置（0）
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6），, Object数组1（7））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 渲染(entity As Object, 外观路径$)

                Dim displayStateNames As Object

                Dim status As Boolean

                Dim modelName As String

                Dim materialName As String

                Dim errors As Integer

                Dim warnings As Integer

                Dim nbrDisplayStates As Integer

                Dim i As Integer

                Dim k As Integer

                Dim nbrMaterials As Integer

                Dim materialID1 As Integer

                Dim materialID2 As Integer

                Dim materialID1_ToDelete(0) As Integer

                Dim materialID2_ToDelete(0) As Integer
                ' Get active configuration and create a new display

                ' state for this configuration

                swConfig = part.GetActiveConfiguration

                status = swConfig.CreateDisplayState("Display State 2")

                part.ForceRebuild3(True)

                ' Get active configuration and create another new

                ' display state for this configuration

                swConfig = part.GetActiveConfiguration

                status = swConfig.CreateDisplayState("Display State 3")

                part.ForceRebuild3(True)

                ' Create appearance

                materialName = 外观路径

                RenderMaterial = part.Extension.CreateRenderMaterial(materialName)


                status = entity.Select2(False, 1)
                status = RenderMaterial.AddEntity(entity)

                ' Get the names of display states

                displayStateNames = swConfig.GetDisplayStates

                nbrDisplayStates = swConfig.GetDisplayStatesCount

                Debug.Print("This configuration's display states =")

                For i = 0 To (nbrDisplayStates - 1)

                    Debug.Print(" Display state name = " & displayStateNames(i))

                Next i

                ' Add appearance to all of the display states

                status = part.Extension.AddDisplayStateSpecificRenderMaterial(RenderMaterial, SwConst.swDisplayStateOpts_e.swAllDisplayState, displayStateNames, materialID1, materialID2)
            End Sub
            Public Sub 机座号180装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame180", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop


                'Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                Dim i As Integer


                'swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                插入零件（cp3, dr("Part_address1") + dr("Part3_Code"), 0.15）
                插入零件（cp4, dr("Part_address4") + dr("Part4_Code"), 0.25）
                插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3）
                插入零件（cp6, dr("Part_address4") + dr("Part6_Code"), 0.35）
                插入零件（cp7, dr("Part_address5") + dr("Part7_Code"), 0.4）
                插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45）
                插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5）
                插入零件（cp10, dr("Part_address10") + dr("Part10_Code"), 0.55）
                插入零件（cp11, dr("Part_address11") + dr("Part11_Code"), 0.6）




                cp1name = cp1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp1edge = swbody.GetEdges()
                cp1face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)




                cp2name = cp2.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp2edge = swbody.GetEdges()
                cp2face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp3name = cp3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp3edge = swbody.GetEdges()
                cp3face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp4name = cp4.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp4edge = swbody.GetEdges()
                cp4face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp5name = cp5.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp5edge = swbody.GetEdges()
                cp5face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp6name = cp6.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp6edge = swbody.GetEdges()
                cp6face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp7name = cp7.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp7edge = swbody.GetEdges()
                cp7face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp8name = cp8.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp8edge = swbody.GetEdges()
                cp8face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp9name = cp9.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp9edge = swbody.GetEdges()
                cp9face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp10name = cp10.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp10.IGetBody.Name + "@" + cp10name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp10edge = swbody.GetEdges()
                cp10face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp11name = cp11.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp11.IGetBody.Name + "@" + cp11name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp11edge = swbody.GetEdges()
                cp11face = swbody.GetFaces()
                part.ClearSelection2(True)

                'cp12name = cp12.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp12.IGetBody.Name + "@" + cp12name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp12edge = swbody.GetEdges()
                'cp12face = swbody.GetFaces()
                'part.ClearSelection2(True)


                'cp1 0hou  1 wai 2qian 3nei 4houjie  5waijie
                'cp2 0waiyuan   73hou  74feng 75qian  149nei

                SelectionMgr.AddSelectionListObject(cp1face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(75), Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face(3), Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(0), Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp2face(74), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp3face(0), Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(0), Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(73), Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                '遍历（1， cp1face， 1000, 0）

                SelectionMgr.AddSelectionListObject(cp2face(149), Nothing)
                SelectionMgr.AddSelectionListObject(cp4face（4）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp4face(3), Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4face（6）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                '配合1("平行", 1)
                AssemblyDoc.AddMate5(5, 1, True, dr("Rib width") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp6face(3), Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp2face(149), Nothing)
                SelectionMgr.AddSelectionListObject(cp6face（4）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp2face(76), Nothing)
                SelectionMgr.AddSelectionListObject(cp6face（6）, Nothing)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                '配合1("平行", 1)
                'AssemblyDoc.AddMate5(5, 1, True, dr("Rib width2") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                'part.ClearSelection2(True)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp5face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp4face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4edge（10）, Nothing)
                SelectionMgr.AddSelectionListObject(cp5edge（1）, Nothing)
                配合1("重合", 1)



                SelectionMgr.AddSelectionListObject(cp5face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp3face（1）, Nothing)
                AssemblyDoc.AddMate5(5, 1, True, dr("distance1") / 1000, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp7face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp6face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                '遍历（1， cp6edge， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp7edge（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp6edge（10）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp7face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp3face（1）, Nothing)
                AssemblyDoc.AddMate5(5, 1, True, dr("distance1") / 1000, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp10face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                '遍历（1， cp1face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp10face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 1, True, dr("distance2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp8face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（4）, Nothing)
                AssemblyDoc.AddMate5(5, 0, True, dr("Thickness1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp9face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp9edge（7）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10edge（9）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp8edge（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9edge（4）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp11face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp11face（6）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance4") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp1edge(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part7_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(3, 2 / 3 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp1edge(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(dr("Part7_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(3, 2 / 3 * PI, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)

                part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                'part.Extension.SelectByID2(dr("Part10 Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part10_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)



                part.Extension.SelectByID2(dr("Part11_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance6") / 1000 - dr("distance5") / 1000 - dr("distance4") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden

                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)


                插入零件标号(myView)
                插入零件标号(myView1)


                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)

                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 机座号250装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame250", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop


                'Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                Dim i As Integer


                'swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                插入零件（cp3, dr("Part_address1") + dr("Part3_Code"), 0.15）
                插入零件（cp4, dr("Part_address4") + dr("Part4_Code"), 0.25）
                插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3）
                插入零件（cp6, dr("Part_address5") + dr("Part6_Code"), 0.35）
                插入零件（cp7, dr("Part_address7") + dr("Part7_Code"), 0.4）
                插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45）
                插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5）





                cp1name = cp1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp1edge = swbody.GetEdges()
                cp1face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)




                cp2name = cp2.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp2edge = swbody.GetEdges()
                cp2face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp3name = cp3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp3edge = swbody.GetEdges()
                cp3face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp4name = cp4.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp4edge = swbody.GetEdges()
                cp4face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp5name = cp5.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp5edge = swbody.GetEdges()
                cp5face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp6name = cp6.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp6edge = swbody.GetEdges()
                cp6face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp7name = cp7.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp7edge = swbody.GetEdges()
                cp7face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp8name = cp8.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp8edge = swbody.GetEdges()
                cp8face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp9name = cp9.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp9edge = swbody.GetEdges()
                cp9face = swbody.GetFaces()
                part.ClearSelection2(True)

                '遍历(1, cp2face, 1000, 0)

                'cp2 29后 30缝 31前  34外圆 36 内  (前)
                'cp2 18后 19缝 20前   0外圆 38内  (后)

                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(20), Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face(0), Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(0), Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp2face(19), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(18), Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp3face(0), Nothing)
                SelectionMgr.AddSelectionListObject(cp2face(0), Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                '遍历(1, cp4face, 1000, 0)



                SelectionMgr.AddSelectionListObject(cp4face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp4face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（20）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance4") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp4edge（3）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（34）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                '配合1("同轴", 1)
                part.ClearSelection2(True)




                SelectionMgr.AddSelectionListObject(cp2face(38), Nothing)
                SelectionMgr.AddSelectionListObject(cp5face（4）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp5face(3), Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp5face（6）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                '配合1("平行", 1)
                AssemblyDoc.AddMate5(5, 1, True, dr("Rib width1") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp2face(38), Nothing)
                SelectionMgr.AddSelectionListObject(cp6face（4）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp6face(3), Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp6face（6）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                '配合1("平行", 1)
                AssemblyDoc.AddMate5(5, 1, True, dr("Rib width2") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp8face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp8face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9face（1）, Nothing)

                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp8edge（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9edge（0）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9face（5）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '

                SelectionMgr.AddSelectionListObject(cp7face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8face（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp7edge（11）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8edge（11）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                ''MsgBox(1)
                '遍历(1, cp7edge, 100)
                SelectionMgr.AddSelectionListObject(cp9edge（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp7edge（8）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                'SelectionMgr.AddSelectionListObject(cp8edge（1）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp9edge（4）, Nothing)
                '配合1("重合", 0)
                'part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp1edge(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part5_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(2, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1edge(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(2, PI / 4, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1edge(3), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(2, PI / 4, True, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance3") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part4_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance6") / 1000 - dr("distance5") / 1000 - dr("distance4") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden


                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                插入零件标号(myView)
                插入零件标号(myView1)


                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)

                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()

            End Sub
            Public Sub 机座号280装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame280", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop


                'Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                'Dim i As Integer


                'swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                插入零件（cp3, dr("Part_address3") + dr("Part3_Code"), 0.15）
                插入零件（cp4, dr("Part_address1") + dr("Part4_Code"), 0.25）
                插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3, 0.1）
                插入零件（cp6, dr("Part_address6") + dr("Part6_Code"), -0.35, 0.1）
                插入零件（cp7, dr("Part_address7") + dr("Part7_Code"), 0.4, 0.1）
                插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45, 0.1）
                插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5, 0.1）
                插入零件（cp10, dr("Part_address10") + dr("Part10_Code"), -0.55, 0.1）
                插入零件（cp11, dr("Part_address10") + dr("Part11_Code"), -0.6, 0.1）



                cp1name = cp1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp1edge = swbody.GetEdges()
                cp1face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)




                cp2name = cp2.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp2edge = swbody.GetEdges()
                cp2face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp3name = cp3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp3edge = swbody.GetEdges()
                cp3face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp4name = cp4.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp4edge = swbody.GetEdges()
                cp4face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp5name = cp5.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp5edge = swbody.GetEdges()
                cp5face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp6name = cp6.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp6edge = swbody.GetEdges()
                cp6face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp7name = cp7.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp7edge = swbody.GetEdges()
                cp7face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp8name = cp8.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp8edge = swbody.GetEdges()
                cp8face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp9name = cp9.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp9edge = swbody.GetEdges()
                cp9face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp10name = cp10.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp10.IGetBody.Name + "@" + cp10name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp10edge = swbody.GetEdges()
                cp10face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp11name = cp11.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp11.IGetBody.Name + "@" + cp11name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp11edge = swbody.GetEdges()
                cp11face = swbody.GetFaces()
                part.ClearSelection2(True)



                'cp2 25后 26缝 27前  0外圆 53 内
                'cp1      0hou      2前     1外圆 3内         4houjieti

                SelectionMgr.AddSelectionListObject(cp1face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（27）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp2face（26）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                '遍历(1, cp1face, 1000, 0)


                SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp3face（7）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（53）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)

                '1

                SelectionMgr.AddSelectionListObject(cp3edge（14）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 1, False, dr("Rib width1") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '



                SelectionMgr.AddSelectionListObject(cp8face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                '遍历（1， cp8face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)

                配合1("平行", 1)
                part.ClearSelection2(True)






                '遍历（1， cp1face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp8face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp7face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing) '
                配合1("重合", 1)
                part.ClearSelection2(True)

                '遍历（1， cp8edge， 1000, 0）


                SelectionMgr.AddSelectionListObject(cp7edge（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8edge（0）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp7face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)

                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp9face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8face（4）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp9edge（7）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8edge（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)




                SelectionMgr.AddSelectionListObject(cp7edge（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9edge（6）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                '遍历（1， cp9edge， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp5face（4）, Nothing)
                AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp5edge（8）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp5edge（12）, Nothing)
                AxisY.Select2(True, Nothing)
                AssemblyDoc.AddMate5(6, 1, True, 0, 0, 0, 0, 0, dr("Angle1") / 180 * PI, PI, 0, False, False, 0, 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp5edge（11）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp6edge（10）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)

                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp6edge（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)

                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp6face（9）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp6face（12）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)

                'part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, False, （dr("distance6") - dr("distance3") - dr("distance4") - dr("distance5") - dr("width1")） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离

                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp10edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp10face（3）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp10edge（7）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp10face（9）, Nothing)
                SelectionMgr.AddSelectionListObject(cp4face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, （dr("distance5") - dr("width2") / 2） / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp11face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp4face（2）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp11face（12）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, True, dr("width3") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp11edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("相切", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part3_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part5_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("distance7") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part7_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness3") / 1000 + dr("width2") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part10_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part11_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness4") / 1000 - dr("width3") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden


                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                插入零件标号(myView)
                插入零件标号(myView1)


                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)

                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()


            End Sub
            Public Sub 机座号355装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame355", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop


                'Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc


                Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                'Dim i As Integer


                'swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                插入零件（cp3, dr("Part_address3") + dr("Part3_Code"), 0.15）
                插入零件（cp4, dr("Part_address1") + dr("Part4_Code"), 0.25）
                插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3, 0.1）
                插入零件（cp6, dr("Part_address6") + dr("Part6_Code"), -0.35, 0.1）
                '插入零件（cp7, dr("Part address7") + dr("Part7 Code"), 0.4, 0.2）
                插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45, 0.1）
                插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5, 0.1）
                插入零件（cp10, dr("Part_address10") + dr("Part10_Code"), -0.55, 0.1）
                '插入零件（cp11, dr("Part address11") + dr("Part11 Code"), -0.6, 0.1）


                cp1name = cp1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp1edge = swbody.GetEdges()
                cp1face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)


                cp2name = cp2.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp2edge = swbody.GetEdges()
                cp2face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp3name = cp3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp3edge = swbody.GetEdges()
                cp3face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp4name = cp4.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp4edge = swbody.GetEdges()
                cp4face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp5name = cp5.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp5edge = swbody.GetEdges()
                cp5face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp6name = cp6.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp6edge = swbody.GetEdges()
                cp6face = swbody.GetFaces()
                part.ClearSelection2(True)

                'cp7name = cp7.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp7edge = swbody.GetEdges()
                'cp7face = swbody.GetFaces()
                'part.ClearSelection2(True)

                cp8name = cp8.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp8edge = swbody.GetEdges()
                cp8face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp9name = cp9.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp9edge = swbody.GetEdges()
                cp9face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp10name = cp10.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp10.IGetBody.Name + "@" + cp10name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp10edge = swbody.GetEdges()
                cp10face = swbody.GetFaces()
                part.ClearSelection2(True)

                'cp11name = cp11.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp11.IGetBody.Name + "@" + cp11name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp11edge = swbody.GetEdges()
                'cp11face = swbody.GetFaces()
                'part.ClearSelection2(True)

                '遍历(1, cp1face, 200)

                'cp1 0外圆  1前   2后   3内
                'cp2 0外圆  25后  26缝  27前  53 内


                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（27）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp2face（26）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp4face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)


                '遍历(1, cp3face, 200)
                'cp3  3后  5上  6前  9侧
                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp3face（6）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（53）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp3face（9）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, True, dr("Rib width1") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)
                '1

                SelectionMgr.AddSelectionListObject(cp5face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp5face（7）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                '遍历(1, cp5face, 200)


                SelectionMgr.AddSelectionListObject(cp5face（1）, Nothing)

                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance3") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                'cp5face  0qian   1hou  3内   7侧
                'cp6face  0nei   5hou  4qian   3侧
                SelectionMgr.AddSelectionListObject(cp6face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp6face（3）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                '遍历(1, cp5face, 200)


                SelectionMgr.AddSelectionListObject(cp6face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance4") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                'SelectionMgr.AddSelectionListObject(cp7face（2）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                '配合1("相切", 1)
                'part.ClearSelection2(True)

                'SelectionMgr.AddSelectionListObject(cp7face（0）, Nothing)

                'SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                'AssemblyDoc.AddMate5(5, 0, False, dr("distance5") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                'part.ClearSelection2(True)


                '遍历(1, cp9edge, 200)

                'cp9  0nei  1shang  4di  5 6ce
                'cp9edge   4di  9 14ce


                SelectionMgr.AddSelectionListObject(cp9face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                '遍历（1， cp8face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp9face（4）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)


                '遍历（1， cp1face， 1000, 0）

                SelectionMgr.AddSelectionListObject(cp9face（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（1）, Nothing) '
                配合1("重合", 1)
                part.ClearSelection2(True)

                '遍历（1， cp8edge， 1000, 0）

                SelectionMgr.AddSelectionListObject(cp9edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10edge（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                '遍历（1， cp10face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp10face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)

                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp9face（6）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10face（5）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '遍历（1， cp8face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp9face（6）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8face（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)


                SelectionMgr.AddSelectionListObject(cp9edge（14）, Nothing)
                SelectionMgr.AddSelectionListObject(cp8edge（7）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(cp8edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp10edge（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face(0), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part3_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness2") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                If dr("power") < 350 Then
                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    AxisZ.Select2(True, 2)
                    part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                ElseIf dr("power") > 350 And dr("power") < 450 Then
                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    AxisZ.Select2(True, 2)
                    part.FeatureManager.FeatureLinearPattern5(3, dr("Thickness3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                    part.ClearSelection2(True)
                    part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)
                ElseIf dr("power") > 450 Then
                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    AxisZ.Select2(True, 2)
                    part.FeatureManager.FeatureLinearPattern5(4, dr("Thickness3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                    part.ClearSelection2(True)
                    part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part9_Code") + "-4@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)

                    part.Extension.SelectByID2(dr("Part10_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                    part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                    compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                    swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                    AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                    part.ClearSelection2(True)


                End If


                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden


                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)

                插入零件标号(myView)
                插入零件标号(myView1)


                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)

                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 机座号400装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame400", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop

                'Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc

                Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                'Dim i As Integer

                'swapp.OpenDoc6(dr("Part address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                插入零件（cp3, dr("Part_address3") + dr("Part3_Code"), 0.15）
                插入零件（cp4, dr("Part_address1") + dr("Part4_Code"), 0.25）
                插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3, 0.1）
                插入零件（cp6, dr("Part_address6") + dr("Part6_Code"), -0.35, 0.1）
                插入零件（cp7, dr("Part_address7") + dr("Part7_Code"), 0.4, 0.2）
                插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45, 0.1）
                插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5, 0.1）
                '插入零件（cp10, dr("Part address10") + dr("Part10 Code"), -0.55, 0.1）
                '插入零件（cp11, dr("Part address11") + dr("Part11 Code"), -0.6, 0.1）

                cp1name = cp1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp1edge = swbody.GetEdges()
                cp1face = swbody.GetFaces()
                'facenumber1 = swbody.GetFaceCount()
                'edgenumber1 = swbody.GetEdgeCount()
                part.ClearSelection2(True)

                cp2name = cp2.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp2edge = swbody.GetEdges()
                cp2face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp3name = cp3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp3edge = swbody.GetEdges()
                cp3face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp4name = cp4.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp4edge = swbody.GetEdges()
                cp4face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp5name = cp5.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp5edge = swbody.GetEdges()
                cp5face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp6name = cp6.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp6edge = swbody.GetEdges()
                cp6face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp7name = cp7.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp7edge = swbody.GetEdges()
                cp7face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp8name = cp8.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp8edge = swbody.GetEdges()
                cp8face = swbody.GetFaces()
                part.ClearSelection2(True)

                cp9name = cp9.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                cp9edge = swbody.GetEdges()
                cp9face = swbody.GetFaces()
                part.ClearSelection2(True)

                'cp10name = cp10.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp10.IGetBody.Name + "@" + cp10name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp10edge = swbody.GetEdges()
                'cp10face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp11name = cp11.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp11.IGetBody.Name + "@" + cp11name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp11edge = swbody.GetEdges()
                'cp11face = swbody.GetFaces()
                'part.ClearSelection2(True)

                '遍历（1， cp2face, 200）
                'cp2 0wai  25hou 26ce  27qian 45nei

                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（27）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp2face（26）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp4face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp4face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp3face（2）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（45）, Nothing)
                配合1("相切", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp3face（7）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                AssemblyDoc.AddMate5(5, 0, True, dr("Rib width1") / 1000 / 2, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '1

                SelectionMgr.AddSelectionListObject(cp5face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp5face（5）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                '遍历(1, cp5face, 200)

                SelectionMgr.AddSelectionListObject(cp5face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance3") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)
                'distance3 变量

                SelectionMgr.AddSelectionListObject(cp6face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp6face（3）, Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                '遍历(1, cp5face, 200)

                SelectionMgr.AddSelectionListObject(cp6face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（25）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance4") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '2
                '遍历(1, cp8face, 200)
                'cp8  1 底  2内侧  3圆弧  5 6侧
                SelectionMgr.AddSelectionListObject(cp8face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                '遍历（1， cp8face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)

                '遍历（1， cp9face， 1000, 0）
                'cp9  3 底 45侧

                SelectionMgr.AddSelectionListObject(cp8face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9face（3）, Nothing) '
                配合1("重合", 1)
                part.ClearSelection2(True)

                'cp8edge 7 12
                'cp9edge  3
                SelectionMgr.AddSelectionListObject(cp8edge（0）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9edge（3）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                '遍历（1， cp10face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp9face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("Thickness1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8face（6）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9face（5）, Nothing)
                AssemblyDoc.AddMate5(5, 0, False, dr("distance2") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                '遍历（1， cp8face， 1000, 0）
                SelectionMgr.AddSelectionListObject(cp8face（6）, Nothing)
                SelectionMgr.AddSelectionListObject(cp7face（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp8edge（12）, Nothing)
                SelectionMgr.AddSelectionListObject(cp7edge（7）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp7edge（4）, Nothing)
                SelectionMgr.AddSelectionListObject(cp9edge（2）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(cp1face(0), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(dr("Part3_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part5_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(2, dr("Thickness2") / 1000, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part6_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                AxisZ.Select2(True, 2)
                part.FeatureManager.FeatureLinearPattern5(3, dr("Thickness3") / 1000, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2(dr("Part7_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part8_Code") + "-3@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(dr("Part9_Code") + "-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)
                inA2("", dr("company"), dr("name"), dr("Code"))

                myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                part.ViewDisplayHidden
                myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                part.ViewDisplayHidden
                myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                part.ViewDisplayHidden


                设置图纸比例(dr("proportion"))
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入零件标号(myView)
                插入零件标号(myView1)
                插入BOM表（myView1）
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 机座号200装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=main_frame;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from main_frame200", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop


                'Dim Code As String = dr("Code")
                'Dim name As String = dr("name")
                'Dim company As String = dr("company")
                'Dim material As String = dr("material")
                'Dim dimension As SldWorks.Dimension
                'Dim swbody As SldWorks.Body2
                'AxisY = AXIS("Y")
                'AxisZ = AXIS("Z")
                'AxisX = AXIS("X")
                'AssemblyDoc = swapp.ActiveDoc


                'Dim cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12 As SldWorks.Component2
                'Dim cp1name, cp2name, cp3name, cp4name, cp5name, cp6name, cp7name, cp8name, cp9name, cp10name, cp11name, cp12name As String
                'Dim cp1edge(), cp2edge(), cp3edge(), cp4edge(), cp5edge(), cp6edge(), cp7edge(), cp8edge(), cp9edge(), cp10edge(), cp11edge(), cp12edge() As Object
                'Dim cp1face(), cp2face(), cp3face(), cp4face(), cp5face(), cp6face(), cp7face(), cp8face(), cp9face(), cp10face(), cp11face(), cp12face() As Object

                'swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                'part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                ''Dim i As Integer

                ''swapp.OpenDoc6(dr("Part_address") + dr("Part" + i.ToString + " Code") + dr("dz2"), 1, 32, "", errors, longwarnings)
                '插入零件（cp1, dr("Part_address1") + dr("Part1_Code"), 0）
                '插入零件（cp2, dr("Part_address2") + dr("Part2_Code"), 0.1）
                '插入零件（cp3, dr("Part_address1") + dr("Part3_Code"), 0.15）
                '插入零件（cp4, dr("Part_address4") + dr("Part4_Code"), 0.25）
                '插入零件（cp5, dr("Part_address5") + dr("Part5_Code"), 0.3, 0.1）
                '插入零件（cp6, dr("Part_address5") + dr("Part6_Code"), -0.35, 0.1）
                '插入零件（cp7, dr("Part_address5") + dr("Part7_Code"), 0.4, 0.2）
                '插入零件（cp8, dr("Part_address8") + dr("Part8_Code"), 0.45, 0.1）
                '插入零件（cp9, dr("Part_address9") + dr("Part9_Code"), 0.5, 0.1）
                ''插入零件（cp10, dr("Part address10") + dr("Part10 Code"), -0.55, 0.1）
                ''插入零件（cp11, dr("Part address11") + dr("Part11 Code"), -0.6, 0.1）

                'cp1name = cp1.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp1.IGetBody.Name + "@" + cp1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp1edge = swbody.GetEdges()
                'cp1face = swbody.GetFaces()
                ''facenumber1 = swbody.GetFaceCount()
                ''edgenumber1 = swbody.GetEdgeCount()
                'part.ClearSelection2(True)

                'cp2name = cp2.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp2.IGetBody.Name + "@" + cp2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp2edge = swbody.GetEdges()
                'cp2face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp3name = cp3.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp3.IGetBody.Name + "@" + cp3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp3edge = swbody.GetEdges()
                'cp3face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp4name = cp4.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp4.IGetBody.Name + "@" + cp4name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp4edge = swbody.GetEdges()
                'cp4face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp5name = cp5.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp5.IGetBody.Name + "@" + cp5name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp5edge = swbody.GetEdges()
                'cp5face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp6name = cp6.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp6.IGetBody.Name + "@" + cp6name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp6edge = swbody.GetEdges()
                'cp6face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp7name = cp7.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp7.IGetBody.Name + "@" + cp7name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp7edge = swbody.GetEdges()
                'cp7face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp8name = cp8.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp8.IGetBody.Name + "@" + cp8name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp8edge = swbody.GetEdges()
                'cp8face = swbody.GetFaces()
                'part.ClearSelection2(True)

                'cp9name = cp9.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(cp9.IGetBody.Name + "@" + cp9name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                'cp9edge = swbody.GetEdges()
                'cp9face = swbody.GetFaces()
                'part.ClearSelection2(True)

                ''遍历(1, cp2face, 300, 200)

                ''cp1 0外圆  1前   2后   3内
                ''cp2 0外圆  117后  118缝  119前  237 内

                'SelectionMgr.AddSelectionListObject(cp1face（1）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（119）, Nothing)
                ''配合1("重合", 1)
                'AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                'part.ClearSelection2(True)

                'SelectionMgr.AddSelectionListObject(cp1face（0）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                '配合1("同轴", 1)
                'part.ClearSelection2(True)

                'SelectionMgr.AddSelectionListObject(cp2face（118）, Nothing)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                '配合1("平行", 0)
                'part.ClearSelection2(True)


                'SelectionMgr.AddSelectionListObject(cp3face（2）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（117）, Nothing)
                ''AssemblyDoc.AddMate5(5, 0, True, dr("distance1") / 1000, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                '配合1("重合", 0)
                'part.ClearSelection2(True)


                'SelectionMgr.AddSelectionListObject(cp3face（0）, Nothing)
                'SelectionMgr.AddSelectionListObject(cp2face（0）, Nothing)
                '配合1("同轴", 1)
                'part.ClearSelection2(True)


                ''遍历(1, cp4face, 300)


                'part.SaveAs3(dr("dz1") + dr("code") + dr("dz4"), 0, 2)


                'inA2("", dr("company"), dr("name"), dr("Code"))

                'myView1 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*右视", 0.185, 0.29, 0)
                'part.ViewDisplayHidden
                'myView = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*前视", 0.447, 0.29, 0)
                'part.ViewDisplayHidden
                'myView2 = Draw.CreateDrawViewFromModelView3(dr("dz1") + dr("code") + dr("dz4"), "*上视", 0.185, 0.12, 0)
                'part.ViewDisplayHidden
                '设置图纸比例(dr("proportion"))
                'Object数组1 = 索引字符串（dr（"skills_requirement"））
                '技术要求（0.29, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5）, Object数组1（6））
                'myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                '插入零件标号(myView)
                '插入零件标号(myView1)
                '插入BOM表（myView1）
                'part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                'part.SaveAs3(dr("dz1") + dr("code") + dr("dz3"), 0, 2)
                'dr.Close()
                'mysqlcom.Dispose()
                'mysqlcon.Close()
                'mysqlcon.Dispose()
            End Sub
            Public Sub 转子280装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=rotor_assembly;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from single_rectangular_slot_rotor", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                'Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc
                Dim 转子, 转轴, 风扇， 阻尼板, 转子片， 风扇衬套， 轴套, 平衡环, 联轴器片 As SldWorks.Component2
                Dim 阻尼板特征， 转子片特征， 风扇衬套特征1， 风扇衬套特征2 As SldWorks.Feature
                Dim 转子name, 转轴name, 风扇name， 阻尼板name， 轴套name， 联轴器片name, 平衡环name As String
                Dim 转子edge(), 转轴edge(), 风扇edge()， 阻尼板edge() As Object
                Dim 转子face(), 转轴face(), 风扇face()， 阻尼板face()， 转子片face()， 风扇衬套face1(), 风扇衬套face2()， 轴套face()， 联轴器片face(), 平衡环face() As Object
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                插入零件（转轴, dr("Partaddress1") + dr("Part1_Code"), 0）
                插入装配体（转子, dr("assemblyaddress1") + dr("assembly1_Code"), 0.1）
                插入装配体（风扇, dr("Partaddress2") + dr("Part2_Code"), 0.2）
                '插入零件（平衡环, dr("Partaddress4") + dr("Part4_Code"), 0.3）
                插入零件（联轴器片, dr("Partaddress5") + dr("Part5_Code"), 0.5）
                插入零件（轴套, dr("Partaddress3") + dr("Part3_Code"), 0.6）
                转轴name = 转轴.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(转轴.IGetBody.Name + "@" + 转轴name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                转轴edge = swbody.GetEdges()
                转轴face = swbody.GetFaces()
                part.ClearSelection2(True)


                轴套name = 轴套.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(轴套.IGetBody.Name + "@" + 轴套name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                '转轴edge = swbody.GetEdges()
                轴套face = swbody.GetFaces()
                part.ClearSelection2(True)

                联轴器片name = 联轴器片.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(联轴器片.IGetBody.Name + "@" + 联轴器片name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                '风扇edge = swbody.GetEdges()
                联轴器片face = swbody.GetFaces()
                part.ClearSelection2(True)


                '平衡环name = 平衡环.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(平衡环.IGetBody.Name + "@" + 平衡环name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = SelectionMgr.GetSelectedObject6(1, -1)
                ''转轴edge = swbody.GetEdges()
                '平衡环face = swbody.GetFaces()
                'part.ClearSelection2(True)

                获得子零件_new(转子， 阻尼板， "*Damping_plate*", 1)
                'If Right(阻尼板.Name2, 1) = "1" Then
                'Else
                '    获得子零件(转子， 阻尼板， "*Damping_plate*", 1)
                'End If
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)
                ''MsgBox(阻尼板.Name2)

                获得子零件_new(转子， 转子片， "*rotor_lamination*")
                转子片特征 = 转子片.FeatureByName("切除-拉伸3")
                转子片face = 转子片特征.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(风扇， 风扇衬套， "*fan_bushing*")
                风扇衬套特征1 = 风扇衬套.FeatureByName("切除-拉伸1")
                风扇衬套face1 = 风扇衬套特征1.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(风扇， 风扇衬套， "*fan_bushing*")
                风扇衬套特征1 = 风扇衬套.FeatureByName("切除-拉伸3")
                风扇衬套face2 = 风扇衬套特征1.GetFaces()
                part.ClearSelection2(True)



                Dim tittle As String = part.GetTitle


                SelectionMgr.AddSelectionListObject(阻尼板face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（32）, Nothing)
                ''MsgBox(1)
                配合1("重合", 0)

                SelectionMgr.AddSelectionListObject(转子片face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（1）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)
                Debug.Print(1)


                '转轴face 3  9底

                ''MsgBox(1)
                part.ClearSelection2(True)
                Debug.Print(2)
                ''MsgBox(1)
                SelectionMgr.AddSelectionListObject(转子片face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（10）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                Debug.Print(3)
                ''MsgBox(1)

                '遍历（1， 风扇衬套face2， 1000， 0）
                'SelectionMgr.AddSelectionListObject(风扇衬套face1（2）, Nothing)
                'SelectionMgr.AddSelectionListObject(转轴face（14）, Nothing)
                '配合1("平行", 1)
                'part.ClearSelection2(True)
                'Debug.Print(4)
                '''MsgBox(1)
                SelectionMgr.AddSelectionListObject(风扇衬套face1（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（1）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)
                Debug.Print(5)
                ''MsgBox(1)
                SelectionMgr.AddSelectionListObject(风扇衬套face2（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（35）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)

                ''MsgBox(1)
                '转轴face 10  14底

                '遍历（1， 转轴face， 1000， 0）
                SelectionMgr.AddSelectionListObject(轴套face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（1）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)
                Debug.Print(7)
                ''MsgBox(1)
                SelectionMgr.AddSelectionListObject(轴套face（24）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（10）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)
                'Debug.Print(8)
                ''MsgBox(1)
                SelectionMgr.AddSelectionListObject(轴套face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（44）, Nothing) '57
                配合1("重合", 0)
                part.ClearSelection2(True)
                'Debug.Print(9)
                ''MsgBox(1)
                '遍历（1， 转轴face， 1000， 0）
                ' 轴套1 2  3底
                '3轴9底  59
                '遍历（1， 轴套face， 1000， 0）
                '联轴器片face  0外圆  1前 2后   5小孔
                '轴套face 1 后  21

                SelectionMgr.AddSelectionListObject(联轴器片face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（1）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(轴套face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(联轴器片face（1）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(联轴器片face（5）, Nothing)
                SelectionMgr.AddSelectionListObject(轴套face（1）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)


                part.SaveAs3(dr("save_address") + dr("code") + dr("dz4"), 0, 8)



                A3模板(" ", dr("company"), dr("name"), dr("Code"))
                myView = Draw.CreateDrawViewFromModelView3(dr("save_address") + dr("code") + dr("dz4"), "*右视", 0.21, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(372, 204, 2)
                part.Extension.SetUserPreferenceInteger(516, 2, 0)
                part.Extension.SetUserPreferenceInteger(517, 208, 0)
                part.Extension.SetUserPreferenceInteger(372, 208, 2) '直径半径折弯标注
                设置图纸比例(dr("proportion"))
                part.ViewDisplayHidden '隐藏线不可见
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True) '不显示草图

                part.ClearSelection2(True)

                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(dr("proportion"), ":")
                分母 = a(1)

                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(0, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                myView = part.ActiveDrawingView
                myView.Crop()

                Dim myView1 As View
                part.ActivateView("工程图视图1")
                Dim L1s As SketchSegment
                L1s = part.SketchManager.CreateLine(0, 0, 0, 0, 0.09 * 分母, 0)
                L1s.Select4(False, Nothing)
                myView1 = part.CreateSectionViewAt5(0.21, 0.21, 0, " ", 128, Nothing, 0) '创建剖面图,并切换方向

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '隐藏视图
                part.SuppressView
                part.ClearSelection2(True)
                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.08, 0.15, Object数组1（0）, Object数组1（1）, Object数组1（2）, Object数组1（3）, Object数组1（4））
                插入零件标号(myView1)

                插入BOM表2(myView1, 2)
                part.SaveAs3(dr("save_address") + dr("code") + dr("dz3"), 0, 8)
                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub 转子200装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=rotor_assembly;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from single_rectangular_slot_rotor", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop

                Dim name As String = dr("name")
                Dim company As String = dr("company")
                'Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc

                Dim 转子, 转轴, 风扇， 阻尼板, 转子片， 风扇衬套 As SldWorks.Component2
                Dim 阻尼板特征， 转子片特征， 风扇衬套特征1， 风扇衬套特征2 As SldWorks.Feature
                Dim 转子name, 转轴name, 风扇name， 阻尼板name As String
                Dim 转子edge(), 转轴edge(), 风扇edge()， 阻尼板edge() As Object
                Dim 转子face(), 转轴face(), 风扇face()， 阻尼板face()， 转子片face()， 风扇衬套face1(), 风扇衬套face2() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                插入零件（转轴, dr("Partaddress1") + dr("Part1_Code"), 0）
                插入装配体（转子, dr("assemblyaddress1") + dr("assembly1_Code"), 0.1）
                插入装配体（风扇, dr("Partaddress2") + dr("Part2_Code"), 0.2）

                转轴name = 转轴.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(转轴.IGetBody.Name + "@" + 转轴name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                转轴edge = swbody.GetEdges()
                转轴face = swbody.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(转子， 阻尼板， "*Damping_plate*", 1)
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(转子， 转子片， "*rotor_lamination*", 1)
                转子片特征 = 转子片.FeatureByName("切除-拉伸3")
                转子片face = 转子片特征.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(风扇， 风扇衬套， "*fan_bushing*", 1)
                风扇衬套特征1 = 风扇衬套.FeatureByName("切除-拉伸2")
                风扇衬套face1 = 风扇衬套特征1.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(风扇， 风扇衬套， "*fan_bushing*", 1)
                风扇衬套特征1 = 风扇衬套.FeatureByName("切除-拉伸3")
                风扇衬套face2 = 风扇衬套特征1.GetFaces()
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(转子片face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（3）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)
                '转轴face 3  9底
                SelectionMgr.AddSelectionListObject(阻尼板face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（14）, Nothing) '15
                配合1("重合", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(转子片face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（31）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(风扇衬套face1（1）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（31）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(风扇衬套face1（3）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（4）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(风扇衬套face2（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                '遍历(1, 转轴face, 1000)
                part.SaveAs3(dr("save_address") + dr("code") + dr("dz4"), 0, 8)




                A3模板(" ", dr("company"), dr("name"), dr("Code"))
                myView = Draw.CreateDrawViewFromModelView3(dr("save_address") + dr("code") + dr("dz4"), "*右视", 0.21, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)

                设置图纸比例(dr("proportion"))
                part.ViewDisplayHidden '隐藏线不可见
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True) '不显示草图

                part.ClearSelection2(True)

                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(dr("proportion"), ":")
                分母 = a(1)


                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(0, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                myView = part.ActiveDrawingView
                myView.Crop()

                Dim myView1 As View
                part.ActivateView("工程图视图1")
                Dim L1s As SketchSegment
                L1s = part.SketchManager.CreateLine(0, 0, 0, 0, 0.09 * 分母, 0)
                L1s.Select4(False, Nothing)
                myView1 = part.CreateSectionViewAt5(0.21, 0.21, 0, " ", 128, Nothing, 0) '创建剖面图,并切换方向

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '隐藏视图
                part.SuppressView
                part.ClearSelection2(True)



                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.08, 0.15, Object数组1（0）, Object数组1（1）, Object数组1（2）, Object数组1（3）, Object数组1（4））
                插入零件标号(myView1)

                插入BOM表2(myView1, 2)
                part.SaveAs3(dr("save_address") + dr("code") + dr("dz3"), 0, 8)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()


            End Sub
            Public Sub 转子180装配(Code$)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=rotor_assembly;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from single_rectangular_slot_rotor", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("Code") = Code
                    dr.Read()
                Loop

                Dim name As String = dr("name")
                Dim company As String = dr("company")
                'Dim material As String = dr("material")
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                AxisY = AXIS("Y")
                AxisZ = AXIS("Z")
                AxisX = AXIS("X")
                AssemblyDoc = swapp.ActiveDoc

                Dim 转子, 转轴, 风扇， 阻尼板, 转子片， 励磁机转子， 励磁机转子冲片, 联轴器片 As SldWorks.Component2
                Dim 阻尼板特征， 转子片特征， 励磁机转子冲片特征， 风扇特征1， 风扇特征2 As SldWorks.Feature
                Dim 转子name, 转轴name, 风扇name， 阻尼板name， 励磁机转子冲片name， 联轴器片name As String
                Dim 转子edge(), 转轴edge(), 风扇edge()， 阻尼板edge()， 励磁机转子冲片edge(), 联轴器片edge() As Object
                Dim 转子face(), 转轴face(), 风扇face()， 阻尼板face()， 转子片face()， 励磁机转子冲片face()， 风扇face1()， 风扇face2(), 联轴器片face() As Object

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                插入零件（转轴, dr("Partaddress1") + dr("Part1_Code"), 0）
                插入装配体（转子, dr("assemblyaddress1") + dr("assembly1_Code"), 0.1）
                插入零件（风扇, dr("Partaddress2") + dr("Part2_Code"), 0.2）
                插入装配体（励磁机转子, dr("Partaddress3") + dr("Part3_Code"), 0.3）
                插入零件（联轴器片, dr("Partaddress5") + dr("Part5_Code"), 0.4）

                转轴name = 转轴.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(转轴.IGetBody.Name + "@" + 转轴name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                转轴edge = swbody.GetEdges()
                转轴face = swbody.GetFaces()
                part.ClearSelection2(True)

                风扇name = 风扇.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(风扇.IGetBody.Name + "@" + 风扇name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                风扇edge = swbody.GetEdges()
                风扇face = swbody.GetFaces()
                part.ClearSelection2(True)

                联轴器片name = 联轴器片.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(联轴器片.IGetBody.Name + "@" + 联轴器片name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                联轴器片edge = swbody.GetEdges()
                联轴器片face = swbody.GetFaces()
                part.ClearSelection2(True)


                获得子零件_new(转子， 阻尼板， "*Damping_plate*", 1)
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                获得子零件_new(转子， 转子片， "*rotor_lamination*", 1)
                转子片特征 = 转子片.FeatureByName("切除-拉伸3")
                转子片face = 转子片特征.GetFaces()
                part.ClearSelection2(True)


                风扇特征1 = 风扇.FeatureByName("旋转1")
                风扇face1 = 风扇特征1.GetFaces()
                part.ClearSelection2(True)

                风扇特征2 = 风扇.FeatureByName("凸台-拉伸2")
                风扇face2 = 风扇特征2.GetFaces()
                part.ClearSelection2(True)



                SelectionMgr.AddSelectionListObject(转子片face（3）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（3）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                '转轴face 3  9底
                SelectionMgr.AddSelectionListObject(阻尼板face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（2）, Nothing) '15
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(转子片face（1）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（26）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True) 'wu

                SelectionMgr.AddSelectionListObject(风扇face2（1）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（26）, Nothing)
                配合1("平行", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(风扇face1（65）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（3）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(风扇face1（66）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（5）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)


                获得子零件_new(励磁机转子， 励磁机转子冲片， "*Exciter_rotor_laminations*", 1)
                励磁机转子冲片特征 = 励磁机转子冲片.FeatureByName("凸台-拉伸1")
                励磁机转子冲片face = 励磁机转子冲片特征.GetFaces()
                part.ClearSelection2(True)
                '遍历（1, 转轴face, 1000）
                SelectionMgr.AddSelectionListObject(励磁机转子冲片face（46）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（24）, Nothing)
                配合1("平行", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(励磁机转子冲片face（45）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（3）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(励磁机转子冲片face（50）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（14）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(联轴器片face（2）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（3）, Nothing)
                配合1("同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(联轴器片face（0）, Nothing)
                SelectionMgr.AddSelectionListObject(转轴face（9）, Nothing)
                配合1("重合", 1)
                part.ClearSelection2(True)

                'SelectionMgr.AddSelectionListObject(联轴器片face（16）, Nothing)
                'SelectionMgr.AddSelectionListObject(转轴face（45）, Nothing)
                '配合1("同轴", 0)
                'part.ClearSelection2(True)


                part.SaveAs3(dr("save_address") + dr("code") + dr("dz4"), 0, 8)




                A3模板(" ", dr("company"), dr("name"), dr("Code"))
                myView = Draw.CreateDrawViewFromModelView3(dr("save_address") + dr("code") + dr("dz4"), "*右视", 0.21, 0.19, 0)
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                SelectionMgr = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)

                设置图纸比例(dr("proportion"))
                part.ViewDisplayHidden '隐藏线不可见
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True) '不显示草图

                part.ClearSelection2(True)

                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(dr("proportion"), ":")
                分母 = a(1)


                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCornerRectangle(0, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                myView = part.ActiveDrawingView
                myView.Crop()

                Dim myView1 As View
                part.ActivateView("工程图视图1")
                Dim L1s As SketchSegment
                L1s = part.SketchManager.CreateLine(0, 0, 0, 0, 0.09 * 分母, 0)
                L1s.Select4(False, Nothing)
                myView1 = part.CreateSectionViewAt5(0.21, 0.21, 0, " ", 128, Nothing, 0) '创建剖面图,并切换方向

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '隐藏视图
                part.SuppressView
                part.ClearSelection2(True)



                Object数组1 = 索引字符串（dr（"skills_requirement"））
                技术要求（0.08, 0.15, Object数组1（0）, Object数组1（1）, Object数组1（2）, Object数组1（3）, Object数组1（4））
                插入零件标号(myView1)

                插入BOM表2(myView1, 2)
                part.SaveAs3(dr("save_address") + dr("code") + dr("dz3"), 0, 8)


                dr.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()





            End Sub
            Public Sub main_frame_355_assembly(code1$)
                mysql_new("generator_assembly", "generator_assembly", code1)
                Dim name As String = read("name")
                Dim company As String = read("company")
                'Dim material As String = read("material")

                Dim swbody As SldWorks.Body2
                Dim 转子 As SldWorks.Component2
                Dim 定子 As SldWorks.Component2
                Dim 前端盖 As SldWorks.Component2
                Dim 后端盖装配 As SldWorks.Component2
                Dim 机座 As SldWorks.Component2
                Dim 吊攀, 防护罩1， 防护罩2， 防护罩3 As SldWorks.Component2

                插入装配体(机座, read("Partaddress5") + read("Part5_Code"))
                插入装配体(转子, read("Partaddress1") + read("Part1_Code"))
                插入装配体(后端盖装配, read("Partaddress3") + read("Part3_Code"))
                插入装配体(定子, read("Partaddress2") + read("Part2_Code"))
                插入零件(前端盖, read("Partaddress4") + read("Part4_Code"))

                插入零件(吊攀, "E:\works\generator_parts_library\hanging_climbing\8LY.472.003")

                插入零件(防护罩1, "E:\works\generator_parts_library\safety_mask\8LY.314.0025-2")
                插入零件(防护罩2, "E:\works\generator_parts_library\safety_mask\8LY.314.0014-2")
                插入零件(防护罩3, "E:\works\generator_parts_library\safety_mask\8LY.314.0028")

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                '机座和后端盖

                Dim 后端盖 As Component2
                获得子零件_new(后端盖装配, 后端盖, "*cover*")
                Dim 后端盖特征 As Feature
                Dim 后端盖face As Object()
                后端盖特征 = 后端盖.FeatureByName("切除-拉伸9")
                后端盖face = 后端盖特征.GetFaces

                Dim 后法兰 As Component2
                获得子零件_new2(机座, 后法兰, "*flange*"， 1)
                If 后法兰.Name2 Like "*011*" Then

                Else
                    获得子零件_new(机座, 后法兰, "*flange*"， 1)
                End If

                Dim 后法兰特征 As Feature
                Dim 后法兰face As Object()
                后法兰特征 = 后法兰.FeatureByName("凸台-拉伸1")
                后法兰face = 后法兰特征.GetFaces

                ''MsgBox(后法兰.Name2)
                part.ClearSelection2(True)
                配合(后法兰face(0), 后端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(后法兰face(2), 后端盖face(0), "同轴", 1)

                Dim 前端盖特征， 前端盖特征2， 吊攀特征, 筒体特征， 防护罩1特征 As Feature
                Dim 前端盖face， 前端盖face2， 筒体face As Object()
                前端盖特征 = 前端盖.FeatureByName("切除-拉伸2")
                前端盖face = 前端盖特征.GetFaces

                Dim 前法兰， 筒体 As Component2
                获得子零件_new(机座, 前法兰, "*flange*"， 1)

                If 前法兰.Name2 Like "*012*" Then

                Else
                    获得子零件_new2(机座, 前法兰, "*flange*"， 1)
                End If

                Dim 前法兰特征 As Feature
                Dim 前法兰face As Object()
                前法兰特征 = 前法兰.FeatureByName("凸台-拉伸1")
                前法兰face = 前法兰特征.GetFaces

                part.ClearSelection2(True)
                配合(前法兰face(1), 前端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(前法兰face(2), 前端盖face(0), "同轴", 0)

                Dim 阻尼板 As Component2
                Dim 转子铁芯 As Component2
                获得子零件_new(转子， 转子铁芯， "*rotor_core_assembly*", 1)
                获得子零件_new(转子铁芯， 阻尼板， "*Damping_plate*", 2)
                ''MsgBox(阻尼板.Name2)
                Dim 阻尼板特征 As Feature
                Dim 阻尼板face As Object()
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                Dim 定子冲片 As Component2
                获得子零件_new(定子, 定子冲片, "*stator_lamination*")
                Dim 定子冲片特征 As Feature
                Dim 定子冲片face As Object()
                定子冲片特征 = 定子冲片.FeatureByName("凸台-拉伸1")
                定子冲片face = 定子冲片特征.GetFaces

                Dim 轴 As Component2
                获得子零件_new(转子， 轴， "*rotor_shaft*", 1)
                Dim 轴特征 As Feature
                Dim 轴face As Object()
                轴特征 = 轴.FeatureByName("旋转1")
                轴face = 轴特征.GetFaces

                前端盖特征 = 前端盖.FeatureByName("切除-拉伸12")
                前端盖face = 前端盖特征.GetFaces

                '遍历(1, 轴face， 1000)

                part.ClearSelection2(True)
                配合(阻尼板face(0), 定子冲片face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(轴face(6), 定子冲片face(2), "同轴", 0)

                part.ClearSelection2(True)
                配合(轴face(6), 前端盖face(0), "同轴", 0)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(轴face(16), Nothing)
                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                AssemblyDoc.AddMate5(5, 0, True, 0.0844, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                Dim 防护罩1face, 防护罩2face, 防护罩3face， 吊攀face As Object()
                Dim 防护罩1name, 防护罩2name, 防护罩3name， 吊攀name As String

                防护罩1name = 防护罩1.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(防护罩1.IGetBody.Name + "@" + 防护罩1name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                防护罩1face = swbody.GetFaces()
                part.ClearSelection2(True)


                '防护罩2name = 防护罩2.Name2()
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2(防护罩2.IGetBody.Name + "@" + 防护罩2name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = 防护罩2.IGetBody
                防护罩2face = swbody.GetFaces()
                part.ClearSelection2(True)

                防护罩3name = 防护罩3.Name2()
                part.ClearSelection2(True)
                part.Extension.SelectByID2(防护罩3.IGetBody.Name + "@" + 防护罩3name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                防护罩3face = swbody.GetFaces()
                part.ClearSelection2(True)

                part.ClearSelection2(True)
                配合(防护罩1face(1880), 前端盖face(0), "同轴", 1)

                前端盖特征 = 前端盖.FeatureByName("切除-拉伸9")
                前端盖face = 前端盖特征.GetFaces


                part.ClearSelection2(True)
                配合(防护罩1face(1416), 前端盖face(0), "重合", 1)
                part.ClearSelection2(True)


                Dim 防护罩3特征 As Feature
                防护罩3特征 = 防护罩3.FeatureByName("凸台-拉伸1")
                防护罩3face = 防护罩3特征.GetFaces()
                part.ClearSelection2(True)

                后端盖特征 = 后端盖.FeatureByName("切除-拉伸3")
                后端盖face = 后端盖特征.GetFaces

                配合(防护罩3face(0), 后端盖face(0), "重合", 1)
                part.ClearSelection2(True)

                配合(防护罩3face(2), 后端盖face(1), "同轴", 0)
                part.ClearSelection2(True)

                后端盖特征 = 后端盖.FeatureByName("阵列(圆周)1")
                后端盖face = 后端盖特征.GetFaces
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(后端盖face(10), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 1)
                part.ClearSelection2(True)


                后端盖特征 = 后端盖.FeatureByName("切除-拉伸12")
                后端盖face = 后端盖特征.GetFaces()
                part.ClearSelection2(True)

                吊攀name = 吊攀.Name2()
                part.ClearSelection2(True)

                part.Extension.SelectByID2(吊攀.IGetBody.Name + "@" + 吊攀name + "@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = SelectionMgr.GetSelectedObject6(1, -1)
                吊攀face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(吊攀face(20), 后端盖face(1), "同轴", 0)
                part.ClearSelection2(True)

                配合(吊攀face(21), 后端盖face(0), "同轴", 0)


                后端盖特征 = 后端盖.FeatureByName("切除-拉伸2")
                后端盖face = 后端盖特征.GetFaces()
                part.ClearSelection2(True)


                配合(吊攀face(3), 后端盖face(1), "重合", 1)

                获得子零件_new(机座, 筒体, "*Cylinder*"， 1)
                筒体特征 = 筒体.FeatureByName("阵列(线性)1")
                筒体face = 筒体特征.GetFaces()
                part.ClearSelection2(True)

                配合(防护罩2face(439), 筒体face(4), "重合", 0)


                获得子零件_new(机座, 筒体, "*Cylinder*"， 1)
                筒体特征 = 筒体.FeatureByName("基体-法兰1")
                筒体face = 筒体特征.GetFaces()
                part.ClearSelection2(True)


                配合(防护罩2face(0), 筒体face(0), "同轴", 0)
                part.ClearSelection2(True)


                part.Extension.SelectByID2(防护罩2name + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 0, Nothing, 0)
                part.FixComponent

                Dim 螺栓1, 垫圈1, 弹垫1, 螺栓2, 垫圈2, 弹垫2， 螺栓3, 垫圈3, 弹垫3, 螺钉4, 垫圈4, 弹垫4， 轴承， 波形垫圈， 螺钉5, 垫圈5, 弹垫5, 螺钉6, 垫圈6, 弹垫6, 螺母6 As Component2
                Dim 螺栓1face, 垫圈1face, 弹垫1face, 螺栓2face, 垫圈2face, 弹垫2face， 螺栓3face, 垫圈3face, 弹垫3face, 螺钉4face, 垫圈4face, 弹垫4face， 轴承face， 波形垫圈face， 螺钉5face, 垫圈5face, 弹垫5face， 螺钉6face, 垫圈6face, 弹垫6face, 螺母6face As Object()

                '标准件
                插入零件(螺栓1, "E:\works\generator_parts_library\Standard_Parts\GB_T5782_2000六角螺栓M12X50"， 1)
                插入零件(弹垫1, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈12"， 1.1)
                插入零件(垫圈1, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈12"， 1.2)

                swbody = 螺栓1.IGetBody
                螺栓1face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 垫圈1.IGetBody
                垫圈1face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 弹垫1.IGetBody
                弹垫1face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(螺栓1face(21), 弹垫1face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺栓1face(0), 弹垫1face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺栓1face(21), 垫圈1face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫1face(2), 垫圈1face(1), "重合", 1)
                part.ClearSelection2(True)

                前端盖特征 = 前端盖.FeatureByName("切除-拉伸6")
                前端盖face = 前端盖特征.GetFaces
                part.ClearSelection2(True)
                配合(螺栓1face(21), 前端盖face(0), "同轴", 1)
                part.ClearSelection2(True)

                前端盖特征 = 前端盖.FeatureByName("凸台-拉伸1")
                前端盖face = 前端盖特征.GetFaces
                part.ClearSelection2(True)

                配合(前端盖face(0), 垫圈1face(2), "重合", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(螺栓1.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈1.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(弹垫1.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)

                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                插入零件(螺栓2, "E:\works\generator_parts_library\Standard_Parts\GB_T70螺栓M12X60"， 1)
                插入零件(弹垫2, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈12"， 1.1)
                插入零件(垫圈2, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈12"， 1.2)

                swbody = 螺栓2.IGetBody
                螺栓2face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 垫圈2.IGetBody
                垫圈2face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 弹垫2.IGetBody
                弹垫2face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(螺栓2face(21), 弹垫2face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺栓2face(0), 弹垫2face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺栓2face(21), 垫圈2face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫2face(2), 垫圈2face(1), "重合", 1)
                part.ClearSelection2(True)

                后端盖特征 = 后端盖.FeatureByName("切除-拉伸2")
                后端盖face = 后端盖特征.GetFaces
                part.ClearSelection2(True)

                配合(后端盖face(1), 垫圈2face(2), "重合", 1)
                part.ClearSelection2(True)

                后端盖特征 = 后端盖.FeatureByName("切除-拉伸11")
                后端盖face = 后端盖特征.GetFaces
                part.ClearSelection2(True)

                配合(后端盖face(0), 螺栓2face(21), "同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(螺栓2.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈2.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(弹垫2.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                插入零件(螺栓3, "E:\works\generator_parts_library\Standard_Parts\GB_T70螺栓M12X60"， 1)
                插入零件(弹垫3, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈12"， 1.1)
                插入零件(垫圈3, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈12"， 1.2)
                swbody = 螺栓3.IGetBody
                螺栓3face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 垫圈3.IGetBody
                垫圈3face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 弹垫3.IGetBody
                弹垫3face = swbody.GetFaces()
                part.ClearSelection2(True)
                配合(螺栓3face(21), 弹垫3face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺栓3face(0), 弹垫3face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺栓3face(21), 垫圈3face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫3face(2), 垫圈3face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(吊攀face(20), 螺栓3face(21), "同轴", 0)
                part.ClearSelection2(True)

                配合(吊攀face(0), 垫圈3face(2), "重合", 1)
                part.ClearSelection2(True)

                插入零件(螺栓3, "E:\works\generator_parts_library\Standard_Parts\GB_T70螺栓M12X60"， 1)
                插入零件(弹垫3, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈12"， 1.1)
                插入零件(垫圈3, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈12"， 1.2)
                swbody = 螺栓3.IGetBody
                螺栓3face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 垫圈3.IGetBody
                垫圈3face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 弹垫3.IGetBody
                弹垫3face = swbody.GetFaces()
                part.ClearSelection2(True)
                配合(螺栓3face(21), 弹垫3face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺栓3face(0), 弹垫3face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺栓3face(21), 垫圈3face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫3face(2), 垫圈3face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(吊攀face(21), 螺栓3face(21), "同轴", 0)
                part.ClearSelection2(True)

                配合(吊攀face(0), 垫圈3face(2), "重合", 1)

                插入零件(螺钉4, "E:\works\generator_parts_library\Standard_Parts\GB_T67_2000_开槽盘头螺钉M6X12"， 1)
                插入零件(弹垫4, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈6"， 1.1)
                插入零件(垫圈4, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈6"， 1.2)
                swbody = 螺钉4.IGetBody
                螺钉4face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 垫圈4.IGetBody
                垫圈4face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 弹垫4.IGetBody
                弹垫4face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(螺钉4face(4), 弹垫4face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺钉4face(1), 弹垫4face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺钉4face(4), 垫圈4face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫4face(2), 垫圈4face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(防护罩3face(1), 垫圈4face(2), "重合", 1)

                防护罩3特征 = 防护罩3.FeatureByName("切除-拉伸2")
                防护罩3face = 防护罩3特征.GetFaces()
                part.ClearSelection2(True)

                配合(防护罩3face(0), 螺钉4face(4), "同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(螺钉4.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈4.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(弹垫4.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(12, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                插入零件(轴承, "E:\works\generator_parts_library\Standard_Parts\GB_T276_94_深沟球轴承6314_2RS_C3"， 1)
                插入零件(波形垫圈, "E:\works\generator_parts_library\Standard_Parts\GB_T7246_1987_波形弹簧垫圈160"， 1.1)
                swbody = 轴承.IGetBody
                轴承face = swbody.GetFaces()
                part.ClearSelection2(True)
                swbody = 波形垫圈.IGetBody
                波形垫圈face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(轴承face(0), 波形垫圈face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(轴承face(37), 波形垫圈face(2), "重合", 1)
                part.ClearSelection2(True)

                后端盖特征 = 后端盖.FeatureByName("切除-拉伸6")
                后端盖face = 后端盖特征.GetFaces
                part.ClearSelection2(True)

                配合(后端盖face(0), 波形垫圈face(0), "同轴", 0)
                part.ClearSelection2(True)

                '配合(轴承face(37), 波形垫圈face(1), "重合", 1)
                'part.ClearSelection2(True)

                配合(后端盖face(1), 波形垫圈face(1), "重合", 1)
                part.ClearSelection2(True)

                插入零件(螺钉5, "E:\works\generator_parts_library\Standard_Parts\GB_T67_2000_开槽盘头螺钉M6X10"， 1.1)
                插入零件(垫圈5, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈6"， 1.2)
                插入零件(弹垫5, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈6"， 1.3)
                swbody = 螺钉5.IGetBody
                螺钉5face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 垫圈5.IGetBody
                垫圈5face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 弹垫5.IGetBody
                弹垫5face = swbody.GetFaces()
                part.ClearSelection2(True)


                配合(螺钉5face(4), 弹垫5face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(螺钉5face(1), 弹垫5face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(螺钉5face(4), 垫圈5face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(弹垫5face(2), 垫圈5face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(防护罩2face(5), 螺钉5face(4), "同轴", 0)
                part.ClearSelection2(True)

                配合(防护罩2face(0), 垫圈5face(2), "相切", 1)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(螺钉5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                Dim compsToMirror(0) As Component2
                Dim swMirrorPlane As Feature
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(垫圈5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(弹垫5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1)
                swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
                AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(螺钉5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(弹垫5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈5.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T67_2000_开槽盘头螺钉M6X10" + "-2@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T93_1987_弹簧垫圈6" + "-14@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("GB_T848_2002_小垫圈6" + "-14@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)

                part.FeatureManager.FeatureLinearPattern5(2, 0.193, 0, 0, False, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)

                插入零件(螺钉6, "E:\works\generator_parts_library\Standard_Parts\GB_T67_2000_开槽盘头螺钉M6X30"， 1.1)
                插入零件(弹垫6, "E:\works\generator_parts_library\Standard_Parts\GB_T93_1987_弹簧垫圈6"， 1.2)
                插入零件(垫圈6, "E:\works\generator_parts_library\Standard_Parts\GB_T848_2002_小垫圈6"， 1.3)
                插入零件(螺母6, "E:\works\generator_parts_library\Standard_Parts\GB_T6170螺母M6"， 1.34)

                swbody = 螺钉6.IGetBody
                螺钉6face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 垫圈6.IGetBody
                垫圈6face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 弹垫6.IGetBody
                弹垫6face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 螺母6.IGetBody
                螺母6face = swbody.GetFaces()
                part.ClearSelection2(True)

                防护罩1特征 = 防护罩1.FeatureByName("切除-拉伸1")
                防护罩1face = 防护罩1特征.GetFaces
                part.ClearSelection2(True)

                配合(螺钉6face(4), 防护罩1face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(防护罩1face(0), 弹垫6face(0), "同轴", 0)
                part.ClearSelection2(True)

                配合(防护罩1face(0), 垫圈6face(0), "同轴", 0)
                part.ClearSelection2(True)

                配合(防护罩1face(3), 螺母6face(8), "同轴", 1)
                part.ClearSelection2(True)

                防护罩1特征 = 防护罩1.FeatureByName("绘制的折弯1")
                防护罩1face = 防护罩1特征.GetFaces
                part.ClearSelection2(True)

                配合(螺钉6face(1), 弹垫6face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(弹垫6face(2), 垫圈6face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(防护罩1face(0), 垫圈6face(2), "重合", 1)
                part.ClearSelection2(True)

                配合(螺母6face(6), 防护罩1face(3), "重合", 1)
                part.ClearSelection2(True)

                part.Extension.SelectByID2(螺钉6.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2(弹垫6.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈6.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(螺母6.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.FeatureLinearPattern5(2, 0.1, 0, 0, True, False, "NULL", "NULL", True, False, False, False, False, False, True, True, False, False, 0, 0, False, False)
                part.ClearSelection2(True)


                Dim 螺栓7, 调整垫圈， 垫圈 As Component2
                Dim 螺栓7face, 调整垫圈face， 垫圈face As Object()

                插入零件(螺栓7, "E:\works\generator_parts_library\Standard_Parts\GB_T5783_螺栓M20X60"， 1.1)
                插入零件(调整垫圈, "E:\works\generator_parts_library\washer\8LY.950.001"， 1.2)
                插入零件(垫圈, "E:\works\generator_parts_library\washer\8LY.950.002"， 1.3)

                swbody = 螺栓7.IGetBody
                螺栓7face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 调整垫圈.IGetBody
                调整垫圈face = swbody.GetFaces()
                part.ClearSelection2(True)

                swbody = 垫圈.IGetBody
                垫圈face = swbody.GetFaces()
                part.ClearSelection2(True)

                配合(调整垫圈face(0), 垫圈face(1), "重合", 1)
                part.ClearSelection2(True)

                配合(调整垫圈face(4), 垫圈face(3), "同轴", 0)
                part.ClearSelection2(True)

                配合(螺栓7face(21), 垫圈face(3), "同轴", 0)
                part.ClearSelection2(True)

                配合(调整垫圈face(1), 螺栓7face(0), "重合", 1)
                part.ClearSelection2(True)

                Dim 联轴器片 As Component2
                获得子零件_new(转子， 联轴器片， "*coupling_piece*", 1)
                '''MsgBox(阻尼板.Name2)
                Dim 联轴器片特征 As Feature
                Dim 联轴器片face As Object()
                联轴器片特征 = 联轴器片.FeatureByName("凸台-拉伸1")
                联轴器片face = 联轴器片特征.GetFaces()
                part.ClearSelection2(True)

                配合(联轴器片face(18), 垫圈face(0), "重合", 1)
                part.ClearSelection2(True)

                配合(联轴器片face(0), 垫圈face(3), "同轴", 0)
                part.ClearSelection2(True)

                配合(联轴器片face(16), 调整垫圈face(3), "同轴", 0)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 2, 0) '设定标记
                part.Extension.SelectByID2(螺栓7.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2(垫圈.Name2 + "@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(8, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", False)
                part.ClearSelection2(True)

                Dim 箱体, 前侧板， 安装板 As Component2
                Dim 前侧板face， 安装板face As Object()
                Dim 前侧板特征, 安装板特征 As Feature

                插入装配体(箱体, "E:\works\generator_parts_library\Box_body_combination\3LY.676.0005"， 1.1)

                获得子零件_new3(箱体, 前侧板, "*Cabinet_side_panel*"， 2)

                前侧板特征 = 前侧板.FeatureByName("基体-法兰1")
                前侧板face = 前侧板特征.GetFaces

                获得子零件_new(机座, 安装板, "*installation_platform*"， 2)
                安装板特征 = 安装板.FeatureByName("凸台-拉伸1")
                安装板face = 安装板特征.GetFaces

                配合(前侧板face(2), 筒体face(0), "同轴", 1)
                part.ClearSelection2(True)

                配合(前侧板face(1), 安装板face(1), "重合", 1)
                part.ClearSelection2(True)

                前侧板特征 = 前侧板.FeatureByName("边线-法兰1")
                前侧板face = 前侧板特征.GetFaces

                SelectionMgr.AddSelectionListObject(前侧板face(12), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "电机总装配")
                cusproper.Set2("代号", read("Code"))
                cusproper.Set2("材料", " ")
                part.SaveAs3(read("save_address") + read("Code") + read("dz4"), 0, 2)
                inA2("", read("company"), read("name"), read("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*前视", 0.62, 0.28, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*右视", 0.2, 0.28, 0)
                part.ViewDisplayHidden
                part.ViewZoomtofit2()
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager


                设置图纸比例(read("proportion"))
                初始设置（1）


                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(read("proportion"), ":")
                分母 = a(1)
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(0.1 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                part.CreateBreakOutSection(710 / 1000 / 2)
                初始设置（0）
                Object数组1 = 索引字符串（read（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(read("save_address") + read("Code") + read("dz3"), 0, 2)
                read.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()





            End Sub
            Public Sub main_frame_250_assembly(code1$)
                mysql_new("generator_assembly", "generator_assembly", code1)
                Dim name As String = read("name")
                Dim company As String = read("company")
                'Dim material As String = read("material")

                Dim swbody As SldWorks.Body2
                Dim 转子 As SldWorks.Component2
                Dim 定子 As SldWorks.Component2
                Dim 前端盖 As SldWorks.Component2
                Dim 后端盖装配 As SldWorks.Component2
                Dim 机座 As SldWorks.Component2

                插入装配体(机座, read("Partaddress5") + read("Part5_Code"))
                插入装配体(转子, read("Partaddress1") + read("Part1_Code"))
                插入装配体(后端盖装配, read("Partaddress3") + read("Part3_Code"))
                插入装配体(定子, read("Partaddress2") + read("Part2_Code"))
                插入零件(前端盖, read("Partaddress4") + read("Part4_Code"))
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                '机座和后端盖

                Dim 后端盖 As Component2
                获得子零件_new(后端盖装配, 后端盖, "*cover*")
                Dim 后端盖特征 As Feature
                Dim 后端盖face As Object()
                后端盖特征 = 后端盖.FeatureByName("切除-拉伸8")
                后端盖face = 后端盖特征.GetFaces

                Dim 后法兰 As Component2
                获得子零件_new2(机座, 后法兰, "*flange*"， 1)
                If 后法兰.Name2 Like "*007*" Then

                Else
                    获得子零件_new(机座, 后法兰, "*flange*"， 1)
                End If

                Dim 后法兰特征 As Feature
                Dim 后法兰face As Object()
                后法兰特征 = 后法兰.FeatureByName("凸台-拉伸1")
                后法兰face = 后法兰特征.GetFaces

                part.ClearSelection2(True)
                配合(后法兰face(1), 后端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(后法兰face(2), 后端盖face(0), "同轴", 0)

                Dim 前端盖特征， 前端盖特征2 As Feature
                Dim 前端盖face， 前端盖face2 As Object()
                前端盖特征 = 前端盖.FeatureByName("切除-拉伸2")
                前端盖face = 前端盖特征.GetFaces

                Dim 前法兰 As Component2
                获得子零件_new(机座, 前法兰, "*flange*"， 1)

                If 前法兰.Name2 Like "*006*" Then

                Else
                    获得子零件_new2(机座, 前法兰, "*flange*"， 1)
                End If


                Dim 前法兰特征 As Feature
                Dim 前法兰face As Object()
                前法兰特征 = 前法兰.FeatureByName("凸台-拉伸1")
                前法兰face = 前法兰特征.GetFaces

                part.ClearSelection2(True)
                配合(前法兰face(0), 前端盖face(1), "重合", 0)

                part.ClearSelection2(True)
                配合(前法兰face(2), 前端盖face(0), "同轴", 0)

                Dim 阻尼板 As Component2
                Dim 转子铁芯 As Component2
                获得子零件_new(转子， 转子铁芯， "*rotor_core_assembly*", 1)
                获得子零件_new(转子铁芯， 阻尼板， "*Damping_plate*", 2)
                ''MsgBox(阻尼板.Name2)
                Dim 阻尼板特征 As Feature
                Dim 阻尼板face As Object()
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                Dim 定子冲片 As Component2
                获得子零件_new(定子, 定子冲片, "*stator_lamination*")
                Dim 定子冲片特征 As Feature
                Dim 定子冲片face As Object()
                定子冲片特征 = 定子冲片.FeatureByName("凸台-拉伸1")
                定子冲片face = 定子冲片特征.GetFaces

                Dim 轴 As Component2
                获得子零件_new(转子， 轴， "*rotor_shaft*", 1)
                Dim 轴特征 As Feature
                Dim 轴face As Object()
                轴特征 = 轴.FeatureByName("旋转1")
                轴face = 轴特征.GetFaces

                前端盖特征2 = 前端盖.FeatureByName("切除-拉伸5")
                前端盖face2 = 前端盖特征2.GetFaces

                '遍历(1, 轴face， 1000)

                part.ClearSelection2(True)
                配合(阻尼板face(0), 定子冲片face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(轴face(7), 定子冲片face(2), "同轴", 0)

                part.ClearSelection2(True)
                配合(轴face(7), 前端盖face2(0), "同轴", 0)

                part.ClearSelection2(True)
                '配合(轴face(6), 前端盖face(1), "距离", 0.0844， False)
                SelectionMgr.AddSelectionListObject(轴face(6), Nothing)
                SelectionMgr.AddSelectionListObject(前端盖face2(1), Nothing)
                AssemblyDoc.AddMate5(5, 0, True, 0.0616, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "电机总装配")
                cusproper.Set2("代号", "1EQ.214.002")
                cusproper.Set2("材料", " ")
                part.SaveAs3(read("save_address") + read("Code") + read("dz4"), 0, 2)
                inA2("", read("company"), read("name"), read("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*前视", 0.447, 0.28, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*右视", 0.2, 0.28, 0)
                part.ViewDisplayHidden
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager
                设置图纸比例(read("proportion"))
                初始设置（1）


                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(read("proportion"), ":")
                分母 = a(1)
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(0.1 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                part.CreateBreakOutSection(460 / 1000 / 2)
                'MsgBox(1)
                初始设置（0）
                Object数组1 = 索引字符串（read（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)
                'MsgBox(1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(read("save_address") + read("Code") + read("dz3"), 0, 2)
                read.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()

            End Sub
            Public Sub main_frame_280_assembly(code1$)
                mysql_new("generator_assembly", "generator_assembly", code1)
                Dim name As String = read("name")
                Dim company As String = read("company")
                'Dim material As String = read("material")

                Dim swbody As SldWorks.Body2
                Dim 转子 As SldWorks.Component2
                Dim 定子 As SldWorks.Component2
                Dim 前端盖 As SldWorks.Component2
                Dim 后端盖装配 As SldWorks.Component2
                Dim 机座 As SldWorks.Component2

                '插入零件(转轴, read("Partaddress1") + read("Part1_Code"))
                插入装配体(机座, read("Partaddress5") + read("Part5_Code"))
                插入装配体(转子, read("Partaddress1") + read("Part1_Code"))
                插入装配体(后端盖装配, read("Partaddress3") + read("Part3_Code"))
                插入装配体(定子, read("Partaddress2") + read("Part2_Code"))
                插入零件(前端盖, read("Partaddress4") + read("Part4_Code"))

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                '机座和后端盖

                Dim 后端盖 As Component2
                获得子零件_new(后端盖装配, 后端盖, "*cover*")
                Dim 后端盖特征 As Feature
                Dim 后端盖face As Object()
                后端盖特征 = 后端盖.FeatureByName("切除-拉伸5")
                后端盖face = 后端盖特征.GetFaces

                Dim 后法兰 As Component2
                获得子零件_new2(机座, 后法兰, "*flange*"， 1)
                If 后法兰.Name2 Like "*014*" Then

                Else
                    获得子零件_new(机座, 后法兰, "*flange*"， 1)
                End If

                Dim 后法兰特征 As Feature
                Dim 后法兰face As Object()
                后法兰特征 = 后法兰.FeatureByName("凸台-拉伸1")
                后法兰face = 后法兰特征.GetFaces

                '后法兰 1  2圆

                part.ClearSelection2(True)
                配合(后法兰face(1), 后端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(后法兰face(2), 后端盖face(0), "同轴", 0)


                'Dim 后端盖 As Component2
                '获得子零件_new(后端盖装配, 后端盖, "*cover*")
                Dim 前端盖特征， 前端盖特征2, 前端盖特征3 As Feature
                Dim 前端盖face， 前端盖face2, 前端盖face3 As Object()
                前端盖特征 = 前端盖.FeatureByName("凸台-拉伸2")
                前端盖face = 前端盖特征.GetFaces

                Dim 前法兰 As Component2
                获得子零件_new2(机座, 前法兰, "*flange*"， 1)

                If 前法兰.Name2 Like "*014*" Then
                    获得子零件_new(机座, 前法兰, "*flange*"， 1)

                Else

                End If

                Dim 前法兰特征 As Feature
                Dim 前法兰face As Object()
                前法兰特征 = 前法兰.FeatureByName("凸台-拉伸1")
                前法兰face = 前法兰特征.GetFaces

                part.ClearSelection2(True)
                配合(前法兰face(1), 前端盖face(6), "重合", 1)

                part.ClearSelection2(True)
                配合(前法兰face(2), 前端盖face(3), "同轴", 1)

                前端盖特征3 = 前端盖.FeatureByName("凸台-拉伸3")
                前端盖face3 = 前端盖特征3.GetFaces
                '配合("右视基准面", 前端盖face3(0), "同轴", 1)
                SelectionMgr.AddSelectionListObject(前端盖face3(0), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)
                Dim 阻尼板 As Component2
                Dim 转子铁芯 As Component2
                获得子零件_new(转子， 转子铁芯， "*rotor_core_assembly*", 1)
                获得子零件_new(转子铁芯， 阻尼板， "*Damping_plate*", 2)
                ''MsgBox(阻尼板.Name2)
                Dim 阻尼板特征 As Feature
                Dim 阻尼板face As Object()
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                Dim 定子冲片 As Component2
                获得子零件_new(定子, 定子冲片, "*stator_lamination*")
                Dim 定子冲片特征 As Feature
                Dim 定子冲片face As Object()
                定子冲片特征 = 定子冲片.FeatureByName("凸台-拉伸1")
                定子冲片face = 定子冲片特征.GetFaces

                Dim 轴 As Component2
                获得子零件_new(转子， 轴， "*rotor_shaft*", 1)
                Dim 轴特征 As Feature
                Dim 轴face As Object()
                轴特征 = 轴.FeatureByName("旋转1")
                轴face = 轴特征.GetFaces

                前端盖特征2 = 前端盖.FeatureByName("切除-拉伸1")
                前端盖face2 = 前端盖特征2.GetFaces

                '遍历(1, 轴face， 1000)

                part.ClearSelection2(True)
                配合(阻尼板face(0), 定子冲片face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(轴face(0), 定子冲片face(2), "同轴", 1)

                part.ClearSelection2(True)
                配合(轴face(0), 前端盖face2(0), "同轴", 0)

                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(轴face(9), Nothing)
                SelectionMgr.AddSelectionListObject(前端盖face2(1), Nothing)
                AssemblyDoc.AddMate5(5, 0, True, 0.0374, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)
                ''MsgBox(1)

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")

                part.SaveAs3(read("save_address") + read("Code") + read("dz4"), 0, 2)
                inA2("", read("company"), read("name"), read("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*前视", 0.447, 0.28, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*右视", 0.2, 0.28, 0)
                part.ViewDisplayHidden

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager

                设置图纸比例(read("proportion"))
                初始设置（1）
                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(read("proportion"), ":")
                分母 = a(1)
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(0.1 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                part.CreateBreakOutSection(527 / 1000 / 2)

                初始设置（0）
                Object数组1 = 索引字符串（read（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(read("save_address") + read("Code") + read("dz3"), 0, 2)
                read.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub main_frame_180_assembly(code1$)
                mysql_new("generator_assembly", "generator_assembly", code1)
                Dim name As String = read("name")
                Dim company As String = read("company")
                'Dim material As String = read("material")

                Dim swbody As SldWorks.Body2
                Dim 转子 As SldWorks.Component2
                Dim 定子 As SldWorks.Component2
                Dim 前端盖 As SldWorks.Component2
                Dim 后端盖, 励磁机定子 As SldWorks.Component2
                Dim 机座 As SldWorks.Component2

                插入装配体(机座, read("Partaddress5") + read("Part5_Code"))
                插入装配体(转子, read("Partaddress1") + read("Part1_Code"))
                插入零件(后端盖, "E:\works\generator_parts_library\rear_end_cover\8LY.013.002")
                插入装配体(定子, read("Partaddress2") + read("Part2_Code"))
                插入零件(前端盖, read("Partaddress4") + read("Part4_Code"))
                插入装配体(励磁机定子, read("Partaddress3") + read("Part3_Code"))


                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)

                '机座和后端盖

                Dim 后端盖特征 As Feature
                Dim 后端盖face As Object()
                后端盖特征 = 后端盖.FeatureByName("切除-拉伸6")
                后端盖face = 后端盖特征.GetFaces


                Dim 励磁机定子冲片 As Component2
                获得子零件_new2(励磁机定子, 励磁机定子冲片, "*stator_lamination*"， 1)
                Dim 励磁机定子冲片特征 As Feature
                Dim 励磁机定子冲片face As Object()
                励磁机定子冲片特征 = 励磁机定子冲片.FeatureByName("凸台-拉伸1")
                励磁机定子冲片face = 励磁机定子冲片特征.GetFaces



                Dim 后法兰 As Component2
                获得子零件_new2(机座, 后法兰, "*flange*"， 1)
                If Right(后法兰.Name2, 5) Like "*002*" Then

                Else
                    获得子零件_new(机座, 后法兰, "*flange*"， 1)
                End If

                Dim 后法兰特征 As Feature
                Dim 后法兰face As Object()
                后法兰特征 = 后法兰.FeatureByName("凸台-拉伸1")
                后法兰face = 后法兰特征.GetFaces

                part.ClearSelection2(True)
                配合(后法兰face(1), 后端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(后法兰face(2), 后端盖face(0), "同轴", 0)

                Dim 前端盖特征， 前端盖特征2, 前端盖特征3 As Feature
                Dim 前端盖face， 前端盖face2, 前端盖face3 As Object()
                前端盖特征 = 前端盖.FeatureByName("凸台-拉伸1")
                前端盖face = 前端盖特征.GetFaces

                Dim 前法兰 As Component2
                获得子零件_new2(机座, 前法兰, "*flange*"， 1)
                ''MsgBox(前法兰.Name2)
                ''MsgBox(Right(前法兰.Name2, 5))
                If Right(前法兰.Name2, 5) Like "*001*" Then

                Else
                    获得子零件_new(机座, 前法兰, "*flange*"， 1)
                    ''MsgBox(前法兰.Name2)
                End If


                Dim 前法兰特征 As Feature
                Dim 前法兰face As Object()
                前法兰特征 = 前法兰.FeatureByName("凸台-拉伸1")
                前法兰face = 前法兰特征.GetFaces

                '遍历（1， 前端盖face， 1000）

                part.ClearSelection2(True)
                配合(前法兰face(1), 前端盖face(2), "重合", 1)

                part.ClearSelection2(True)
                配合(前法兰face(2), 前端盖face(1), "同轴", 0)

                前端盖特征3 = 前端盖.FeatureByName("凸台-拉伸3")
                前端盖face3 = 前端盖特征3.GetFaces
                SelectionMgr.AddSelectionListObject(前端盖face3(0), Nothing)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 1)
                配合1("平行", 0)
                part.ClearSelection2(True)

                Dim 阻尼板 As Component2
                Dim 转子铁芯 As Component2
                获得子零件_new(转子， 转子铁芯， "*rotor_core_assembly*", 1)
                获得子零件_new(转子铁芯， 阻尼板， "*Damping_plate*", 2)
                ''MsgBox(阻尼板.Name2)
                Dim 阻尼板特征 As Feature
                Dim 阻尼板face As Object()
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                Dim 定子冲片 As Component2
                获得子零件_new(定子, 定子冲片, "*stator_lamination*")
                Dim 定子冲片特征 As Feature
                Dim 定子冲片face As Object()
                定子冲片特征 = 定子冲片.FeatureByName("凸台-拉伸1")
                定子冲片face = 定子冲片特征.GetFaces

                Dim 轴 As Component2
                获得子零件_new(转子， 轴， "*rotor_shaft*", 1)
                Dim 轴特征 As Feature
                Dim 轴face As Object()
                轴特征 = 轴.FeatureByName("旋转1")
                轴face = 轴特征.GetFaces

                前端盖特征2 = 前端盖.FeatureByName("凸台-拉伸2")
                前端盖face2 = 前端盖特征2.GetFaces

                part.ClearSelection2(True)
                配合(阻尼板face(0), 定子冲片face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(轴face(7), 定子冲片face(2), "同轴", 1)

                part.ClearSelection2(True)
                配合(轴face(7), 前端盖face2(1), "同轴", 0)

                part.ClearSelection2(True)

                '遍历(1, 轴face， 1000)
                SelectionMgr.AddSelectionListObject(轴face(14), Nothing)
                SelectionMgr.AddSelectionListObject(前端盖face2(2), Nothing)
                AssemblyDoc.AddMate5(5, 0, True, 0.019, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)


                Dim 励磁机转子， 励磁机转子冲片 As Component2
                获得子零件_new(转子， 励磁机转子， "*Exciter_rotor*", 1)
                ''MsgBox(励磁机转子.Name2)
                获得子零件_new(励磁机转子， 励磁机转子冲片， "*Exciter_rotor_laminations*", 1)
                ''MsgBox(励磁机转子冲片.Name2)
                Dim 励磁机转子冲片特征 As Feature
                Dim 励磁机转子冲片face As Object()
                励磁机转子冲片特征 = 励磁机转子冲片.FeatureByName("凸台-拉伸1")
                励磁机转子冲片face = 励磁机转子冲片特征.GetFaces


                '遍历（1， 励磁机定子冲片face， 1000）

                SelectionMgr.AddSelectionListObject(励磁机转子冲片face（45）, Nothing)
                SelectionMgr.AddSelectionListObject(励磁机定子冲片face（2）, Nothing)
                配合1("同轴", 1)
                part.ClearSelection2(True)

                SelectionMgr.AddSelectionListObject(励磁机转子冲片face（50）, Nothing)
                SelectionMgr.AddSelectionListObject(励磁机定子冲片face（0）, Nothing)
                配合1("重合", 0)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "电机总装配")
                cusproper.Set2("代号", read("Code"))
                cusproper.Set2("材料", " ")
                ''MsgBox(1)
                part.SaveAs3(read("save_address") + read("Code") + read("dz4"), 0, 2)
                inA2("", read("company"), read("name"), read("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*前视", 0.447, 0.28, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*右视", 0.2, 0.28, 0)
                part.ViewDisplayHidden
                ''MsgBox(1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager

                设置图纸比例(read("proportion"))
                初始设置（1）
                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(read("proportion"), ":")
                分母 = a(1)
                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(0.1 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                part.CreateBreakOutSection(527 / 1000 / 2)
                初始设置（0）
                Object数组1 = 索引字符串（read（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(read("save_address") + read("Code") + read("dz3"), 0, 2)
                read.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub main_frame_200_assembly(code1$)
                mysql_new("generator_assembly", "generator_assembly", code1)
                Dim name As String = read("name")
                Dim company As String = read("company")
                'Dim material As String = read("material")

                Dim swbody As SldWorks.Body2
                Dim 转子 As SldWorks.Component2
                Dim 定子 As SldWorks.Component2
                Dim 前端盖 As SldWorks.Component2
                Dim 后端盖装配 As SldWorks.Component2
                Dim 机座 As SldWorks.Component2
                Dim 防护罩1， 防护罩2 As SldWorks.Component2

                插入装配体(机座, read("Partaddress5") + read("Part5_Code"))
                插入装配体(转子, read("Partaddress1") + read("Part1_Code"))
                插入装配体(后端盖装配, read("Partaddress3") + read("Part3_Code"))
                插入装配体(定子, read("Partaddress2") + read("Part2_Code"))
                插入零件(前端盖, read("Partaddress4") + read("Part4_Code"))

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False)
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                '机座和后端盖

                Dim 后端盖 As Component2
                获得子零件_new(后端盖装配, 后端盖, "*cover*")
                Dim 后端盖特征 As Feature
                Dim 后端盖face As Object()
                后端盖特征 = 后端盖.FeatureByName("切除-拉伸7")
                后端盖face = 后端盖特征.GetFaces

                Dim 后法兰 As Component2
                获得子零件_new2(机座, 后法兰, "*flange*"， 1)
                If 后法兰.Name2 Like "*017*" Then

                Else
                    获得子零件_new(机座, 后法兰, "*flange*"， 1)
                End If

                Dim 后法兰特征 As Feature
                Dim 后法兰face As Object()
                后法兰特征 = 后法兰.FeatureByName("凸台-拉伸1")
                后法兰face = 后法兰特征.GetFaces

                ''MsgBox(后法兰.Name2)
                part.ClearSelection2(True)
                配合(后法兰face(0), 后端盖face(1), "重合", 1)

                part.ClearSelection2(True)
                配合(后法兰face(2), 后端盖face(0), "同轴", 1)

                Dim 前端盖特征， 前端盖特征2 As Feature
                Dim 前端盖face， 前端盖face2 As Object()
                前端盖特征 = 前端盖.FeatureByName("切除-拉伸1")
                前端盖face = 前端盖特征.GetFaces

                Dim 前法兰 As Component2
                获得子零件_new(机座, 前法兰, "*flange*"， 1)

                If 前法兰.Name2 Like "*016*" Then
                Else
                    获得子零件_new2(机座, 前法兰, "*flange*"， 1)
                End If
                Dim 前法兰特征 As Feature
                Dim 前法兰face As Object()
                前法兰特征 = 前法兰.FeatureByName("凸台-拉伸1")
                前法兰face = 前法兰特征.GetFaces


                part.ClearSelection2(True)
                配合(前法兰face(1), 前端盖face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(前法兰face(2), 前端盖face(1), "同轴", 0)

                Dim 阻尼板 As Component2
                Dim 转子铁芯 As Component2
                获得子零件_new(转子， 转子铁芯， "*rotor_core_assembly*", 1)
                获得子零件_new(转子铁芯， 阻尼板， "*Damping_plate*", 2)
                ''MsgBox(阻尼板.Name2)
                Dim 阻尼板特征 As Feature
                Dim 阻尼板face As Object()
                阻尼板特征 = 阻尼板.FeatureByName("凸台-拉伸1")
                阻尼板face = 阻尼板特征.GetFaces()
                part.ClearSelection2(True)

                Dim 定子冲片 As Component2
                获得子零件_new(定子, 定子冲片, "*stator_lamination*")
                Dim 定子冲片特征 As Feature
                Dim 定子冲片face As Object()
                定子冲片特征 = 定子冲片.FeatureByName("凸台-拉伸1")
                定子冲片face = 定子冲片特征.GetFaces

                Dim 轴 As Component2
                获得子零件_new(转子， 轴， "*rotor_shaft*", 1)
                Dim 轴特征 As Feature
                Dim 轴face As Object()
                轴特征 = 轴.FeatureByName("旋转1")
                轴face = 轴特征.GetFaces

                前端盖特征 = 前端盖.FeatureByName("切除-拉伸2")
                前端盖face = 前端盖特征.GetFaces

                part.ClearSelection2(True)
                配合(阻尼板face(0), 定子冲片face(0), "重合", 1)

                part.ClearSelection2(True)
                配合(轴face(8), 定子冲片face(2), "同轴", 1)

                part.ClearSelection2(True)
                配合(轴face(8), 前端盖face(0), "同轴", 0)



                part.ClearSelection2(True)
                SelectionMgr.AddSelectionListObject(轴face(15), Nothing)
                SelectionMgr.AddSelectionListObject(前端盖face(1), Nothing)
                AssemblyDoc.AddMate5(5, 0, True, 0.051, 1, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                part.ClearSelection2(True)
                'MsgBox(1)
                part.ClearSelection2(True)
                'Dim cusproper As SldWorks.CustomPropertyManager
                'cusproper = part.Extension.CustomPropertyManager("")
                'cusproper.Set2("名称", "电机总装配")
                'cusproper.Set2("代号", "1EQ.214.001")
                'cusproper.Set2("材料", " ")
                part.SaveAs3(read("save_address") + read("Code") + read("dz4"), 0, 2)
                inA2("", read("company"), read("name"), read("Code"))
                Dim L1, L2, L3 As SketchLine
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                myView = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*前视", 0.447, 0.28, 0)
                part.ViewDisplayHidden
                myView1 = Draw.CreateDrawViewFromModelView3(read("save_address") + read("Code") + read("dz4"), "*右视", 0.2, 0.28, 0)
                part.ViewDisplayHidden

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                SelectionMgr = part.SelectionManager

                设置图纸比例(read("proportion"))
                初始设置（1）

                Dim 分母 As Double
                Dim a As Object
                a = 索引字符串(read("proportion"), ":")
                分母 = a(1)

                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCornerRectangle(0.1 * 分母, 0, 0, -0.09 * 分母, 0.09 * 分母, 0)
                part.CreateBreakOutSection(710 / 1000 / 2)

                初始设置（0）
                Object数组1 = 索引字符串（read（"skills_requirement"））
                技术要求（0.085, 0.08， Object数组1（0）， Object数组1（1）， Object数组1（2）， Object数组1（3）， Object数组1（4）, Object数组1（5））
                myNote.GetAnnotation().SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                插入BOM表2（myView， 2）
                插入零件标号(myView1)

                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.SaveAs3(read("save_address") + read("Code") + read("dz3"), 0, 2)
                read.Close()
                mysqlcom.Dispose()
                mysqlcon.Close()
                mysqlcon.Dispose()
            End Sub
            Public Sub mysql_new(database$， table$, Optional Code$ = "")
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=" + database + ";pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
                read = mysqlcom.ExecuteReader()
                'read.GetValues(values1)
                read.Read()
                If Code$ = "" Then
                    Do Until read.GetString("id") = 1
                        read.Read()
                    Loop
                Else
                    Do Until read.GetString("Code") = Code
                        read.Read()
                    Loop
                End If
            End Sub
            Public Sub mysql_new2(localhost$, database$， table$, Optional Code$ = "")
                mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=123456" & ";database=" + database + ";pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
                read = mysqlcom.ExecuteReader()
                'read.GetValues(values1)
                read.Read()
                If Code$ = "" Then
                    Do Until read.GetString("id") = 1
                        read.Read()
                    Loop
                Else
                    Do Until read.GetString("Code") = Code
                        read.Read()
                    Loop
                End If
            End Sub
            Public Sub 配合(对象一 As Object, 对象二 As Object, 类型$, Optional 反向% = 0， Optional 距离# = 0, Optional 距离翻转 As Boolean = False, Optional 距离上限# = 1， Optional 距离下限# = 0)

                SelectionMgr.AddSelectionListObject(对象一, Nothing)
                SelectionMgr.AddSelectionListObject(对象二, Nothing)

                If 类型 = "重合" Then
                    AssemblyDoc.AddMate5(0, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
                ElseIf 类型 = "同轴" Then
                    AssemblyDoc.AddMate5(1, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴
                ElseIf 类型 = "垂直" Then
                    AssemblyDoc.AddMate5(2, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '垂直
                ElseIf 类型 = "平行" Then
                    AssemblyDoc.AddMate5(3, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '平行
                ElseIf 类型 = "相切" Then
                    AssemblyDoc.AddMate5(4, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '相切
                ElseIf 类型 = "距离" Then
                    AssemblyDoc.AddMate5(5, 反向, 距离翻转, 距离, 距离上限, 距离下限, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                End If
                part.ClearSelection2(True)
                part.EditRebuild3()
            End Sub
            Public Sub save(dz$)
                part.SaveAs3(dz, 0, 8) 'AvoidRebuildOnSave
            End Sub
            Public Sub 遍历(同时遍历多实体数%， 实体集合() As Object， 上限#， Optional 初值% = 0)
                part.ClearSelection2(True)
                Dim vEdgeCount As Integer
                vEdgeCount = 初值
                Do Until vEdgeCount >= 上限
                    For i = vEdgeCount To vEdgeCount + 同时遍历多实体数 - 1
                        SelectionMgr.AddSelectionListObject(实体集合(i), Nothing)
                    Next
                    vEdgeCount = vEdgeCount + 同时遍历多实体数
                    'MsgBox(vEdgeCount - 1)
                    part.ClearSelection2(True)
                Loop
            End Sub
            Public Sub 插入零件(ByRef component As SldWorks.Component2, dz As String, Optional x# = 0, Optional y# = 0, Optional z# = 0)
                swapp.OpenDoc6(dz + ".SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                component = part.AddComponent5(dz + ".SLDPRT", 0, "", False, "", x, y, z)
                swapp.CloseDoc(component.GetPathName())
                part.ViewZoomtofit2()
            End Sub
            Public Sub 插入装配体(ByRef component As SldWorks.Component2, dz As String, Optional x# = 0, Optional y# = 0, Optional z# = 0)
                swapp.OpenDoc6(dz + ".SLDASM", 2, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                component = part.AddComponent5(dz + ".SLDASM", 0, "", False, "", x, y, z)
                swapp.CloseDoc(component.GetPathName())
                part.ViewZoomtofit2()
            End Sub
            Public Sub 获得子零件_new(component As Component2, ByRef componentchildren As Component2, name$, Optional Number% = 1)
                Object数组1 = component.GetChildren
                For i = 0 To Object数组1.Count - 1
                    If Object数组1(i).GetPathName Like name Then
                        If Right(Object数组1(i).Name2, 1) = Number.ToString Then
                            componentchildren = Object数组1(i)
                        End If
                    End If
                Next
            End Sub
            Public Sub 获得子零件_new2(component As Component2, ByRef componentchildren As Component2, name$, Optional Number% = 1)
                Object数组1 = component.GetChildren
                Dim aaaac As Integer
                Dim asfahsfah(2) As Object
                For i = 0 To Object数组1.Count - 1
                    If Object数组1(i).GetPathName Like name Then
                        aaaac = i

                        'If Right(Object数组1(i).Name2, 1) = Number.ToString Then
                        '    componentchildren = Object数组1(i)
                        'End If
                        Exit For
                    End If
                Next
                componentchildren = Object数组1(aaaac)
            End Sub
            Public Sub 获得子零件_new3(component As Component2, ByRef componentchildren As Component2, name$, Optional Number% = 1)
                Object数组1 = component.GetChildren
                Dim aaaac As Integer
                Dim asfahsfah(2) As Object
                For i = 0 To Object数组1.Count - 1
                    If Object数组1(i).GetPathName Like name Then
                        aaaac = i
                        If Object数组1(i).GetPathName Like "*0005*" Then
                            Exit For
                        End If
                    End If
                Next
                componentchildren = Object数组1(aaaac)
            End Sub
            Public Sub 修改长度（长#, 机座号#）
                swapp.OpenDoc6("E:\works\generator_parts_library\Cylinder\8LY.004.0001.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
                part.Extension.SelectByID2("基体-法兰1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatEdit()
                L1 = 水平下线()
                part.ClearSelection2(True)
                L1.select2(False, Nothing)
                ADDConstraints(1)
                L2 = 竖直线()
                L3 = L1YL2_L2(L2) '对称
                part.ClearSelection2(True)
                L2.select2(False, Nothing)
                L3.select2(True, Nothing)
                ADDConstraints(7)
                L2.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(L2.GetEndPoint2.X - 0.01, 0, 0)
                If 机座号 = 180 Then
                    ChangeDimensionVaule(长 + 0.051 + 0.09 + 0.067)
                ElseIf 机座号 = 200 Then
                    ChangeDimensionVaule(长 + 0.661 + 0.007 + 0.1045 + 0.0825)
                ElseIf 机座号 = 250 Then
                    ChangeDimensionVaule(长 + 0.072 + 0.137 + 0.076)
                ElseIf 机座号 = 280 Then
                    ChangeDimensionVaule(长 + 0.093 + 0.086 + 0.087)
                ElseIf 机座号 = 355 Then
                    ChangeDimensionVaule(长 + 0.0894 + 0.197 + 0.12)
                ElseIf 机座号 = 400 Then
                    ChangeDimensionVaule(长)
                End If
                part.ClearSelection2(True)
                part.SketchManager.InsertSketch(True)
            End Sub
            Public Sub 修改筋长度（长#, 机座号#）
                swapp.OpenDoc6("E:\works\generator_parts_library\ribs\8LY.130.026.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
                'MsgBox(1)
                part.Extension.SelectByID2("凸台-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)

                part.FeatEdit()

                sketch = SketchManager.ActiveSketch
                SketchSegments = sketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    [Boolean] = SketchSegment.Select4(False, Nothing) : Debug.Assert([Boolean])
                    part.SketchConstraintsDelAll()
                Next i

                If 机座号 = 180 Then
                    L1 = 筋180线()

                ElseIf 机座号 = 355 Then
                    L1 = 水平上线()

                End If



                'MsgBox(1)
                part.ClearSelection2(True)
                L1.select2(False, Nothing)
                DisplayDimension = part.AddDimension2(0, 0.1, 0)
                If 机座号 = 180 Then
                    ChangeDimensionVaule(长 + 0.051 + 0.09 + 0.067 - 0.016 - 0.016)
                ElseIf 机座号 = 200 Then
                    ChangeDimensionVaule(长 + 0.661 + 0.007 + 0.1045 + 0.0825 - 0.029)
                ElseIf 机座号 = 250 Then
                    ChangeDimensionVaule(长 + 0.072 + 0.137 + 0.076 - 0.045)
                ElseIf 机座号 = 280 Then
                    ChangeDimensionVaule(长 + 0.093 + 0.086 + 0.087)
                ElseIf 机座号 = 355 Then
                    ChangeDimensionVaule(长 + 0.0894 + 0.197 + 0.12 - 0.017)
                ElseIf 机座号 = 400 Then
                    ChangeDimensionVaule(长)
                End If
                part.EditDelete()
                part.ClearSelection2(True)
                part.SketchManager.InsertSketch(True)

                'MsgBox(1)


                part.SaveAs3("E:\works\generator_parts_library\ribs\8LY.130.022.SLDPRT", 0, 8)



            End Sub
            Public Sub 配合1(类型$, Optional 反向% = 0， Optional 距离# = 0, Optional 距离翻转 As Boolean = False, Optional 距离上限# = 1， Optional 距离下限# = 0)
                If 类型 = "重合" Then
                    AssemblyDoc.AddMate5(0, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
                ElseIf 类型 = "同轴" Then
                    AssemblyDoc.AddMate5(1, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴
                ElseIf 类型 = "垂直" Then
                    AssemblyDoc.AddMate5(2, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '垂直
                ElseIf 类型 = "平行" Then
                    AssemblyDoc.AddMate5(3, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '平行
                ElseIf 类型 = "相切" Then
                    AssemblyDoc.AddMate5(4, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '相切
                ElseIf 类型 = "距离" Then
                    AssemblyDoc.AddMate5(5, 反向, 距离翻转, 距离, 距离上限, 距离下限, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
                End If
                part.ClearSelection2(True)
                part.EditRebuild3()
            End Sub
            Public Function 索引字符串(str$, Optional 分隔符$ = "\") As Object()
                Dim strs() As Object
                索引字符串 = Split(str$, 分隔符$)
                '索引字符串 = 索引字符串
                '次序 = 次序 - 1
                '索引字符串 = strs(次序)
            End Function
            Public Sub 技术要求(X#, Y#, 技术要求1$, 技术要求2$, Optional 技术要求3$ = "", Optional 技术要求4$ = "", Optional 技术要求5$ = "", Optional 技术要求6$ = "", Optional 技术要求7$ = "", Optional 技术要求8$ = "", Optional 技术要求9$ = "", Optional 技术要求10$ = "", Optional 技术要求11$ = "", Optional 技术要求12$ = "", Optional 技术要求13$ = "", Optional 技术要求14$ = "")
                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote(技术要求1 + Chr(13) + Chr(10) +
                技术要求2 + Chr(13) + Chr(10) +
                技术要求3 + Chr(13) + Chr(10) +
                技术要求4 + Chr(13) + Chr(10) +
                技术要求5 + Chr(13) + Chr(10) +
                技术要求6 + Chr(13) + Chr(10) +
                技术要求7 + Chr(13) + Chr(10) +
                技术要求8 + Chr(13) + Chr(10) +
                技术要求9 + Chr(13) + Chr(10) +
                技术要求10 + Chr(13) + Chr(10) +
                技术要求11 + Chr(13) + Chr(10) +
                技术要求12 + Chr(13) + Chr(10) +
                技术要求13 + Chr(13) + Chr(10) +
                技术要求14)
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(X, Y, 0)
            End Sub
            Public Sub 设置图纸比例(图纸比例$)
                Dim Sheet1 As SldWorks.Sheet '图纸对象
                swapp = CreateObject("Sldworks.application")
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                Dim SheetPr() As Double
                SheetPr = Sheet1.GetProperties2()
                Dim aaa As Object()
                aaa = 索引字符串(图纸比例$, ":")
                SheetPr(2) = aaa(0)
                SheetPr(3) = aaa(1) '分母
                SheetPr(4) = 1
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
            End Sub
            Public Sub inA2(material$, company$, name$, Code$)
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a2.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.54, 0.06, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A4P
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            'If Annpos(0) > 104 / 1000 And Annpos(0) < 153 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                            '    N1.SetText(material)
                            'End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 48 / 1000 And Annpos(1) < 66 / 1000 Then
                                N1.SetText(company)
                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 28 / 1000 And Annpos(1) < 48 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 19 / 1000 And Annpos(1) < 28 / 1000 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 398 / 1000 And Annpos(1) < 410 / 1000 Then
                                N1.SetText(Code)
                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
            End Sub
            Public Sub A4P(material$, company$, name$, Code$)
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4p.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.164493037612998, 0.0537752937136617, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView 'A4P
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 104 / 1000 And Annpos(0) < 153 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 153 / 1000 And Annpos(0) < 205 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)
                            End If
                            If Annpos(0) > 153 / 1000 And Annpos(0) < 205 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 153 / 1000 And Annpos(0) < 205 / 1000 And Annpos(1) > 12 / 1000 And Annpos(1) < 24 / 1000 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)
                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
            End Sub
            Public Sub inA3(material$, company$, name$, Code$)
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)
                            End If
                            'If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                            '    N1.SetText(material)
                            'End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
            End Sub
            Public Sub inA4(material$, company$, name$, Code$)
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.251, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView 'A4
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)
                            End If
                            If Annpos(0) > 192 / 1000 And Annpos(0) < 240.7 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 24 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 12.16 / 1000 And Annpos(1) < 24 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 191 / 1000 And Annpos(1) < 205 / 1000 Then
                                N1.SetText(Code)
                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
            End Sub
            Public Sub 插入零件标号(view As SldWorks.View, Optional 位置% = 3)
                '插入零件标号
                part.Extension.SelectByID2(view.Name, "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                Dim vNotes（） As Object
                Dim autoballoonParams As SldWorks.AutoBalloonOptions
                autoballoonParams = part.CreateAutoBalloonOptions()
                autoballoonParams.Layout = 位置
                autoballoonParams.ReverseDirection = False
                autoballoonParams.IgnoreMultiple = True
                autoballoonParams.InsertMagneticLine = False
                autoballoonParams.LeaderAttachmentToFaces = False
                autoballoonParams.Style = 10
                autoballoonParams.Size = 2
                autoballoonParams.EditBalloonOption = 1
                autoballoonParams.EditBalloons = 1
                autoballoonParams.UpperTextContent = 1
                autoballoonParams.UpperText = """"
                autoballoonParams.Layername = "尺寸"
                vNotes = part.AutoBalloon5(autoballoonParams)
                part.ClearSelection2（True）
            End Sub
            Public Sub 偏移注释位置(Annotation As SldWorks.Annotation, X偏移#， Y偏移#， Optional Z偏移# = 0)
                Dim dou As Double()
                dou = Annotation.GetPosition()
                Annotation.SetPosition2(dou(0) + X偏移, dou(1) + Y偏移, dou(2) + Z偏移)
            End Sub
            Public Function 查询当前数据库所有表总行数(地址$, database$) As Integer
                连接数据库(地址, database$)
                新建查询("show tables")
                'Dim aa As Integer = 查询表行数()
                '新建查询("show tables")
                查询当前数据库所有表总行数 = 查询数据库总行数()
            End Function
            Public Function 取新号(地址$, database$, 总行%) As String
                Dim aa As String()
                连接数据库(地址, database$)
                新建查询("show tables")
                read.Read()
                read.GetString(0)
                aa = 提取最新数据(read.GetString(0), "code")
                aa(0) = Left(aa(0), aa(0).Length - 3) + Right(("000" + 总行.ToString), 3)
                取新号 = aa(0)
            End Function
            Public Sub 插入一行复制数据(table_name$) '更新id
                新建查询("select * from " + table_name)
                Dim a As Integer
                a = 查询表行数()
                新建查询("select * from " + table_name)
                Dim aa As String()
                aa = 复制一行数据()
                Dim aaa As String
                aaa = 字符串数组转换(aa, a)
                mysqlcom = New MySqlCommand("insert into " + table_name + " values(" + aaa + ")", mysqlcon)
                read.Close()
                mysqlcom.ExecuteNonQuery() ';//插入 删除 返回值是数据库中受影响的数据的行数
                mysqlcon.Clone()
            End Sub
            Public Function 提取最新数据(table_name$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "") As String()
                新建查询("select * from " + table_name + " order by id desc limit 1")
                read.Read()
                ''MsgBox(read(字段1))
                Dim aa As String()
                Dim i As Integer = 0
                ''MsgBox(字段1)
                If Not 字段1 = "" Then
                    aa = {(read(字段1))}
                End If
                If Not 字段2 = "" Then
                    aa = aa.Concat({(read(字段2))}).ToArray
                End If
                If Not 字段3 = "" Then
                    aa = aa.Concat({(read(字段3))}).ToArray
                End If
                If Not 字段4 = "" Then
                    aa = aa.Concat({(read(字段4))}).ToArray
                End If
                If Not 字段5 = "" Then
                    aa = aa.Concat({(read(字段5))}).ToArray
                End If
                If Not 字段6 = "" Then
                    aa = aa.Concat({(read(字段6))}).ToArray
                End If
                If Not 字段7 = "" Then
                    aa = aa.Concat({(read(字段7))}).ToArray
                End If
                If Not 字段8 = "" Then
                    aa = aa.Concat({(read(字段8))}).ToArray
                End If
                If Not 字段9 = "" Then
                    aa = aa.Concat({(read(字段9))}).ToArray
                End If
                If Not 字段10 = "" Then
                    aa = aa.Concat({(read(字段10))}).ToArray
                End If
                If Not 字段11 = "" Then
                    aa = aa.Concat({(read(字段11))}).ToArray
                End If
                If Not 字段12 = "" Then
                    aa = aa.Concat({(read(字段12))}).ToArray
                End If
                If Not 字段13 = "" Then
                    aa = aa.Concat({(read(字段13))}).ToArray
                End If
                If Not 字段14 = "" Then
                    aa = aa.Concat({(read(字段14))}).ToArray
                End If
                If Not 字段15 = "" Then
                    aa = aa.Concat({(read(字段15))}).ToArray
                End If
                If Not 字段16 = "" Then
                    aa = aa.Concat({(read(字段16))}).ToArray
                End If
                If Not 字段17 = "" Then
                    aa = aa.Concat({(read(字段17))}).ToArray
                End If
                If Not 字段18 = "" Then
                    aa = aa.Concat({(read(字段18))}).ToArray
                End If
                If Not 字段19 = "" Then
                    aa = aa.Concat({(read(字段19))}).ToArray
                End If
                If Not 字段20 = "" Then
                    aa = aa.Concat({(read(字段20))}).ToArray
                End If
                'Next
                ''MsgBox(aa(0))
                ''MsgBox(aa(1))
                提取最新数据 = aa
                ''MsgBox(read("id"))
            End Function
            Public Function 更新数据(table_name$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "",
                             Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "", Optional 字段21$ = "", Optional 字段22$ = "", Optional 字段23$ = "", Optional value1$ = "", Optional value2$ = "",
                        Optional value3$ = "", Optional value4$ = "", Optional value5$ = "", Optional value6$ = "", Optional value7$ = "", Optional value8$ = "", Optional value9$ = "", Optional value10$ = "",
                        Optional value11$ = "", Optional value12$ = "", Optional value13$ = "", Optional value14$ = "", Optional value15$ = "", Optional value16$ = "", Optional value17$ = "", Optional value18$ = "",
                             Optional value19$ = "", Optional value20$ = "", Optional value21$ = "", Optional value22$ = "", Optional value23$ = "") As String()

                'If Not value0 = "" Then
                '    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段0 + "='" + value0 + "' order by id desc limit 1", mysqlcon)
                '    read.Close()
                '    mysqlcom.ExecuteNonQuery()
                'End If
                Dim aa As String()
                If Not value1 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段1 + "='" + value1 + "' order by id desc limit 1", mysqlcon)
                    read.Close()
                    mysqlcom.ExecuteNonQuery()
                    'aa = {(value1)}
                End If
                If Not value2 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段2 + "='" + value2 + "' order by id desc limit 1", mysqlcon)
                    'read.Close()
                    mysqlcom.ExecuteNonQuery()
                    aa = {(value2)}
                End If
                If Not value3 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段3 + "='" + value3 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value3)}).ToArray
                End If
                If Not value4 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段4 + "='" + value4 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value4)}).ToArray
                End If
                If Not value5 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段5 + "='" + value5 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value5)}).ToArray
                End If
                If Not value6 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段6 + "='" + value6 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value6)}).ToArray
                End If
                If Not value7 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段7 + "='" + value7 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value7)}).ToArray
                End If
                If Not value8 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段8 + "='" + value8 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value8)}).ToArray
                End If
                If Not value9 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段9 + "='" + value9 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value9)}).ToArray
                End If
                If Not value10 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段10 + "='" + value10 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value10)}).ToArray
                End If
                If Not value11 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段11 + "='" + value11 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value11)}).ToArray
                End If
                If Not value12 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段12 + "='" + value12 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value12)}).ToArray
                End If
                If Not value13 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段13 + "='" + value13 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value13)}).ToArray
                End If
                If Not value14 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段14 + "='" + value14 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value14)}).ToArray
                End If
                If Not value15 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段15 + "='" + value15 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value15)}).ToArray
                End If
                If Not value16 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段16 + "='" + value16 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value16)}).ToArray
                End If
                If Not value17 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段17 + "='" + value17 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value17)}).ToArray
                End If
                If Not value18 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段18 + "='" + value18 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value18)}).ToArray
                End If
                If Not value19 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段19 + "='" + value19 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value19)}).ToArray
                End If
                If Not value20 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段20 + "='" + value20 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value20)}).ToArray
                End If
                If Not value21 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段21 + "='" + value21 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value21)}).ToArray
                End If
                If Not value22 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段22 + "='" + value22 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value22)}).ToArray
                End If
                If Not value23 = "" Then
                    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段23 + "='" + value23 + "' order by id desc limit 1", mysqlcon)
                    mysqlcom.ExecuteNonQuery()
                    aa = aa.Concat({(value23)}).ToArray
                End If


                'mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段1 + "='" + value1 + "' order by id desc limit 1", mysqlcon)
                'read.Close()
                mysqlcom.ExecuteNonQuery() ';//插入 删除 返回值是数据库中受影响的数据的行数

                更新数据 = aa

            End Function
            Public Sub test()
                连接数据库("192.168.110.8", "test2")
                插入一行复制数据("test2")
                连接数据库("192.168.110.8", "test1")
                Dim aa As String()
                aa = 提取最新数据("test1", "diameter1", "thickness1")
                Dim bb%
                bb = 查询当前数据库所有表总行数("192.168.110.8", "test2")
                Dim newcode$
                newcode = 取新号("192.168.110.8", "test2", bb)
                连接数据库("192.168.110.8", "test2")
                更新数据("test2", "code", "diameter1", "thickness1",
                 value1:=newcode,
                 value2:=aa(0),
                 value3:=aa(1))
                Dim cc As String()
                cc = 去重("test2", aa, "diameter1", "thickness1")
                Debug.Print(111)
            End Sub
            Public Function 去重(table_name$, 查重数据 As String(), Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "",
                        Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "", Optional 字段21$ = "", Optional 字段22$ = "", Optional 字段23$ = "") As String()

                Dim aa As String()
                Dim bb As String()
                Dim cc% = 0

                新建查询("select * from " + table_name)
                ''MsgBox(read.Read())
                ''MsgBox(read(字段1))
                Do While read.Read '当false时跳出循环
                    If Not 字段2 = "" Then
                        aa = {(read(字段2))}
                        ''MsgBox(read(字段1))
                    End If
                    If Not 字段3 = "" Then
                        aa = aa.Concat({(read(字段3))}).ToArray
                    End If
                    If Not 字段4 = "" Then
                        aa = aa.Concat({(read(字段4))}).ToArray
                    End If
                    If Not 字段5 = "" Then
                        aa = aa.Concat({(read(字段5))}).ToArray
                    End If
                    If Not 字段6 = "" Then
                        aa = aa.Concat({(read(字段6))}).ToArray
                    End If
                    If Not 字段7 = "" Then
                        aa = aa.Concat({(read(字段7))}).ToArray
                    End If
                    If Not 字段8 = "" Then
                        aa = aa.Concat({(read(字段8))}).ToArray
                    End If
                    If Not 字段9 = "" Then
                        aa = aa.Concat({(read(字段9))}).ToArray
                    End If
                    If Not 字段10 = "" Then
                        aa = aa.Concat({(read(字段10))}).ToArray
                    End If
                    If Not 字段11 = "" Then
                        aa = aa.Concat({(read(字段11))}).ToArray
                    End If
                    If Not 字段12 = "" Then
                        aa = aa.Concat({(read(字段12))}).ToArray
                    End If
                    If Not 字段13 = "" Then
                        aa = aa.Concat({(read(字段13))}).ToArray
                    End If
                    If Not 字段14 = "" Then
                        aa = aa.Concat({(read(字段14))}).ToArray
                    End If
                    If Not 字段15 = "" Then
                        aa = aa.Concat({(read(字段15))}).ToArray
                    End If
                    If Not 字段16 = "" Then
                        aa = aa.Concat({(read(字段16))}).ToArray
                    End If
                    If Not 字段17 = "" Then
                        aa = aa.Concat({(read(字段17))}).ToArray
                    End If
                    If Not 字段18 = "" Then
                        aa = aa.Concat({(read(字段18))}).ToArray
                    End If
                    If Not 字段19 = "" Then
                        aa = aa.Concat({(read(字段19))}).ToArray
                    End If
                    If Not 字段20 = "" Then
                        aa = aa.Concat({(read(字段20))}).ToArray
                    End If
                    If Not 字段21 = "" Then
                        aa = aa.Concat({(read(字段21))}).ToArray
                    End If
                    If Not 字段22 = "" Then
                        aa = aa.Concat({(read(字段22))}).ToArray
                    End If
                    If Not 字段23 = "" Then
                        aa = aa.Concat({(read(字段23))}).ToArray
                    End If


                    'If aa = 查重数据 Then
                    '    'MsgBox(555)
                    'End If

                    Dim dd As Boolean = True '默认重复
                    For i = 0 To 查重数据.Count - 1
                        If Not aa(i) = 查重数据(i) Then '查重，如果不重复dd=false
                            dd = False
                        End If
                    Next

                    If Not dd Then
                        ''MsgBox(88)
                    Else '重复则执行下列语句
                        cc += 1
                        If cc = 1 Then
                            bb = {(read("code")), ("repeat")}
                        Else
                            bb = bb.Concat({(read("code"))}).ToArray
                        End If
                    End If
                Loop
                If cc = 1 Then
                    bb = {(read("code")), ("new")}
                Else

                    For I = 2 To bb.Count - 1

                        mysqlcom = New MySqlCommand("Delete from " + table_name + " where code='" + bb(I) + "'", mysqlcon)
                        If I = 2 Then
                            read.Close()
                        End If
                        mysqlcom.ExecuteNonQuery()
                    Next

                    bb = {bb(0), bb(1)}

                End If



                去重 = bb
            End Function
            Public Function 复制一行数据() As String()
                Dim aa As String()
                Dim bb, cc As Integer
                bb = 0
                cc = 0
                read.Read()
                For i = 0 To read.FieldCount - 1
                    If i = 0 Then
                        aa = {(read(i))}
                    Else
                        ''MsgBox(IsDBNull(read(i)))

                        If IsDBNull(read(i)) Then
                            ''MsgBox(IsDBNull(read(i)))
                            aa = aa.Concat({("0")}).ToArray
                        Else
                            aa = aa.Concat({(read(i))}).ToArray
                        End If

                    End If
                Next
                复制一行数据 = aa
            End Function
            Public Function 字符串数组转换(aa As String(), a%) As String
                Dim bb As String
                bb = (a + 1).ToString + ","
                For i = 1 To aa.Count - 1
                    bb = bb + "'" + aa(i) + "',"
                Next
                bb = Replace(bb, "\", "\\")
                字符串数组转换 = Left(bb, bb.Length - 1)
            End Function
            Public Function 查询数据库总行数() As Integer
                Dim aa As String()
                Dim bb, cc As Integer
                bb = 0
                cc = 0

                Do While read.Read()
                    If cc = 0 Then
                        aa = {read.GetString(0)}
                    Else
                        aa = aa.Concat({(read.GetString(0))}).ToArray
                    End If
                    cc += 1
                Loop

                For i = 0 To aa.Count - 1
                    新建查询("select * from " + aa(i))
                    bb = bb + 查询表行数()
                Next
                查询数据库总行数 = bb

            End Function
            Public Function 连接数据库(地址$, database$, Optional Sql$ = "show tables") As Integer
                mysqlcon = New MySqlConnection("server=" + 地址 + ";userid=root" & ";password=123456" & ";database=" + database + ";Charset=utf8")
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand(Sql, mysqlcon)
                read = mysqlcom.ExecuteReader()
                'mysqlcom = New MySqlCommand("set names gb2312", mysqlcon)
                'mysqlcom.ExecuteNonQuery()
                'mysqlcom.Dispose()
            End Function
            Public Sub 新建查询(sql$)
                mysqlcom = New MySqlCommand(sql, mysqlcon)
                read.Close()
                read = mysqlcom.ExecuteReader()
            End Sub
            Public Function 查询表行数() As Integer
                Dim count As Integer
                count = 0
                Do While read.Read()
                    count += 1
                Loop
                查询表行数 = count
            End Function
            Public Sub 查询零件是否存在(地址$, 数据库$, table_name$, 零件号$)
                mysqlcon = New MySqlConnection("server=" + 地址 + ";userid=root" & ";password=123456" & ";database=" + 数据库 + ";pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from " + table_name, mysqlcon)
                read = mysqlcom.ExecuteReader()
                read.Read()
                Do Until read.GetString("Code") = 零件号
                    read.Read()
                Loop
                Dim A3, A1, A2, A4 As String
                A1 = read("dz1")
                'MsgBox(A1)
                A2 = read("Code")
                'MsgBox(A2)
                A3 = A1 + A2 + ".SLDPRT"
                A4 = A1 + A2 + ".SLDASM"
                'MsgBox(A4)
                If Dir(A4, vbNormal) <> "" Or Dir(A3, vbNormal) <> "" Then
                    'MsgBox("文件存在")
                Else
                    'MsgBox("文件不存在")
                End If
            End Sub
            Public Sub 设置属性(name$, Code$, material$)
                '设置属性
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", name)
                cusproper.Set2("代号", Code)
                cusproper.Set2("材料", material)
            End Sub
            Public Sub 插入BOM表(view As View)
                '插入BOM表
                Dim swBOMTable As SldWorks.TableAnnotation
                Dim width As Double
                Dim height As Double
                swBOMTable = view.InsertBomTable4(True, 0, 0, 1, 1, "默认", "D:\SOLIDWORKS\lang\chinese-simplified\bom-standard.sldbomtbt", False, 0, False) 'trpe=1只显示零件,2只显示顶层
                If swBOMTable Is Nothing Then
                    swBOMTable = view.InsertBomTable4(True, 0, 0, 1, 1, "默认", "C:\PROGRA~1\SOLIDW~1\SOLIDW~1\lang\chinese-simplified\bom-standard.sldbomtbt", False, 0, False)
                End If
                swBOMTable.Anchored = False                      '获取或设置此表是否附加到其锚,如果表已附加到锚点,则为True
                swBOMTable.SetHeader(2, 4)                       '设置该表的标题,"2"底部,"4"表头中的行数
                swBOMTable.SetColumnType3(1, 204, False, "名称") '从0开始计算列数   '设置指定BOM表表列的类型和属性数据。"1"第一列,"204"定义的列类型:自定义属性,"false"将隐藏列不包含在索引中,"名称"数据属性
                swBOMTable.SetColumnType3(2, 204, False, "材料")
                swBOMTable.AnchorType = 4                        '获取或设置此表注释的锚点,"4"右侧底部
                swBOMTable.InsertColumn2(3, 0, "代号", 0)        '插入一列,名叫代号,"3"after,"0"位置,"0"定义列的宽度样式：默认宽度
                swBOMTable.SetColumnType3(1, 204, False, "代号")
                swBOMTable.InsertColumn2(3, 4, "单件", 2)          '"2"多线式
                swBOMTable.InsertColumn2(3, 5, "总计", 0)
                swBOMTable.InsertColumn2(3, 6, "备注", 0)
                width = swBOMTable.GetColumnWidth(0)
                swBOMTable.SetColumnWidth(0, width / 2, 0)
                width = swBOMTable.GetColumnWidth(1)
                swBOMTable.SetColumnWidth(1, width * 3 / 2, 1）
                width = swBOMTable.GetColumnWidth(2)
                swBOMTable.SetColumnWidth(2, width * 8 / 7, 0）
                width = swBOMTable.GetColumnWidth(3)
                swBOMTable.SetColumnWidth(3, width / 2, 0）
                width = swBOMTable.GetColumnWidth(4)
                swBOMTable.SetColumnWidth(4, width / 2, 0）
                width = swBOMTable.GetColumnWidth(7)
                swBOMTable.SetColumnWidth(7, width * 2, 0）


                Dim i As Integer
                i = 0
                Do Until i > swBOMTable.RowCount                 '获取此表的行数
                    height = swBOMTable.GetRowHeight(i)          '获取指定行的高度
                    swBOMTable.SetRowHeight(i, height * 0.8, 0)  '设置此表中指定行的高度
                    i = i + 1
                Loop
                swBOMTable.Text2(i - 2, 0, False) = "序号"       '修改左下角表头/ '更改指定单元格的内容,行、列



            End Sub
            Public Sub 插入BOM表2(view As SldWorks.View, Type%)
                '插入BOM表
                Dim swBOMTable As SldWorks.TableAnnotation
                Dim swBOMTable1 As SldWorks.TableAnnotation
                Dim width As Double
                Dim height As Double

                swBOMTable = view.InsertBomTable4(True, 0, 0, 1, Type%, "默认", "D:\SOLIDWORKS\lang\chinese-simplified\bom-standard.sldbomtbt", False, 0, False) 'trpe=1只显示零件,2只显示顶层
                If swBOMTable Is Nothing Then
                    swBOMTable = view.InsertBomTable4(True, 0, 0, 1, Type, "默认", "C:\PROGRA~1\SOLIDW~1\SOLIDW~1\lang\chinese-simplified\bom-standard.sldbomtbt", False, 0, False)
                End If

                swBOMTable.Anchored = False                      '获取或设置此表是否附加到其锚,如果表已附加到锚点,则为True
                swBOMTable.SetHeader(2, 4)                       '设置该表的标题,"2"底部,"4"表头中的行数
                swBOMTable.SetColumnType3(1, 204, False, "名称") '从0开始计算列数   '设置指定BOM表表列的类型和属性数据。"1"第一列,"204"定义的列类型:自定义属性,"false"将隐藏列不包含在索引中,"名称"数据属性
                swBOMTable.SetColumnType3(2, 204, False, "材料")
                swBOMTable.AnchorType = 4                        '获取或设置此表注释的锚点,"4"右侧底部
                swBOMTable.InsertColumn2(3, 0, "代号", 0)        '插入一列,名叫代号,"3"after,"0"位置,"0"定义列的宽度样式：默认宽度
                swBOMTable.SetColumnType3(1, 204, False, "代号")
                swBOMTable.InsertColumn2(3, 4, "单件", 2)          '"2"多线式
                swBOMTable.InsertColumn2(3, 5, "总计", 0)
                swBOMTable.InsertColumn2(3, 6, "备注", 0)
                width = swBOMTable.GetColumnWidth(0)
                swBOMTable.SetColumnWidth(0, width / 2, 0)
                width = swBOMTable.GetColumnWidth(1)
                swBOMTable.SetColumnWidth(1, width * 3 / 2, 1）
                width = swBOMTable.GetColumnWidth(2)
                swBOMTable.SetColumnWidth(2, width * 8 / 7, 0）
                width = swBOMTable.GetColumnWidth(3)
                swBOMTable.SetColumnWidth(3, width / 2, 0）
                width = swBOMTable.GetColumnWidth(4)
                swBOMTable.SetColumnWidth(4, width / 2, 0）
                width = swBOMTable.GetColumnWidth(7)
                swBOMTable.SetColumnWidth(7, width * 2, 0）
                Dim i As Integer
                i = 0
                Do Until i > swBOMTable.RowCount                 '获取此表的行数
                    height = swBOMTable.GetRowHeight(i)          '获取指定行的高度
                    swBOMTable.SetRowHeight(i, height * 0.8, 0)  '设置此表中指定行的高度
                    i = i + 1
                Loop
                swBOMTable.Text2(i - 2, 0, False) = "序号"       '修改左下角表头/ '更改指定单元格的内容,行、列

                'Debug.Print(i)

                If i > 13 Then
                    swBOMTable1 = swBOMTable.Split(2, i - 13) '行之后打断/将底层表赋给swBOMTable1,顶层表为swBOMTable

                    Dim Sheet1 As SldWorks.Sheet '图纸对象
                    Sheet1 = Draw.GetCurrentSheet()
                    Dim BOMTableAnchor As SldWorks.TableAnchor
                    part = Draw
                    part.Extension.SelectByID2(Sheet1.GetName(), "SHEET", 0, 0, 0, False, 0, Nothing, 0)
                    Draw.EditTemplate()                                                              '将当前工程图图纸的模板置于编辑模式
                    'part.EditSketch()                                                               '允许在选定的工程图视图或图纸中编辑草图
                    Dim skPoint As SldWorks.SketchPoint
                    skPoint = part.SketchManager.CreatePoint(0.403, 0.01, 0)
                    skPoint.Select4(False, Nothing)
                    'oldTableAnchor = Sheet1.TableAnchor(2)                                          '获取指定的表锚,"2"材料清单
                    BOMTableAnchor = Sheet1.SetAsTableAnchor(2)                                      '在工作表格式的选定点设置指定表的锚点,"2"材料清单
                    swBOMTable.AnchorType = 4                                                        '获取或设置此表注释的锚点,"4"右侧底部
                    swBOMTable.Anchored = True                                                    '获取或设置此表是否附加到其锚
                    swBOMTable.Anchored = False


                    '    Dim skPoint1 As SldWorks.SketchPoint
                    '    skPoint1 = part.SketchManager.CreatePoint(0.415, 0.061, 0)
                    '    skPoint1.Select4(False, Nothing)
                    '    Sheet1.SetAsTableAnchor(2)                                      '在工作表格式的选定点设置指定表的锚点,"2"材料清单
                    '    swBOMTable.AnchorType = 4                                                        '获取或设置此表注释的锚点,"4"右侧底部
                    '    swBOMTable.Anchored = False                                                      '获取或设置此表是否附加到其锚

                    Draw.EditSheet()
                    'part.EditSketch()
                    part.ForceRebuild3(True)
                End If
            End Sub
            Public Sub A3模板(material$, company$, name$, Code$)
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.375, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()

                View = Draw.GetFirstView 'A3
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 315 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If


                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 42 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)
                            End If


                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)
                            End If

                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(Code)
                            End If


                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)
                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
            End Sub
            Public Sub 修改特征(特征名称$, 修改参数#, Optional 尺寸名称$ = "D1")
                修改参数# = 修改参数# / 1000
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
                Dim swFeat As Feature
                part.Extension.SelectByID2(特征名称, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swFeat = SelectionMgr.GetSelectedObject6(1, -1)
                part.ActivateSelectedFeature()
                part.Extension.SelectByID2(尺寸名称 + "@" + 特征名称 + "@" + part.GetTitle, "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
                ChangeDimensionVaule(修改参数#)
                part.EditRebuild3()
            End Sub
            Public Sub test修改()
                swapp.OpenDoc6("E:\works\generator_parts_library\balance_ring\8LY.101.001.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
                修改特征("阵列(圆周)1", 2)
            End Sub
            Public Sub open_initialization(file_path$)
                OpenDoc7 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.CloseAllDocuments(True)
                swapp.FrameState = 1
                Dim a As Component2
                swapp.OpenDoc6(file_path$ + ".SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActiveDoc
                FeatureManager = part.FeatureManager
                SketchManager = part.SketchManager
                SelectionMgr = part.SelectionManager
            End Sub
            Public Sub Modify_feature_拉伸切除(feature_name$, Depth#, Optional endcondition# = 0)
                Depth = Depth / 1000
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As SldWorks.ExtrudeFeatureData2
                aa = Feature.GetDefinition()
                aa.SetDepth(True, Depth)
                aa.ReverseDirection = False
                aa.SetEndCondition(True, endcondition)
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_圆周阵列(feature_name$, spacing#, total#, Optional spacing_type As Boolean = True)
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As ICircularPatternFeatureData
                aa = Feature.GetDefinition()
                aa.EqualSpacing = spacing_type '1方向类型
                aa.Spacing = spacing '1方向距离
                aa.TotalInstances = total '1方向个数
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_线性阵列(feature_name$, spacing#, total#, Optional spacing_type As Boolean = False， Optional spacing2# = 0, Optional total2# = 1, Optional spacing_type2 As Boolean = False)
                spacing = spacing / 1000
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As ILinearPatternFeatureData
                aa = Feature.GetDefinition()
                aa.D1ReverseDirection = spacing_type '1方向反向
                aa.D1Spacing = spacing '1方向距离
                aa.D1TotalInstances = total '1方向个数
                aa.D2ReverseDirection = spacing_type2 '2方向反向
                aa.D2Spacing = spacing2 '2方向距离
                aa.D2TotalInstances = total2 '2方向个数
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_倒角(feature_name$, distance1#, distance2#, Optional angle# = PI / 4, Optional type# = 1)
                distance1 = distance1 / 1000
                distance2 = distance2 / 1000
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As IChamferFeatureData2
                aa = Feature.GetDefinition()
                aa.Type = type '1角度距离 2距离距离 
                If aa.Type = 1 Then
                    aa.EdgeChamferAngle = angle#
                End If
                If aa.Type = 2 Then
                    aa.EqualDistance = False
                    aa.SetEdgeChamferDistance(1, distance2)
                End If
                aa.SetEdgeChamferDistance(0, distance1)
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_旋转拉伸(feature_name$, angle#)
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As IRevolveFeatureData2
                aa = Feature.GetDefinition()
                aa.SetRevolutionAngle(True, angle#)
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_圆角(feature_name$, Radius#)
                Radius = Radius / 1000
                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As ISimpleFilletFeatureData2
                aa = Feature.GetDefinition()
                'aa.ISetRadius(1, 6 / 1000)
                aa.DefaultRadius = Radius
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Modify_feature_基体法兰(feature_name$, wight#, Optional thickness# = 2 / 1000， Optional Fillet# = 2 / 1000)

                part.Extension.SelectByID2(feature_name, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                SelectionMgr = part.SelectionManager
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                Dim aa As IBaseFlangeFeatureData
                aa = Feature.GetDefinition()
                aa.BendRadius = Fillet#
                aa.D1OffsetDistance = wight#
                aa.Thickness = thickness#
                Feature.ModifyDefinition(aa, part, Nothing)
            End Sub
            Public Sub Determine_whether_the_folder_exists(Folder_address$) '判断文件夹是否存在
                If Dir(Folder_address$, vbDirectory) <> "" Then
                    'MsgBox("文件夹存在")
                Else
                    MkDir(Folder_address$)
                    'MsgBox("文件夹不存在，已创建")
                End If
            End Sub

            Public Sub 创建数据表(地址$, 数据库$)
                mysqlcon = New MySqlConnection("server=" + 地址 + ";userid=root" & ";password=123456" & ";database=" + 数据库 + ";pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                'mysqlcon.Execute "INSERT INTO tg_user(user_name,password) values('bbb','998877')"

                'txtsql = "insert into student_info(Student_ID,Student_Name,Student_Sex,ClassNo,Grade,born_date,ru_date)"  values ('" & txtStuID & "','" & txtName & "','" & txtSex & "','" & txtClassNO & "','" & txtGrade & "','" & txtborn_date & "','" & txtRuDate & "')"

                Dim strsql As String
                strsql = "create table Persons(Id_P int,LastName varchar(255),FirstName varchar(255),Address varchar(255),City varchar(255))"

                mysqlcom = New MySqlCommand(strsql)

                'Dim sqlcom As New MySqlCommand(strsql, mysqlcon)
                'MsgBox(1)

            End Sub
            Public Sub 定子冲片尺寸驱动(localhost$, database$, tabledase$, code$)


                mysql_new2(localhost$, database$, tabledase$, code$)


                修改特征草图("凸台-拉伸1", read("diameter") / 1000, "D1") '外径

                Modify_feature_拉伸切除("凸台-拉伸1", read("thickness")) '修改特征

                修改特征草图("切除-拉伸1", read("inside_diameter") / 1000, "D1") '内径

                修改特征草图("切除-拉伸2", read("Groove_Bottom_Width") / 1000, "D1") '槽内宽度1

                修改特征草图("切除-拉伸2", read("Groove_Bottom_Short_Hight") / 1000, "D2") '槽底竖直长度1

                修改特征草图("切除-拉伸2", read("Bottom_tip_width") / 1000, "D3") '槽内宽度2（较宽）

                修改特征草图("切除-拉伸2", read("Groove_Bottom_Long_Hight") / 1000, "D4") '槽底竖直长度2（较长）

                修改特征草图("切除-拉伸2", read("Dome_Radius") / 1000 * 2, "D5") '槽外圆

                修改特征草图("切除-拉伸2", read("Dome_center_height") / 1000, "D6") '槽底竖直长度2（较长）

                Modify_feature_圆周阵列("阵列(圆周)1", 2 * PI, read("Groove_number"))

                设置属性(read("name"), read("code"), read("material"))

                'part.Save()
                'swapp.CloseDoc(part.GetTitle)

                'swapp.OpenDoc6("E:\\works\\generator_parts_library\\stator_lamination\\001" + ".slddrw", 3, 32, "", errors, longwarnings)


                pack_and_go("E:\works\Motor_template_parts_library\stator_lamination\", read("part_save_address"), read("code"), 1)

            End Sub

            Public Sub 定子端环尺寸驱动(localhost$, database$, tabledase$, code$)

                mysql_new2(localhost$, database$, tabledase$, code$)
                修改特征草图("凸台-拉伸1", read("diameter") / 1000, "D1") '外径

                Modify_feature_拉伸切除("凸台-拉伸1", read("thickness")) '修改特征

                修改特征草图("切除-拉伸1", read("inside_diameter") / 1000, "D1") '内径
                设置属性(read("name"), read("code"), read("material"))


                part.Save()
                pack_and_go("E:\works\Motor_template_parts_library\stator_pressing_ring\", read("part_save_address"), read("code"), 1)



            End Sub

            Public Sub 扣片尺寸驱动(localhost$, database$, tabledase$, code$)
                mysql_new2(localhost$, database$, tabledase$, code$)

                修改特征草图("基体-法兰1", read("bending_length") / 1000, "D1") '宽
                修改特征草图("基体-法兰1", read("L_front") / 1000, "D2") '长

                Modify_feature_基体法兰("基体-法兰1", read("width") / 1000) '修改特征

                设置属性(read("name"), read("code"), read("material"))

                part.Save()
                pack_and_go("E:\works\Motor_template_parts_library\clasp\", read("part_save_address"), read("code"), 1)

            End Sub
            Public Function pack_and_go(oldlocal$, new_local$, Optional code$ = "", Optional type% = 2)



                If type = 2 Then
                    swapp.CloseAllDocuments(True)
                    part = swapp.OpenDoc6(oldlocal + ".sldasm", 2, 32, "", errors, longwarnings)
                Else
                    Dim title As String
                    part = swapp.ActiveDoc
                    title = part.GetTitle
                    part.Save()

                    part = swapp.OpenDoc6(oldlocal + title, 1, 32, "", errors, longwarnings)
                End If
                Dim swPackAndGo As PackAndGo
                Dim namesCount As Integer
                Dim pgFileNames As String() = Nothing
                Dim pgFileStatus As Object = Nothing
                Dim pgSetFileNames() As String
                Dim pgGetFileNames As Object
                Dim pgDocumentStatus As Object


                swPackAndGo = part.Extension.GetPackAndGo
                namesCount = swPackAndGo.GetDocumentNamesCount
                swPackAndGo.IncludeDrawings = True
                swPackAndGo.IncludeSimulationResults = True
                swPackAndGo.IncludeToolboxComponents = True


                status = swPackAndGo.GetDocumentNames(pgFileNames)



                If type = 2 Then

                Else
                    Dim a As String
                    a = Left(pgFileNames(0), Len(pgFileNames(0)) - Len(Right(pgFileNames(0), Len(pgFileNames(0)) - InStrRev(pgFileNames(0), "\", -1))))
                    pgFileNames(0) = a + code + ".sldprt"
                    If pgFileNames.Count > 1 Then
                        pgFileNames(1) = a + code + ".slddrw"
                    End If
                End If



                swPackAndGo.SetDocumentSaveToNames(pgFileNames)


                status = swPackAndGo.SetSaveToName(True, new_local)
                swPackAndGo.FlattenToSingleFolder = True

                'swPackAndGo.SetSaveToName()
                'swPackAndGo.AddPrefix = "LY_"
                'swPackAndGo.AddSuffix = "_" + code

                ReDim pgGetFileNames(namesCount - 1)
                ReDim pgDocumentStatus(namesCount - 1)
                status = swPackAndGo.GetDocumentSaveToNames(pgGetFileNames, pgDocumentStatus)

                part.Extension.SavePackAndGo(swPackAndGo)

            End Function

            Public Sub 修改特征草图(特征名称$, 修改参数#, Optional 尺寸名称$ = "D1")
                part.Extension.SelectByID2(特征名称, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                Feature = SelectionMgr.GetSelectedObject6(1, -1)
                part.FeatEdit()
                part.Extension.SelectByID2(尺寸名称 + "@" + Feature.IGetFirstSubFeature().Name + "@*", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                ChangeDimensionVaule(修改参数)
                part.InsertSketch2(True)
            End Sub

            Public Sub 轴180尺寸(localhost$, database$, tabledase$, code$)

                mysql_new2(localhost$, database$, tabledase$, code$)

                修改特征草图("旋转1", read("Dis04stStartPFrDivLine") / 1000 + 0.09, "D7") '宽
                设置属性(read("name"), read("code"), read("material"))

                pack_and_go("E:\works\Motor_template_parts_library\rotor_shaft\", "E:\works\generator_parts_library\rotor_shaft\", read("code"), 1)

            End Sub

            Public Sub 轴250尺寸(localhost$, database$, tabledase$, code$)

                mysql_new2(localhost$, database$, tabledase$, code$)

                修改特征草图("旋转1", read("Step4_length") / 1000, "D8") '宽
                设置属性(read("name"), read("code"), read("material"))

                pack_and_go("E:\works\Motor_template_parts_library\rotor_shaft\", "E:\works\generator_parts_library\rotor_shaft\", read("code"), 1)

            End Sub


        End Class
    End Class
    Public Class Run_fubing
        Public Class Components
            Public Sub BI_8EQ_290_2001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from balance_iron", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.290.2001"
                    r.Read()
                Loop

                Dim BI_8EQ_290_2001 As New Module_fubin.all
                BI_8EQ_290_2001.Part_initialization()
                BI_8EQ_290_2001.初始设置（0）
                BI_8EQ_290_2001.Arc_boss（r("diameter") / 1000， r("thickness") / 1000）
                BI_8EQ_290_2001.圆切除(r("internal_diameter") / 1000)
                BI_8EQ_290_2001.设置属性（r("name"), r("Code"), r("material")）
                BI_8EQ_290_2001.设置材料（1）
                BI_8EQ_290_2001.[End](r("Parts_drawing_address"))


                BI_8EQ_290_2001.开始BI(r("Parts_drawing_address"), 0.115, 0.13, r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                     r("skills_requirement3"), r("skills_requirement4"))
                BI_8EQ_290_2001.结束(r("Drawings_address"))


            End Sub
            Public Sub PC_8EQ_314_2021()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from protective_cover", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.314.2021"
                    r.Read()
                Loop


                Dim PC_8EQ_314_2021 As New Module_fubin.all
                PC_8EQ_314_2021.Part_initialization()
                PC_8EQ_314_2021.初始设置（0）
                PC_8EQ_314_2021.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)
                PC_8EQ_314_2021.Reverse_circle(r("internal_diameter") / 1000)

                PC_8EQ_314_2021.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                PC_8EQ_314_2021.扇形窗(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("length") / 1000, r("width") / 1000, r("x_Fan_spacing") / 1000, r("y_Fan_spacing") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))
                PC_8EQ_314_2021.设置属性（r("name"), r("Code"), r("material")）
                PC_8EQ_314_2021.设置材料（1）
                PC_8EQ_314_2021.[End](r("Parts_drawing_address"))

                PC_8EQ_314_2021.开始PC1(r("Parts_drawing_address"), 0.16, 0.18, 0.3, 0.18， r("Proportional_value"), r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                     r("skills_requirement3"), r("skills_requirement4"))

                PC_8EQ_314_2021.结束(r("Drawings_address"))

            End Sub
            Public Sub PC_8EQ_314_2137()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from protective_cover", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.314.2137"
                    r.Read()
                Loop

                Dim PC_8EQ_314_2137 As New Module_fubin.all
                PC_8EQ_314_2137.Part_initialization()
                PC_8EQ_314_2137.初始设置（0）
                PC_8EQ_314_2137.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                PC_8EQ_314_2137.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("hole_length") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                PC_8EQ_314_2137.半圆弧弯曲（r("rectangle_length") / 1000, r("thickness") / 1000）
                PC_8EQ_314_2137.设置属性（r("name"), r("Code"), r("material")）
                PC_8EQ_314_2137.设置材料（1）
                PC_8EQ_314_2137.[End](r("Parts_drawing_address"))

                PC_8EQ_314_2137.开始PC2(r("Parts_drawing_address"), 0.2, 0.18， r("Proportional_value"), r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                     r("skills_requirement3"), r("skills_requirement4"))

                PC_8EQ_314_2137.结束(r("Drawings_address"))

            End Sub
            Public Sub PC_8EQ_314_2349()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from protective_cover", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.314.2349"
                    r.Read()
                Loop
                Dim PC_8EQ_314_2349 As New Module_fubin.all
                PC_8EQ_314_2349.Part_initialization()
                PC_8EQ_314_2349.初始设置（0）

                PC_8EQ_314_2349.防护罩(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("thickness") / 1000， r("width") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("x_groove_Array2")， r("y_groove_Array"), r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000, r("Long_partition") / 1000, r("type"), r("max") / 1000， r("x_arry1"), r("x_arry2")， r("y_arry2")， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                       r("Distance8") / 1000， r("Distance9") / 1000)
                PC_8EQ_314_2349.竖向扇形窗（r("rectangle_length") / 1000， r("Fan_length") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000， r("x_arry"), r("Protruding_distance") / 1000， r("thickness") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                       r("Distance8") / 1000， r("Distance9") / 1000）
                PC_8EQ_314_2349.折弯(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Hole_arc_radius") / 1000, r("Side_distance") / 1000)
                PC_8EQ_314_2349.设置属性（r("name"), r("Code"), r("material")）
                PC_8EQ_314_2349.设置材料（1）
                PC_8EQ_314_2349.[End2](r("Parts_drawing_address"))
                PC_8EQ_314_2349.弯曲(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("diameter") / 1000)
                PC_8EQ_314_2349.[End2](r("Parts_drawing_address2"))
                ''MsgBox(1)


                PC_8EQ_314_2349.开始PC3(r("Parts_drawing_address"), 1, 1, 0, 0.2, 0.214, 0.36, 0.214, r("Proportional_value")， r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                     r("skills_requirement3"), r("skills_requirement4"))

                PC_8EQ_314_2349.局部视图(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000)
                PC_8EQ_314_2349.弯曲视图视图(r("Parts_drawing_address2"), 0.2, 0.115)

                PC_8EQ_314_2349.结束(r("Drawings_address"))

            End Sub
            Public Sub AS_8EQ_210_2010()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from axle_sleeve", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.210.2010"
                    r.Read()
                Loop
                Dim AS_8EQ_210_2010 As New Module_fubin.all
                AS_8EQ_210_2010.Part_initialization()
                AS_8EQ_210_2010.初始设置（0）
                AS_8EQ_210_2010.两阶圆台拉伸(r("Arc_diameter1") / 1000， r("Arc_diameter2") / 1000， r("thickness1") / 1000， r("thickness2") / 1000， r("Fillet_radius") / 1000, r("type2"), r("Tolerances") / 1000)
                AS_8EQ_210_2010.矩形凸出反向孔(r("Arc_diameter3") / 1000, r("length") / 1000, r("width") / 1000， r("type"), r("max"), r("max2"), r("min"), r("type3"), r("Tolerances2") / 1000, r("symbol2"), r("Geometric_tolerance2"), r("letter2"))
                AS_8EQ_210_2010.孔导向1(r("Arc_diameter4") / 1000, r("Threaded_hole_specifications"), r("hole_diameter") / 1000, r("hole_number"), r("hole_thickness") / 1000, r("thickness1") / 1000, r("symbol1"), r("Geometric_tolerance1"), r("letter1"), r("character1"), r("character2"))
                AS_8EQ_210_2010.设置属性（r("name"), r("Code"), r("material")）
                AS_8EQ_210_2010.设置材料（1）
                AS_8EQ_210_2010.[End](r("Parts_drawing_address"))

                AS_8EQ_210_2010.Insert_a3(r("Parts_drawing_address"), r("front"), r("right"), r("up"), 0.15, 0.18, r("X2"), r("Y2"), r("Proportional_value"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                                                                      r("skills_requirement3"), r("skills_requirement4"), r("name"), r("material"), r("Code"))
                AS_8EQ_210_2010.结束1(r("Drawings_address"))


            End Sub
            Public Sub AS_8EQ_210_2064()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from axle_sleeve", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ_210_2064"
                    r.Read()
                Loop
                Dim AS_8EQ_210_2064 As New Module_fubin.all
                AS_8EQ_210_2064.Part_initialization()
                AS_8EQ_210_2064.初始设置（0）
                AS_8EQ_210_2064.凸台拉伸(r("Arc_diameter1") / 1000, r("thickness1") / 1000)
                AS_8EQ_210_2064.反向圆切除(r("Arc_diameter2") / 1000)
                AS_8EQ_210_2064.圆凸起(r("Arc_diameter1") / 1000， r("Arc_diameter3") / 1000， r("Round_bump") / 1000， r("bump_number"))
                AS_8EQ_210_2064.设置属性（r("name"), r("Code"), r("material")）
                AS_8EQ_210_2064.设置材料（3）
                AS_8EQ_210_2064.[End](r("Parts_drawing_address"))

                AS_8EQ_210_2064.InsertA4pDrawings(r("Parts_drawing_address"), r("Proportional_value")， r("front"), r("right"), r("up")， r("name"), r("material"), r("Code")， 0.11, 0.2, 0.11, 0.13, r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                                                                      r("skills_requirement3"), r("skills_requirement4"))

                AS_8EQ_210_2064.结束(r("Drawings_address"))
            End Sub
            Public Sub ER_8EQ_150_1005()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from exciter_rotor", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ_150_1005"
                    r.Read()
                Loop
                Dim ER_8EQ_150_1005 As New Module_fubin.all
                ER_8EQ_150_1005.Part_initialization()
                ER_8EQ_150_1005.初始设置(0)
                ER_8EQ_150_1005.Two_stage_round_table_stretch(r("diameter1") / 1000, r("diameter2") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("Chamfer_length") / 1000, r("Max1") / 1000, r("Min1") / 1000, r("type1"), r("arc_table_tol_max1"), r("arc_table_tol_min1"), r("type5"))
                ER_8EQ_150_1005.缺口(r("diameter1") / 1000, r("diameter3") / 1000, r("thickness1") / 1000, r("thickness3") / 1000, r("Notch_thickness") / 1000, r("type1"), r("arc_table_tol_max2"), r("arc_table_tol_min2"))
                ER_8EQ_150_1005.Arc_cut(r("internal_diameter1") / 1000， r("thickness1") / 1000, r("thickness2") / 1000， r("Depth_of_cut") / 1000, r("type8"), r("Min4") / 1000)
                ER_8EQ_150_1005.Ring_excision(r("Ring_diameter1") / 1000, r("Ring_diameter2") / 1000, r("Resection_depth1") / 1000, r("Resection_depth2") / 10000， r("type2"), r("thickness1") / 1000, r("thickness2") / 1000, r("Fillet_radius") / 1000)
                ER_8EQ_150_1005.初始设置(0)
                ER_8EQ_150_1005.Rectangular_protruding_reverse_hole(r("diameter4") / 1000， r("length") / 1000， r("width") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("arc_table_tol_min3"), r("arc_table_tol_max3"), r("arc_table_tol_max4"), r("Min2") / 1000, r("type6"), r("type7"))


                ER_8EQ_150_1005.圆孔阵列(r("diameter5") / 1000， r("Hole_diameter1") / 1000， r("number"), r("coment1"), r("coment2"))
                ER_8EQ_150_1005.Ring_excision(r("Ring_diameter3") / 1000, r("Ring_diameter4") / 1000, r("Resection_depth1") / 1000, r("Resection_depth2") / 1000， r("type3"), r("thickness1") / 1000, r("thickness2") / 1000, r("Fillet_radius") / 1000)
                ER_8EQ_150_1005.Straight_slot_On_side(r("diameter1") / 1000， r("diameter2") / 1000, r("Slot_length") / 1000, r("Slot_width") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("Resection_distance") / 1000, r("type1"), r("arc_table_tol_max5"), r("arc_table_tol_min5")， r("Min3") / 1000)
                ER_8EQ_150_1005.孔导向2(r("diameter2") / 1000, r("diameter6") / 1000, r("Threaded_hole_specifications"), r("hole_diameter2") / 1000, r("hole_number"), r("hole_thickness") / 1000,
                                        r("Distance_between_holes") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("symbol1"), r("Geometric_tolerance1"), r("letter1"), r("coment3"), r("coment4"))
                ER_8EQ_150_1005.设置属性（r("name"), r("Code"), r("material")）
                ER_8EQ_150_1005.设置材料（1）

                ER_8EQ_150_1005.[End](r("Parts_drawing_address"))

                ER_8EQ_150_1005.Insert_a3EX(r("Parts_drawing_address"), 0.122, 0.189, r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2")，
                                                                      r("skills_requirement3"), r("skills_requirement4"), r("skills_requirement5"), r("skills_requirement6"))
                ER_8EQ_150_1005.矩形凸出反向孔局部视图(0.174, 0.06, 1 / 2, r("diameter4") / 1000)
                ER_8EQ_150_1005.侧边槽局部视图（r("Parts_drawing_address")， 0.31, 0.189， r("diameter1") / 1000, 0.09, 0.06, 1）
                ER_8EQ_150_1005.半剖视图(r("diameter2") / 1000, r("thickness1") / 1000, r("thickness2") / 1000， r("length") / 1000, r("Slot_width") / 1000, r("Resection_distance") / 1000, r("Resection_depth1") / 1000, r("Ring_diameter1") / 1000, r("Ring_diameter3") / 1000, r("Fillet_radius") / 1000)
                ER_8EQ_150_1005.结束(r("Drawings_address"))

            End Sub
            Public Sub DS_8EQ_548_2108()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from damping_strip", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.548.2108"
                    r.Read()
                Loop
                Dim DS_8EQ_548_2108 As New Module_fubin.all
                DS_8EQ_548_2108.Part_initialization()
                DS_8EQ_548_2108.初始设置（0）
                DS_8EQ_548_2108.倒角凸台(r("diameter") / 1000， r("thickness") / 1000, r("Chamfer_length") / 1000， r("Chamfer angle"), r("Chamfering_parameters"), r("Tolerance_size"))
                DS_8EQ_548_2108.设置属性（r("name"), r("Code"), r("material")）
                DS_8EQ_548_2108.设置材料（2）
                DS_8EQ_548_2108.[End](r("Parts_drawing_address"))
                DS_8EQ_548_2108.开始DS(r("Parts_drawing_address"), 0.22, 0.18, r("Proportional_value"), r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"))
                DS_8EQ_548_2108.结束(r("Drawings_address"))
            End Sub
            Public Sub DS_8EQ_272_2181()

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from damping_strip", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.272.2181"
                    r.Read()
                Loop
                Dim DS_8EQ_548_2181 As New Module_fubin.all
                DS_8EQ_548_2181.Part_initialization()
                DS_8EQ_548_2181.初始设置（0）
                DS_8EQ_548_2181.倒角凸台(r("diameter") / 1000， r("thickness") / 1000, r("Chamfer_length") / 1000， r("Chamfer angle"), r("Chamfering_parameters"), r("Tolerance_size"), r("Tolerance"), r("Type"), r("Max"), r("Min"))
                DS_8EQ_548_2181.孔导向3(r("Threaded_hole_specifications"), r("Hole_diameter") / 1000, r("Number_of_holes"), r("Hole_depth") / 1000, r("thickness") / 1000)
                DS_8EQ_548_2181.设置属性（r("name"), r("Code"), r("material")）
                DS_8EQ_548_2181.设置材料（1）
                DS_8EQ_548_2181.[End](r("Parts_drawing_address"))

                DS_8EQ_548_2181.开始DS(r("Parts_drawing_address"), 0.22, 0.18, r("Proportional_value"), r("name"), r("material"), r("Code"), r("skills_requirement_title"), r("skills_requirement1"), r("type1"), r("thickness") / 1000, r("Hole_depth") / 1000)

                DS_8EQ_548_2181.结束(r("Drawings_address"))

            End Sub
            Public Sub Cl_8EQ_146_2064()

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from clasp", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.146.2064"
                    r.Read()
                Loop

                Dim Cl_8EQ_146_2064 As New Module_fubin.all
                Cl_8EQ_146_2064.Part_initialization()
                Cl_8EQ_146_2064.扣片(r("length") / 1000， r("width") / 1000, r("height") / 1000, r("thick") / 1000)
                Cl_8EQ_146_2064.设置属性（r("name"), r("Code"), r("material")）
                Cl_8EQ_146_2064.设置材料（1）
                Cl_8EQ_146_2064.End(r("Parts_drawing_address"))

                Cl_8EQ_146_2064.Clsasp_A4pDrw(r("Parts_drawing_address"), r("Scale2"), 1, 0, 1, r("name"), r("material"), r("code"),
                                                     120 / 1000, 200 / 1000, 0, 0, 120 / 1000, 160 / 1000,
                                                     r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2"), r("skills_requirement3"), r("skills_requirement4"),
                                                     r("length") / 1000)
                Cl_8EQ_146_2064.结束(r("Drawings_address"))
            End Sub
            Public Sub OP_8LY_390_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=oil_pan;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from oil_pan1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.390.0001"
                    r.Read()
                Loop
                Dim OP_8LY_390_001 As New Module_fubin.all
                OP_8LY_390_001.Part_initialization()
                OP_8LY_390_001.初始设置（0）
                OP_8LY_390_001.Two_stage_round_table(r("diameter1") / 1000, r("diameter3") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, 1, r("max1") / 1000, r("min1") / 1000)
                OP_8LY_390_001.Circle_excision(r("diameter2") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("max2") / 1000, r("min2") / 1000, r("arc_table_tol_max"), r("arc_table_tol_min"), r("type1"), r("thickness3") / 1000)
                OP_8LY_390_001.Circle_excision(r("diameter4") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("max2") / 1000, r("min2") / 1000, r("arc_table_tol_max"), r("arc_table_tol_min"))
                OP_8LY_390_001.圆角及倒角处理(r("diameter1") / 1000, r("diameter2") / 1000, r("diameter3") / 1000, r("diameter4") / 1000, r("thickness3") / 1000, r("thickness1") / 1000, r("thickness3") / 1000)
                OP_8LY_390_001.设置属性（r("name"), r("Code"), r("material")）
                OP_8LY_390_001.[End](r("part_save_address"))
                OP_8LY_390_001.Oil_pan_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("diameter1") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("skills_requirement"), r("proportion"))
                OP_8LY_390_001.结束(r("drawing_save_address"))


            End Sub
            Public Sub SW_8LY_783_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=slot_wedge;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from slot_wedge1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.783.0001"
                    r.Read()
                Loop

                Dim SW_8LY_783_0001 As New Module_fubin.all
                SW_8LY_783_0001.Part_initialization()
                SW_8LY_783_0001.初始设置（0）
                SW_8LY_783_0001.slot_wedge(r("long1") / 1000, r("long2") / 1000, r("width1") / 1000, r("Fillet") / 1000, r("hight1") / 1000)
                SW_8LY_783_0001.slot_wedge_Label(r("long1") / 1000, r("long2") / 1000, r("width1") / 1000, r("hight1") / 1000, r("max") / 1000, r("min") / 1000, r("angle"))
                SW_8LY_783_0001.[End](r("part_save_address"))
                SW_8LY_783_0001.slot_wedge_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"))
                SW_8LY_783_0001.结束(r("drawing_save_address"))

            End Sub
            Public Sub GP_8LY_864_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=grounding_plate_appearance;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from grounding_plate_appearance1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.864.0001"
                    r.Read()
                Loop
                Dim GP_8LY_864_0001 As New Module_fubin.all
                GP_8LY_864_0001.Part_initialization()
                GP_8LY_864_0001.初始设置（0）
                GP_8LY_864_0001.Grounding_plate_Appearance(r("diamter1") / 1000, r("diamter2") / 1000， r("long1") / 1000, r("width1") / 1000, r("thickness") / 1000)
                GP_8LY_864_0001.接地牌蚀刻（r("diamter1") / 1000, r("diamter3") / 1000， r("long1") / 1000， r("long2") / 1000， r("spacing") / 1000， r("depth") / 1000， r("Etching_groove_width1") / 1000， r("Etching_groove_length1") / 1000， r("Etching_groove_width2") / 1000， r("Etching_groove_length2") / 1000， r("Etching_groove_width3") / 1000， r("Etching_groove_length3") / 1000， r("Etching_groove_width4") / 1000， r("Etching_groove_length4") / 1000， r("Etching_groove_spcing1") / 1000， r("Etching_groove_spcing2") / 1000， r("Etching_groove_spcing3") / 1000）
                GP_8LY_864_0001.接地牌标注（r("diamter1") / 1000, r("diamter2") / 1000， r("long1") / 1000, r("width1") / 1000， r("long2") / 1000, r("diamter3") / 1000， r("spacing") / 1000， r("Etching_groove_width1") / 1000， r("Etching_groove_length1") / 1000， r("Etching_groove_width2") / 1000， r("Etching_groove_length2") / 1000， r("Etching_groove_width3") / 1000， r("Etching_groove_length3") / 1000， r("Etching_groove_width4") / 1000， r("Etching_groove_length4") / 1000， r("Etching_groove_spcing1") / 1000， r("Etching_groove_spcing2") / 1000， r("Etching_groove_spcing3") / 1000）
                GP_8LY_864_0001.[End](r("part_save_address"))
                GP_8LY_864_0001.Grounding_plate_Appearance_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"))
                GP_8LY_864_0001.结束(r("drawing_save_address"))


            End Sub
            Public Sub PS_8LY_635_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=plug;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from plug1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.635.0001"
                    r.Read()
                Loop

                Dim OP_8LY_550_001 As New Module_fubin.all
                OP_8LY_550_001.Part_initialization()
                OP_8LY_550_001.初始设置（0）
                OP_8LY_550_001.Two_stage_round_table(r("diameter1") / 1000, r("diameter2") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, 2)
                OP_8LY_550_001.Gap(r("diameter2") / 1000, r("diameter3") / 1000, r("thickness1") / 1000, r("gap_thickness") / 1000)
                OP_8LY_550_001.Cut_arc(r("thickness1") / 1000, r("thickness2") / 1000, r("diameter4") / 1000, r("cut_thickness") / 1000)
                OP_8LY_550_001.Gap_Fillal(r("diameter2") / 1000, r("Fillet") / 1000)
                OP_8LY_550_001.gap_Label(r("diameter1") / 1000, r("diameter2") / 1000, r("diameter3") / 1000, r("diameter4") / 1000, r("thickness1") / 1000, r("thickness2") / 1000, r("cut_thickness") / 1000, r("Fillet") / 1000, r("gap_thickness") / 1000)
                OP_8LY_550_001.[End](r("part_save_address"))
                OP_8LY_550_001.PS_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"), r("diameter1") / 1000, r("thickness1") / 1000, r("thickness2") / 1000)
                OP_8LY_550_001.结束(r("drawing_save_address"))
            End Sub
            Public Sub AS_8LY_210_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=shaft_sleeve;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from shaft_sleeve1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.210.0001"
                    r.Read()
                Loop

                Dim AS_8LY_210_0001 As New Module_fubin.all
                AS_8LY_210_0001.Part_initialization()
                AS_8LY_210_0001.初始设置（0）
                AS_8LY_210_0001.bushing(r("diameter1") / 1000, r("diameter2") / 1000, r("spacing1") / 1000, r("spacing2") / 1000, r("thinckness1") / 1000)

                AS_8LY_210_0001.Side_ring(r("diameter1") / 1000, r("diameter2") / 1000, r("Side_ring_long1") / 1000, r("Side_ring_long2") / 1000, r("thinckness1") / 1000)

                AS_8LY_210_0001.Set_configuration(r("hole_diameter1") / 1000, r("hole_diameter2") / 1000, r("hole_long") / 1000, r("hole_wight") / 1000)

                AS_8LY_210_0001.As_Label(r("diameter1") / 1000, r("diameter2") / 1000, r("hole_diameter1") / 1000, r("hole_diameter2"), r("spacing1") / 1000, r("spacing2") / 1000, r("Side_ring_long1") / 1000, r("Side_ring_long2") / 1000, r("thinckness1") / 1000, r("thinckness2"))

                AS_8LY_210_0001.[End](r("part_save_address"))
                AS_8LY_210_0001.AS_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"))
                AS_8LY_210_0001.结束(r("drawing_save_address"))

            End Sub
            Public Sub AS_8LY_210_0002()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=shaft_sleeve;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from shaft_sleeve1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.210.0002"
                    r.Read()
                Loop

                Dim AS_8LY_210_0002 As New Module_fubin.all
                AS_8LY_210_0002.Part_initialization()
                AS_8LY_210_0002.初始设置（0）
                AS_8LY_210_0002.bushing(r("diameter1") / 1000, r("diameter2") / 1000, r("spacing1") / 1000, r("spacing2") / 1000, r("thinckness1") / 1000)

                AS_8LY_210_0002.Side_ring(r("diameter1") / 1000, r("diameter2") / 1000, r("Side_ring_long1") / 1000, r("Side_ring_long2") / 1000, r("thinckness1") / 1000)

                AS_8LY_210_0002.Set_configuration(r("hole_diameter1") / 1000, r("hole_diameter2") / 1000, r("hole_long") / 1000, r("hole_wight") / 1000)

                AS_8LY_210_0002.As_Label(r("diameter1") / 1000, r("diameter2") / 1000, r("hole_diameter1") / 1000, r("hole_diameter2"), r("spacing1") / 1000, r("spacing2") / 1000, r("Side_ring_long1") / 1000, r("Side_ring_long2") / 1000, r("thinckness1") / 1000, r("thinckness2"))

                AS_8LY_210_0002.[End](r("part_save_address"))
                AS_8LY_210_0002.AS_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"))
                AS_8LY_210_0002.结束(r("drawing_save_address"))

            End Sub
            Public Sub WS_8LY_016_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=windshield;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from windshield1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.016.459.0001"
                    r.Read()
                Loop

                Dim WS_8LY_016_0001 As New Module_fubin.all
                WS_8LY_016_0001.Part_initialization()

                WS_8LY_016_0001.windshield(r("diameter1") / 1000, r("diameter2") / 1000, r("thinckness1") / 1000, r("thinckness2") / 1000, r("Fillet") / 1000)
                WS_8LY_016_0001.圆孔阵列(r("diameter3") / 1000, r("hole_diameter") / 1000, r("number") / 1000, r("coment1"), r("coment2"))
                WS_8LY_016_0001.Ws_label(r("diameter1") / 1000, r("diameter3") / 1000, r("diameter2") / 1000, r("hole_diameter") / 1000, r("thinckness1") / 1000, r("Fillet") / 1000, r("max") / 1000, r("min") / 1000)
                WS_8LY_016_0001.[End](r("part_save_address"))
                WS_8LY_016_0001.WS_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"))

                WS_8LY_016_0001.结束(r("drawing_save_address"))

            End Sub
            Public Sub IF_8LY_435_0001()

                Dim IF_8LY_435_0001 As New Module_fubin.all
                IF_8LY_435_0001.Part_initialization()
                IF_8LY_435_0001.Internal_fan(204 / 1000, 190 / 1000, 50 / 1000, 30 / 1000, 20 / 1000, 228 / 1000, 600 / 1000, 348 / 1000, 8 / 1000, 162 / 1000, 283 / 1000, 150 / 1000, 293 / 1000, 92 / 1000, 299 / 1000, 116 / 1000, 307 / 1000,
                                             255 / 1000, 23 / 1000, 235 / 1000, 118 / 1000, 143 / 1000, 110 / 1000, 135 / 1000, 12 / 1000, 64 / 1000, 50 / 1000, 43 / 1000, 2 / 1000)
                IF_8LY_435_0001.fan_leaf(600 / 1000, 150 / 1000, 293 / 1000, 92 / 1000, 299 / 1000, 116 / 1000, 307 / 1000, 235 / 1000, 118 / 1000, 143 / 1000, 64 / 1000, 50 / 1000, 5 / 1000, 12 / 1000, 20, 2 / 1000, 2 / 1000, 2 / 1000, 5 / 1000,
                                         27, 19, 30, 18, 22, 23, 24, 29, 25, 26, 18, 23, 24, 28, 24)

                IF_8LY_435_0001.fan_hole(35, 228 / 1000, 35 / 1000, 25 / 1000, 120)
            End Sub
            Public Sub SC_8LY_668_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Stator_end_cover;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Stator_end_cover1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.668.0001"
                    r.Read()
                Loop



                Dim SC_8LY_668_0001 As New Module_fubin.all
                SC_8LY_668_0001.Part_initialization()

                SC_8LY_668_0001.凸台拉伸（r("diameter1") / 1000， r("thickness") / 1000, r("tolerance_max1"), r("tolerance_min1")）
                SC_8LY_668_0001.反向圆切除（r("diameter2") / 1000, r("tolerance_max2"), r("tolerance_min2")）
                SC_8LY_668_0001.groove(r("diameter2") / 1000, r("diameter3") / 1000, r("groove_long1") / 1000, r("groove_long2") / 1000, r("groove_wight1") / 1000, r("groove_wight2") / 1000, r("max") / 1000, r("number"))
                SC_8LY_668_0001.[End](r("part_save_address"))
                SC_8LY_668_0001.SC_Drawings(r("part_save_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("proportion"), r("diameter2") / 1000, r("diameter3") / 1000, r("groove_wight1") / 1000)
                SC_8LY_668_0001.结束(r("drawing_save_address"))


            End Sub
            Public Sub WW_8LY_358_0001()
                Dim WW_8LY_358_0001 As New Module_fubin.all
                WW_8LY_358_0001.Part_initialization()
                WW_8LY_358_0001.windshield_wipers(1054 / 1000, 486 / 1000, 2 / 1000, 293 / 1000, 45, 5 / 1000)
                WW_8LY_358_0001.windshield_hold(40 / 1000, 95 / 1000, 30 / 1000, 45, 25 / 1000, 7 / 1000)
            End Sub
            Public Sub BI_8LY_317_0001()
                Dim BI_8LY_317_0001 As New Module_fubin.all
                BI_8LY_317_0001.Part_initialization()
                BI_8LY_317_0001.凸台拉伸(350 / 1000, 34 / 1000)
                BI_8LY_317_0001.反向圆切除(150 / 1000)
                BI_8LY_317_0001.Ring_excision_cut(34 / 1000, 350 / 1000， 175 / 1000， 280 / 1000, 21 / 1000， 7 / 1000, 3 / 1000)
                BI_8LY_317_0001.圆孔（315 / 1000， 12 / 1000， 4， 45）
                BI_8LY_317_0001.four_Notch(280 / 1000, 175 / 1000, 8 / 1000, 30 / 1000， 21 / 1000， 7 / 1000， 10 / 1000， 8 / 1000, 30, 4, 8 / 1000)
                BI_8LY_317_0001.six_Notch(150 / 1000, 264 / 1000, 175 / 1000, 10 / 1000, 5 / 1000, 45, 8 / 1000, 8, 5 / 1000)
                BI_8LY_317_0001.T_slot(332 / 1000, 292 / 1000， 175 / 1000, 30, 4, 5 / 1000, 8 / 1000, 21 / 1000, 7 / 1000, 30 / 1000)

            End Sub
            Public Sub SM_8LY_314_0001()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "1"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)
                AAA.Reverse_circle(r("internal_diameter") / 1000)

                AAA.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))
                'AAA.抽壳（）
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0002()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "2"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.矩形凸台圆孔(r("rectangle_length") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_hole_spacing") / 1000, r("Hole_arc_radius") / 1000, r("Distance_between_hole_and_side") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA42(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0003()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "3"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.矩形凸台圆孔(r("rectangle_length") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_hole_spacing") / 1000, r("Hole_arc_radius") / 1000, r("Distance_between_hole_and_side") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA42(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0004()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "4"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.矩形凸台圆孔(r("rectangle_length") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_hole_spacing") / 1000, r("Hole_arc_radius") / 1000, r("Distance_between_hole_and_side") / 1000)

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA42(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0005()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "5"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.矩形凸台圆孔(r("rectangle_length") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_hole_spacing") / 1000, r("Hole_arc_radius") / 1000, r("Distance_between_hole_and_side") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA42(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0006()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "6"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)

                AAA.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                AAA.Notch_on_circle(r("length1") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0007()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "7"
                    r.Read()
                Loop


                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.防护罩(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("thickness") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("x_groove_Array2")， r("y_groove_Array"), r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000, r("Long_partition") / 1000, r("type"), r("max") / 1000， r("x_arry1"), r("x_arry2")， r("y_arry2")， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000)
                AAA.竖向扇形窗（r("rectangle_length") / 1000， r("Fan_length") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000， r("x_arry"), r("Protruding_distance") / 1000， r("thickness") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，）
                AAA.折弯(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Hole_arc_radius") / 1000, r("Side_distance") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End2](r("Parts_drawing_address"))
                AAA.弯曲(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("diameter") / 1000)
                AAA.[End2](r("Parts_drawing_address2"))


                AAA.SM_DrawingsA3(r("Parts_drawing_address"), r("Parts_drawing_address2"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))



            End Sub
            Public Sub SM_8LY_314_0008()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "8"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.矩形缺口（r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("length1") / 1000， r("width1") / 1000， r("distance1") / 1000， r("Fillet") / 1000）
                AAA.槽口（r("Total_length_of_tank") / 1000， r("rectangle_width") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("groove_to_bottom_of_rectangle") / 1000）

                'AAA.半圆弧弯曲（r("rectangle_length") / 1000, r("thickness") / 1000）
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0009()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "9"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩形阵列槽(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))




            End Sub
            Public Sub SM_8LY_314_0010()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "10"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.圆角凸台（r("diameter") / 1000， r("internal_diameter") / 1000， r("thickness") / 1000， r("thickness2") / 1000， r("Fillet") / 1000）
                AAA.圆孔阵列(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"), 1)
                AAA.抽壳（）
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA43(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))


            End Sub
            Public Sub SM_8LY_314_0011()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "11"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)
                AAA.Reverse_circle(r("internal_diameter") / 1000)

                AAA.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                AAA.扇形窗(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("length1") / 1000, r("width1") / 1000, r("x_Fan_spacing") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"), 1)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA43(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))



            End Sub
            Public Sub SM_8LY_314_0012()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "12"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 2)

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0013()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "13"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1")， 2)
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0014()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "14"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1")， 4, r("array_pitch1") / 1000)
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0015()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "15"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))


            End Sub
            Public Sub SM_8LY_314_0016()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "16"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩形拉伸(r("rectangle_length") / 1000， r("rectangle_width") / 1000, r("thickness") / 1000)

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                AAA.one_section_blinds(r("Fan_window_length1") / 1000, r("length1") / 1000, r("width1") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("Y_Array_number1"))

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0017()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "17"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 2)

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0018()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "18"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 2)
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub SM_8LY_314_0019()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "19"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1")， 4, r("array_pitch1") / 1000)
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0020()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "20"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 2)

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))






            End Sub
            Public Sub SM_8LY_314_0021()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "21"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 3, r("array_pitch1") / 1000)

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))






            End Sub
            Public Sub SM_8LY_314_0022()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "22"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)
                AAA.Reverse_circle(r("internal_diameter") / 1000)
                AAA.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                AAA.扇形窗(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("length1") / 1000, r("width1") / 1000, r("x_Fan_spacing") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.SM_DrawingsA32(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub SM_8LY_314_0023()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "23"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()


                AAA.初始设置（0）
                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("hole_length") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.半圆弧弯曲（r("rectangle_length") / 1000, r("thickness") / 1000）
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))


                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))




            End Sub
            Public Sub SM_8LY_314_0024()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "24"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()

                AAA.防护罩(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("thickness") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("x_groove_Array2")， r("y_groove_Array"), r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000, r("Long_partition") / 1000, r("type"), r("max") / 1000， r("x_arry1"), r("x_arry2")， r("y_arry2")， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                      r("Distance8") / 1000， r("Distance9") / 1000)
                AAA.竖向扇形窗（r("rectangle_length") / 1000， r("Fan_length") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000， r("x_arry"), r("Protruding_distance") / 1000， r("thickness") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                       r("Distance8") / 1000， r("Distance9") / 1000）
                AAA.折弯(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Hole_arc_radius") / 1000, r("Side_distance") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End2](r("Parts_drawing_address"))
                AAA.弯曲(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("diameter") / 1000)
                AAA.[End2](r("Parts_drawing_address2"))
                AAA.SM_DrawingsA3(r("Parts_drawing_address"), r("Parts_drawing_address2")， r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.局部视图(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000)
                'AAA.弯曲视图视图(r("Parts_drawing_address2"), 0.2, 0.115)
                AAA.结束(r("Drawings_address"))



            End Sub
            Public Sub SM_8LY_314_0025()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "25"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()

                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))

                AAA.圆孔阵列槽(r("rectangle_length") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000)
                AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Hole_arc_radius") / 1000, r("Side_distance") / 1000)
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End2](r("Parts_drawing_address"))
                AAA.弯曲(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("diameter") / 1000)
                AAA.[End2](r("Parts_drawing_address2"))
                'MsgBox(1)
                AAA.SM_DrawingsA3(r("Parts_drawing_address"), r("Parts_drawing_address2")， r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                'MsgBox(1)
                AAA.结束(r("Drawings_address"))


            End Sub
            Public Sub SM_8LY_314_0026()
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("ID") = "26"
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()

                AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))

                AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))

                AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub safety_mask(Code$)
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=safety_mask;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from safety_mask1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）

                If r("select1") = 1 Then

                    AAA.钣金圆拉伸(r("diameter") / 1000, r("thickness") / 1000)
                    AAA.Reverse_circle(r("internal_diameter") / 1000)

                    AAA.Outer_hole(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                    If r("select2") = 3 Then

                        AAA.Notch_on_circle(r("length1") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array"))
                    ElseIf r("select2") = 2 Then

                        If r("select3") = 3 Then

                            AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))
                        ElseIf r("select3") = 1 Then
                            'AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"), 1)
                        End If
                        'AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))



                        'AAA.抽壳（）

                    ElseIf r("select2") = 1 Then
                        If r("select3") = 1 Then

                            AAA.扇形窗(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("length1") / 1000, r("width1") / 1000, r("x_Fan_spacing") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"), 1)
                        Else

                            AAA.扇形窗(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("length1") / 1000, r("width1") / 1000, r("x_Fan_spacing") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"))
                        End If
                    End If



                ElseIf r("select1") = 2 Then
                    AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                    AAA.矩形凸台圆孔(r("rectangle_length") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                    AAA.折弯(r("length1") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_hole_spacing") / 1000, r("Hole_arc_radius") / 1000, r("Distance_between_hole_and_side") / 1000)


                ElseIf r("select1") = 4 Then
                    If r("select2") = 1 Then
                        AAA.防护罩(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("thickness") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("x_groove_Array2")， r("y_groove_Array"), r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000, r("Long_partition") / 1000, r("type"), r("max") / 1000， r("x_arry1"), r("x_arry2")， r("y_arry2")， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000)

                        AAA.竖向扇形窗（r("rectangle_length") / 1000， r("Fan_length") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000， r("x_arry"), r("Protruding_distance") / 1000， r("thickness") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，）
                    ElseIf r("select2") = 2 Then
                        AAA.防护罩(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("thickness") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("x_groove_Array2")， r("y_groove_Array"), r("y_Distance_between_hole_and_side") / 1000, r("Side_distance") / 1000, r("Hole_arc_radius") / 1000, r("Long_partition") / 1000, r("type"), r("max") / 1000， r("x_arry1"), r("x_arry2")， r("y_arry2")， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                     r("Distance8") / 1000， r("Distance9") / 1000)
                        AAA.竖向扇形窗（r("rectangle_length") / 1000， r("Fan_length") / 1000， r("Fan_width") / 1000， r("x_Fan_spacing") / 1000， r("x_arry"), r("Protruding_distance") / 1000， r("thickness") / 1000， r("Distance1") / 1000， r("Distance2") / 1000， r("Distance3") / 1000， r("Distance4") / 1000， r("Distance5") / 1000， r("Distance6") / 1000， r("Distance7") / 1000，
                                               r("Distance8") / 1000， r("Distance9") / 1000）
                    End If
                    AAA.折弯(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Long_partition") / 1000, r("y_Distance_between_hole_and_side") / 1000, r("Hole_arc_radius") / 1000, r("Side_distance") / 1000)

                ElseIf r("select1") = 5 Then
                    If r("select2") = 2 Then

                        AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1")， 2)
                    ElseIf r("select2") = 4 Then

                        AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1")， 4, r("array_pitch1") / 1000)

                    ElseIf r("select2") = 3 Then
                        AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"), 3, r("array_pitch1") / 1000)
                    Else
                        AAA.矩型凸台(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("Total_length_of_tank") / 1000， r("groove_to_bottom_of_rectangle") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_groove_Array")， r("y_groove_Array")， r("thickness") / 1000, r("coment1"))
                    End If

                    If r("select3") = 1 Then
                        AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                    Else
                        AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"))
                    End If
                    If r("select2") = 1 Then
                        AAA.矩形缺口（r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("length1") / 1000， r("width1") / 1000， r("distance1") / 1000， r("Fillet") / 1000）
                        AAA.槽口（r("Total_length_of_tank") / 1000， r("rectangle_width") / 1000， r("groove_length") / 1000， r("groove_width") / 1000， r("x_groove_spacing") / 1000， r("groove_to_bottom_of_rectangle") / 1000）

                    End If
                    AAA.半圆弧弯曲（r("rectangle_length") / 1000, r("thickness") / 1000）



                ElseIf r("select1") = 6 Then

                    AAA.圆角凸台（r("diameter") / 1000， r("internal_diameter") / 1000， r("thickness") / 1000， r("thickness2") / 1000， r("Fillet") / 1000）
                    AAA.圆孔阵列(r("Contour_circle_diameter") / 1000, r("Array_circle_diameter") / 1000, r("Array_circle_number"), r("coment1"), r("coment2"))
                    AAA.Three_section_blinds(r("Fan_window_length1") / 1000, r("Fan_window_length2") / 1000, r("x_distance") / 1000, r("length1") / 1000, r("width1") / 1000, r("length2") / 1000, r("width2") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_spacing2") / 1000, r("y_Fan_Array1"), r("y_Fan_Array2"), r("Y_Array_number1"), r("Y_Array_number2"), 1)
                    AAA.抽壳（）

                ElseIf r("select1") = 7 Then

                    AAA.矩形拉伸(r("rectangle_length") / 1000， r("rectangle_width") / 1000, r("thickness") / 1000)

                    AAA.平底槽型孔(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("y_hole_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("hole_length") / 1000， r("Hole_arc_radius") / 1000， r("x_Hole_Array")， r("y_Hole_Array"), r("x_hole_spacing") / 1000)
                    AAA.one_section_blinds(r("Fan_window_length1") / 1000, r("length1") / 1000, r("width1") / 1000, r("y_Fan_spacing1") / 1000, r("y_Fan_Array1"), r("Y_Array_number1"))
                End If
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）

                If r("select1") = 4 Then
                    AAA.[End2](r("Parts_drawing_address"))
                    AAA.弯曲(r("rectangle_length") / 1000， r("rectangle_width") / 1000， r("diameter") / 1000)
                    AAA.[End2](r("Parts_drawing_address2"))
                Else
                    AAA.[End](r("Parts_drawing_address"))
                End If
                If r("select1") = 1 Or r("select1") = 5 Or r("select1") = 7 Then

                    If r("select3") = 1 Then
                        AAA.SM_DrawingsA43(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                    ElseIf r("select3") = 2 Then

                        AAA.SM_DrawingsA32(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                    Else
                        AAA.SM_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                    End If

                ElseIf r("select1") = 2 Then
                    AAA.SM_DrawingsA42(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))


                ElseIf r("select1") = 4 Or r("select1") = 6 Then
                    AAA.SM_DrawingsA3(r("Parts_drawing_address"), r("Parts_drawing_address2"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                End If
                AAA.结束(r("Drawings_address"))


            End Sub
            Public Sub Cylinder(Code$)
                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Cylinder;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Cylinder1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）

                AAA.筒体矩形钣金(r("diameter2") / 1000， r("width1") / 1000， r("thickness") / 1000)

                If r("select1") = 2 Then
                    AAA.筒体矩形切除（r("diameter2") / 1000， r("width1") / 1000， r("hold_long") / 1000， r("hold_wight") / 1000， r("hold_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Fillet") / 1000， r("hold_number")）
                    If r("select2") = 1 Then
                        AAA.筒体圆切除(r("diameter2") / 1000， r("width1") / 1000， r("x_Distance_between_arc_and_side") / 1000， r("y_Distance_between_arc_and_side") / 1000， r("diameter") / 1000)
                    ElseIf r("select2") = 2 Then

                        AAA.矩形切除（r("diameter2") / 1000， r("width1") / 1000， r("hold_long2") / 1000， r("hold_wight2") / 1000， r("hold_spacing2") / 1000， r("Distance_between_hole_and_side2") / 1000， r("Fillet2") / 1000， r("hold_number2")）

                    ElseIf r("select2") = 3 Then
                        AAA.矩形切除2（r("width1") / 1000， r("hold_long2") / 1000， r("hold_wight2") / 1000， r("Distance_between_hole_and_side2") / 1000， r("Fillet2") / 1000）
                    End If
                ElseIf r("select1") = 3 Then
                    AAA.矩形切除（r("diameter2") / 1000， r("width1") / 1000， r("hold_long") / 1000， r("hold_wight") / 1000， r("hold_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Fillet") / 1000， r("hold_number")）
                    AAA.筒体槽口(r("diameter2") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000, r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_Distance_between_groove_and_side") / 1000， r("y_Distance_between_groove_and_side") / 1000, r("x_Arry")， r("y_Arry"))
                ElseIf r("select1") = 4 Then
                    AAA.矩形切除（r("diameter2") / 1000， r("width1") / 1000， r("hold_long") / 1000， r("hold_wight") / 1000， r("hold_spacing") / 1000， r("Distance_between_hole_and_side") / 1000， r("Fillet") / 1000， r("hold_number")）
                    AAA.筒体槽口(r("diameter2") / 1000， r("width1") / 1000， r("groove_length") / 1000， r("groove_width") / 1000, r("x_groove_spacing") / 1000， r("y_groove_spacing") / 1000， r("x_Distance_between_groove_and_side") / 1000， r("y_Distance_between_groove_and_side") / 1000, r("x_Arry")， r("y_Arry"))
                    AAA.筒体槽口(r("diameter2") / 1000， r("width1") / 1000， r("groove_length2") / 1000， r("groove_width2") / 1000, r("x_groove_spacing2") / 1000， r("y_groove_spacing2") / 1000， r("x_Distance_between_groove_and_side2") / 1000， r("y_Distance_between_groove_and_side2") / 1000, r("x_Arry2")， r("y_Arry2"))

                End If



                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                If r("select1") = 3 Or r("select1") = 4 Then
                    AAA.[End2](r("Parts_drawing_address"))
                End If
                AAA.筒体卷曲（r("width1") / 1000， r("diameter1") / 1000， r("thickness") / 1000）
                AAA.筒体标注(r("diameter1") / 1000， r("diameter2") / 1000， r("width1") / 1000， r("thickness") / 1000)

                If r("select1") = 3 Or r("select1") = 4 Then
                    AAA.[End2](r("Parts_drawing_address2"))
                Else

                    AAA.[End](r("Parts_drawing_address"))
                End If

                If r("select1") = 3 Or r("select1") = 4 Then
                    AAA.CY_DrawingsA3(r("Parts_drawing_address2"), r("Parts_drawing_address")， r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value")， r("diameter2") / 1000)

                Else

                    AAA.CY_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value")， r("diameter2") / 1000)
                End If
                'AAA.CY_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value")， r("diameter2") / 1000)
                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub Tie_rod(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Tie_rod;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Tie_rod1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）

                If r("select1") = 1 Then
                    AAA.绑线棒（r("diameter1") / 1000， r("diameter2") / 1000， r("diameter3") / 1000， r("diameter4") / 1000， r("long1") / 1000， r("long2") / 1000， r("wight") / 1000， r("angle")）

                ElseIf r("select1") = 2 Then
                    AAA.绑线棒2(r("diameter1") / 1000， r("diameter2") / 1000， r("long1") / 1000， r("wight") / 1000)

                End If
                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）

                AAA.[End](r("Parts_drawing_address"))

                AAA.TR_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub Tendons(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Tendons;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Tendons1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）


                AAA.矩形拉伸（r("long1") / 1000， r("wight") / 1000， r("high") / 1000）

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）

                AAA.[End](r("Parts_drawing_address"))
                AAA.TR_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))

                AAA.结束(r("Drawings_address"))

            End Sub
            Public Sub round_table(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=round_table;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from round_table1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.Boss(r("diameter1") / 1000， r("diameter2") / 1000， r("high") / 1000)

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）
                AAA.[End](r("Parts_drawing_address"))
                AAA.RT_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub Cushion(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Cushion;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Cushion1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩形拉伸（r("long1") / 1000， r("wight") / 1000， r("high") / 1000）

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）

                AAA.[End](r("Parts_drawing_address"))
                AAA.TR_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub Machine_feet(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Machine_feet;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Machine_feet1", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop

                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                If r("select2") = 1 Then

                    AAA.Supporting_board(r("length") / 1000， r("right_height") / 1000， r("right_angle"), r("left_height") / 1000， r("left_angle")， r("thick") / 1000, r("House_shell_diameter") / 1000, r("select1"), r("Chamfer") / 1000)
                ElseIf r("select2") = 2 Then

                    AAA.Supporting_board2(r("length") / 1000， r("length2") / 1000， r("right_height") / 1000， r("right_angle"), r("left_height") / 1000， r("left_angle")， r("thick") / 1000, r("House_shell_diameter") / 1000, r("select1"))
                End If

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）


                AAA.[End](r("Parts_drawing_address"))
                AAA.TR_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))



            End Sub
            Public Sub Foot_scale(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=Foot_scale;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from Foot_scale", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.初始设置（0）
                AAA.矩形拉伸（r("long1") / 1000， r("wight") / 1000， r("high") / 1000）

                AAA.设置属性（r("name"), r("Code"), r("material")）
                AAA.设置材料（1）

                AAA.[End](r("Parts_drawing_address"))
                AAA.TR_DrawingsA4(r("Parts_drawing_address"), r("material"), r("company"), r("name"), r("Code"), r("skills_requirement"), r("Proportional_value"))
                AAA.结束(r("Drawings_address"))
            End Sub
            Public Sub h_c_1(id#)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_1", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = id
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_1(dr（"thick"） / 1000, dr（"width"） / 1000, dr（"length"） / 1000, dr（"angle"）, dr（"r"） / 1000, dr（"d"） / 1000, dr（"fillet"） / 1000)
                aaa.设置属性（dr("name"), dr("Code"), dr("material")）
                aaa.End(dr（"dz1"）)

                'Dim bbb As New parts
                aaa.H_c_1(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"))
                aaa.End(dr（"dz2"）)
            End Sub
            Public Sub h_c_2()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_2", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_2(dr（"width"） / 1000, dr（"length"） / 1000, dr（"thick"） / 1000, dr（"r"） / 1000, dr（"d"） / 1000, dr（"arc_l"） / 1000, dr（"fillet"） / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)


                aaa.H_c_1(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"))
                aaa.End(dr（"dz2"）)

            End Sub
            Public Sub h_c_5()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_5", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_5(dr（"length1"） / 1000, dr（"length2"） / 1000, dr（"width1"） / 1000, dr（"width2"） / 1000, dr（"r"） / 1000, dr（"r2"） / 1000, dr（"thick"） / 1000, dr（"fillet"） / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)


                aaa.H_c_1(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"))
                aaa.End(dr（"dz2"）)

            End Sub
            Public Sub h_c_6()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_6", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_6(dr（"length1"） / 1000, dr（"length2"） / 1000, dr（"width1"） / 1000, dr（"width2"） / 1000, dr（"r"） / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)


                aaa.H_c_1(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"))
                aaa.End(dr（"dz2"）)

            End Sub
            Public Sub h_c_3()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_3", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_3(dr（"thick"） / 1000, dr（"width"） / 1000, dr（"length"） / 1000, dr（"angle"）, dr（"r"） / 1000, dr（"d"） / 1000, dr（"fillet"） / 1000, dr（"d_l"） / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)

                'Dim bbb As New parts
                aaa.H_c_1(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"))
                aaa.End(dr（"dz2"）)
            End Sub
            Public Sub h_c_4()
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from h_c_4", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.H_c_4(dr("base_board_length") / 1000， dr("width") / 1000, dr("hole_board_length") / 1000, dr("fillet_radius") / 1000， dr("thick") / 1000,
                                   dr("slanted_board_length") / 1000, dr("circle_edge_distance") / 1000, dr("diameter") / 1000, dr("slanted_angle"))

                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)
                'Dim bbb As New parts
                aaa.H_c_4(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness")， dr("circle_edge_distance") / 1000)
                aaa.End(dr（"dz2"）)


            End Sub
            Public Sub rear_h_c(Optional id% = 1)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=hanging_climbing;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from rear_h_c", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = id
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.Rear_h_c(dr("length") / 1000, dr("width") / 1000, dr("height1") / 1000, dr("height2") / 1000, dr("height3") / 1000, dr("thick") / 1000, dr("band_fillet_radius") / 1000,
                             dr("base_circle_edge_distance") / 1000, dr("base_center_distance") / 1000, dr("base_circle_diameter") / 1000, dr("top_circle_edge_distance") / 1000,
                             dr("top_circle_diameter") / 1000, dr("board_fillet_radius") / 1000, dr("chamfer_length") / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)

                'Dim bbb As New parts
                aaa.Rear_h_c_drw(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"),
                          dr("width") / 1000, dr("height1") / 1000, dr("height2") / 1000, dr("height3") / 1000, dr("chamfer_length") / 1000, dr("chamfer_label"))
                aaa.End(dr（"dz2"）)
            End Sub
            Public Sub flange(Optional id% = 1)
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=flange;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from flange1", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = id
                    dr.Read()
                Loop

                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()
                aaa.Flange(dr（"outer_diameter"） / 1000, dr（"thick"） / 1000, dr（"resection_diameter"） / 1000, dr（"step_diameter"） / 1000, dr（"step_thick"） / 1000, dr("chamfer") / 1000, dr("down_cut") / 1000)
                aaa.设置属性(dr("name"), dr("code"), dr("material"))
                aaa.End(dr（"dz1"）)
                aaa.Flange_drw(dr("company"), dr("name"), dr("material"), dr("code"), dr("dz1"), dr("proportion"), dr("skills_requirement"), dr("roughness"), dr（"outer_diameter"） / 1000, dr（"step_diameter"） / 1000)
                aaa.End(dr（"dz2"）)
            End Sub
            Public Sub Additive(code$)

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=additive;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from additive", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("code") = code
                    r.Read()
                Loop
                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()

                aaa.初始设置(0)
                aaa.Additive(r("length") / 1000, r("angle"), r("rop_circle_radius") / 1000, r("base_circle_diameter") / 1000, r("chamfer_length") / 1000, r("chamfer_angle"), r("thick") / 1000)
                aaa.设置属性(r("name"), r("code"), r("material"))
                aaa.End(r("Parts_drawing_address"))

                aaa.Additive_A4pDrw(r("Parts_drawing_address"), r("Scale2"), 1, 1, 0, r("name"), r("material"), r("code"),
                                               90 / 1000, 160 / 1000, 170 / 1000, 160 / 1000, 0, 0,
                                               r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2"), r("skills_requirement3"), r("skills_requirement4"),
                                               r("roughness"))
                aaa.End(r("Drawings_address"))

            End Sub
            Public Sub installation_platform(code$)

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=installation_platform;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from installation_platform", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("code") = code
                    r.Read()
                Loop
                Dim aaa As New Module_fubin.all
                aaa.Part_initialization()

                aaa.初始设置(0)
                If r("select1") = 1 Then
                    aaa.Front_and_rear_panel_installation_platform(r("length") / 1000， r("width") / 1000, r("height") / 1000, r("fillet_radius") / 1000， r("thick") / 1000)
                ElseIf r("select1") = 2 Then
                    aaa.Outlet_board_installation_platform(r("length") / 1000， r("width") / 1000, r("height") / 1000, r("fillet_radius") / 1000， r("thick") / 1000)
                ElseIf r("select1") = 3 Then
                    aaa.installation_platform(r("width") / 1000， r("length") / 1000, r("height") / 1000, r("fillet_radius") / 1000， r("thick") / 1000)
                End If
                aaa.设置属性(r("name"), r("code"), r("material"))
                aaa.End(r("Parts_drawing_address"))
                If r("select1") = 1 Then
                    aaa.Front_and_rear_panel_installation_platform_A4pDrw(r("Parts_drawing_address"), r("Scale2"), 1, 0, 1, r("name"), r("material"), r("code"),
                                                                          120 / 1000, 220 / 1000, 0, 0, 120 / 1000, 150 / 1000,
                                                                           r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2"), r("skills_requirement3"), r("skills_requirement4"),
                                                                            r("roughness"))
                ElseIf r("select1") = 2 Then
                    aaa.Outlet_board_installation_platform_A4pDrw(r("Parts_drawing_address"), r("Scale2"), 1, 0, 1, r("name"), r("material"), r("code"),
                                                                         120 / 1000, 220 / 1000, 0, 0, 120 / 1000, 150 / 1000,
                                                                         r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2"), r("skills_requirement3"), r("skills_requirement4"),
                                                                        r("thick") / 1000, r("height") / 1000, r("roughness"))

                ElseIf r("select1") = 3 Then
                    aaa.Front_and_rear_panel_installation_platform_A4pDrw(r("Parts_drawing_address"), r("Scale2"), 1, 0, 1, r("name"), r("material"), r("code"),
                                                                          120 / 1000, 220 / 1000, 0, 0, 120 / 1000, 150 / 1000,
                                                                           r("skills_requirement_title"), r("skills_requirement1"), r("skills_requirement2"), r("skills_requirement3"), r("skills_requirement4"),
                                                                            r("roughness"))

                End If
                aaa.End(r("Drawings_address"))



            End Sub
            Public Sub aaa1(Code$)

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=support_block_assembly;pooling=false")
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                '//打开数据库连接
                mysqlcon.Open()
                mysqlcom = New MySqlCommand("select * from support_block_assembly", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = Code
                    r.Read()
                Loop
                Dim AAA As New Module_fubin.all

                AAA.A4PPP(r("Parts_drawing_address"), r("company"), r("name"), r("Code"), r("skills_requirement"))

            End Sub
            Public Sub 定子冲片()
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.Arc_boss(0.12, 0.01)
                AAA.反向圆切除(0.067， "H8", "")
                AAA.槽型(0.067, 0.009, 0.0115, 0.0005, 0.0072, 0.0025, 30, 18)
                AAA.外部槽楔(0.12, 0.01534, 0.0149, 0.003, 0.0025, 0.0015, 15)
            End Sub
            Public Sub 定子压圈()
                Dim AAA As New Module_fubin.all
                AAA.Part_initialization()
                AAA.Arc_boss(0.119, 0.002)
                AAA.反向圆切除(0.098)
                AAA.压圈槽楔(0.119, 0.016, 0.0025, 4)
            End Sub




        End Class
        Public Class Parts_drawing
            Public Sub 定子铁芯装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.定子铁芯装配()
            End Sub
            Public Sub 带绕组定子铁心装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.带绕组定子铁心装配()
            End Sub

            Public Sub 励磁机定子铁心装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.励磁机定子铁心装配()
            End Sub
            Public Sub 带绕组励磁机定子铁心装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.带绕组励磁机定子铁心装配()
            End Sub
            Public Sub 励磁机定子装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.励磁机定子装配()
            End Sub
            Public Sub 机座装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座装配()
            End Sub
            Public Sub 定子装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.定子装配()
            End Sub
            Public Sub 电机装配()
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.电机总装配()
            End Sub


            Public Sub 机座180装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号180装配(Code)
            End Sub
            Public Sub 机座250装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号250装配(Code)
            End Sub
            Public Sub 机座280装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号280装配(Code)

            End Sub
            Public Sub 机座355装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号355装配(Code)
            End Sub
            Public Sub 机座400装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号400装配(Code)
            End Sub

            Public Sub 机座200装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.机座号200装配(Code)
            End Sub
            Public Sub 转子280装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.转子280装配(Code)
            End Sub
            Public Sub 转子200装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.转子200装配(Code)
            End Sub
            Public Sub 转子180装配(Code$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.转子180装配(Code)
            End Sub
            Public Sub 总装配355(code1$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.main_frame_355_assembly(code1$)
            End Sub
            Public Sub 总装配250(code1$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.main_frame_250_assembly(code1$)
            End Sub
            Public Sub 总装配280(code1$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.main_frame_280_assembly(code1$)
            End Sub
            Public Sub 总装配180(code1$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.main_frame_180_assembly(code1$)
            End Sub
            Public Sub 总装配200(code1$)
                Dim aaa As New Module_fubin.all
                aaa.装配图初始化()
                aaa.main_frame_200_assembly(code1$)
            End Sub
            Public Sub 工程图(ID$)
                Dim aaa As New Module_fubin.all
                aaa.工程图（ID）
            End Sub

            Public Sub 轴180(localhost$, database$, tabledase$, code$)
                Dim aaa As New Module_fubin.all
                aaa.open_initialization("E:\works\Motor_template_parts_library\rotor_shaft\001")
                aaa.轴180尺寸(localhost$, database$, tabledase$, code$)


            End Sub

            Public Sub 轴250(localhost$, database$, tabledase$, code$)
                Dim aaa As New Module_fubin.all
                aaa.open_initialization("E:\works\Motor_template_parts_library\rotor_shaft\003")
                aaa.轴250尺寸(localhost$, database$, tabledase$, code$)


            End Sub


            Public Sub 定子冲片(localhost$, database$, tabledase$, code$)
                Dim aaa As New Module_fubin.all
                aaa.open_initialization("E:\\works\\Motor_template_parts_library\\stator_lamination\\001")
                aaa.定子冲片尺寸驱动(localhost$, database$, tabledase$, code$)


            End Sub

            Public Sub 定子端环(localhost$, database$, tabledase$, code$)
                Dim aaa As New Module_fubin.all
                aaa.open_initialization("E:\\works\\Motor_template_parts_library\\stator_pressing_ring\\001")
                aaa.定子端环尺寸驱动(localhost$, database$, tabledase$, code$)


            End Sub

            Public Sub 扣片(localhost$, database$, tabledase$, code$)
                Dim aaa As New Module_fubin.all
                aaa.open_initialization("E:\\works\\Motor_template_parts_library\\clasp\\001")
                aaa.扣片尺寸驱动(localhost$, database$, tabledase$, code$)


            End Sub




        End Class
    End Class
End Class