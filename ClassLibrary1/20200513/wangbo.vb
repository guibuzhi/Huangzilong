Imports System.Math
Imports MySql.Data.MySqlClient
Imports SldWorks
Imports SwConst


Public Class Module_wangbo
    Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")
    Dim OpenDoc7 As ModelDoc2
    Dim NewDocument As ModelDoc2
    Dim part As ModelDoc2
    Dim SkeManger As SketchManager
    Dim FeatureManager As FeatureManager
    Dim Dimension As Dimension
    Dim DisplayDimension As DisplayDimension
    Dim Getsketch As Sketch
    Dim SketchSegments As Object
    Dim SketchSegment As SketchSegment
    Dim Feature As Feature
    Dim points As SketchPoint
    Dim SelectionMgr As SelectionMgr
    Dim DimensionTolerance As DimensionTolerance
    Dim AxisZ As Feature
    Dim Anno As Annotation
    Dim r As MySqlDataReader
    Dim AssemblyTitle As String
    Dim AssemblyDoc As AssemblyDoc
    Dim sl, slring, clasp, allstator_core_assembly As Object()
    Dim sl_split, ring_split, clasp_split, allstator_core_assembly_split As Object
    Dim errors, longwarnings As Long
    Dim Dimension1, Dimension2, Dimension3, Dimension4, Dimension5, Dimension6, Dimension7, Dimension8 As DisplayDimension
    Dim sketch_name_of_1_6_Partial_view_line As Sketch '1/6冲片圆顶槽局部视图线所在草图
    Dim feature_sno16pvl As Feature
    Dim sketch_name_of_1_6_Partial_view_Extra_note As Sketch '1/6冲片圆顶槽局部视图多余注释所在草图
    Dim feature_sno16pven As Feature
    Dim sketch_name_of_1_6_both_cut_Extra_note As Sketch '1/6冲片凸台两侧切割多余注释所在草图
    Dim feature_sno1bcen As Feature
    Dim FTGsketch, 槽底突起型槽sketch, RHsketch, OTPsketch, IHTsketch, UNFarc_sketch, UNFsketch, IPGsketch, IRGsketch, RHCircle_Base_sketch As Feature

    Dim mysqlcon As MySqlConnection
    Dim mysqlcom As MySqlCommand
    Dim read As MySqlDataReader

    Dim ID As Integer = 1


    Public Function inputid(Optional 修改% = 1, Optional 继承% = 0) As String
        If 继承 = 0 Then
            ID = 修改
            inputid = ID.ToString
        Else
            inputid = ID.ToString
        End If

    End Function
    Public Sub part_initialization()

        OpenDoc7 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
        NewDocument = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
        part = swapp.ActiveDoc
        SkeManger = part.SketchManager
        FeatureManager = part.FeatureManager
        SelectionMgr = part.SelectionManager
        AxisZ = AXIS("Z")
    End Sub
    Public Function Mdd() As String
        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim dr As MySqlDataReader
        Dim house_number As String

        mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=baserequires;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from optimize_stator_parameter ", mysqlcon)
        dr = mysqlcom.ExecuteReader()
        dr.Read()
        house_number = dr("house_number")
        dr.Close()
        Mdd = house_number
    End Function
    Public Function allsl_mysql() As String()
        Dim PythonUtils As Object
        PythonUtils = CreateObject("SL_Mysql_methods")
        sl = PythonUtils.insert_date("Stator_lamination", "all_domeslot_lamination", "baserequires", "optimize_stator_parameter")
        allsl_mysql = {sl(0), sl(1)}
    End Function
    Public Function allsring_mysql(code$) As String()
        Dim PythonUtils As Object
        PythonUtils = CreateObject("S_ring_Mysql_methods")
        slring = PythonUtils.insert_date("ly_synchronous_motor", "stator_pressing_ring", "Stator_lamination", "all_domeslot_lamination", code)
        allsring_mysql = {slring(0), slring(1)}
    End Function
    Public Function allclasp_mysql(sl_code$, slring_code$) As String()
        Dim PythonUtils As Object
        PythonUtils = CreateObject("clasp_Mysql_methods")
        clasp = PythonUtils.insert_date("ly_synchronous_motor", "clasp", "Stator_lamination", "all_domeslot_lamination", "stator_pressing_ring", sl_code, slring_code)
        allclasp_mysql = {clasp(0), clasp(1)}
    End Function
    Public Function allstator_core_assembly_mysql(Part1_Code$, Part2_Code$, Part3_Code$) As String()
        Dim PythonUtils As Object
        PythonUtils = CreateObject("stator_core_assembly_methods")
        allstator_core_assembly = PythonUtils.insert_date("ly_synchronous_motor", "stator_core_assembly", Part1_Code, Part2_Code, Part3_Code)
        allstator_core_assembly_mysql = {allstator_core_assembly(0), allstator_core_assembly(1)}
    End Function









    Public Function 查询当前数据库所有表总行数(地址$, database$) As Integer
        连接数据库(地址, database$)
        新建查询("show tables")
        'Dim aa As Integer = 查询表行数()
        '新建查询("show tables")
        查询当前数据库所有表总行数 = 查询数据库总行数()
    End Function

    Public Function 取新号(地址$, database$, 总行%) As String
        Dim aa As String()
        连接数据库(地址, database$)
        新建查询("show tables")
        read.Read()
        read.GetString(0)
        aa = 提取最新数据(read.GetString(0), "code")
        aa(0) = Left(aa(0), aa(0).Length - 3) + Right(("000" + 总行.ToString), 3)
        取新号 = aa(0)
    End Function

    Public Sub 插入一行复制数据(table_name$) '更新id

        新建查询("select * from " + table_name)
        Dim a As Integer
        a = 查询表行数()
        新建查询("select * from " + table_name)
        Dim aa As String()
        aa = 复制一行数据()
        Dim aaa As String
        aaa = 字符串数组转换(aa, a)
        mysqlcom = New MySqlCommand("insert into " + table_name + " values(" + aaa + ")", mysqlcon)
        read.Close()
        mysqlcom.ExecuteNonQuery() ';//插入 删除 返回值是数据库中受影响的数据的行数
        mysqlcon.Clone()
        'MsgBox(6666)

    End Sub
    Public Function 提取ID数据(table_name$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "") As String()
        新建查询("select * from " + table_name + " where id = " + inputid(继承:=1))
        read.Read()
        'MsgBox(read(字段1))
        Dim aa As String()
        Dim i As Integer = 0
        'MsgBox(字段1)
        If Not 字段1 = "" Then
            aa = {(read(字段1))}
        End If
        If Not 字段2 = "" Then
            aa = aa.Concat({(read(字段2))}).ToArray
        End If
        If Not 字段3 = "" Then
            aa = aa.Concat({(read(字段3))}).ToArray
        End If
        If Not 字段4 = "" Then
            aa = aa.Concat({(read(字段4))}).ToArray
        End If
        If Not 字段5 = "" Then
            aa = aa.Concat({(read(字段5))}).ToArray
        End If
        If Not 字段6 = "" Then
            aa = aa.Concat({(read(字段6))}).ToArray
        End If
        If Not 字段7 = "" Then
            aa = aa.Concat({(read(字段7))}).ToArray
        End If
        If Not 字段8 = "" Then
            aa = aa.Concat({(read(字段8))}).ToArray
        End If
        If Not 字段9 = "" Then
            aa = aa.Concat({(read(字段9))}).ToArray
        End If
        If Not 字段10 = "" Then
            aa = aa.Concat({(read(字段10))}).ToArray
        End If
        If Not 字段11 = "" Then
            aa = aa.Concat({(read(字段11))}).ToArray
        End If
        If Not 字段12 = "" Then
            aa = aa.Concat({(read(字段12))}).ToArray
        End If
        If Not 字段13 = "" Then
            aa = aa.Concat({(read(字段13))}).ToArray
        End If

        If Not 字段14 = "" Then
            aa = aa.Concat({(read(字段14))}).ToArray
        End If
        If Not 字段15 = "" Then
            aa = aa.Concat({(read(字段15))}).ToArray
        End If
        If Not 字段16 = "" Then
            aa = aa.Concat({(read(字段16))}).ToArray
        End If
        If Not 字段17 = "" Then
            aa = aa.Concat({(read(字段17))}).ToArray
        End If
        If Not 字段18 = "" Then
            aa = aa.Concat({(read(字段18))}).ToArray
        End If
        If Not 字段19 = "" Then
            aa = aa.Concat({(read(字段19))}).ToArray
        End If
        If Not 字段20 = "" Then
            aa = aa.Concat({(read(字段20))}).ToArray
        End If
        'Next
        'MsgBox(aa(0))
        'MsgBox(aa(1))
        提取ID数据 = aa
        'MsgBox(read("id"))
    End Function
    Public Sub mysql_new(database$， table$, Optional Code$ = "", Optional server$ = "localhost")
        mysqlcon = New MySqlConnection("server=" + server + ";userid=root" & ";password=123456" & ";database=" + database + ";pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        read = mysqlcom.ExecuteReader()
        'read.GetValues(values1)

        read.Read()
        If Code$ = "" Then
            Do Until read.GetString("id") = 1
                read.Read()
            Loop
        Else
            Do Until read.GetString("Code") = Code
                read.Read()
            Loop

        End If

    End Sub
    Public Function 提取thickness(database$, table_name$, code$, dz$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "") As String()
        mysql_new(database, table_name, code, dz)
        提取thickness = {(read("thickness"))}
        'MsgBox(read("id"))
    End Function

    Public Function 提取最新数据(table_name$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "") As String()
        新建查询("select * from " + table_name + " order by id desc limit 1")
        read.Read()
        'MsgBox(read(字段1))
        Dim aa As String()
        Dim i As Integer = 0
        'MsgBox(字段1)
        If Not 字段1 = "" Then
            aa = {(read(字段1))}
        End If
        If Not 字段2 = "" Then
            aa = aa.Concat({(read(字段2))}).ToArray
        End If
        If Not 字段3 = "" Then
            aa = aa.Concat({(read(字段3))}).ToArray
        End If
        If Not 字段4 = "" Then
            aa = aa.Concat({(read(字段4))}).ToArray
        End If
        If Not 字段5 = "" Then
            aa = aa.Concat({(read(字段5))}).ToArray
        End If
        If Not 字段6 = "" Then
            aa = aa.Concat({(read(字段6))}).ToArray
        End If
        If Not 字段7 = "" Then
            aa = aa.Concat({(read(字段7))}).ToArray
        End If
        If Not 字段8 = "" Then
            aa = aa.Concat({(read(字段8))}).ToArray
        End If
        If Not 字段9 = "" Then
            aa = aa.Concat({(read(字段9))}).ToArray
        End If
        If Not 字段10 = "" Then
            aa = aa.Concat({(read(字段10))}).ToArray
        End If
        If Not 字段11 = "" Then
            aa = aa.Concat({(read(字段11))}).ToArray
        End If
        If Not 字段12 = "" Then
            aa = aa.Concat({(read(字段12))}).ToArray
        End If
        If Not 字段13 = "" Then
            aa = aa.Concat({(read(字段13))}).ToArray
        End If

        If Not 字段14 = "" Then
            aa = aa.Concat({(read(字段14))}).ToArray
        End If
        If Not 字段15 = "" Then
            aa = aa.Concat({(read(字段15))}).ToArray
        End If
        If Not 字段16 = "" Then
            aa = aa.Concat({(read(字段16))}).ToArray
        End If
        If Not 字段17 = "" Then
            aa = aa.Concat({(read(字段17))}).ToArray
        End If
        If Not 字段18 = "" Then
            aa = aa.Concat({(read(字段18))}).ToArray
        End If
        If Not 字段19 = "" Then
            aa = aa.Concat({(read(字段19))}).ToArray
        End If
        If Not 字段20 = "" Then
            aa = aa.Concat({(read(字段20))}).ToArray
        End If
        'Next
        'MsgBox(aa(0))
        'MsgBox(aa(1))
        提取最新数据 = aa
        'MsgBox(read("id"))
    End Function

    Public Function 更新数据(table_name$, Optional 字段1$ = "", Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "",
                             Optional 字段16$ = "", Optional 字段17$ = "", Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "", Optional 字段21$ = "", Optional 字段22$ = "", Optional 字段23$ = "", Optional value1$ = "", Optional value2$ = "",
                        Optional value3$ = "", Optional value4$ = "", Optional value5$ = "", Optional value6$ = "", Optional value7$ = "", Optional value8$ = "", Optional value9$ = "", Optional value10$ = "",
                        Optional value11$ = "", Optional value12$ = "", Optional value13$ = "", Optional value14$ = "", Optional value15$ = "", Optional value16$ = "", Optional value17$ = "", Optional value18$ = "",
                             Optional value19$ = "", Optional value20$ = "", Optional value21$ = "", Optional value22$ = "", Optional value23$ = "") As String()

        'If Not value0 = "" Then
        '    mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段0 + "='" + value0 + "' order by id desc limit 1", mysqlcon)
        '    read.Close()
        '    mysqlcom.ExecuteNonQuery()
        'End If

        Dim aa As String()

        If Not value1 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段1 + "='" + value1 + "' order by id desc limit 1", mysqlcon)
            read.Close()
            mysqlcom.ExecuteNonQuery()
            'aa = {(value1)}
        End If
        If Not value2 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段2 + "='" + value2 + "' order by id desc limit 1", mysqlcon)
            'read.Close()
            mysqlcom.ExecuteNonQuery()
            aa = {(value2)}
        End If
        If Not value3 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段3 + "='" + value3 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value3)}).ToArray
        End If
        If Not value4 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段4 + "='" + value4 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value4)}).ToArray
        End If
        If Not value5 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段5 + "='" + value5 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value5)}).ToArray
        End If
        If Not value6 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段6 + "='" + value6 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value6)}).ToArray
        End If
        If Not value7 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段7 + "='" + value7 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value7)}).ToArray
        End If
        If Not value8 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段8 + "='" + value8 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value8)}).ToArray
        End If
        If Not value9 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段9 + "='" + value9 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value9)}).ToArray
        End If
        If Not value10 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段10 + "='" + value10 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value10)}).ToArray
        End If
        If Not value11 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段11 + "='" + value11 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value11)}).ToArray
        End If
        If Not value12 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段12 + "='" + value12 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value12)}).ToArray
        End If
        If Not value13 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段13 + "='" + value13 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value13)}).ToArray
        End If
        If Not value14 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段14 + "='" + value14 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value14)}).ToArray
        End If
        If Not value15 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段15 + "='" + value15 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value15)}).ToArray
        End If
        If Not value16 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段16 + "='" + value16 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value16)}).ToArray
        End If
        If Not value17 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段17 + "='" + value17 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value17)}).ToArray
        End If
        If Not value18 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段18 + "='" + value18 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value18)}).ToArray
        End If
        If Not value19 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段19 + "='" + value19 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value19)}).ToArray
        End If
        If Not value20 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段20 + "='" + value20 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value20)}).ToArray
        End If
        If Not value21 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段21 + "='" + value21 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value21)}).ToArray
        End If
        If Not value22 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段22 + "='" + value22 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value22)}).ToArray
        End If
        If Not value23 = "" Then
            mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段23 + "='" + value23 + "' order by id desc limit 1", mysqlcon)
            mysqlcom.ExecuteNonQuery()
            aa = aa.Concat({(value23)}).ToArray
        End If


        'mysqlcom = New MySqlCommand("update " + table_name + " set " + 字段1 + "='" + value1 + "' order by id desc limit 1", mysqlcon)
        'read.Close()
        mysqlcom.ExecuteNonQuery() ';//插入 删除 返回值是数据库中受影响的数据的行数

        更新数据 = aa

    End Function

    Public Function stator_lamination_mysql(host$, alihost$, 设计组table_name$) As String()

        连接数据库(host$, "stator_lamination")
        插入一行复制数据("all_domeslot_lamination")

        mysqlcon.Close()
        连接数据库(alihost$, "baserequires")
        Dim aa As String()
        aa = 提取ID数据(设计组table_name, "D1a", "D1i", "Z1", "lt1", "bs01", "bs11", "Rs1", "hs01", "hs11", "hs21")


        Dim bb%
        bb = 查询当前数据库所有表总行数(host$, "stator_lamination")
        Dim newcode$
        newcode = 取新号(host$, "stator_lamination", bb)

        mysqlcon.Close()
        连接数据库(host$, "stator_lamination")
        aa = 更新数据(table_name:="all_domeslot_lamination",
                      字段1:="code", value1:=newcode,
                      字段2:="diameter", value2:=aa(0),
                      字段3:="inside_diameter", value3:=aa(1),
                      字段4:="Groove_number", value4:=aa(2),
                      字段5:="thickness", value5:=aa(3),
                      字段6:="Groove_Bottom_Width", value6:=aa(4),
                      字段7:="Bottom_tip_width", value7:=aa(5),
                      字段8:="Dome_Radius", value8:=aa(6),
                      字段9:="Groove_Bottom_Short_Hight", value9:=aa(7),
                      字段10:="Groove_Bottom_Long_Hight", value10:=aa(8) + +aa(7),
                      字段11:="Dome_center_height", value11:=aa(9),
                      字段12:="scale_d", value12:=Round(aa(0) / 100),
                      字段13:="old_code", value13:="")



        Dim cc As String()
        cc = 去重("all_domeslot_lamination", aa, "diameter", "inside_diameter", "Groove_number", "thickness", "Groove_Bottom_Width", "Bottom_tip_width",
                 "Dome_Radius", "Groove_Bottom_Short_Hight", "Groove_Bottom_Long_Hight", "Dome_center_height", "scale_d", "old_code")

        stator_lamination_mysql = cc


        mysqlcon.Close()
    End Function
    Public Function stator_pressing_ring_mysql(host$, 设计组table_name$) As String()

        连接数据库(host$, "stator_pressing_ring")
        插入一行复制数据("stator_pressing_ring")

        mysqlcon.Close()
        连接数据库(host$, "baserequires")
        Dim aa As String()
        aa = 提取ID数据(设计组table_name, "D1a")
        mysqlcon.Close()


        连接数据库(host$, "stator_lamination")
        Dim bb%
        bb = 查询当前数据库所有表总行数(host$, "stator_pressing_ring")
        Dim newcode$
        newcode = 取新号(host$, "stator_pressing_ring", bb)

        mysqlcon.Close()
        连接数据库(host$, "stator_pressing_ring")
        aa = 更新数据(table_name:="stator_pressing_ring",
                      字段1:="code", value1:=newcode,
                      字段2:="diameter", value2:=aa(0),
                      字段3:="inside_diameter", value3:=(aa(0) - 0.5) / 1.15)



        Dim cc As String()
        cc = 去重("stator_pressing_ring", aa, "diameter", "inside_diameter")


        stator_pressing_ring_mysql = cc

        mysqlcon.Close()
    End Function
    Public Function clasp_mysql(host$, code_sl$, code_slr$) As String()

        连接数据库(host$, "clasp")
        插入一行复制数据("clasp")

        Dim aa, dd As String()
        '连接数据库(host$, "stator_lamination")
        aa = 提取thickness("stator_lamination", "all_domeslot_lamination", code_sl, host)
        mysqlcon.Close()
        '连接数据库(host$, "stator_pressing_ring")
        dd = 提取thickness("stator_pressing_ring", "stator_pressing_ring", code_slr, host)

        Dim bb%
        bb = 查询当前数据库所有表总行数(host$, "clasp")
        Dim newcode$
        newcode = 取新号(host$, "clasp", bb)

        mysqlcon.Close()
        连接数据库(host$, "clasp")
        aa = 更新数据(table_name:="clasp",
                      字段1:="code", value1:=newcode,
                      字段2:="L_front", value2:=aa(0) + dd(0) * 2,
                      字段3:="bending_length", value3:=15,
                      字段4:="width", value4:=20)




        Dim cc As String()
        cc = 去重("clasp", aa, "L_front", "bending_length", "width")

        clasp_mysql = cc
        mysqlcon.Close()

    End Function
    Public Function stator_core_assembly_mysql(host$, alihost$, 设计组table_name$) As String()

        '连接数据库("106.15.236.225", "stator_core_assembly")
        连接数据库(host, "stator_core_assembly")
        插入一行复制数据("stator_core_assembly")

        Dim aa, dd As String()
        Dim sl, ring, clasp As String
        sl = stator_lamination_mysql(host, alihost, 设计组table_name)(0)
        ring = stator_pressing_ring_mysql(host, 设计组table_name)(0)
        clasp = clasp_mysql(host, sl, ring)(0)
        Dim bb%
        bb = 查询当前数据库所有表总行数(host$, "stator_core_assembly")
        Dim newcode$
        newcode = 取新号(host$, "stator_core_assembly", bb)

        mysqlcon.Close()
        连接数据库(host$, "stator_core_assembly")

        aa = 更新数据(table_name:="stator_core_assembly",
                      字段1:="code", value1:=newcode,
                      字段2:="Partaddress1", value2:="E:\\works\\generator_parts_library\\stator_lamination\\",
                      字段3:="Partaddress2", value3:="E:\\works\\generator_parts_library\\stator_pressing_ring\\",
                      字段4:="Partaddress3", value4:="E:\\works\\generator_parts_library\\clasp\\",
                      字段5:="Part1_Code", value5:=sl,
                      字段6:="Part2_Code", value6:=ring,
                      字段7:="Part3_Code", value7:=clasp)

        For i = 0 To 5
            aa(i) = Replace(aa(i), "\\", "\")
        Next


        Dim cc As String()
        cc = 去重("stator_core_assembly", aa, "Partaddress1", "Partaddress2", "Partaddress3", "Part1_Code", "Part2_Code", "Part3_Code")

        stator_core_assembly_mysql = cc
        mysqlcon.Close()

    End Function


    Public Function 去重(table_name$, 查重数据 As String(), Optional 字段2$ = "", Optional 字段3$ = "", Optional 字段4$ = "", Optional 字段5$ = "", Optional 字段6$ = "", Optional 字段7$ = "",
                        Optional 字段8$ = "", Optional 字段9$ = "", Optional 字段10$ = "", Optional 字段11$ = "", Optional 字段12$ = "", Optional 字段13$ = "", Optional 字段14$ = "", Optional 字段15$ = "", Optional 字段16$ = "", Optional 字段17$ = "",
                        Optional 字段18$ = "", Optional 字段19$ = "", Optional 字段20$ = "", Optional 字段21$ = "", Optional 字段22$ = "", Optional 字段23$ = "") As String()

        Dim aa As String()
        Dim bb As String()
        Dim cc% = 0


        新建查询("select * from " + table_name)
        'MsgBox(read.Read())
        'MsgBox(read(字段1))
        Do While read.Read '当false时跳出循环
            If Not 字段2 = "" Then
                aa = {(read(字段2))}
                'MsgBox(table_name)
                'MsgBox(read(字段2))
            End If
            If Not 字段3 = "" Then
                aa = aa.Concat({(read(字段3))}).ToArray
            End If
            If Not 字段4 = "" Then
                aa = aa.Concat({(read(字段4))}).ToArray
            End If
            If Not 字段5 = "" Then
                aa = aa.Concat({(read(字段5))}).ToArray
            End If
            If Not 字段6 = "" Then
                aa = aa.Concat({(read(字段6))}).ToArray
            End If
            If Not 字段7 = "" Then
                aa = aa.Concat({(read(字段7))}).ToArray
            End If
            If Not 字段8 = "" Then
                aa = aa.Concat({(read(字段8))}).ToArray
            End If
            If Not 字段9 = "" Then
                aa = aa.Concat({(read(字段9))}).ToArray
            End If
            If Not 字段10 = "" Then
                aa = aa.Concat({(read(字段10))}).ToArray
            End If
            If Not 字段11 = "" Then
                aa = aa.Concat({(read(字段11))}).ToArray
            End If
            If Not 字段12 = "" Then
                aa = aa.Concat({(read(字段12))}).ToArray
            End If
            If Not 字段13 = "" Then
                aa = aa.Concat({(read(字段13))}).ToArray
            End If
            If Not 字段14 = "" Then
                aa = aa.Concat({(read(字段14))}).ToArray
            End If
            If Not 字段15 = "" Then
                aa = aa.Concat({(read(字段15))}).ToArray
            End If
            If Not 字段16 = "" Then
                aa = aa.Concat({(read(字段16))}).ToArray
            End If
            If Not 字段17 = "" Then
                aa = aa.Concat({(read(字段17))}).ToArray
            End If
            If Not 字段18 = "" Then
                aa = aa.Concat({(read(字段18))}).ToArray
            End If
            If Not 字段19 = "" Then
                aa = aa.Concat({(read(字段19))}).ToArray
            End If
            If Not 字段20 = "" Then
                aa = aa.Concat({(read(字段20))}).ToArray
            End If
            If Not 字段21 = "" Then
                aa = aa.Concat({(read(字段21))}).ToArray
            End If
            If Not 字段22 = "" Then
                aa = aa.Concat({(read(字段22))}).ToArray
            End If
            If Not 字段23 = "" Then
                aa = aa.Concat({(read(字段23))}).ToArray
            End If


            'If aa = 查重数据 Then
            '    MsgBox(555)
            'End If

            Dim dd As Boolean = True '默认重复
            For i = 0 To 查重数据.Count - 1
                If Not aa(i) = 查重数据(i) Then '查重，如果不重复dd=false
                    dd = False
                End If
            Next

            If Not dd Then
                'MsgBox(88)
            Else
                cc += 1
                If cc = 1 Then
                    bb = {(read("code")), ("repeat")}
                Else
                    bb = bb.Concat({(read("code"))}).ToArray
                End If
            End If
        Loop




        If cc = 1 Then
            bb = {(read("code")), ("new")}
        Else

            For I = 2 To bb.Count - 1

                mysqlcom = New MySqlCommand("Delete from " + table_name + " where code='" + bb(I) + "'", mysqlcon)
                If I = 2 Then
                    read.Close()
                End If
                mysqlcom.ExecuteNonQuery()
            Next

            bb = {bb(0), bb(1)}

        End If



        去重 = bb
    End Function



    Public Function 复制一行数据() As String()
        Dim aa As String()
        Dim bb, cc As Integer
        bb = 0
        cc = 0
        read.Read()
        For i = 0 To read.FieldCount - 1
            If i = 0 Then
                aa = {(read(i))}
            Else
                'MsgBox(IsDBNull(read(i)))

                If IsDBNull(read(i)) Then
                    'MsgBox(IsDBNull(read(i)))
                    aa = aa.Concat({("0")}).ToArray
                Else
                    aa = aa.Concat({(read(i))}).ToArray
                End If

            End If
        Next
        复制一行数据 = aa
    End Function

    Public Function 字符串数组转换(aa As String(), a%) As String
        Dim bb As String
        bb = (a + 1).ToString + ","
        For i = 1 To aa.Count - 1
            bb = bb + "'" + aa(i) + "',"
        Next
        bb = Replace(bb, "\", "\\")
        字符串数组转换 = Left(bb, bb.Length - 1)
    End Function

    Public Function 查询数据库总行数() As Integer
        Dim aa As String()
        Dim bb, cc As Integer
        bb = 0
        cc = 0

        Do While read.Read()
            If cc = 0 Then
                aa = {read.GetString(0)}
            Else
                aa = aa.Concat({(read.GetString(0))}).ToArray
            End If
            cc += 1
        Loop

        For i = 0 To aa.Count - 1
            新建查询("select * from " + aa(i))
            bb = bb + 查询表行数()
        Next
        查询数据库总行数 = bb






    End Function

    Public Function 连接数据库(地址$, database$, Optional Sql$ = "show tables") As Integer

        mysqlcon = New MySqlConnection("server=" + 地址 + ";userid=root" & ";password=123456" & ";database=" + database + ";Charset=utf8")
        '//打开数据库连接
        mysqlcon.Open()
        mysqlcom = New MySqlCommand(Sql, mysqlcon)
        read = mysqlcom.ExecuteReader()

        'mysqlcom = New MySqlCommand("set names gb2312", mysqlcon)
        'mysqlcom.ExecuteNonQuery()
        'mysqlcom.Dispose()


    End Function

    Public Sub 新建查询(sql$)
        mysqlcom = New MySqlCommand(sql, mysqlcon)
        read.Close()
        read = mysqlcom.ExecuteReader()
    End Sub
    Public Function 查询表行数() As Integer
        Dim count As Integer
        count = 0
        Do While read.Read()
            count += 1
        Loop
        查询表行数 = count
    End Function
































    Public Function stator_core_assembly(code$, host$, clasp_code$)
        'mysql_new(rotor_core_assembly, single_rectangular_slot_rotor_core)

        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim read As MySqlDataReader
        Dim clasp_width, clasp, slring As String
        mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=clasp;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select width from clasp where code=" + "'" + clasp_code$ + "'", mysqlcon)
        read = mysqlcom.ExecuteReader()
        read.Read()
        clasp_width = read("width")
        read.Close()
        mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=stator_core_assembly;pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from stator_core_assembly", mysqlcon)
        read = mysqlcom.ExecuteReader()
        read.Read()
        Do Until read("code") = code
            read.Read()
        Loop

        Dim name As String = read("name")
        Dim company As String = read("company")
        Dim swbody As SldWorks.Body2
        Dim 定子冲片 As SldWorks.Component2
        Dim 定子压圈 As SldWorks.Component2
        Dim 扣片 As SldWorks.Component2

        Dim 定子冲片edge() As Object
        Dim 定子压圈edge() As Object
        Dim 扣片edge() As Object

        Dim 定子冲片face() As Object
        Dim 定子压圈face() As Object
        Dim 扣片face() As Object

        swapp.OpenDoc6(read("Partaddress1") + read("Part1_Code") + ".SLDPRT", 1, 32, "", errors, longwarnings)
        part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
        定子冲片 = part.AddComponent5(read("Partaddress1") + read("Part1_Code") + ".SLDPRT", 0, "", False, "", 0.05 * 0, 0, 0)
        Debug.Print(read("Part1_Code"))
        swapp.CloseDoc(定子冲片.GetPathName())

        swapp.OpenDoc6(read("Partaddress2") + read("Part2_Code") + ".SLDPRT", 1, 32, "", errors, longwarnings)
        part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
        定子压圈 = part.AddComponent5(read("Partaddress2") + read("Part2_Code") + ".SLDPRT", 0, "", False, "", 0.05 * 1, 0, 0)
        swapp.CloseDoc(定子压圈.GetPathName())

        swapp.OpenDoc6(read("Partaddress3") + read("Part3_Code") + ".SLDPRT", 1, 32, "", errors, longwarnings)
        part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
        扣片 = part.AddComponent5(read("Partaddress3") + read("Part3_Code") + ".SLDPRT", 0, "", False, "", 0.05 * 2, 0, 0)
        swapp.CloseDoc(扣片.GetPathName())

        part.ClearSelection2(True)
        swbody = 扣片.GetBody()
        扣片edge = swbody.GetEdges()
        扣片face = swbody.GetFaces()
        part.ClearSelection2(True)

        swbody = 定子压圈.GetBody()
        定子压圈edge = swbody.GetEdges()
        定子压圈face = swbody.GetFaces()
        part.ClearSelection2(True)

        Dim 定子冲片_凸台拉伸1 As SldWorks.Feature
        定子冲片_凸台拉伸1 = 定子冲片.FeatureByName("凸台-拉伸1")
        定子冲片face = 定子冲片_凸台拉伸1.GetFaces()
        定子冲片edge = 定子冲片face(2).GetEdges()
        part.ClearSelection2(True)
        '遍历(1, 定子冲片edge)
        '遍历(1, 定子压圈face)
        '遍历(1, 扣片face)

        SelectionMgr.AddSelectionListObject(定子冲片face(0), Nothing)
        SelectionMgr.AddSelectionListObject(定子压圈face(2), Nothing)
        配合_new("重合", 1)
        SelectionMgr.AddSelectionListObject(定子冲片edge(3), Nothing)
        SelectionMgr.AddSelectionListObject(定子压圈edge(1), Nothing)
        配合_new("同轴", 0)
        SelectionMgr.AddSelectionListObject(定子压圈face(1), Nothing)
        SelectionMgr.AddSelectionListObject(扣片face(10), Nothing)
        配合_new("重合", 1)
        SelectionMgr.AddSelectionListObject(定子冲片face(2), Nothing)
        SelectionMgr.AddSelectionListObject(扣片face(12), Nothing)
        配合_new("相切", 1)
        part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
        SelectionMgr.AddSelectionListObject(扣片face(1), Nothing)
        配合_new("距离", 0, clasp_width / 2 / 1000)
        part.ClearSelection2(True)
        SelectionMgr.AddSelectionListObject(定子冲片face(2), Nothing)
        SelectionMgr.SetSelectedObjectMark(1, 2, 0)
        扣片.Select2(True, 1)
        特征阵列_等间距(4)
        part.ClearSelection2(True)


        定子压圈.Select2(False, 1)
        part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0) '镜像零件
        Dim compsToMirror(0) As SldWorks.Component2
        Dim swMirrorPlane As SldWorks.Feature
        compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1) '加入标记
        swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
        AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)




    End Function
    Public Function Exciter_stator_core_assembly(code$)

        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim dr As MySqlDataReader
        Dim mate As Object

        mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=Exciter_stator_core_assembly;pooling=false")
        ''//打开数据库连接
        'mysqlcon.Open()
        ''//sql查询
        'mysqlcom = New MySqlCommand("select width from clasp where code=" + "'" + clasp_split(0) + "'", mysqlcon)
        'dr = mysqlcom.ExecuteReader()
        'dr.Read()
        'clasp_width = dr("width")
        'dr.Close()
        mysqlcom = New MySqlCommand("select * from exciter_stator_core_assembly", mysqlcon)
        mysqlcon.Open()
        dr = mysqlcom.ExecuteReader()
        dr.Read()
        Do Until dr("code") = code
            dr.Read()
        Loop

        Dim name As String = dr("name")
        Dim company As String = dr("company")
        Dim swbody As SldWorks.Body2
        Dim 励磁机定子冲片 As SldWorks.Component2
        Dim 端盖 As SldWorks.Component2

        Dim 励磁机定子冲片edge(), 端盖edge(), 凸台edge() As Object

        Dim 励磁机定子冲片face(), 端盖face(), 凸台face() As Object
        swapp.OpenDoc6(dr("Partaddress1") + dr("Part1_Code") + ".SLDPRT", 1, 32, "", errors, longwarnings)
        part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
        励磁机定子冲片 = part.AddComponent5(dr("Partaddress1") + dr("Part1_Code") + ".SLDPRT", 0, "", False, "", 0.05 * 0, 0, 0)
        swapp.CloseDoc(励磁机定子冲片.GetPathName())

        If Not dr("Part2_code") = "0" Then
            swapp.OpenDoc6(dr("Partaddress2") + dr("Part2_Code") + ".SLDPRT", 1, 32, "", errors, longwarnings)
            part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
            端盖 = part.AddComponent5(dr("Partaddress2") + dr("Part2_Code") + ".SLDPRT", 0, "", False, "", 0.05 * 1, 0, 0)
            swapp.CloseDoc(端盖.GetPathName())

            Dim 端盖与励磁机重合处特征, 冲片配合孔, 凸台1 As Feature
            端盖与励磁机重合处特征 = 端盖.FeatureByName("与励磁机重合面")
            端盖face = 端盖与励磁机重合处特征.GetFaces()
            端盖edge = 端盖face(0).GetEdges() '0

            凸台1 = 励磁机定子冲片.FeatureByName("切除-拉伸1")
            凸台face = 凸台1.GetFaces()
            凸台edge = 凸台face(0).GetEdges() '0

            冲片配合孔 = 励磁机定子冲片.FeatureByName("配合孔")
            励磁机定子冲片face = 冲片配合孔.GetFaces()
            励磁机定子冲片edge = 励磁机定子冲片face(0).GetEdges() '1

            part.ClearSelection2(True)
            '遍历(1, 凸台edge)
            '遍历(1, 端盖edge)
            '遍历(1, 扣片face)

            SelectionMgr.AddSelectionListObject(端盖edge(0), Nothing)
            SelectionMgr.AddSelectionListObject(励磁机定子冲片face(0), Nothing)
            配合_new("同轴", 1)
            SelectionMgr.AddSelectionListObject(端盖face(0), Nothing)
            SelectionMgr.AddSelectionListObject(励磁机定子冲片edge(1), Nothing)
            配合_new("重合", 0)
            SelectionMgr.AddSelectionListObject(凸台edge(0), Nothing)
            SelectionMgr.AddSelectionListObject(端盖edge(1), Nothing)
            If code = "5LY.680.005" Or code = "5LY.680.004" Then
                配合_new("同轴", 1)
            Else
                配合_new("同轴", 0)

            End If

            'mate.select2(False, Nothing)
            'part.EditDelete()
            'SelectionMgr.AddSelectionListObject(凸台edge(0), Nothing)
            'SelectionMgr.AddSelectionListObject(端盖edge(1), Nothing)
            '配合_new("同轴", 1)


        End If
        'SelectionMgr.AddSelectionListObject(定子冲片face(2), Nothing)
        'SelectionMgr.AddSelectionListObject(扣片face(12), Nothing)
        '配合_new("相切", 1)
        'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
        'SelectionMgr.AddSelectionListObject(扣片face(1), Nothing)
        '配合_new("距离", 0, clasp_width / 2 / 1000)
        'part.ClearSelection2(True)
        'SelectionMgr.AddSelectionListObject(定子冲片face(2), Nothing)
        'SelectionMgr.SetSelectedObjectMark(1, 2, 0)
        '扣片.Select2(True, 1)
        '特征阵列_等间距(4)
        'part.ClearSelection2(True)


        '定子压圈.Select2(False, 1)
        'part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0) '镜像零件
        'Dim compsToMirror(0) As SldWorks.Component2
        'Dim swMirrorPlane As SldWorks.Feature
        'compsToMirror(0) = SelectionMgr.GetSelectedObjectsComponent4(1, 1) '加入标记
        'swMirrorPlane = SelectionMgr.GetSelectedObject6(1, 2)
        'AssemblyDoc.MirrorComponents3(swMirrorPlane, Nothing, 1, True, compsToMirror, True, "", 2, Nothing, "", 1, False, True, False)
    End Function



    Public Sub 遍历(同时遍历多实体数%， 实体集合() As Object， Optional 初值% = 0)
        part.ClearSelection2(True)
        Dim vEdgeCount As Integer
        vEdgeCount = 初值
        Do Until vEdgeCount >= 实体集合.Count
            For i = vEdgeCount To vEdgeCount + 同时遍历多实体数 - 1
                SelectionMgr.AddSelectionListObject(实体集合(i), Nothing)
            Next
            vEdgeCount = vEdgeCount + 同时遍历多实体数
            MsgBox(vEdgeCount - 1)
            part.ClearSelection2(True)
        Loop
    End Sub

    Public Function 特征阵列_angle(阵列数%, 角度#) As SldWorks.Feature
        特征阵列_angle = part.FeatureManager.FeatureCircularPattern5(阵列数%, 角度# * PI / 180, False, "NULL", False, False, False, False, False, False, 1, 0, "NULL", False)
    End Function

    Public Sub 特征阵列_等间距(阵列数%)

        part.FeatureManager.FeatureCircularPattern5(阵列数, 2 * PI, False, "NULL", False, True, False, False, False, False, 1, 0, "NULL", True)
    End Sub

    Public Function 配合_new(类型$, Optional 反向% = 0， Optional 距离# = 0, Optional 距离翻转 As Boolean = False, Optional 距离上限# = 1， Optional 距离下限# = 0)
        If 类型 = "重合" Then
            配合_new = AssemblyDoc.AddMate5(0, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
        ElseIf 类型 = "同轴" Then
            配合_new = AssemblyDoc.AddMate5(1, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴
        ElseIf 类型 = "垂直" Then
            配合_new = AssemblyDoc.AddMate5(2, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '垂直
        ElseIf 类型 = "平行" Then
            配合_new = AssemblyDoc.AddMate5(3, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '平行
        ElseIf 类型 = "相切" Then
            配合_new = AssemblyDoc.AddMate5(4, 反向, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '相切
        ElseIf 类型 = "距离" Then
            配合_new = AssemblyDoc.AddMate5(5, 反向, 距离翻转, 距离, 距离上限, 距离下限, 0, 0, 0, 0, 0, False, False, 0, 0) '距离
        End If
        part.ClearSelection2(True)
        part.EditRebuild3()
    End Function


    Public Sub Assembly_initialization()

        OpenDoc7 = swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
        swapp = CreateObject("Sldworks.application")
        swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
        swapp.Visible = True
        swapp.FrameState = 1

        AssemblyDoc = swapp.ActiveDoc
        AssemblyTitle = AssemblyDoc.GetTitle
        part = swapp.ActiveDoc
        SkeManger = part.SketchManager
        FeatureManager = part.FeatureManager
        SelectionMgr = part.SelectionManager
        part.Extension.InsertScene("\scenes\01 basic scenes\00 soft spotlight.p2s") '绘图空间背景
        swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swEdgesDefaultBulkSelection, True)
        swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swEdgesHiddenEdgeSelectionInWireframe, True)


        swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swUseFolderAsDefaultSearchLocation, False) '取消异形孔向导将此文件夹设为默认文件位置，读取自己保存的标准件库
        part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True) '隐藏所有类型
        Setting(0)



    End Sub
    Public Sub 扣片(L_front#, bending_length#, width#)
        Setting(0)
        part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        SkeManger.InsertSketch(True)
        swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
        SkeManger.CreateLine(0, 0, 0, L_front, 0, 0)
        part.SketchAddConstraints（"sgFIXED"）
        SkeManger.CreateLine(L_front, 0, 0, L_front, -bending_length， 0)
        part.SketchAddConstraints（"sgFIXED"）
        SkeManger.CreateLine(0, 0, 0, 0, -bending_length， 0)
        part.SketchAddConstraints（"sgFIXED"）
        part.ShowNamedView2（"*上下二等角轴测", 8）
        part.ViewZoomtofit2()
        Dim customBendAllowanceData As Object
        customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
        customBendAllowanceData.KFactor = 0.5
        part.FeatureManager.InsertSheetMetalBaseFlange2(0.001, False, 0.001, width, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 2, 0.0001, 0.0001, 0.5, True, False, True, True) '直接生成钣金
    End Sub

    Public Function Rectangular_plate(x#, y#, length#, width#, thickness#)
        part.Extension.InsertScene("\scenes\01 basic scenes\00 soft spotlight.p2s")
        Setting(1)
        Dim line1, line2, line3, line4 As SketchLine
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        part.ShowNamedView2("*前视", 1)
        part.ViewZoomtofit2()
        line1 = SkeManger.CreateLine(x, y, 0, x + width, y, 0)
        line2 = SkeManger.CreateLine(x + width, y, 0, x + width, y + length, 0)
        line3 = SkeManger.CreateLine(x + width, y + length, 0, x, y + length, 0)
        line4 = SkeManger.CreateLine(x, y + length, 0, x, y, 0)
        Table(1, thickness)

    End Function '矩形板(矩形左下角x,y坐标，长，宽，高）

    Public Sub Drawing(dz$, Scale2#, FX_k#, FY_k#, RX_k#, RY_k#, LX_k#, LY_k#, TX_k#, TY_k#, skills_requirement1$,
                                skills_requirement2$, skills_requirement3$, skills_requirement4$, skills_requirement5$, skills_requirement6$)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a2.drwdot", 1, 0, 0)
        part = swapp.ActiveDoc
        Dim lyNote As Object
        lyNote = part.InsertNote("江西兰叶科技有限公司")
        Anno = lyNote.GetAnnotation()
        Anno.SetPosition2(0.544, 0.06, 0)
        part.WindowRedraw()
        part.SaveAs3("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\ly_a2.drwdot", 0, 2)
        Dim DrawTitle As String
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        swapp.CloseDoc(DrawTitle)
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\ly_a2.drwdot", 1, 0, 0)
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        Dim S() As String
        S = Split(DrawTitle, "-")
        S(0) = Replace(S(0), " ", "")
        Draw = swapp.ActiveDoc
        part = swapp.ActiveDoc
        SelectionMgr = part.SelectionManager
        If Not FX_k = 0 Then
            InsertFrontView(dz + ".SLDPRT", FX_k, FY_k)
        End If
        If Not LX_k = 0 Then
            InsertLeftView(dz + ".SLDPRT", LX_k, LY_k)
        End If
        If Not RX_k = 0 Then
            InsertLeftView(dz + ".SLDPRT", RX_k#, RY_k#)
        End If
        If Not TX_k = 0 Then
            InsertLeftView(dz + ".SLDPRT", TX_k#, TY_k#)
        End If
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        SheetPr(2) = 1
        SheetPr(3) = Scale2
        SheetPr(4) = False
        Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
        Draw.EditRebuild3()
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
        Dim mynote As Note
        mynote = part.InsertNote("技术要求"）
        mynote.GetAnnotation().SetPosition(SheetPr(5) * 0.2, SheetPr(6) * 0.2, 0)
        part.FontPoints(22)
        mynote = part.InsertNote(skills_requirement1 + Chr(13) + Chr(10) +
                             skills_requirement2 + Chr(13) + Chr(10) +
                             skills_requirement3 + Chr(13) + Chr(10) +
                             skills_requirement4 + Chr(13) + Chr(10) +
                             skills_requirement5 + Chr(13) + Chr(10) +
                             skills_requirement6)
        mynote.GetAnnotation().SetPosition(SheetPr(5) * 0.2, SheetPr(6) * 0.2 - 0.01, 0)
        part.ActivateView("工程图视图1")
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        part.EditUndo2(1)
        part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, True, False, True, True)
    End Sub
    Public Sub ADDPro(name$, Code$, material$)

        Dim cusproper As SldWorks.CustomPropertyManager
        cusproper = part.Extension.CustomPropertyManager("")
        cusproper.Set2("名称", name)
        cusproper.Set2("代号", Code)
        cusproper.Set2("材料", material)
        part.EditRebuild3()
    End Sub
    Public Sub Select_Sketch()
        part.ClearSelection2(True)
        'line01.Select4(False, Nothing)
        Dim P1 As SketchPoint
        Dim points As Object
        Getsketch = SkeManger.ActiveSketch
        points = Getsketch.GetSketchPoints2
        SketchSegments = Getsketch.GetSketchSegments
        For i = 0 To UBound(SketchSegments)
            SketchSegment = SketchSegments(i)
            SketchSegment.Select2(True, Nothing)
        Next i
        For i = 0 To UBound(points)
            P1 = points(i)
            P1.Select4(True, Nothing)
        Next i

    End Sub
    Public Sub InsertFrontView(dz$, X_k#, Y_k#)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.ActiveDoc
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        Draw.CreateDrawViewFromModelView3(dz, "*前视", SheetPr(5) * X_k, SheetPr(6) * Y_k, 0)
    End Sub
    Public Sub InsertRightView(dz$, X_k#, Y_k#)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.ActiveDoc
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        Draw.CreateDrawViewFromModelView3(dz, "*右视", SheetPr(5) * X_k, SheetPr(6) * Y_k, 0)
    End Sub
    Public Sub InsertLeftView(dz$, X_k#, Y_k#)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.ActiveDoc
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        Draw.CreateDrawViewFromModelView3(dz, "*左视", SheetPr(5) * X_k, SheetPr(6) * Y_k, 0)
    End Sub
    Public Sub InsertTopView(dz$, X_k#, Y_k#)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.ActiveDoc
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        Draw.CreateDrawViewFromModelView3(dz, "*上视", SheetPr(5) * X_k, SheetPr(6) * Y_k, 0)
    End Sub
    Public Sub Mysql(code$)
        Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
        Dim mysqlcom As MySqlCommand = New MySqlCommand("select * from Stator_lamination", mysqlcon)
        mysqlcon.Open()
        Dim r As MySqlDataReader = mysqlcom.ExecuteReader()
        r.Read()
        Do Until r.GetString("Code") = code
            r.Read()
        Loop
    End Sub
    Public Sub EditMaterial(path$, material$)
        part.SetMaterialPropertyName2("默认", path, material)
    End Sub
    Public Sub Over(dz$, d#)
        If d = 1 Then
            part.SaveAs3(dz + ".SLDPRT", 0, 8)
        ElseIf d = 2 Then
            part.SaveAs3(dz + ".SLDDRW", 0, 8)
        ElseIf d = 3 Then
            part.SaveAs3(dz + ".SLDASM", 0, 8)
        End If


    End Sub
    Public Sub Arc_Table(diameter#, thickness#, arcangle#, End_cuts#, arc_table_tol_type#, arc_table_tol_max$, arc_table_tol_min$, att_gtol_symbol$, att_gtol_value1$, att_gtol_main$)
        part.Extension.InsertScene("\scenes\01 basic scenes\00 soft spotlight.p2s")
        Setting(0)
        Dim line1, line2, line3, line4, line5, line6， line7 As SketchLine
        Dim arc1, arc2 As SketchSegment
        Dim point1, point2, point3, point4, point5, point6, point7, point8 As SketchPoint
        Dim Cut1 As Feature
        'part.SetUnits(0, 1, 0, 0, False)
        If arcangle = 360 Then
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter# / 2)
            DisplayDimension = part.AddDimension2(diameter# / 2 / 3 * Sin(45 * PI / 180), diameter# / 2 / 3 * Cos(45 * PI / 180), 0)
            part.EditDimensionProperties2(0, 0, 0, "", "", False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
            SetTolvalue(arc_table_tol_type, arc_table_tol_max, arc_table_tol_min)
            DisplayDimension.SetBrokenLeader2(False, 1)
            DisplayDimension.ShowTolParenthesis = True

            part.Extension.SelectByID2(arc1.GetName, "SKETCHSEGMENT", diameter / 2 * Sin(45 * PI / 180), diameter / 2 * Cos(45 * PI / 180), 0, False, 0, Nothing, 0)
            Dim myGtol As Object
            Dim myAnno As Annotation
            If Not att_gtol_symbol = "0" Then
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, att_gtol_symbol, True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, att_gtol_value1, "", att_gtol_main, "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(diameter / 1.5 * Sin(45 * PI / 180), diameter / 2 * 1.2, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
            End If
            Getsketch = part.SketchManager.ActiveSketch
            part.SketchManager.InsertSketch(True)
            part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thickness#, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸
        Else
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
            ADDConstraints(1) '固定
            line1 = SkeManger.CreateLine(0, 0, 0, 0.01, 0, 0)
            line2 = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            ADDConstraints(1)
            line3 = SkeManger.CreateLine(0, 0, 0, -0.01, 0, 0)
            point3 = line3.GetStartPoint2
            point4 = line1.GetStartPoint2
            point4.Select4(False, Nothing)
            point3.Select4(True, Nothing)
            ADDConstraints(8)
            ADDConstraints(1)
            point1 = line1.GetEndPoint2()
            point2 = line3.GetEndPoint2()
            point1.Select4(False, Nothing)
            arc1.Select2(True, Nothing)
            ADDConstraints(5) '重合
            point2.Select4(False, Nothing)
            arc1.Select2(True, Nothing)
            ADDConstraints(5) '重合
            line1.Select2(False, Nothing)
            line2.Select2(True, Nothing)
            DisplayDimension = part.AddDimension2(0, diameter / 6, 0)
            ChangeDimensionVaule(arcangle / 2 * PI / 180)
            part.EditDelete()
            line3.Select2(False, Nothing)
            line2.Select2(True, Nothing)
            DisplayDimension = part.AddDimension2(0, diameter / 5, 0)
            ChangeDimensionVaule(arcangle / 2 * PI / 180)
            part.EditDelete()
            line1.Select2(False, Nothing)
            line3.Select2(True, Nothing)
            part.AddDimension2(0, diameter / 6, 0)
            part.ClearSelection2(True)
            arc1.Select2(False, Nothing)
            SkeManger.SketchTrim(0, diameter / 2, 0, 0)
            part.ClearSelection2(True)

            Getsketch = SkeManger.ActiveSketch
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select4(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i
            arc1.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(diameter# / 6 * Sin(arcangle / 4 * PI / 180), diameter# / 6 * Cos(arcangle / 4 * PI / 180), 0)
            part.EditDimensionProperties2(0, 0, 0, 0, 0, False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
            SetTolvalue(arc_table_tol_type, arc_table_tol_max, arc_table_tol_min)
            DisplayDimension.SetBrokenLeader2(False, 1)
            DisplayDimension.ShowTolParenthesis = True
            DisplayDimension.LeaderVisibility = False
            line1.Select2(False, Nothing)
            line3.Select2(True, Nothing)
            part.AddDimension2(0, diameter / 4, 0)
            part.ClearSelection2(True)
            part.Extension.SelectByID2(arc1.GetName, "SKETCHSEGMENT", diameter / 2 * Sin(arcangle / 4 * PI / 180), diameter / 2 * Cos(arcangle / 4 * PI / 180), 0, False, 0, Nothing, 0)
            If Not att_gtol_symbol = "0" Then
                Dim myGtol As Object
                Dim myAnno As Annotation
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, att_gtol_symbol, True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, att_gtol_value1, "", att_gtol_main, "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(diameter / 2 * Sin(45 * PI / 180), diameter / 2 * 1.2, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
            End If
            'myAnno.SetLeaderAttachmentPointAtIndex(1, diameter / 2 * Sin(arcangle / 4 * PI / 180), diameter / 2 * Cos(arcangle / 4 * PI / 180), 0)
            part.ClearSelection2(True)
            part.FeatureManager.FeatureExtrusion3(True, False, False, 0, 0, thickness, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0) '拉伸


            If Not End_cuts = 0 Then
                Setting(0)
                SelectPlane("front")
                SkeManger.InsertSketch(True)
                sketch_name_of_1_6_both_cut_Extra_note = SkeManger.ActiveSketch
                feature_sno1bcen = sketch_name_of_1_6_both_cut_Extra_note
                line5 = SkeManger.CreateLine(0, 0, 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)

                ADDConstraints(1)
                arc2 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
                ADDConstraints(1)
                line4 = SkeManger.CreateLine(0, 0, 0, 0, 0.1, 0)
                point5 = line4.GetEndPoint2
                point6 = line5.GetEndPoint2
                point5.Select2(False, Nothing)
                arc2.Select4(True, Nothing)
                ADDConstraints(5)
                point7 = line4.GetStartPoint2
                point8 = line5.GetStartPoint2
                point7.Select4(False, Nothing)
                point8.Select4(True, Nothing)
                ADDConstraints(8)
                point5.Select4(False, Nothing)
                point6.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(diameter / 3 * 1.7 * Sin(arcangle / 2 * PI / 180), diameter / 3 * 1.7 * Cos(arcangle / 2 * PI / 180), 0)
                ChangeDimensionVaule(End_cuts)
                arc2.Select4(False, Nothing)
                SkeManger.SketchTrim(0, diameter / 2, 0, 0)
                Getsketch = SkeManger.ActiveSketch
                SketchSegments = Getsketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    SketchSegment.Select4(False, Nothing)
                    part.SketchConstraintsDelAll()
                Next i



                part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
                Cut1 = SelectionMgr.GetSelectedObject6(1, -1)
                Cut1.Select2(False, Nothing)
                SelectionMgr.SetSelectedObjectMark(1, 1, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                SelectPlane("front")
                SkeManger.InsertSketch(True)
                line6 = SkeManger.CreateLine(0, 0, 0, -diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
                line7 = SkeManger.CreateLine(0, 0, 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
                part.ClearSelection2(True)

            End If
        End If

    End Sub
    'Public Sub 圆弧凸台(直径, 拉伸厚度,圆弧角度,两端切除尺寸)
    Public Sub Reverse_Circle_Cut(inside_diameter#, arcangle#, inside_type#, inside_max$, inside_min$)
        Dim arc1, arcre As SketchSegment
        Dim dimname As String
        If arcangle = 360 Then
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            DisplayDimension = part.AddDimension2(inside_diameter# / 4 * Sin(-65 * PI / 180), inside_diameter# / 4 * Cos（-65 * PI / 180), 0)
            If Not inside_type = 0 Then
                part.EditDimensionProperties2(0, 0, 0, 0, 0, False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                SetTolvalue(inside_type, inside_max, inside_min)
            End If
            DisplayDimension.ShowTolParenthesis = True
            part.ShowNamedView2("*前视", 1)
            part.ViewZoomtofit2()
            part.Extension.SelectByID2(arc1.GetName, "SKETCHSEGMENT", inside_diameter# / 2 * Sin(-65 * PI / 180), inside_diameter# / 2 * Cos（-65 * PI / 180), 0, False, 0, Nothing, 0)
            Dim myDatumTag As DatumTag
            myDatumTag = part.InsertDatumTag2()
            myDatumTag.SetLabel("A")
            myDatumTag.GetAnnotation().SetPosition2((inside_diameter# / 2 + 0.02) * Sin(-65 * PI / 180), (inside_diameter# / 2 + 0.02) * Cos（-65 * PI / 180), 0)
            part.ClearSelection2(True)
            part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0) '反向贯穿切除

        Else
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)

            Getsketch = SkeManger.ActiveSketch
            Feature = Getsketch
            Dim Title As String
            Title = part.GetTitle
            Debug.Print(Title)
            part.ClearSelection2(True)
            'MsgBox(0)
            'point1 = SkeManger.CreatePoint(inside_diameter# / 2 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 2 * Cos（arcangle / 2 * 1.5 * PI / 180), 0)
            part.ShowNamedView2("*前视", 1)
            part.ViewZoomtofit2()
            part.Extension.SelectByID2(arc1.GetName, "SKETCHSEGMENT", inside_diameter# / 2 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 2 * Cos（arcangle / 2 * 1.5 * PI / 180), 0, False, 0, Nothing, 0)
            'MsgBox(0)
            'myDatumTag.GetAnnotation().SetPosition2(inside_diameter# / 1.9 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 1.9 * Cos（arcangle / 2 * 1.5 * PI / 180), 0)
            Dim myDatumTag As DatumTag
            myDatumTag = part.InsertDatumTag2()
            myDatumTag.SetLabel("B")
            myDatumTag.GetAnnotation().SetPosition(inside_diameter# / 1.8 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 1.8 * Cos（arcangle / 2 * 1.5 * PI / 180), 0)
            part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
            part.WindowRedraw()


            SelectPlane("front")
            SkeManger.InsertSketch(True)
            arcre = SkeManger.CreateArc(0, 0, 0, inside_diameter# / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter# / 2 * Cos(arcangle / 2 * PI / 180), 0, -inside_diameter# / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter# / 2 * Cos(arcangle / 2 * PI / 180), 0, 1)
            DisplayDimension = part.AddDimension2(inside_diameter# / 4 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 4 * Cos（arcangle / 2 * 1.5 * PI / 180), 0)
            dimname = DisplayDimension.GetNameForSelection
            'DisplayDimension.Diametric = False
            part.EditDimensionProperties2(0, 0, 0, 0, 0, False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
            SetTolvalue(8, "H8", "")
            DisplayDimension.ShowTolParenthesis = True

            part.ShowNamedView2("*前视", 1)
            part.ViewZoomtofit2()

            arcre.Select4(False, Nothing)
            part.SketchManager.CreateConstructionGeometry()


        End If

        'DisplayDimension.Diametric = False
    End Sub
    'Public Sub 反向圆切除(内直径)
    Public Sub Round_Top_Groove(Deflection_Angle#, Groove_number#, arcangle#, diameter#, inside_diameter#, Groove_Bottom_Width#, Groove_Bottom_Short_Hight#, Groove_Bottom_Long_Hight#, Bottom_tip_width#, Dome_center_height#, Dome_Radius#, rtg_gtol_symbol$, rtg_gtol_value1$, rtg_gtol_main$)
        Dim linec, line1, line2, line3, line4， linecm, linecl As SketchLine
        'Dim c中心线, 1槽底右竖线, 2槽底左竖线, 3槽右短斜线, 4槽右长斜线 As SldWorks.SketchLine
        Dim arc1, arc3 As SketchSegment
        Dim arc2 As SketchArc
        'Dim 1内圆,2槽顶圆 As SldWorks.SketchSegment
        Dim point1, point2, point3, point4, point5, point6, point7, point8, point9, point10, point11, point12, point13 As SketchPoint
        'Dim 1槽底右竖线起点, 2槽底左竖线起点, 3槽底右竖线中点, 4槽右短斜线起点, 5槽右短斜线终点, 6槽右长斜线起点, 7槽右长斜线终点 As SldWorks.SketchPoint
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 1, 0)
        ADDConstraints(1)

        arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
        ADDConstraints(1)
        line1 = SkeManger.CreateLine(0.001, inside_diameter / 2, 0, 0.001, inside_diameter / 2 + 0.001, 0)
        ADDConstraints(3)
        line1.select2(False, Nothing)
        linec.select2(True, Nothing)
        DisplayDimension = part.AddDimension2(0.002, 0.02, 0)
        ChangeDimensionVaule(Groove_Bottom_Width / 2)
        'DisplayDimension = part.AddDimension2(0.01, 0.02, 0)
        'ChangeDimensionVaule(Groove_Bottom_Short_Hight)
        point1 = line1.GetStartPoint2
        point1.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5) '重合
        point8 = line1.GetEndPoint2
        swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
        arc1.Select4(False, Nothing)
        point8.Select4(True, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.01, inside_diameter / 2 + Groove_Bottom_Short_Hight / 2, 0)
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SetArcEndCondition(2, 2)
        ChangeDimensionVaule(Groove_Bottom_Short_Hight)
        DisplayDimension.CenterText = True
        line2 = SkeManger.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
        point2 = line2.GetStartPoint2
        line1.select2(False, Nothing)
        line2.select2(True, Nothing)
        ADDConstraints(7)
        line2.select2(False, Nothing)
        ADDConstraints(3)
        point2.Select4(False, Nothing)
        point1.Select4(True, Nothing)
        linec.select2(True, Nothing)
        ADDConstraints(6)
        point3 = line1.GetEndPoint2
        line3 = SkeManger.CreateLine(0.01, 0.01, 0, 0.02, 0.02, 0)
        point4 = line3.GetStartPoint2
        point4.Select4(False, Nothing)
        point3.Select4(True, Nothing)
        ADDConstraints(8)
        point5 = line3.GetEndPoint2
        point5.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.02, inside_diameter / 2 + 0.001, 0)
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SetArcEndCondition(2, 2)
        ChangeDimensionVaule(Groove_Bottom_Long_Hight)
        point5.Select4(False, Nothing)
        linec.select2(True, Nothing)
        DisplayDimension = part.AddDimension2(0.003, inside_diameter / 2, 0)
        ChangeDimensionVaule(Bottom_tip_width / 2)
        part.ClearSelection2(True)
        arc2 = SkeManger.CreateArc(0, inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height, 0, -Dome_Radius, inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height, 0, Dome_Radius, inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height, 0, -1)
        ADDConstraints(1)
        point10 = arc2.GetEndPoint2
        line4 = SkeManger.CreateLine(0.02, 0.02, 0, 0.025, 0.025, 0)
        point6 = line4.GetStartPoint2
        point7 = line4.GetEndPoint2
        point6.Select4(False, Nothing)
        point5.Select4(True, Nothing)
        ADDConstraints(8)

        point7.Select4(False, Nothing)
        point10.Select4(True, Nothing)
        ADDConstraints(8)
        line3.select2(False, Nothing)
        line4.select2(True, Nothing)
        linec.select2(True, Nothing)
        ADDConstraints(9)
        'linec.select2(False, Nothing)
        'part.EditDelete()
        arc1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)



        Getsketch = SkeManger.ActiveSketch
        SketchSegments = Getsketch.GetSketchSegments
        For i = 0 To UBound(SketchSegments)
            SketchSegment = SketchSegments(i)
            SketchSegment.Select4(False, Nothing)
            part.SketchConstraintsDelAll()
        Next i
        swapp.SetUserPreferenceToggle（swUserPreferenceToggle_e.swSketchInference, False）
        point6.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.02, inside_diameter / 2, 0)
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SetArcEndCondition(2, 2)
        'DisplayDimension.GetAnnotation().SetPosition(0.02, inside_diameter / 2 + Groove_Bottom_Long_Hight / 2, 0)
        DisplayDimension.CenterText = True

        point4.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.01, inside_diameter / 2 + Groove_Bottom_Short_Hight / 2, 0)
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SetArcEndCondition(2, 2)
        DisplayDimension.CenterText = True

        Lselect(line4, False)
        DisplayDimension = part.AddVerticalDimension2(0.03, inside_diameter / 2 + Dome_center_height# / 2, 0)
        DisplayDimension.CenterText = True
        point9 = SkeManger.CreatePoint(-0.01, 0.01, 0)
        point9.Select4(False, Nothing)
        point6.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        point9.Select4(False, Nothing)
        point6.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0, inside_diameter / 2 + Dome_center_height# / 2, 0)
        DisplayDimension.CenterText = True

        point11 = SkeManger.CreatePoint(-0.01, 0.01, 0)
        point11.Select4(False, Nothing)
        point4.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        point11.Select4(False, Nothing)
        point4.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0, inside_diameter / 2 - Dome_center_height# / 4, 0)
        DisplayDimension.CenterText = True

        arc1.Select4(False, Nothing)
        arc2.select2(True, Nothing)
        DisplayDimension = part.AddDimension2(-0.01, inside_diameter / 2 + Dome_center_height# / 2, 0)
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SetArcEndCondition(1, 2)
        Dimension.SetArcEndCondition(2, 3)
        DisplayDimension.CenterText = True

        arc2.select2(False, Nothing)
        DisplayDimension = part.AddDimension2(0.015, inside_diameter / 2 + Dome_center_height# + Dome_Radius# * 2, 0)
        DisplayDimension.SetBrokenLeader2(False, 2)

        sketch_name_of_1_6_Partial_view_Extra_note = SkeManger.ActiveSketch
        feature_sno16pven = sketch_name_of_1_6_Partial_view_Extra_note

        linec.select2(False, Nothing)
        part.EditDelete()

        arc1.SelectChain(True, Nothing)
        If Not Deflection_Angle = 0 Then
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, Deflection_Angle * PI / 180)
        End If
        If Not arcangle = 360 Then
            part.Extension.RotateOrCopy(True, Groove_number / 2, False, 0, 0, 0, 0, 0, 1, arcangle / Groove_number * PI / 180)
            part.Extension.RotateOrCopy(True, Groove_number / 2, False, 0, 0, 0, 0, 0, 1, -arcangle / Groove_number * PI / 180)
        Else
            part.Extension.RotateOrCopy(True, Groove_number - 1, False, 0, 0, 0, 0, 0, 1, arcangle / Groove_number * PI / 180)
        End If
        AllCut(2)



        SelectPlane("front")
        SkeManger.InsertSketch(True)
        SkeManger.CreateCircleByRadius(0, inside_diameter / 2 + (Groove_Bottom_Long_Hight# + Dome_center_height# + Dome_Radius) / 2, 0, (Groove_Bottom_Long_Hight# + Dome_center_height# + Dome_Radius) / 2 + 0.001)
        If Not Deflection_Angle = 0 Then
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, Deflection_Angle * PI / 180)
        End If
        sketch_name_of_1_6_Partial_view_line = SkeManger.ActiveSketch
        feature_sno16pvl = sketch_name_of_1_6_Partial_view_line

        SkeManger.InsertSketch(True)
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        point12 = SkeManger.CreatePoint(0.04, diameter / 2 * 1.2, 0)
        point13 = SkeManger.CreatePoint(0, inside_diameter / 2 + Dome_center_height# + Dome_Radius#, 0)

        If Not rtg_gtol_symbol = "0" Then
            point13.Select4(False, Nothing)
            Dim myGtol As Object
            Dim myAnno As Annotation
            myGtol = part.InsertGtol()
            myGtol.SetFrameSymbols2(1, rtg_gtol_symbol, True, "", False, "", "", "", "")
            myGtol.SetFrameValues(1, rtg_gtol_value1, "", rtg_gtol_main, "", "")
            myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
            myGtol.SetFrameValues(2, "", "", "", "", "")
            myGtol.SetPTZHeight("", False)
            myGtol.SetCompositeFrame(False)
            myGtol.SetText(4, "")
            myGtol.SetBetweenTwoPoints(False, "", "")
            myAnno = myGtol.GetAnnotation()
            myAnno.SetPosition(point12.X, point12.Y, 0)
            myAnno.SetLeader3(2, 0, True, False, False, False)
        End If

        Dim number As String
        Dim myNote As Object
        number = Groove_number# & "槽均布"
        myNote = part.InsertNote(number)
        myNote.GetAnnotation().SetPosition(point12.X + 0.02, point12.Y + 0.02, 0)
        Anno = myNote.GetAnnotation()
        Anno.SetLeader3(0, 0, True, False, False, False)
        SkeManger.InsertSketch(True)

        point12.Select4(False, Nothing)
        point13.Select4(True, Nothing)
        part.BlankSketch()

        'Anno.SetLeaderAttachmentPointAtIndex(0, point2.X - 0.11, point2.Y - 0.13, 0)

        If arcangle = 360 Then
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            arc3 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height + Dome_Radius)
            arc3.Select4(False, Nothing)
            part.AddDimension2(inside_diameter# / 4 * Sin(70 * PI / 180), inside_diameter# / 4 * Cos（70 * PI / 180), 0)
            linecm = SkeManger.CreateLine(0, 0, 0, 0, diameter / 2, 0)
            linecl = SkeManger.CreateLine(0, 0, 0, diameter / 2 * Sin(360 / Groove_number * PI / 180), diameter / 2 * Cos(360 / Groove_number * PI / 180), 0)
            Lselect(linecl, False)
            Lselect(linecm, True)
            part.SketchManager.CreateConstructionGeometry()
            Lselect(linecl, False)
            Lselect(linecm, True)
            part.AddDimension2(inside_diameter / 3 * Sin(360 / Groove_number / 2 * PI / 180), inside_diameter / 3 * Cos(360 / Groove_number / 2 * PI / 180), 0)
        Else
            arc3 = SkeManger.CreateArc(0, 0, 0, (inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height + Dome_Radius) * Sin(-arcangle / 2 * PI / 180), (inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height + Dome_Radius) * Cos(-arcangle / 2 * PI / 180), 0,
                                         (inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height + Dome_Radius) * Sin(arcangle / 2 * PI / 180), (inside_diameter / 2 + Groove_Bottom_Long_Hight + Dome_center_height + Dome_Radius) * Cos(arcangle / 2 * PI / 180), 0, -1)


        End If



        SkeManger.InsertSketch(True)


    End Sub
    'Public Sub 圆顶槽(偏转角度,槽数,圆弧角度,直径,内直径,槽底宽,槽底短高,槽底长高,槽底尖宽,圆顶圆心高,圆顶半径)
    Public Sub Flat_Top_Groove(FTDeflection_Angle#, FTGroove_number#, arcangle#, inside_diameter#, FTgroove_top_rearc_diameter#, FTGroove_Bottom_Width#, FTGroove_Bottom_Short_Hight#, FTGroove_Bottom_Long_Hight#, FTBottom_tip_width#, FTGroove_Top_Width#, FTFillet_Radius#)
        If Not FTGroove_number = 0 Then
            Dim linec, line1, line2, line3, line4, line5, line6 As SketchLine
            'Dim c中心线, 1槽底右竖线, 2槽底左竖线, 3槽右短斜线, 4槽右长斜线,5槽顶线,6槽左长斜线 As SldWorks.SketchLine
            Dim arc1, arc_top As SketchSegment
            'Dim 1内圆,2槽顶圆 As SldWorks.SketchSegment
            Dim point1, point2, point3, point4, point5, point6, point7, point8, point9, point10, point11 As SketchPoint
            'Dim 1槽底右竖线起点, 2槽底左竖线起点, 3槽底右竖线终点, 4槽右短斜线起点, 5槽右短斜线终点, 6槽右长斜线起点, 7槽右长斜线终点,8槽顶线起点,9槽顶线终点,10槽左长斜线起点,11槽左长斜线终点 As SldWorks.SketchPoint
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 1, 0)
            ADDConstraints(1)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            line1 = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.015, 0)
            DisplayDimension = part.AddDimension2(0.01, 0.02, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Short_Hight)
            point1 = line1.GetStartPoint2
            point1.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            line1.select2(False, Nothing)
            ADDConstraints(3)
            line1.select2(False, Nothing)
            linec.select2(True, Nothing)
            DisplayDimension = part.AddDimension2(0.002, 0.02, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Width / 2)
            line2 = SkeManger.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
            point2 = line2.GetStartPoint2
            line1.select2(False, Nothing)
            line2.select2(True, Nothing)
            ADDConstraints(7)
            line2.select2(False, Nothing)
            ADDConstraints(3)
            point2.Select4(False, Nothing)
            point1.Select4(True, Nothing)
            linec.select2(True, Nothing)
            ADDConstraints(6)
            point3 = line1.GetEndPoint2
            line3 = SkeManger.CreateLine(0.01, 0.01, 0, 0.02, 0.02, 0)
            point4 = line3.GetStartPoint2
            point4.Select4(False, Nothing)
            point3.Select4(True, Nothing)
            ADDConstraints(8)
            point5 = line3.GetEndPoint2
            point5.Select4(False, Nothing)
            point1.Select4(True, Nothing)
            DisplayDimension = part.AddVerticalDimension2(0.03, inside_diameter, 0)
            Dimension = DisplayDimension.GetDimension2(0)
            Dimension.SetArcEndCondition(2, 2)
            DisplayDimension.GetAnnotation().SetPosition(0.02, inside_diameter / 2 + 0.001, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Long_Hight)
            point5.Select4(False, Nothing)
            linec.select2(True, Nothing)
            DisplayDimension = part.AddDimension2(0.003, inside_diameter / 2, 0)
            ChangeDimensionVaule(FTBottom_tip_width / 2)
            part.ClearSelection2(True)


            'line5 = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.01, 0, 0.01, inside_diameter / 2 + 0.01, 0)
            'DisplayDimension = part.AddDimension2(0, inside_diameter / 2 + 0.01, 0)
            'ChangeDimensionVaule(Groove_Top_Width)
            'point8 = line5.GetStartPoint2
            'point9 = line5.GetEndPoint2
            'point8.Select4(False, Nothing)
            'point9.Select4(True, Nothing)
            'Lselect(linec, True)
            'ADDConstraints(6)
            'Lselect(line5, False)
            'arc1.Select4(True, Nothing)
            'DisplayDimension = part.AddDimension2(0, inside_diameter / 2, 0)
            'Dimension = DisplayDimension.GetDimension2(0)
            'Dimension.SetArcEndCondition(1, 2)
            'DisplayDimension.GetAnnotation().SetPosition(0, inside_diameter / 2 - 0.01, 0)
            'ChangeDimensionVaule(Groove_Top_Hight + Groove_Bottom_Short_Hight + Groove_Bottom_Long_Hight)

            line4 = SkeManger.CreateLine(0.02, 0.02, 0, 0.025, 0.025, 0)
            point6 = line4.GetStartPoint2
            point7 = line4.GetEndPoint2
            point6.Select4(False, Nothing)
            point5.Select4(True, Nothing)
            ADDConstraints(8)
            arc_top = SkeManger.CreateCircleByRadius(0, 0, 0, FTgroove_top_rearc_diameter / 2)
            ADDConstraints(1)
            point7.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            ADDConstraints(5)
            point7.Select4(False, Nothing)
            linec.select2(True, Nothing)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2, 0)
            ChangeDimensionVaule(FTGroove_Top_Width / 2)
            line3.select2(False, Nothing)
            linec.select2(True, Nothing)
            ADDConstraints(9)

            line6 = SkeManger.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
            point10 = line6.GetStartPoint2
            point11 = line6.GetEndPoint2
            point10.Select4(False, Nothing)
            point6.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            point11.Select4(False, Nothing)
            point7.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            'Lselect(line4, False)
            'Lselect(line6, True)
            'Lselect(linec, True)
            'ADDConstraints(6)
            linec.select2(False, Nothing)
            part.EditDelete()
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            arc_top.Select4(False, Nothing)
            SkeManger.SketchTrim(0, FTgroove_top_rearc_diameter / 2, 0, 0)
            Getsketch = SkeManger.ActiveSketch
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select4(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i
            point4.Select4(False, Nothing)
            part.Extension.SelectByID2("", "SKETCHPOINT", -point4.X, point4.Y, 0, True, 0, Nothing, 0)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 - 0.01, 0)
            point6.Select4(False, Nothing)
            part.Extension.SelectByID2("", "SKETCHPOINT", -point6.X, point6.Y, 0, True, 0, Nothing, 0)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 - 0.02, 0)

            'point4.Select4(False, Nothing)
            'arc1.Select4(True, Nothing)
            'DisplayDimension = part.AddDimension2(FTGroove_Top_Width / 2, inside_diameter / 2, 0)
            'DisplayDimension.CenterText = True
            'Dimension = DisplayDimension.GetDimension2(0)
            'Dimension.SetArcEndCondition(2, 2)
            'MsgBox(1)
            'point6.Select4(False, Nothing)
            'arc1.Select4(True, Nothing)
            'DisplayDimension = part.AddDimension2(FTGroove_Top_Width / 2 + 0.005, inside_diameter / 2, 0)
            'DisplayDimension.CenterText = True
            'Dimension = DisplayDimension.GetDimension2(0)
            'Dimension.SetArcEndCondition(2, 2)
            'MsgBox(2)
            'point7.Select4(False, Nothing)
            'arc1.Select4(True, Nothing)
            'DisplayDimension = part.AddDimension2(FTGroove_Top_Width / 2 + 0.01, inside_diameter / 2 + FTGroove_Top_Hight / 2, 0)
            'DisplayDimension.CenterText = True
            'Dimension = DisplayDimension.GetDimension2(0)
            'Dimension.SetArcEndCondition(2, 2)

            point6.Select4(False, Nothing)
            point7.Select4(True, Nothing)
            DisplayDimension = part.AddVerticalDimension2(FTGroove_Top_Width / 2 + 0.01, inside_diameter / 2 + (FTgroove_top_rearc_diameter / 2 - inside_diameter / 2) / 2, 0)
            DisplayDimension.CenterText = True
            point4.Select4(False, Nothing)
            point6.Select4(True, Nothing)
            DisplayDimension = part.AddVerticalDimension2(FTGroove_Top_Width / 2 + 0.005, inside_diameter / 2 + FTGroove_Bottom_Long_Hight, 0)
            DisplayDimension.CenterText = True
            point1.Select4(False, Nothing)
            point4.Select4(True, Nothing)
            DisplayDimension = part.AddVerticalDimension2(FTGroove_Top_Width / 2, inside_diameter / 2, 0)
            DisplayDimension.CenterText = True
            If Not FTFillet_Radius = 0 Then
                'point6.Select4(False, Nothing)
                point7.Select4(True, Nothing)

                'part.Extension.SelectByID2("", "SKETCHPOINT", -point6.X, point6.Y, 0, True, 0, Nothing, 0)
                point11.Select4(True, Nothing)

                part.SketchManager.CreateFillet(FTFillet_Radius, 1)

            End If




            part.ClearSelection2(True)

            If Not FTDeflection_Angle = 0 Then
                Rotate_Select_Sketch(FTDeflection_Angle)

            End If
            part.ClearSelection2(True)
            'line01.Select4(False, Nothing)
            Dim P1 As SketchPoint
            Dim points As Object
            Getsketch = SkeManger.ActiveSketch
            points = Getsketch.GetSketchPoints2
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select2(True, Nothing)
            Next i
            For i = 0 To UBound(points)
                P1 = points(i)
                P1.Select4(True, Nothing)
            Next i


            If Not arcangle = 360 Then
                part.Extension.RotateOrCopy(True, FTGroove_number / 2, False, 0, 0, 0, 0, 0, 1, 360 / FTGroove_number * PI / 180)
                part.Extension.RotateOrCopy(True, FTGroove_number / 2, False, 0, 0, 0, 0, 0, 1, -360 / FTGroove_number * PI / 180)
            Else
                part.Extension.RotateOrCopy(True, FTGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / FTGroove_number * PI / 180)
            End If
            Getsketch = SkeManger.ActiveSketch
            FTGsketch = Getsketch

            AllCut(2)
            part.ClearSelection2(True)
        End If
    End Sub
    'Public Sub 平顶槽(偏转角度,槽数,圆弧角度,内直径,圆顶基准圆直径,槽底宽,槽底短高,槽底长高,槽底尖宽,槽顶宽,槽顶高)
    Public Sub UNFlat_Bottom_Groove(Relative_Y_axis_deflection_angle#, UNFslot_number#, diameter#, UNFshoulder_width#, UNFbottom_width#, UNFtop_width#, UNFone_Step_height#, UNFtwo_steps_height#, UNFthree_steps_height#, UNFrounded_R1#, UNFrounded_R2#)
        Dim arc As SldWorks.SketchArc
        Dim line1, line2, line3, line4 As SldWorks.SketchLine
        Dim Dline1, Dline2, Dline3 As SldWorks.SketchLine
        Dim line1Segment, line2Segment, line3Segment, line4Segment, arc1, line01, rounded1, rounded2, SketchSegment, Dline1Segment, Dline2Segment, Dline3Segment, Dline4Segment, Dline5Segment, Dline6Segment As SldWorks.SketchSegment

        Dim SketchSegments() As Object
        Dim Sketch As SldWorks.Sketch
        Dim [Boolean] As Boolean
        Dim point0, point1, point2 As SldWorks.SketchPoint
        swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False) '关闭捕捉
        part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        part.SketchManager.InsertSketch(True)
        line01 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.2, 0)
        line1 = part.SketchManager.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
        line2 = part.SketchManager.CreateLine(0.02, 0.02, 0, 0.02, 0.03, 0)
        line3 = part.SketchManager.CreateLine(0.03, 0.03, 0, 0.03, 0.04, 0)
        line4 = part.SketchManager.CreateLine(-0.001, 0, 0, 0.01, 0, 0)
        point0 = part.SketchManager.CreatePoint(0, diameter / 2, 0)
        line1Segment = line1
        line2Segment = line2
        line3Segment = line3
        line4Segment = line4
        line01.Select4(False, Nothing)
        part.SketchAddConstraints("sgFIXED") '固定
        arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter / 2)
        arc1.Select4(False, Nothing)
        part.SketchAddConstraints("sgFIXED") '固定
        point0.Select4(False, Nothing)
        part.SketchAddConstraints("sgFIXED") '固定

        point1 = line4.GetEndPoint2()
        point2 = line1.GetStartPoint2()
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        part.SketchAddConstraints("sgMERGEPOINTS") '合并
        line4Segment.Select4(False, Nothing)
        part.SketchAddConstraints("sgHORIZONTAL2D") '水平
        point1 = line1.GetEndPoint2()
        point2 = line2.GetStartPoint2()
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        part.SketchAddConstraints("sgMERGEPOINTS") '合并
        point1 = line2.GetEndPoint2()
        point2 = line3.GetStartPoint2()
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        part.SketchAddConstraints("sgMERGEPOINTS") '合并
        point1 = line3.GetEndPoint2()
        point1.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        part.SketchAddConstraints("sgCOINCIDENT") '重合
        line3Segment.Select4(False, Nothing)
        part.SketchAddConstraints("sgVERTICAL2D") '竖直

        point1 = line3.GetStartPoint2()
        point1.Select4(False, Nothing)
        point0.Select4(True, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.1, 0.01, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFthree_steps_height

        line2Segment.Select4(False, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.1, 0.02, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFtwo_steps_height

        line1Segment.Select4(False, Nothing)
        DisplayDimension = part.AddVerticalDimension2(0.1, 0.02, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFone_Step_height

        point1 = line4.GetStartPoint2()
        point1.Select4(False, Nothing)
        line01.Select4(True, Nothing)
        part.SketchAddConstraints("sgCOINCIDENT") '重合

        point1 = line4.GetEndPoint2()
        point1.Select4(False, Nothing)
        line01.Select4(True, Nothing)
        DisplayDimension = part.AddHorizontalDimension2(0.1, 0.01, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFbottom_width / 2

        point1 = line3.GetEndPoint2()
        point1.Select4(False, Nothing)
        line01.Select4(True, Nothing)
        DisplayDimension = part.AddHorizontalDimension2(0.1, 0.01, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFtop_width / 2

        point1 = line1.GetEndPoint2()
        point1.Select4(False, Nothing)
        line01.Select4(True, Nothing)
        DisplayDimension = part.AddHorizontalDimension2(0.1, 0.01, 0)
        Dimension = part.Parameter(DisplayDimension.GetNameForSelection())
        Dimension.SystemValue = UNFshoulder_width / 2

        point1 = line1.GetEndPoint2()
        point1.Select4(False, Nothing)
        Dline2 = part.SketchManager.CreateCenterLine(point1.X, point1.Y, 0, point1.X + 0.001, point1.Y, 0)
        Dline2Segment = Dline2
        Dline2Segment.Select4(False, Nothing)
        part.SketchAddConstraints("sgFIXED") '固定

        point1 = line4.GetEndPoint2
        Dline3 = part.SketchManager.CreateCenterLine(-point1.X, point1.Y, 0, -point1.X, point1.Y + 0.001, 0)
        Dline5Segment = Dline3


        point1 = line1.GetEndPoint2()
        point1.Select4(False, Nothing)
        rounded1 = part.SketchManager.CreateFillet(UNFrounded_R1, 1)
        point1 = line1.GetStartPoint2()
        point1.Select4(False, Nothing)
        rounded2 = part.SketchManager.CreateFillet(UNFrounded_R2, 1)

        line1Segment.Select4(False, Nothing)
        line2Segment.Select4(True, Nothing)
        line3Segment.Select4(True, Nothing)
        line4Segment.Select4(True, Nothing)
        If Not rounded1 Is Nothing Then
            rounded1.Select4(True, Nothing)
        Else
        End If
        If Not rounded2 Is Nothing Then
            rounded2.Select4(True, Nothing)
        Else
        End If
        line01.Select4(True, Nothing)
        part.SketchMirror()

        arc1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, 0, -diameter / 2, 0) '修剪到最近端

        'part.ClearSelection2(True)
        ''line01.Select4(False, Nothing)
        'Dim P1 As SketchPoint
        'Dim points As Object
        'Getsketch = SkeManger.ActiveSketch
        'points = Getsketch.GetSketchPoints2
        'SketchSegments = Getsketch.GetSketchSegments
        'For i = 0 To UBound(SketchSegments)
        '    SketchSegment = SketchSegments(i)
        '    SketchSegment.Select2(False, Nothing)
        '    part.SketchConstraintsDelAll()
        'Next i
        'MsgBox(1)
        'For i = 0 To UBound(points)
        '    P1 = points(i)
        '    P1.Select4(False, Nothing)
        '    part.SketchConstraintsDelAll()
        'Next i
        'MsgBox(1)
        Exterminate(1)


        point1 = line4.GetEndPoint2
        Dline1 = part.SketchManager.CreateCenterLine(point1.X, point1.Y, 0, point1.X + 0.001, point1.Y, 0)
        Dline1Segment = Dline1
        Dline2Segment.Select4(False, Nothing)
        Dline1Segment.Select4(True, Nothing)
        part.AddDimension2(point1.X + 0.01, (point1.Y + Dline2.IGetEndPoint2.Y) / 2, 0)

        point2 = line2.GetEndPoint2
        point2.Select4(False, Nothing)
        Dline2Segment.Select4(True, Nothing)
        part.AddDimension2(point2.X + 0.02, (point2.Y + Dline2.IGetEndPoint2.Y) / 2, 0)


        point1 = line3.GetEndPoint2
        Dline1 = part.SketchManager.CreateCenterLine(-point1.X, point1.Y, 0, -point1.X, point1.Y + 0.001, 0)
        Dline3Segment = Dline1
        point1.Select4(False, Nothing)
        Dline3Segment.Select4(True, Nothing)
        part.AddDimension2(0, point1.Y + 0.01, 0)

        point1 = Dline2.GetStartPoint2
        Dline1 = part.SketchManager.CreateCenterLine(-point1.X, point1.Y, 0, -point1.X, point1.Y - 0.001, 0)
        Dline4Segment = Dline1
        point1.Select4(False, Nothing)
        Dline4Segment.Select4(True, Nothing)
        part.AddDimension2(0, point1.Y - 0.005, 0)

        point1 = Dline3.GetStartPoint2
        Dline1 = part.SketchManager.CreateCenterLine(-point1.X, point1.Y, 0, -point1.X, point1.Y + 0.001, 0)
        Dline6Segment = Dline1
        Dline6Segment.Select4(False, Nothing)
        Dline5Segment.Select4(True, Nothing)
        part.AddDimension2(0, point1.Y + 0.005, 0)


        If Not rounded2 Is Nothing Then
            arc = rounded2
            point1 = arc.IGetCenterPoint2
            rounded2.Select4(True, Nothing)
            part.AddDimension2(point1.X, point1.Y, 0)
        Else
        End If
        If Not rounded1 Is Nothing Then
            arc = rounded1
            point1 = arc.IGetCenterPoint2
            rounded1.Select4(True, Nothing)
            part.AddDimension2(point1.X, point1.Y, 0)
        Else
        End If





        line01.Select4(False, Nothing)
        line1Segment.SelectChain(True, Nothing)
        Dline2Segment.Select4(True, Nothing)
        Dline1Segment.Select4(True, Nothing)
        Dline3Segment.Select4(True, Nothing)
        Dline4Segment.Select4(True, Nothing)
        Dline5Segment.Select4(True, Nothing)
        SelectionMgr.SetSelectedObjectMark(1, 2, 0)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Relative_Y_axis_deflection_angle / 180)

        line1Segment.SelectChain(False, Nothing)
        part.Extension.RotateOrCopy(True, UNFslot_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / UNFslot_number * PI / 180)
        Getsketch = SkeManger.ActiveSketch
        UNFsketch = Getsketch
        AllCut(2)
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        Getsketch = SkeManger.ActiveSketch
        UNFarc_sketch = Getsketch
        SkeManger.CreateCircleByRadius(0, diameter / 2 - (UNFone_Step_height + UNFtwo_steps_height + UNFthree_steps_height) / 2, 0, (UNFone_Step_height + UNFtwo_steps_height + UNFthree_steps_height) / 2 + 0.001)


    End Sub
    'Public Sub 反向平顶槽(相对Y轴偏转角度#, 槽口数#, 外径#, 肩宽#, 底宽#, 顶宽#, 一阶梯高#, 二阶梯高#, 三阶梯高#, 圆角R1#, 圆角R2#)
    Public Sub 槽底外凸型平顶槽(FTDeflection_Angle#, FTGroove_number#, arcangle#, inside_diameter#, FTgroove_top_rearc_diameter#, FTGroove_Bottom_Width#, FTGroove_Bottom_Short_Hight#, FTGroove_Bottom_Long_Hight#, FTGroove_Bottom_Angle#, FTFillet_Radius#)
        If Not FTGroove_number = 0 Then
            Dim linec, line1, line2, line3, line4, line5, line6 As SketchLine
            'Dim c中心线, 1槽右竖线, 2槽左竖线, 3槽底右短竖线, 4槽底右斜线,5槽顶线,6槽底右水平线 As SldWorks.SketchLine
            Dim arc1, arc_top As SketchSegment
            'Dim 1内圆,2槽顶圆 As SldWorks.SketchSegment
            Dim point1, point2, point3, point4, point5, point6, point7, point8, point9, point10, point11 As SketchPoint
            'Dim 1槽右竖线起点, 2槽右竖线终点, 3槽左竖线起点, 4槽左竖线终点, 5槽右斜线起点, 6槽右斜线终点, 7槽底右水平线起点,8槽底右水平线终点,9槽顶线终点, As SldWorks.SketchPoint
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 1, 0)
            ADDConstraints(1)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            arc_top = SkeManger.CreateCircleByRadius(0, 0, 0, FTgroove_top_rearc_diameter / 2)
            ADDConstraints(1)
            line1 = SkeManger.CreateLine(0.005, 0.005, 0, 0.005, 0.001, 0)
            ADDConstraints(3)
            point1 = line1.GetStartPoint2
            point2 = line1.GetEndPoint2
            point1.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            point2.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            ADDConstraints(5) '重合
            Lselect(linec, False)
            Lselect(line1, True)
            DisplayDimension = part.AddDimension2(0.005, inside_diameter / 2 + 0.005, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Width / 2)
            line2 = SkeManger.CreateLine(-0.005, 0.005, 0, -0.005, 0.001, 0)
            ADDConstraints(3)
            point3 = line2.GetStartPoint2
            point4 = line2.GetEndPoint2
            point3.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            point4.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            ADDConstraints(5) '重合
            Lselect(linec, False)
            Lselect(line2, True)
            DisplayDimension = part.AddDimension2(-0.005, inside_diameter / 2 + 0.005, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Width / 2)
            'Lselect(linec, False)
            'Lselect(line1, True)
            'ADDConstraints(9)

            line6 = SkeManger.CreateLine(0.005, inside_diameter / 2, 0, 0.01, inside_diameter / 2, 0)
            ADDConstraints(2)
            point7 = line6.GetStartPoint2
            point8 = line6.GetEndPoint2
            point7.Select4(False, Nothing)
            Lselect(line1, True)
            ADDConstraints(5)
            Lselect(line6, False)
            point1.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Long_Hight + FTGroove_Bottom_Short_Hight)

            line4 = SkeManger.CreateLine(0.005, inside_diameter / 2 + 0.001, 0, 0.008, inside_diameter / 2 + 0.005, 0)
            point5 = line4.GetStartPoint2
            point6 = line4.GetEndPoint2
            point5.Select4(False, Nothing)
            Lselect(line1, True)
            ADDConstraints(5)
            point5.Select4(False, Nothing)
            point1.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2 - 0.01, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Short_Hight)
            point6.Select4(False, Nothing)
            Lselect(line6, True)
            ADDConstraints(5)
            Lselect(line4, False)
            Lselect(line1, True)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(FTGroove_Bottom_Angle * PI / 180)
            point6.Select4(False, Nothing)
            point8.Select4(True, Nothing)
            ADDConstraints(8)
            Lselect(line4, False)
            Lselect(line6, True)
            Lselect(linec, True)
            ADDConstraints(9)

            Exterminate(1)
            Lselect(line1, False)
            SkeManger.SketchTrim(0, FTGroove_Bottom_Width / 2, point7.Y - 0.001, 0)
            Lselect(line2, False)
            SkeManger.SketchTrim(0, -FTGroove_Bottom_Width / 2, point7.Y - 0.001, 0)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            arc_top.Select4(False, Nothing)
            SkeManger.SketchTrim(0, FTgroove_top_rearc_diameter / 2, 0, 0)
            point2.Select4(False, Nothing)
            point4.Select4(True, Nothing)
            part.SketchManager.CreateFillet(FTFillet_Radius, 1)
            part.ViewZoomTo2(0, 0, 0, -point6.X, point6.Y, 0)
            part.Extension.SelectByID2("", "SKETCHPOINT", -point6.X, point6.Y, 0, False, 0, Nothing, 0)
            point6.Select4(True, Nothing)
            part.SketchManager.CreateFillet(FTFillet_Radius, 1)

            Lselect(line1, False)
            Lselect(line2, True)
            part.AddDimension2(0, point2.Y + 0.005, 0)
            point1.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(point1.X + 0.01, point2.Y - 0.01, 0)
            Dimension = DisplayDimension.GetDimension2(0)
            Dimension.SetArcEndCondition(2, 2)
            Anno = DisplayDimension.GetAnnotation
            Anno.SetPosition2(point1.X + 0.01, point2.Y - 0.01, 0)
            DisplayDimension.CenterText = True

            Lselect(line4, False)
            Lselect(line1, True)
            DisplayDimension = part.AddDimension2(point6.X, point6.Y + 0.01, 0)
            DisplayDimension.CenterText = True
            part.Extension.SelectByID2("", "SKETCHPOINT", -point1.X, point1.Y, 0, False, 0, Nothing, 0)
            part.ViewZoomTo2(-point5.X, point5.Y, 0, -point5.X, point5.Y, 0)
            Dim i As Double
            i = 1
            Do While i <= 10
                part.ViewZoomin()
                i += 1
            Loop
            part.Extension.SelectByID2("", "SKETCHPOINT", -point5.X, point5.Y, 0, True, 0, Nothing, 0)
            part.AddDimension2(-point1.X - 0.005, point1.Y - 0.01, 0)
            part.Extension.SelectByID2("", "SKETCHPOINT", -point5.X, point5.Y, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("", "SKETCHPOINT", -point7.X, point7.Y, 0, True, 0, Nothing, 0)
            DisplayDimension = part.AddDimension2(-point1.X - 0.01, point7.Y - 0.001, 0)
            DisplayDimension.CenterText = True
            i = 1
            Do While i <= 10
                part.ViewZoomout()
                i += 1
            Loop
            If Not FTDeflection_Angle = 0 Then
                Rotate_Select_Sketch(FTDeflection_Angle)

            End If
            part.ClearSelection2(True)

            Dim P1 As SketchPoint
            Dim points As Object
            Getsketch = SkeManger.ActiveSketch
            points = Getsketch.GetSketchPoints2
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select2(True, Nothing)
            Next i
            For i = 0 To UBound(points)
                P1 = points(i)
                P1.Select4(True, Nothing)
            Next i


            If Not arcangle = 360 Then
                part.Extension.RotateOrCopy(True, FTGroove_number / 2, False, 0, 0, 0, 0, 0, 1, 360 / FTGroove_number * PI / 180)
                part.Extension.RotateOrCopy(True, FTGroove_number / 2, False, 0, 0, 0, 0, 0, 1, -360 / FTGroove_number * PI / 180)
            Else
                part.Extension.RotateOrCopy(True, FTGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / FTGroove_number * PI / 180)
            End If
            Getsketch = SkeManger.ActiveSketch
            FTGsketch = Getsketch

            AllCut(2)
            part.ClearSelection2(True)
        End If
    End Sub
    Public Sub T_Table_Inside(T_table_number#, TT_inside_under_diameter#, TT_inside_top_diameter#, T_table_under_width#, T_table_under_short_height#, T_table_long_width#)
        If Not T_table_number = 0 Then
            Dim arc_inund, arc_intop As SketchSegment
            Dim linever_short_left, linever_short_right, linehor_left, linehor_right, linever_long_left, linever_long_right, linec As SketchLine
            Dim point_ver_short_left_star, point_ver_short_right_star, point_ver_short_right_end, point_hor_right_star, point_hor_right_end, point_ver_long_right_star, point_ver_long_right_end, point_ver_long_left_star, point_ver_long_left_end, point_hor_left_star, point_hor_left_end As SketchPoint
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            SkeManger.CreateCircleByRadius(0, 0, 0, TT_inside_top_diameter / 2)
            AllCut(2)
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            arc_intop = SkeManger.CreateCircleByRadius(0, 0, 0, TT_inside_top_diameter# / 2)
            ADDConstraints(1)
            arc_inund = SkeManger.CreateCircleByRadius(0, 0, 0, TT_inside_under_diameter# / 2)
            ADDConstraints(1)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            ADDConstraints(1)
            linever_short_right = SkeManger.CreateLine(0.001, TT_inside_under_diameter / 2, 0, 0.001, TT_inside_under_diameter / 2 + 0.001, 0)
            Lselect(linever_short_right, False)
            DisplayDimension = part.AddDimension2(0.01, TT_inside_under_diameter / 2, 0)
            ChangeDimensionVaule(T_table_under_short_height)
            point_ver_short_right_star = linever_short_right.GetStartPoint2
            point_ver_short_right_end = linever_short_right.GetEndPoint2
            linever_short_left = SkeManger.CreateLine(0.01, 0, 0, 0.01, 0.01, 0)
            point_ver_short_left_star = linever_short_left.GetStartPoint2
            point_ver_short_right_star.Select4(False, Nothing)
            arc_inund.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(linever_short_left, False)
            Lselect(linever_short_right, True)
            Lselect(linec, True)
            ADDConstraints(6)
            Lselect(linever_short_left, False)
            Lselect(linever_short_right, True)
            DisplayDimension = part.AddDimension2(0, TT_inside_under_diameter / 2 - 0.01, 0)
            ChangeDimensionVaule(T_table_under_width#)
            Lselect(linever_short_left, False)
            Lselect(linever_short_right, True)
            ADDConstraints(7)
            point_ver_short_left_star.Select4(False, Nothing)
            arc_inund.Select4(True, Nothing)
            ADDConstraints(5)

            linehor_right = SkeManger.CreateLine(0, TT_inside_under_diameter / 2, 0, 0.01, TT_inside_under_diameter / 2, 0)
            ADDConstraints(2)
            point_hor_right_star = linehor_right.GetStartPoint2
            point_hor_right_end = linehor_right.GetEndPoint2
            point_hor_right_end.Select4(False, Nothing)
            point_ver_short_right_end.Select4(True, Nothing)
            ADDConstraints(8)
            Lselect(linehor_right, False)
            DisplayDimension = part.AddDimension2(0.01, 0.01, 0)
            ChangeDimensionVaule(T_table_under_width / 2 - T_table_long_width / 2)
            linehor_right = SkeManger.CreateLine(0, TT_inside_under_diameter / 2, 0, -0.01, TT_inside_under_diameter / 2, 0)
            point_hor_left_star = linehor_right.GetStartPoint2
            point_hor_left_end = linehor_right.GetEndPoint2
            point_hor_left_star.Select4(False, Nothing)
            point_hor_right_star.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            point_hor_left_end.Select4(False, Nothing)
            point_hor_right_end.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)

            linever_long_right = SkeManger.CreateLine(0, TT_inside_under_diameter / 2, 0, 0, TT_inside_under_diameter / 2 + 0.01, 0)
            ADDConstraints(3)
            point_ver_long_right_star = linever_long_right.GetStartPoint2
            point_ver_long_right_end = linever_long_right.GetEndPoint2
            point_ver_long_right_star.Select4(False, Nothing)
            point_hor_right_star.Select4(True, Nothing)
            ADDConstraints(8)
            point_ver_long_right_end.Select4(False, Nothing)
            arc_intop.Select4(True, Nothing)
            ADDConstraints(5)

            linever_long_left = SkeManger.CreateLine(0, TT_inside_under_diameter / 2, 0, 0, TT_inside_under_diameter / 2 + 0.01, 0)
            ADDConstraints(3)
            point_ver_long_left_star = linever_long_left.GetStartPoint2
            point_ver_long_left_end = linever_long_left.GetEndPoint2
            point_ver_long_left_star.Select4(False, Nothing)
            point_ver_long_right_star.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            point_ver_long_left_end.Select4(False, Nothing)
            point_ver_long_right_end.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            arc_intop.Select4(False, Nothing)
            SkeManger.SketchTrim(0, TT_inside_top_diameter / 2, 0, 0)
            arc_inund.Select4(False, Nothing)
            SkeManger.SketchTrim(0, TT_inside_under_diameter / 2, 0, 0)
            part.ClearSelection2(True)

            Exterminate(1)
            Lselect(linever_short_right, False)
            DisplayDimension = part.AddDimension2(T_table_under_width / 2 + 0.02, TT_inside_under_diameter / 2 - 0.02, 0)
            Lselect(linever_short_left, False)
            Lselect(linever_short_right, True)
            DisplayDimension = part.AddDimension2(0, TT_inside_under_diameter / 2 - 0.02, 0)
            Lselect(linever_long_left, False)
            Lselect(linever_long_right, True)
            DisplayDimension = part.AddDimension2(0, TT_inside_under_diameter / 2 + 0.01, 0)
            arc_intop.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(-TT_inside_under_diameter / 4, TT_inside_under_diameter / 4, 0)
            DisplayDimension.Diametric = True
            arc_inund.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(-TT_inside_under_diameter / 4, 0.02, 0)
            part.EditDimensionProperties2(0, 0, 0, "", "", False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
            SetTolvalue("8", "", "h7")
            DisplayDimension.Diametric = True
            DisplayDimension.ShowTolParenthesis = True
            arc_inund.SelectChain(True, Nothing)
            part.Extension.RotateOrCopy(True, T_table_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / T_table_number * PI / 180)
            AllExtrusion(1)


        End If

    End Sub
    'Public sub 内圆T形凸台(凸台数，T凸台底圆直径，T凸台顶圆直径，T凸台底宽，T凸台底短高，T凸台长高)
    Public Sub Connected_Wedge(diameter#, arcangle#, End_cuts#, Length_right_centerAogrooveline#, Wedge_reference_radius#, Length_left_centerAogrooveline#, Ao_wedge_width#, Length_right_centerTugrooveline#, Length_left_centerTugrooveline#, Tu_wedge_width#)
        Setting(0)
        Dim line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12, linec1, linec2 As SketchLine
        'Dim 1凸台左边线,2切割后凸台左边线,3凸楔底线,4凸楔右中线,5凸楔左中线,6凸楔上线,7凸台右边线,8切割后凸台右边线,9凹楔底线,10凹楔右中线,11凹楔左中线,12凹楔上线, linec1, linec2 As SldWorks.SketchLine
        Dim point1, point2, point3, point4, point5, point6, point7, point8, point9, point10, point11, point12,
            point13, point14, point15, point16, point17, point18, point19, point20, point21, point22, point23, point24 As SketchPoint
        'Dim 1凸台左边线终点, 2切割后凸台左边线终点, 3凸楔底线起点, 4凸楔左中线起点, 5凸楔左中线终点, 6凸楔右中线起点, 7凸楔右中线终点, 8凸楔上线起点, 9凸楔上线终点, 10凸台右边线终点, 11切割后凸台右边线终点, 12切割后凸台左边线起点,
        '13凹楔底线起点,14凹楔底线终点,15凹楔左中线起点,16凹楔左中线终点,17凹楔右中线起点,18凹楔右中线终点,19凹楔上线起点,20凹楔上线终点,21切割后凸台右边线起点,22凸台右边线起点,23凸台左边线起点,24凸楔底线终点 As SldWorks.SketchPoint
        Dim arc1, arc2, arcre As SketchSegment
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        line7 = SkeManger.CreateCenterLine(0, 0, 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        ADDConstraints(1)
        line8 = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
        point11 = line8.GetEndPoint2
        point10 = line7.GetEndPoint2
        point11.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5)
        point21 = line8.GetStartPoint2
        point22 = line7.GetStartPoint2
        point21.Select4(False, Nothing)
        point22.Select4(True, Nothing)
        ADDConstraints(8)
        point11.Select4(False, Nothing)
        point10.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180) + 0.001, 0)
        ChangeDimensionVaule(End_cuts)
        line8.select2(False, Nothing)
        ADDConstraints(1)
        line10 = SkeManger.CreateLine(0.01, 0, 0, 0.02, 0, 0)
        line10.select2(False, Nothing)
        line8.select2(True, Nothing)
        ADDConstraints(12) '共线
        part.ClearSelection2(True)
        line10.select2(False, Nothing)
        Dim DisplayDimension2 As DisplayDimension
        DisplayDimension2 = part.AddDimension2(Wedge_reference_radius * Sin((arcangle / 2 + 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 - 5) * PI / 180), 0)
        DisplayDimension2.GetDimension2(0).SystemValue = Length_right_centerAogrooveline

        'DisplayDimension.GetAnnotation().setposition(Wedge_reference_radius * Sin((arcangle / 2 + 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 + 5) * PI / 180), 0)

        point17 = line10.GetStartPoint2
        point17.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0.015, 0.025, 0)
        ChangeDimensionVaule(Wedge_reference_radius - Length_right_centerAogrooveline / 2)
        line11 = SkeManger.CreateLine(0, 0.01, 0, 0.01, 0.02, 0)
        line11.select2(False, Nothing)
        line10.select2(True, Nothing)
        ADDConstraints(15)
        line11.select2(False, Nothing)
        DisplayDimension = part.AddDimension2(Wedge_reference_radius / 4 * Sin((arcangle / 4) * PI / 180), Wedge_reference_radius / 4 * Cos((arcangle / 4) * PI / 180), 0)
        ChangeDimensionVaule(Length_left_centerAogrooveline)
        point15 = line11.GetStartPoint2
        line11.select2(False, Nothing)
        line10.select2(True, Nothing)
        Dim displaydimension1 As DisplayDimension
        displaydimension1 = part.AddDimension2((diameter / 2) * Sin((arcangle / 2) * PI / 180), (diameter / 2) * Cos((arcangle / 2) * PI / 180), 0)
        displaydimension1.GetDimension2(0).SystemValue = Ao_wedge_width

        arc2 = SkeManger.CreateCircleByRadius(0, 0, 0, Wedge_reference_radius)
        ADDConstraints(1)
        part.SketchManager.CreateConstructionGeometry()
        point16 = line11.GetEndPoint2
        linec1 = SkeManger.CreateCenterLine(0.02, 0.02, 0, 0.03, 0.02, 0)
        linec1.select2(False, Nothing)
        line11.select2(True, Nothing)
        ADDConstraints(14)
        linec1.select2(False, Nothing)
        arc2.Select4(True, Nothing)
        ADDConstraints(4)
        point15.Select4(False, Nothing)
        point16.Select4(True, Nothing)
        linec1.select2(True, Nothing)
        ADDConstraints(6)

        point18 = line10.GetEndPoint2
        line9 = SkeManger.CreateLine(0, 0.01, 0, 0.01, 0.01, 0)
        line12 = SkeManger.CreateLine(0, 0.02, 0, 0.01, 0.02, 0)
        point20 = line12.GetEndPoint2
        point19 = line12.GetStartPoint2
        point13 = line9.GetStartPoint2
        point14 = line9.GetEndPoint2
        point20.Select4(False, Nothing)
        point18.Select4(True, Nothing)
        ADDConstraints(8)
        'displaydimension1.GetAnnotation.setposition((diameter / 2 - 0.01) * Sin((arcangle / 2) * PI / 180), (diameter / 2 - 0.01) * Cos((arcangle / 2) * PI / 180), 0)

        point19.Select4(False, Nothing)
        point16.Select4(True, Nothing)
        ADDConstraints(8)
        point13.Select4(False, Nothing)
        point15.Select4(True, Nothing)
        ADDConstraints(8)
        point14.Select4(False, Nothing)
        point17.Select4(True, Nothing)
        ADDConstraints(8)

        Getsketch = SkeManger.ActiveSketch
        SketchSegments = Getsketch.GetSketchSegments
        For i = 0 To UBound(SketchSegments)
            SketchSegment = SketchSegments(i)
            SketchSegment.Select4(False, Nothing)
            part.SketchConstraintsDelAll()
        Next i
        line11.select2(False, Nothing)
        line10.select2(True, Nothing)
        part.AddDimension2((diameter / 2 + 0.01) * Sin((arcangle / 2 + 5) * PI / 180), (diameter / 2 + 0.01) * Cos((arcangle / 2 + 5) * PI / 180), 0)
        line10.select2(False, Nothing)
        part.AddDimension2(Wedge_reference_radius * Sin((arcangle / 2 + 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 + 5) * PI / 180), 0)
        line11.select2(False, Nothing)
        part.AddDimension2(Wedge_reference_radius * Sin((arcangle / 2 - 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 - 5) * PI / 180), 0)
        point11.Select4(False, Nothing)
        point10.Select4(True, Nothing)
        part.AddDimension2((diameter / 2 + 0.02) * Sin((arcangle / 2 + 5) * PI / 180), (diameter / 2 + 0.02) * Cos((arcangle / 2 + 5) * PI / 180) + 0.001, 0)

        arc1.Select4(False, Nothing)
        arc2.Select4(True, Nothing)
        linec1.select2(True, Nothing)
        'line7.select2(True, Nothing)
        'line8.select2(True, Nothing)
        part.EditDelete()

        AllCut(2)

        SelectPlane("front")
        SkeManger.InsertSketch(True)
        arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        line1 = SkeManger.CreateCenterLine(0, 0, 0, -diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        ADDConstraints(1)
        line2 = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
        point2 = line2.GetEndPoint2
        point1 = line1.GetEndPoint2
        point2.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5)
        point12 = line2.GetStartPoint2
        point23 = line1.GetStartPoint2
        point12.Select4(False, Nothing)
        point23.Select4(True, Nothing)
        ADDConstraints(8)
        point2.Select4(False, Nothing)
        point1.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(-diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180) + 0.001, 0)
        ChangeDimensionVaule(End_cuts)

        line2.select2(False, Nothing)
        ADDConstraints(1)
        line4 = SkeManger.CreateLine(-0.01, 0, 0, -0.02, 0, 0)
        line4.select2(False, Nothing)
        line2.select2(True, Nothing)
        ADDConstraints(12) '共线
        part.ClearSelection2(True)
        line4.select2(False, Nothing)
        DisplayDimension = part.AddDimension2(-Wedge_reference_radius * Sin((arcangle / 2 - 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 - 5) * PI / 180), 0)
        ChangeDimensionVaule(Length_right_centerTugrooveline#)
        point6 = line4.GetStartPoint2
        point6.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0.015, 0.025, 0)
        ChangeDimensionVaule(Wedge_reference_radius - Length_right_centerTugrooveline# / 2)
        line5 = SkeManger.CreateLine(0, -0.01, 0, -0.01, -0.02, 0)
        line5.select2(False, Nothing)
        line4.select2(True, Nothing)
        ADDConstraints(15)
        line5.select2(False, Nothing)
        DisplayDimension = part.AddDimension2(-Wedge_reference_radius * Sin((arcangle / 2 + 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 + 5) * PI / 180), 0)
        ChangeDimensionVaule(Length_left_centerTugrooveline)
        point4 = line5.GetStartPoint2
        line5.select2(False, Nothing)
        line4.select2(True, Nothing)
        DisplayDimension = part.AddDimension2(-(Wedge_reference_radius) * Sin((arcangle / 2 + 5) * PI / 180), (Wedge_reference_radius) * Cos((arcangle / 2 + 5) * PI / 180), 0)
        ChangeDimensionVaule(Tu_wedge_width)
        arc2 = SkeManger.CreateCircleByRadius(0, 0, 0, Wedge_reference_radius)
        ADDConstraints(1)
        part.SketchManager.CreateConstructionGeometry()
        point5 = line5.GetEndPoint2
        linec2 = SkeManger.CreateCenterLine(0.02, 0.02, 0, 0.03, 0.02, 0)
        linec2.select2(False, Nothing)
        line5.select2(True, Nothing)
        ADDConstraints(14)
        linec2.select2(False, Nothing)
        arc2.Select4(True, Nothing)
        ADDConstraints(4)
        point4.Select4(False, Nothing)
        point5.Select4(True, Nothing)
        linec2.select2(True, Nothing)
        ADDConstraints(6)
        point7 = line4.GetEndPoint2
        line3 = SkeManger.CreateLine(0, 0.01, 0, 0.01, 0.01, 0)
        line6 = SkeManger.CreateLine(0, 0.02, 0, 0.01, 0.02, 0)
        point9 = line6.GetEndPoint2
        point8 = line6.GetStartPoint2
        point3 = line3.GetStartPoint2
        point24 = line3.GetEndPoint2
        point9.Select4(False, Nothing)
        point7.Select4(True, Nothing)
        ADDConstraints(8)
        point8.Select4(False, Nothing)
        point4.Select4(True, Nothing)
        ADDConstraints(8)
        point3.Select4(False, Nothing)
        point5.Select4(True, Nothing)
        ADDConstraints(8)
        point24.Select4(False, Nothing)
        point6.Select4(True, Nothing)
        ADDConstraints(8)

        Getsketch = SkeManger.ActiveSketch
        SketchSegments = Getsketch.GetSketchSegments
        For i = 0 To UBound(SketchSegments)
            SketchSegment = SketchSegments(i)
            SketchSegment.Select4(False, Nothing)
            part.SketchConstraintsDelAll()
        Next i
        line4.select2(False, Nothing)
        line5.select2(True, Nothing)
        part.AddDimension2(-(diameter / 2 + 0.01) * Sin((arcangle / 2 - 5) * PI / 180), (diameter / 2 + 0.01) * Cos((arcangle / 2 - 5) * PI / 180), 0)
        line5.select2(False, Nothing)
        part.AddDimension2(-Wedge_reference_radius * Sin((arcangle / 2 + 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 + 5) * PI / 180), 0)
        line4.select2(False, Nothing)
        part.AddDimension2(-Wedge_reference_radius * Sin((arcangle / 2 - 5) * PI / 180), Wedge_reference_radius * Cos((arcangle / 2 - 5) * PI / 180), 0)
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        part.AddDimension2(-(diameter / 2 + 0.02) * Sin((arcangle / 2 - 5) * PI / 180), (diameter / 2 + 0.02) * Cos((arcangle / 2 - 5) * PI / 180) + 0.001, 0)



        arc1.Select4(False, Nothing)
        arc2.Select4(True, Nothing)
        linec2.select2(True, Nothing)
        'line1.select2(True, Nothing)
        'line2.select2(True, Nothing)
        part.EditDelete()
        AllExtrusion(1)
        SelectPlane("front")
        SkeManger.InsertSketch(True)
        arcre = SkeManger.CreateArc(0, 0, 0, Wedge_reference_radius * Sin(arcangle / 2 * PI / 180), Wedge_reference_radius * Cos(arcangle / 2 * PI / 180), 0, -Wedge_reference_radius * Sin(arcangle / 2 * PI / 180), Wedge_reference_radius * Cos(arcangle / 2 * PI / 180), 0, 1)
        part.AddDimension2(-Wedge_reference_radius / 2 * Sin((arcangle / 2 + 10) * PI / 180), Wedge_reference_radius / 2 * Cos((arcangle / 2 + 10) * PI / 180), 0)

        arcre.Select4(False, Nothing)
        part.SketchManager.CreateConstructionGeometry()


    End Sub
    'Public Sub 连接楔(外圆直径,圆弧角度,两端切除尺寸, 凹楔右中线长度, 楔基准半径, 凹楔左中线长度, 凹楔宽度, 凸楔右中线长度, 凸楔左中线长度,凸楔宽度)
    Public Sub Out_Rectangle_Positioning_Groove(diameter#, Groove_Depth#, Groove_under_length#)
        Dim arc1 As SketchSegment
        Dim line_under, line_right, line_left, linec As SketchLine
        Dim point_und_star, point_und_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
        line_under = SkeManger.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
        line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
        line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.01, 0.02, 0)
        point_und_star = line_under.GetStartPoint2
        point_und_end = line_under.GetEndPoint2
        point_left_star = line_left.GetStartPoint2
        point_left_end = line_left.GetEndPoint2
        point_rig_star = line_right.GetStartPoint2
        point_rig_end = line_right.GetEndPoint2
        point_und_star.Select4(False, Nothing)
        point_und_end.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6) '对称
        Lselect(line_under, False)
        DisplayDimension = part.AddDimension2(0, 0.1, 0)
        ChangeDimensionVaule(Groove_under_length)
        Lselect(line_under, False)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0.02, 0.01, 0)
        ChangeDimensionVaule(diameter / 2 - Groove_Depth)
        Lselect(line_right, False)
        Lselect(line_left, True)
        ADDConstraints(3) '竖直
        point_left_end.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5) '重合
        point_rig_end.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5)
        point_und_star.Select4(False, Nothing)
        point_left_star.Select4(True, Nothing)
        ADDConstraints(5)
        point_und_end.Select4(False, Nothing)
        point_rig_star.Select4(True, Nothing)
        ADDConstraints(5)
        arc1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, diameter / 2, 0, 0)
        AllCut(2)

    End Sub
    'Public Sub 外圆矩形定位槽(外圆直径,定位槽深,槽底长度)
    Public Sub Out_Bottom_Groove(number#, diameter#, underdiameter#, angle#, rectangle_deep#, rectangle_width#, code$, host$)

        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim r As MySqlDataReader
        mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from all_domeslot_lamination", mysqlcon)
        r = mysqlcom.ExecuteReader()
        r.Read()
        Do Until r("Code") = code
            r.Read()
        Loop
        If r("TCGroove_Depth") = 0.001 Then
            Dim linel, liner, linec, lineunder As SketchLine
            Dim arc As SketchArc
            Dim outarc As SketchSegment
            Dim pointlstar, pointlend, pointrstar, pointrend, pointundstar, pointundend As SketchPoint
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            linel = SkeManger.CreateLine(0, 0, 0, -diameter / 2 * Sin(angle / 2 * PI / 180), diameter / 2 * Cos(angle / 2 * PI / 180), 0)
            liner = SkeManger.CreateLine(0, 0, 0, diameter / 2 * Sin(angle / 2 * PI / 180), diameter / 2 * Cos(angle / 2 * PI / 180), 0)
            outarc = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
            ADDConstraints(1)
            arc = SkeManger.CreateCircleByRadius(0, 0, 0, underdiameter / 2)
            ADDConstraints(1)
            outarc.Select4(False, Nothing)
            SkeManger.SketchTrim(0, diameter / 2, 0, 0)
            arc.select2(True, Nothing)
            SkeManger.SketchTrim(0, underdiameter / 2, 0, 0)
            Lselect(linel, False)
            SkeManger.SketchTrim(0, -diameter / 4 * Sin(angle / 2 * PI / 180), diameter / 4 * Cos(angle / 2 * PI / 180), 0)
            Lselect(liner, False)
            SkeManger.SketchTrim(0, diameter / 4 * Sin(angle / 2 * PI / 180), diameter / 4 * Cos(angle / 2 * PI / 180), 0)
            part.ClearSelection2(True)
            'Dim P1 As SketchPoint
            'Dim points As Object
            'Getsketch = SkeManger.ActiveSketch
            'points = Getsketch.GetSketchPoints2
            'SketchSegments = Getsketch.GetSketchSegments
            'For i = 0 To UBound(SketchSegments)
            '    SketchSegment = SketchSegments(i)
            '    SketchSegment.Select2(True, Nothing)

            'Next i
            'For i = 0 To UBound(points)
            '    P1 = points(i)
            '    P1.Select4(True, Nothing)
            'Next i
            outarc.SelectChain(True, Nothing)
            part.Extension.RotateOrCopy(True, number - 1, False, 0, 0, 0, 0, 0, 1, 360 / number * PI / 180)




            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            ADDConstraints(1)
            linel = SkeManger.CreateLine(-0.001, 0, 0, -0.001, 0.001, 0)
            liner = SkeManger.CreateLine(0.001, 0, 0, 0.001, 0.001, 0)
            pointlend = linel.GetEndPoint2
            pointlstar = linel.GetStartPoint2
            pointrstar = liner.GetStartPoint2
            pointrend = liner.GetEndPoint2
            pointlend.Select4(False, Nothing)
            arc.select2(True, Nothing)
            ADDConstraints(5)
            Lselect(linel, False)
            DisplayDimension = part.AddDimension2(-0.01, underdiameter / 2, 0)
            ChangeDimensionVaule(rectangle_deep)
            Lselect(linel, False)
            Lselect(liner, True)
            ADDConstraints(7)
            Lselect(linel, False)
            Lselect(liner, True)
            Lselect(linec, True)
            ADDConstraints(6)
            pointrend.Select4(False, Nothing)
            arc.select2(True, Nothing)
            ADDConstraints(5)
            Lselect(linel, False)
            Lselect(liner, True)
            DisplayDimension = part.AddDimension2(-0.01, underdiameter / 2 - 0.01, 0)
            ChangeDimensionVaule(rectangle_width)
            arc.select2(True, Nothing)
            SkeManger.SketchTrim(0, 0, underdiameter / 2, 0)
            lineunder = SkeManger.CreateLine(-0.01, 0, 0, 0.01, 0, 0)
            pointundstar = lineunder.GetStartPoint2
            pointundend = lineunder.GetEndPoint2
            pointundstar.Select4(False, Nothing)
            pointlstar.Select4(True, Nothing)
            ADDConstraints(8)
            pointundend.Select4(False, Nothing)
            pointrstar.Select4(True, Nothing)
            ADDConstraints(8)

            AllCut(2)


        End If


    End Sub
    Public Sub Out_Tapezoid_Positioning_Groove(diameter#, OTPGroove_right_length#, OTPGroove_left_length#, OTPGroove_Width#, OTPPositioning_Deflection_Angle#)
        If Not OTPGroove_Width = 0 Then
            If OTPGroove_left_length = 0 Or OTPGroove_right_length = 0 Then
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                Dim arc1 As SketchSegment
                Dim line_under, line_right, line_left, linec As SketchLine
                Dim point_und_star, point_und_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
                ADDConstraints(1)
                linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)
                line_under = SkeManger.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                If Not OTPGroove_right_length = 0 Then
                    line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
                    DisplayDimension = part.AddDimension2(0.01, diameter / 2, 0)
                    ChangeDimensionVaule(OTPGroove_right_length)
                    part.ClearSelection2(True)
                Else
                    line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
                    DisplayDimension = part.AddDimension2(0.01, diameter / 2, 0)
                End If
                If Not OTPGroove_left_length = 0 Then
                    line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.01, 0.02, 0)
                    DisplayDimension = part.AddDimension2(0.01, -diameter / 2, 0)
                    ChangeDimensionVaule(OTPGroove_left_length)
                    part.ClearSelection2(True)
                Else
                    line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.01, 0.02, 0)
                    DisplayDimension = part.AddDimension2(0.01, -diameter / 2, 0)
                End If

                point_und_star = line_under.GetStartPoint2
                point_und_end = line_under.GetEndPoint2
                point_left_star = line_left.GetStartPoint2
                point_left_end = line_left.GetEndPoint2
                point_rig_star = line_right.GetStartPoint2
                point_rig_end = line_right.GetEndPoint2

                Lselect(line_right, False)
                Lselect(line_left, True)
                ADDConstraints(3) '竖直
                point_left_end.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5) '重合

                point_rig_star.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5)

                Lselect(line_right, False)
                Lselect(line_left, True)
                Lselect(linec, True)
                ADDConstraints(6)

                Lselect(line_right, False)
                Lselect(line_left, True)
                DisplayDimension = part.AddDimension2(0, diameter / 2 + 0.01, 0)
                ChangeDimensionVaule(OTPGroove_Width)

                point_und_star.Select4(False, Nothing)
                point_left_star.Select4(True, Nothing)
                ADDConstraints(8)

                point_und_end.Select4(False, Nothing)
                point_rig_star.Select4(True, Nothing)
                ADDConstraints(8)
                arc1.Select4(False, Nothing)
                SkeManger.SketchTrim(0, diameter / 2, 0, 0)
                Lselect(linec, False)
                Lselect(line_right, True)
                part.EditDelete()

                Getsketch = SkeManger.ActiveSketch
                SketchSegments = Getsketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    SketchSegment.Select4(False, Nothing)
                    part.SketchConstraintsDelAll()
                Next i

                Lselect(line_left, False)
                DisplayDimension = part.AddDimension2(-0.01 - OTPGroove_Width / 2, diameter / 2 - 0.001, 0)
                DisplayDimension.CenterText = True
                'Lselect(line_right, False)
                'DisplayDimension = part.AddDimension2(0.01 + OTPGroove_Width / 2, diameter / 2 + 0.003, 0)
                point_und_end.Select4(False, Nothing)
                point_left_end.Select4(True, Nothing)
                part.AddDimension2(0, diameter / 2 + 0.01, 0)



                If Not OTPPositioning_Deflection_Angle = 0 Then
                    arc1.SelectChain(True, Nothing)
                    part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -OTPPositioning_Deflection_Angle * PI / 180)
                End If
                Getsketch = SkeManger.ActiveSketch
                OTPsketch = Getsketch
                AllCut(2)
            Else
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                Dim arc1 As SketchSegment
                Dim line_under, line_right, line_left, linec As SketchLine
                Dim point_und_star, point_und_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
                ADDConstraints(1)
                linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)
                line_under = SkeManger.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
                DisplayDimension = part.AddDimension2(0.01, diameter / 2, 0)
                ChangeDimensionVaule(OTPGroove_right_length)
                part.ClearSelection2(True)
                line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.01, 0.02, 0)
                DisplayDimension = part.AddDimension2(0.01, -diameter / 2, 0)
                ChangeDimensionVaule(OTPGroove_left_length)
                part.ClearSelection2(True)

                point_und_star = line_under.GetStartPoint2
                point_und_end = line_under.GetEndPoint2
                point_left_star = line_left.GetStartPoint2
                point_left_end = line_left.GetEndPoint2
                point_rig_star = line_right.GetStartPoint2
                point_rig_end = line_right.GetEndPoint2

                Lselect(line_right, False)
                Lselect(line_left, True)
                ADDConstraints(3) '竖直
                point_left_end.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5) '重合

                point_rig_end.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5)

                Lselect(line_right, False)
                Lselect(line_left, True)
                Lselect(linec, True)
                ADDConstraints(6)

                Lselect(line_right, False)
                Lselect(line_left, True)
                DisplayDimension = part.AddDimension2(0, diameter / 2 + 0.01, 0)
                ChangeDimensionVaule(OTPGroove_Width)

                point_und_star.Select4(False, Nothing)
                point_left_star.Select4(True, Nothing)
                ADDConstraints(8)

                point_und_end.Select4(False, Nothing)
                point_rig_star.Select4(True, Nothing)
                ADDConstraints(8)
                arc1.Select4(False, Nothing)
                SkeManger.SketchTrim(0, diameter / 2, 0, 0)
                Lselect(linec, False)
                part.EditDelete()

                Getsketch = SkeManger.ActiveSketch
                SketchSegments = Getsketch.GetSketchSegments
                For i = 0 To UBound(SketchSegments)
                    SketchSegment = SketchSegments(i)
                    SketchSegment.Select4(False, Nothing)
                    part.SketchConstraintsDelAll()
                Next i

                Lselect(line_left, False)
                DisplayDimension = part.AddDimension2(-0.01 - OTPGroove_Width / 2, diameter / 2 - 0.001, 0)
                DisplayDimension.CenterText = True
                Lselect(line_right, False)
                DisplayDimension = part.AddDimension2(0.01 + OTPGroove_Width / 2, diameter / 2 + 0.003, 0)
                Lselect(line_right, False)
                Lselect(line_left, True)
                part.AddDimension2(0, diameter / 2 + 0.01, 0)



                If Not OTPPositioning_Deflection_Angle = 0 Then
                    arc1.SelectChain(True, Nothing)
                    part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -OTPPositioning_Deflection_Angle * PI / 180)
                End If
                Getsketch = SkeManger.ActiveSketch
                OTPsketch = Getsketch
                AllCut(2)
            End If
        End If
    End Sub
    'Public Sub 外圆梯形定位槽(外圆直径,槽右侧深,槽左侧深,槽宽,偏转角度)
    Public Sub Inside_Tapezoid_Positioning_Groove(inside_diameter#, ITPGroove_right_length#, ITPGroove_left_length#, ITPGroove_Width#, ITPPositioning_Deflection_Angle#)
        If Not ITPGroove_right_length# = 0 Then
            Dim arc1 As SketchSegment
            Dim line_up, line_right, line_left, linec As SketchLine
            Dim point_up_star, point_up_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            line_up = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.015, 0, 0.01, inside_diameter / 2 + 0.015, 0)

            line_right = SkeManger.CreateLine(0.01, inside_diameter / 2 + 0.001, 0, 0.01, inside_diameter / 2 + 0.011, 0)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2, 0)
            ChangeDimensionVaule(ITPGroove_right_length)
            part.ClearSelection2(True)
            line_left = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.001, 0, -0.01, inside_diameter / 2 + 0.011, 0)
            DisplayDimension = part.AddDimension2(0.01, -inside_diameter / 2, 0)
            ChangeDimensionVaule(ITPGroove_left_length)
            part.ClearSelection2(True)

            point_up_star = line_up.GetStartPoint2
            point_up_end = line_up.GetEndPoint2
            point_left_star = line_left.GetStartPoint2
            point_left_end = line_left.GetEndPoint2
            point_rig_star = line_right.GetStartPoint2
            point_rig_end = line_right.GetEndPoint2

            Lselect(line_right, False)
            Lselect(line_left, True)
            ADDConstraints(3) '竖直
            point_left_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            point_rig_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_right, False)
            Lselect(line_left, True)
            Lselect(linec, True)
            ADDConstraints(6)

            Lselect(line_right, False)
            Lselect(line_left, True)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(ITPGroove_Width)
            point_up_star.Select4(False, Nothing)
            point_left_end.Select4(True, Nothing)

            ADDConstraints(8)

            point_up_end.Select4(False, Nothing)
            point_rig_end.Select4(True, Nothing)
            ADDConstraints(8)

            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            Lselect(linec, False)
            part.EditDelete()
            If Not ITPPositioning_Deflection_Angle = 0 Then
                arc1.SelectChain(True, Nothing)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -ITPPositioning_Deflection_Angle / 2 * PI / 180)
            End If
            AllCut(2)
        End If
    End Sub
    'Public Sub 内圆直边梯形定位槽(内圆直径,槽右侧深,槽左侧深,槽宽,偏转角度)
    Public Sub Inside_RectangleGroove(inside_diameter#, IRGroove_depth#, IRGroove_Width#, IRPositioning_Deflection_Angle#, groove_number#, IRGroove_number#)
        If Not IRGroove_depth = 0 Then

            Dim arc1 As SketchSegment
            Dim line_up, line_right, line_left, linec As SketchLine
            Dim point_up_star, point_up_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            IRGsketch = SkeManger.ActiveSketch
            ADDConstraints(1)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            line_up = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.015, 0, 0.01, inside_diameter / 2 + 0.015, 0)

            line_right = SkeManger.CreateLine(0.01, inside_diameter / 2 + 0.001, 0, 0.01, inside_diameter / 2 + 0.011, 0)
            DisplayDimension = part.AddDimension2(IRGroove_Width# / 2 + 0.02, inside_diameter / 2 - 0.02, 0)
            ChangeDimensionVaule(IRGroove_depth)
            part.ClearSelection2(True)
            line_left = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.001, 0, -0.01, inside_diameter / 2 + 0.011, 0)
            Lselect(line_left, False)
            Lselect(line_right, True)
            ADDConstraints(7)

            point_up_star = line_up.GetStartPoint2
            point_up_end = line_up.GetEndPoint2
            point_left_star = line_left.GetStartPoint2
            point_left_end = line_left.GetEndPoint2
            point_rig_star = line_right.GetStartPoint2
            point_rig_end = line_right.GetEndPoint2

            Lselect(line_right, False)
            Lselect(line_left, True)
            ADDConstraints(3) '竖直
            point_left_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            point_rig_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_right, False)
            Lselect(line_left, True)
            Lselect(linec, True)
            ADDConstraints(6)

            Lselect(line_right, False)
            Lselect(line_left, True)
            DisplayDimension = part.AddDimension2(-IRGroove_Width# / 2 - 0.05, inside_diameter / 2 - 0.03, 0)
            part.EditDimensionProperties2(2, 0.00015, -0.0001, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

            ChangeDimensionVaule(IRGroove_Width)


            point_up_star.Select4(False, Nothing)
            point_left_end.Select4(True, Nothing)

            ADDConstraints(8)

            point_up_end.Select4(False, Nothing)
            point_rig_end.Select4(True, Nothing)
            ADDConstraints(8)

            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            Lselect(linec, False)
            part.EditDelete()
            arc1.SelectChain(True, Nothing)
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -IRPositioning_Deflection_Angle * PI / 180)
            If Not IRGroove_number = 0 Then
                part.Extension.RotateOrCopy(True, 1, False, 0, 0, 0, 0, 0, 1, -360 / groove_number * 2 * PI / 180)
                Select_Sketch()
                part.Extension.RotateOrCopy(True, 1, False, 0, 0, 0, 0, 0, 1, 180 * PI / 180)
            End If
            AllCut(2)
        End If
    End Sub
    'Public Sub 内圆矩形槽(内圆直径,槽深,槽宽,偏转角度)
    Public Sub Inside_Dome_RectangleGroove(inside_diameter#, IDRGroove_depth#, IDRGroove_Width#, IDRPositioning_Deflection_Angle#)
        If Not IDRGroove_depth = 0 Then
            Dim arc1 As SketchSegment
            Dim arctan As SketchArc
            Dim line_right, line_left, linec As SketchLine
            Dim point_rig_star, point_rig_end, point_left_star, point_left_end, point_dome_star, point_dome_end As SketchPoint
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            'line_up = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.015, 0, 0.01, inside_diameter / 2 + 0.015, 0)

            line_right = SkeManger.CreateLine(0.01, inside_diameter / 2 + 0.001, 0, 0.01, inside_diameter / 2 + 0.011, 0)
            DisplayDimension = part.AddDimension2(IDRGroove_Width# / 2 + 0.02, inside_diameter / 2 - 0.02, 0)
            ChangeDimensionVaule(IDRGroove_depth)
            part.ClearSelection2(True)
            line_left = SkeManger.CreateLine(-0.01, inside_diameter / 2 + 0.001, 0, -0.01, inside_diameter / 2 + 0.011, 0)
            Lselect(line_left, False)
            Lselect(line_right, True)
            ADDConstraints(7)

            'point_up_star = line_up.GetStartPoint2
            'point_up_end = line_up.GetEndPoint2
            point_left_star = line_left.GetStartPoint2
            point_left_end = line_left.GetEndPoint2
            point_rig_star = line_right.GetStartPoint2
            point_rig_end = line_right.GetEndPoint2

            Lselect(line_right, False)
            Lselect(line_left, True)
            ADDConstraints(3) '竖直
            point_left_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5) '重合
            point_rig_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_right, False)
            Lselect(line_left, True)
            Lselect(linec, True)
            ADDConstraints(6)

            Lselect(line_right, False)
            Lselect(line_left, True)
            DisplayDimension = part.AddDimension2(-IDRGroove_Width# / 2 - 0.05, inside_diameter / 2 - 0.03, 0)
            part.EditDimensionProperties2(2, 0.00015, -0.0001, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

            ChangeDimensionVaule(IDRGroove_Width)


            'point_up_star.Select4(False, Nothing)
            'point_left_end.Select4(True, Nothing)

            'ADDConstraints(8)

            'point_up_end.Select4(False, Nothing)
            'point_rig_end.Select4(True, Nothing)
            'ADDConstraints(8)

            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            Lselect(linec, False)
            'Lselect(line_up, True)
            part.EditDelete()

            part.ViewZoomTo2(0, 0, 0, 0.1, 0.1, 0)
            arctan = SkeManger.CreateTangentArc(point_left_end.X, point_left_end.Y, 0, point_rig_end.X, point_rig_end.Y, 0, 1)
            point_dome_star = arctan.GetStartPoint2
            point_dome_star.Select4(False, Nothing)
            point_left_end.Select4(True, Nothing)
            ADDConstraints(8)
            point_dome_end = arctan.GetEndPoint2
            point_dome_end.Select4(False, Nothing)
            point_rig_end.Select4(True, Nothing)
            ADDConstraints(8)
            If Not IDRPositioning_Deflection_Angle = 0 Then
                arc1.SelectChain(True, Nothing)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -IDRPositioning_Deflection_Angle / 2 * PI / 180)
            End If
            AllCut(2)
        End If
    End Sub
    'Public Sub 内圆圆顶矩形槽(内圆直径,槽深,槽宽,偏转角度)
    Public Sub Out_SmArc_Groove(diameter#, OSSmArc_Groove_Outradius#, OSGroove_Radius#, OSPositioning_Deflection_Angle#, OSGroove_number#， cover_with_OTP#)
        If Not OSGroove_Radius = 0 Then
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
            Dim arc1, arc2, arc3, arc4 As SketchSegment
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
            ADDConstraints(1)
            arc2 = SkeManger.CreateCircleByRadius(0, OSSmArc_Groove_Outradius, 0, OSGroove_Radius)
            arc2.Select4(False, Nothing)
            SkeManger.SketchTrim(0, 0, OSSmArc_Groove_Outradius + OSGroove_Radius, 0)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, diameter / 2, 0, 0)
            arc2.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(0.03, diameter / 2 - 0.01, 0)
            DisplayDimension.SetBrokenLeader2(False, 2)
            'DisplayDimension = part.AddDimension2((diameter / 2 - 0.02) * Sin((-360 / (Groove_number + 1) + Positioning_Deflection_Angle) * PI / 180), (diameter / 2 - 0.02) * Cos((-360 / (Groove_number + 1) + Positioning_Deflection_Angle) * PI / 180), 0)

            arc2.SelectChain(True, Nothing)
            If Not OSPositioning_Deflection_Angle = 0 Then
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, OSPositioning_Deflection_Angle * PI / 180)
            End If
            part.Extension.RotateOrCopy(True, OSGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / (OSGroove_number + cover_with_OTP) * PI / 180)
            'part.EditDelete()
            AllCut(2)
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc3 = SkeManger.CreateCircleByRadius(0, OSSmArc_Groove_Outradius, 0, OSGroove_Radius * 2)
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, OSPositioning_Deflection_Angle * PI / 180)
            arc3.Select4(False, Nothing)
            Dim number As String
            Dim myNote As Object
            number = OSGroove_number# & "处"
            myNote = part.InsertNote(number)
            Anno = myNote.GetAnnotation()
            Anno.SetPosition((diameter / 1.7) * Sin(-OSPositioning_Deflection_Angle * 2 * PI / 180), (diameter / 1.7) * Cos(-OSPositioning_Deflection_Angle * 2 * PI / 180), 0)
            Anno.SetLeader3(3, 0, True, False, False, False)
            arc4 = SkeManger.CreateCircleByRadius(0, 0, 0, OSSmArc_Groove_Outradius)
            SetConstructionline(1)
            arc4.Select4(False, Nothing)
            SkeManger.SketchTrim(0, OSSmArc_Groove_Outradius, 0, 0)
            arc4.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(diameter / 3.5 * Sin(-45 * PI / 180), diameter / 3.5 * Cos(-45 * PI / 180), 0)
            DisplayDimension.SetBrokenLeader2(False, 1)
            DisplayDimension.Foreshortened = True
        End If



    End Sub
    'Public Sub 外圆小圆形凹槽(外圆直径,基准半径,圆槽半径,偏转角度,槽数)
    Public Sub Out_SmArc_Positioning_Groove(diameter#, OSSmArc_Groove_Outradius#, OSGroove_Radius#, OSPositioning_Deflection_Angle#)
        If Not OSGroove_Radius = 0 Then
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
            Dim arc1, arc2, arc3, arc4 As SketchSegment
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
            ADDConstraints(1)
            arc2 = SkeManger.CreateCircleByRadius(0, OSSmArc_Groove_Outradius, 0, OSGroove_Radius)
            arc2.Select4(False, Nothing)
            SkeManger.SketchTrim(0, 0, OSSmArc_Groove_Outradius + OSGroove_Radius, 0)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, diameter / 2, 0, 0)
            arc2.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(0.03, diameter / 2 - 0.01, 0)
            DisplayDimension.SetBrokenLeader2(False, 2)
            'DisplayDimension = part.AddDimension2((diameter / 2 - 0.02) * Sin((-360 / (Groove_number + 1) + Positioning_Deflection_Angle) * PI / 180), (diameter / 2 - 0.02) * Cos((-360 / (Groove_number + 1) + Positioning_Deflection_Angle) * PI / 180), 0)

            arc2.SelectChain(True, Nothing)
            If Not OSPositioning_Deflection_Angle = 0 Then
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, OSPositioning_Deflection_Angle * PI / 180)
            End If



            'part.EditDelete()
            AllCut(2)


        End If



    End Sub
    'Public Sub 外圆小圆形定位凹槽(外圆直径,基准半径,圆槽半径,偏转角度,槽数)
    Public Sub Round_Hole(RHCircle_Base_Diameter#, RHole_Diameter#, RHole_number#, RHole_Deflection_Angle#, RH_gtol_symbol#)
        If Not RHole_Diameter = 0 Then
            Dim arc1, arc2 As SketchSegment
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, RHCircle_Base_Diameter / 2, 0, RHole_Diameter / 2)
            DisplayDimension = part.AddDimension2(0.05, RHCircle_Base_Diameter / 1.7 * Cos(RHole_Deflection_Angle / 1.5 * PI / 180), 0)
            'Part.EditDimensionProperties2(2, 0.000025, 0, "", "", True, 9, 2, True, 12, 12, "7×<MOD-DIAM>", "", True, "", "", False)
            'DisplayDimension .ShowTolParenthesis =True 
            part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, RHole_number & "×<MOD-DIAM>", "", True, "", "", False)
            DisplayDimension.SetBrokenLeader2(False, 2)
            arc1.Select4(False, Nothing)
            Dim myGtol As Object
            Dim myAnno As Annotation
            If Not RH_gtol_symbol = 0 Then
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, RH_gtol_symbol, "", "A", "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(-RHCircle_Base_Diameter / 1.3, RHCircle_Base_Diameter / 2 + 0.02, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
            End If

            arc1.Select4(False, Nothing)
            If Not RHole_Deflection_Angle = 0 Then
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -RHole_Deflection_Angle * PI / 180)
            End If
            part.Extension.RotateOrCopy(True, RHole_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / RHole_number * PI / 180)
            Getsketch = SkeManger.ActiveSketch
            RHsketch = Getsketch
            AllCut(2)
            AllCut(2).Select2(False, Nothing)
            part.SelectedFeatureProperties(0, 0, 0, 0, 0, 0, 0, 1, 0, "配合孔")
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc2 = SkeManger.CreateCircleByRadius(0, 0, 0, RHCircle_Base_Diameter / 2)
            SetConstructionline(1)
            arc2.Select4(False, Nothing)

            If RHCircle_Base_sketch Is Nothing Then
                DisplayDimension = part.AddDimension2(RHCircle_Base_Diameter / 4, 0.01, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                SetTolvalue(1, "", "")
            Else
                DisplayDimension = part.AddDimension2(-RHCircle_Base_Diameter / 4, 0.01, 0)
            End If
            RHCircle_Base_sketch = SkeManger.ActiveSketch

            SkeManger.InsertSketch(True)
        End If

    End Sub
    'Public Sub 圆孔(参考圆直径,孔直径,孔数,孔偏转角度)
    Public Sub Rectangle_Clasp_Groove(diameter#, Groove_Depth#, Groove_under_length#, Groove_number#, Positioning_Deflection_Angle#)
        Dim arc1 As SketchSegment
        Dim line_under, line_right, line_left, linec As SketchLine
        Dim point_und_star, point_und_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
        line_under = SkeManger.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
        line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
        line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.01, 0.02, 0)
        point_und_star = line_under.GetStartPoint2
        point_und_end = line_under.GetEndPoint2
        point_left_star = line_left.GetStartPoint2
        point_left_end = line_left.GetEndPoint2
        point_rig_star = line_right.GetStartPoint2
        point_rig_end = line_right.GetEndPoint2
        point_und_star.Select4(False, Nothing)
        point_und_end.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6) '对称
        Lselect(line_under, False)
        DisplayDimension = part.AddDimension2(0, 0.1, 0)
        ChangeDimensionVaule(Groove_under_length)
        Lselect(line_under, False)
        arc1.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0.02, 0.01, 0)
        ChangeDimensionVaule(diameter / 2 - Groove_Depth)
        Lselect(line_right, False)
        Lselect(line_left, True)
        ADDConstraints(3) '竖直
        point_left_end.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5) '重合
        point_rig_end.Select4(False, Nothing)
        arc1.Select4(True, Nothing)
        ADDConstraints(5)
        'point_und_star.Select4(False, Nothing)
        'point_left_star.Select4(True, Nothing)
        'ADDConstraints(5)
        'point_und_end.Select4(False, Nothing)
        'point_rig_star.Select4(True, Nothing)
        'ADDConstraints(5)
        arc1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, diameter / 2, 0, 0)
        arc1.SelectChain(True, Nothing)
        If Not Positioning_Deflection_Angle = 0 Then
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -Positioning_Deflection_Angle / 2 * PI / 180)
        End If
        part.Extension.RotateOrCopy(True, Groove_number, False, 0, 0, 0, 0, 0, 1, 360 / (Groove_number + 1) * PI / 180)
        AllCut(2)
    End Sub
    'Public Sub 矩形扣片槽(外圆直径, 定位槽深, 槽底长度,扣片槽,偏转角度)
    Public Sub Trapezoid_Clasp_Groove(diameter#, TCGroove_Depth#, Trapezoid_angle#, TCGroove_under_length#, TCGroove_number#, TCPositioning_Deflection_Angle#)
        If Not TCGroove_Depth# = 0 Then
            If Not TCGroove_Depth# = 0.001 / 1000 Then
                Dim arc1 As SketchSegment
                Dim line_under, line_right, line_left, linec As SketchLine
                Dim point_und_star, point_und_end, point_rig_star, point_rig_end, point_left_star, point_left_end As SketchPoint
                SelectPlane("front")
                part.SketchManager.InsertSketch(True)
                arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
                ADDConstraints(1)
                linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                ADDConstraints(1)
                line_under = SkeManger.CreateLine(-0.01, 0.01, 0, 0.01, 0.01, 0)
                line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.009, 0.02, 0)
                line_left = SkeManger.CreateLine(-0.01, 0.01, 0, -0.009, 0.02, 0)
                point_und_star = line_under.GetStartPoint2
                point_und_end = line_under.GetEndPoint2
                point_left_star = line_left.GetStartPoint2
                point_left_end = line_left.GetEndPoint2
                point_rig_star = line_right.GetStartPoint2
                point_rig_end = line_right.GetEndPoint2
                point_und_star.Select4(False, Nothing)
                point_und_end.Select4(True, Nothing)
                Lselect(linec, True)
                ADDConstraints(6) '对称
                Lselect(line_under, False)
                Dim dispdms As DisplayDimension
                dispdms = part.AddDimension2(0, diameter / 2 + 0.01, 0)
                Dimension = dispdms.GetDimension2(0)
                Dimension.SystemValue = TCGroove_under_length

                Lselect(line_under, False)
                arc1.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0.02, 0.01, 0)
                ChangeDimensionVaule(diameter / 2 - TCGroove_Depth)
                Dimension = DisplayDimension.GetDimension2(0)
                Dimension.SetArcEndCondition(1, 2)
                Anno = DisplayDimension.GetAnnotation
                Anno.SetPosition2(TCGroove_under_length# * 3, diameter / 2 - TCGroove_Depth# / 2, 0)
                Lselect(line_right, False)
                Lselect(line_left, True)
                DisplayDimension = part.AddDimension2(0, diameter / 2 + 0.01, 0)
                ChangeDimensionVaule(Trapezoid_angle * 2 * PI / 180)
                Anno = DisplayDimension.GetAnnotation
                Anno.SetPosition2(0, diameter / 2 - 0.02, 0)
                point_left_end.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5) '重合
                point_rig_end.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                ADDConstraints(5)
                'point_und_star.Select4(False, Nothing)
                'point_left_star.Select4(True, Nothing)
                'ADDConstraints(5)
                'point_und_end.Select4(False, Nothing)
                'point_rig_star.Select4(True, Nothing)
                'ADDConstraints(5)
                arc1.Select4(False, Nothing)
                SkeManger.SketchTrim(0, diameter / 2, 0, 0)
                Lselect(linec, False)
                ADDConstraints(1)
                Lselect(line_right, False)
                Lselect(line_left, True)
                Lselect(linec, True)
                ADDConstraints(6)
                part.ClearSelection2(True)
                Lselect(linec, False)
                part.EditDelete()
                Anno = dispdms.GetAnnotation
                Anno.SetPosition2(0, diameter / 2 + 0.03, 0)
                arc1.SelectChain(True, Nothing)
                If Not TCPositioning_Deflection_Angle = 0 Then
                    part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, TCPositioning_Deflection_Angle * PI / 180)
                End If
                part.Extension.RotateOrCopy(True, TCGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / TCGroove_number * PI / 180)

                AllCut(2)
            End If
        End If
    End Sub
    'Public Sub 梯形扣片槽(外圆直径, 定位槽深,梯形角度, 槽底长度,扣片槽数,偏转角度)
    Public Sub Out_Rectangle_Positioning_Groove_InClaspGroove(diameter#, ORPGroove_Depth#, ORPGroove_under_length#, Clasp_Goove_depth#)
        If Not ORPGroove_Depth# = 0 Then
            Dim line_up, line_under, line_right, line_left, linec_hor, linec_ver As SketchLine
            Dim pointup1, pointup2, pointright1, pointright2, pointleft1, pointleft2, pointunder1, pointunder2 As SketchPoint
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            linec_ver = SkeManger.CreateLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            linec_hor = SkeManger.CreateLine(-0.1, diameter / 2 - Clasp_Goove_depth, 0, 0.1, diameter / 2 - Clasp_Goove_depth, 0)
            ADDConstraints(1)
            line_under = SkeManger.CreateLine(-0.01, 0, 0, 0.01, 0, 0)
            ADDConstraints(2)
            pointunder1 = line_under.GetStartPoint2
            pointunder2 = line_under.GetEndPoint2
            line_right = SkeManger.CreateLine(0.01, 0.01, 0, 0.01, 0.02, 0)
            ADDConstraints(3)
            pointright1 = line_right.GetStartPoint2
            pointright2 = line_right.GetEndPoint2
            line_up = SkeManger.CreateLine(0, 0.01, 0, -0.01, 0.01, 0)
            ADDConstraints(2)
            pointup1 = line_up.GetStartPoint2
            pointup2 = line_up.GetEndPoint2
            line_left = SkeManger.CreateLine(-0.02, 0.02, 0, -0.02, 0.01, 0)
            ADDConstraints(3)
            pointleft1 = line_left.GetStartPoint2
            pointleft2 = line_left.GetEndPoint2
            pointunder2.Select4(False, Nothing)
            pointright1.Select4(True, Nothing)
            ADDConstraints(8)
            pointup1.Select4(False, Nothing)
            pointright2.Select4(True, Nothing)
            ADDConstraints(8)
            pointleft1.Select4(False, Nothing)
            pointup2.Select4(True, Nothing)
            ADDConstraints(8)
            pointunder1.Select4(False, Nothing)
            pointleft2.Select4(True, Nothing)
            ADDConstraints(8)


            Lselect(line_up, False)
            Lselect(linec_hor, True)
            ADDConstraints(12)
            Lselect(line_left, False)
            Lselect(linec_ver, True)
            ADDConstraints(12)

            Lselect(line_up, False)
            DisplayDimension = part.AddDimension2(ORPGroove_under_length / 2, diameter / 2, 0)
            ChangeDimensionVaule(ORPGroove_under_length)
            Lselect(line_left, False)
            DisplayDimension = part.AddDimension2(-0.01, diameter / 2 - Clasp_Goove_depth# / 2 * 3, 0)
            ChangeDimensionVaule(ORPGroove_Depth)
            Lselect(linec_hor, False)
            Lselect(linec_ver, True)
            part.EditDelete()
            AllCut(2)
        End If
    End Sub
    'Public Sub 在扣片槽内的矩形定位槽(外圆直径,定位槽深,槽底长度,扣片槽深度)
    Public Sub Inside_SmArc_Groove(inside_diameter#, ISSmArc_Groove_Outradius#, ISGroove_Radius#, ISPositioning_Deflection_Angle#, ISGroove_number#)
        If Not ISSmArc_Groove_Outradius = 0 Then
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
            Dim arc1, arc2 As SketchSegment
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            arc2 = SkeManger.CreateCircleByRadius(0, ISSmArc_Groove_Outradius, 0, ISGroove_Radius)
            arc2.Select4(False, Nothing)
            SkeManger.SketchTrim(0, 0, ISSmArc_Groove_Outradius - ISGroove_Radius, 0)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            arc2.SelectChain(True, Nothing)
            If Not ISPositioning_Deflection_Angle = 0 Then
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, -ISPositioning_Deflection_Angle * PI / 180)
            End If
            part.Extension.RotateOrCopy(True, ISGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / ISGroove_number * PI / 180)
            'part.EditDelete()
            AllCut(2)
        End If
    End Sub
    'Public Sub 内圆小圆形凹槽(外内圆直径,基准半径,槽底长度,偏转角度,槽数)
    Public Sub Inside_Fillet_Trapezoid_table(IFTTable_Number#, IFTUnder_Round_Diameter#, IFTTop_Round_Diameter#, IFTUnder_Width#, IFTTop_Width#, IFTFillet_Radius#)
        If Not IFTTable_Number = 0 Then
            Dim title As String = part.GetTitle
            Debug.Print(title)
            Dim arc_top, arc_under, arc1 As SketchSegment
            Dim line_left, line_right, linec As SketchLine
            Dim point_left_star, point_left_end, point_right_star, point_right_end As SketchPoint
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            arc_top = SkeManger.CreateCircleByRadius(0, 0, 0, IFTTop_Round_Diameter / 2)
            ADDConstraints(1)
            arc_under = SkeManger.CreateCircleByRadius(0, 0, 0, IFTUnder_Round_Diameter / 2)
            ADDConstraints(1)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            line_left = SkeManger.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
            line_right = SkeManger.CreateLine(0.01, 0, 0, 0.01, 0.01, 0)
            point_left_star = line_left.GetStartPoint2
            point_left_end = line_left.GetEndPoint2
            point_right_star = line_right.GetStartPoint2
            point_right_end = line_right.GetEndPoint2
            point_left_star.Select4(False, Nothing)
            arc_under.Select4(True, Nothing)
            ADDConstraints(5)
            point_left_end.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            ADDConstraints(5)
            point_right_star.Select4(False, Nothing)
            arc_under.Select4(True, Nothing)
            ADDConstraints(5)
            point_right_end.Select4(False, Nothing)
            arc_top.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_left, False)
            Lselect(line_right, True)
            Lselect(linec, True)
            ADDConstraints(6)
            point_left_star.Select4(False, Nothing)
            point_right_star.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0, IFTUnder_Round_Diameter / 2 - 0.01, 0)
            ChangeDimensionVaule(IFTUnder_Width)
            DisplayDimension.GetAnnotation.setposition2(0, IFTUnder_Round_Diameter / 2 - 0.01, 0)
            point_left_end.Select4(False, Nothing)
            point_right_end.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0, IFTUnder_Round_Diameter / 2 - 0.02, 0)
            ChangeDimensionVaule(IFTTop_Width)
            DisplayDimension.GetAnnotation.setposition2(0, IFTUnder_Round_Diameter / 2 - 0.02, 0)
            Lselect(linec, False)
            part.EditDelete()
            arc_top.Select4(False, Nothing)
            SkeManger.SketchTrim(0, 0, IFTTop_Round_Diameter / 2, 0)
            arc_under.Select4(False, Nothing)
            SkeManger.SketchTrim(0, IFTUnder_Round_Diameter / 2, 0, 0)
            point_left_star.Select4(False, Nothing)
            part.SketchManager.CreateFillet(IFTFillet_Radius#, 1)

            point_left_end.Select4(False, Nothing)
            part.SketchManager.CreateFillet(IFTFillet_Radius#, 1)

            point_right_star.Select4(False, Nothing)
            part.SketchManager.CreateFillet(IFTFillet_Radius#, 1)

            point_right_end.Select4(False, Nothing)
            part.SketchManager.CreateFillet(IFTFillet_Radius#, 1)
            Getsketch = SkeManger.ActiveSketch
            Feature = Getsketch
            part.Extension.SelectByID2("D4@" & Feature.Name & "@" & title & ".SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "R", "×4", True, "", "", False)
            part.Extension.SelectByID2("D3@" & Feature.Name & "@" & title & ".SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@" & Feature.Name & "@" & title & ".SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D6@" & Feature.Name & "@" & title & ".SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete()
            arc_top.Select4(False, Nothing)
            part.EditDelete()
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, IFTTop_Round_Diameter / 2)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, IFTTop_Round_Diameter / 2, 0, 0)
            arc_under.SelectChain(True, Nothing)
            part.Extension.RotateOrCopy(True, IFTTable_Number - 1, False, 0, 0, 0, 0, 0, 1, 360 / IFTTable_Number * PI / 180)

            part.ClearSelection2(True)
            AllExtrusion(1)
        End If
    End Sub
    'Public Sub 内圆圆角梯形凸台(凸台数,底圆直径,顶圆直径,底宽,顶宽,圆角半径)
    Public Sub Inside_Polygon_Groove(IPGGroove_Number#, IPGChord_Length#, diameter#, Inside_diameter#, IPGPhase_Angle#, IPGDeflection_Angle#, IPGGroove_Side_Length#,
                                     IPGDome_Base_Circle_Diameter#, IPGDome_Radius#, IPGFillet_Radius#, IPGWedge_reference_circle_diameter#, IPGRight_wedge_left_length#,
                                     IPGRight_wedge_right_length#, IPGwedge_width#, flat_top_groove_top_left_right_line_length#, IPG_tol_type$, IPG_tol_max$, IPG_tol_min$,
                                     IPG_gtol_symbol$, IPG_gtol_value1$, IPG_gtol_main$)
        Setting(0)
        Dim arc_inside1, arc_wedge_reference, arc_wedge_reference1, arc_Groovetop_Reference, arc_Groovetop_Reference1, arc_groove_top, arc_trim, SketchSegment As SketchSegment
        Dim line_groove_right, line_groove_top_right, line_string, linec_right, linec, line_level_top, line_wedge_right, line_wedge_left, line_wedge_top, line_wedge_under, linec_wedge, line_trim As SketchLine
        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        IPGsketch = SkeManger.ActiveSketch
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 1, 0)
        ADDConstraints(1)
        arc_inside1 = SkeManger.CreateCircleByRadius(0, 0, 0, Inside_diameter# / 2)
        ADDConstraints(1)
        linec_right = SkeManger.CreateCenterLine(0, 0, 0, Inside_diameter# / 2 * Sin(IPGPhase_Angle / 2 * PI / 180), Inside_diameter# / 2 * Cos(IPGPhase_Angle / 2 * PI / 180), 0)
        ADDConstraints(1)
        line_string = SkeManger.CreateLine(-0.01, 0.05, 0, 0.01, 0.05, 0)
        DisplayDimension = part.AddDimension2(0.01, 0.01, 0)
        ChangeDimensionVaule(IPGChord_Length)
        Dim point_ls_star, point_ls_end, point_lgr_star, point_lgr_end, point_lgtr_star, point_lgtr_end, point_llt_star, point_llt_end, point_lwr_star, point_lwr_end, point_lwl_star, point_lwl_end,
        point_lwt_star, point_lwt_end, point_lwu_star, point_lwu_end, point_ltrim_star, point_ltrim_end As SketchPoint
        point_ls_star = line_string.GetStartPoint2
        point_ls_end = line_string.GetEndPoint2
        point_ls_end.Select4(False, Nothing)
        point_ls_star.Select4(True, Nothing)
        Lselect(linec_right, True)
        ADDConstraints(6)
        point_ls_star.Select4(False, Nothing)
        arc_inside1.Select4(True, Nothing)
        ADDConstraints(5)
        line_groove_right = SkeManger.CreateLine(0, 0.01, 0, 0.01, 0.02, 0)
        DisplayDimension = part.AddDimension2(0.02, 0.02, 0)
        ChangeDimensionVaule(IPGGroove_Side_Length)
        point_lgr_star = line_groove_right.GetStartPoint2
        point_lgr_end = line_groove_right.GetEndPoint2
        point_lgr_star.Select4(False, Nothing)
        point_ls_star.Select4(True, Nothing)
        ADDConstraints(8)
        Lselect(linec, False)
        Lselect(line_groove_right, True)
        DisplayDimension = part.AddDimension2(0.01, Inside_diameter / 2 + 0.01, 0)
        ChangeDimensionVaule(IPGPhase_Angle / 2 * PI / 180)
        line_groove_top_right = SkeManger.CreateLine(0, Inside_diameter / 2 + 0.01, 0, 0.1, Inside_diameter / 2 + 0.005, 0)
        point_lgtr_star = line_groove_top_right.GetStartPoint2
        point_lgtr_end = line_groove_top_right.GetEndPoint2
        arc_Groovetop_Reference = SkeManger.CreateCircleByRadius(0, 0, 0, IPGDome_Base_Circle_Diameter / 2)
        'SetConstructionline(1)
        'arc_Groovetop_Reference.Select4(False, Nothing)
        ADDConstraints(1)


        If Not IPGWedge_reference_circle_diameter# = 0 Then
            arc_wedge_reference = SkeManger.CreateCircleByRadius(0, 0, 0, IPGWedge_reference_circle_diameter / 2)
            ADDConstraints(1)
            line_wedge_left = SkeManger.CreateLine(0, IPGWedge_reference_circle_diameter / 2 + 0.01, 0, 0, IPGWedge_reference_circle_diameter / 2 + 0.02, 0)
            Lselect(line_wedge_left, False)
            Lselect(line_groove_right, True)
            ADDConstraints(12)
            point_lwl_star = line_wedge_left.GetStartPoint2
            point_lwl_end = line_wedge_left.GetEndPoint2
            point_lwl_end.Select4(False, Nothing)
            point_lwl_star.Select4(True, Nothing)
            Lselect(line_wedge_left, False)
            DisplayDimension = part.AddDimension2(0.01, IPGWedge_reference_circle_diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(IPGRight_wedge_left_length)
            point_lgr_star.Select4(False, Nothing)
            point_lwl_star.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0.01, IPGWedge_reference_circle_diameter / 2 + 0.005, 0)

            ChangeDimensionVaule(IPGWedge_reference_circle_diameter / 2 - Inside_diameter / 2 - IPGRight_wedge_left_length / 2)
            line_wedge_right = SkeManger.CreateLine(0.03, IPGWedge_reference_circle_diameter / 2 + 0.01, 0, 0.03, IPGWedge_reference_circle_diameter / 2 + 0.02, 0)
            point_lwr_star = line_wedge_right.GetStartPoint2
            point_lwr_end = line_wedge_right.GetEndPoint2
            Lselect(line_wedge_right, False)
            Lselect(line_wedge_left, True)
            ADDConstraints(15)
            linec_wedge = SkeManger.CreateCenterLine(-0.01, 0.01, 0, -0.02, 0.02, 0)
            point_lwl_end.Select4(False, Nothing)
            point_lwl_star.Select4(True, Nothing)
            Lselect(linec_wedge, True)
            ADDConstraints(6)
            point_lwr_star.Select4(False, Nothing)
            point_lwr_end.Select4(True, Nothing)
            Lselect(linec_wedge, True)
            ADDConstraints(6)

            Lselect(line_wedge_left, False)
            Lselect(line_wedge_right, True)
            DisplayDimension = part.AddDimension2(0.02, IPGWedge_reference_circle_diameter / 2 - 0.01, 0)
            ChangeDimensionVaule(IPGwedge_width)

            Lselect(line_wedge_right, False)
            DisplayDimension = part.AddDimension2(0.015, IPGWedge_reference_circle_diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(IPGRight_wedge_right_length)
            Lselect(linec_wedge, False)
            part.EditDelete()
            line_wedge_top = SkeManger.CreateLine(0, 0.1, 0, 0.1, 0.1, 0)
            line_wedge_under = SkeManger.CreateLine(0.1, 0.1, 0, 0.2, 0.1, 0)
            point_lwt_star = line_wedge_top.GetStartPoint2
            point_lwt_end = line_wedge_top.GetEndPoint2
            point_lwu_star = line_wedge_under.GetStartPoint2
            point_lwu_end = line_wedge_under.GetEndPoint2
            point_lwt_star.Select4(False, Nothing)
            point_lwl_end.Select4(True, Nothing)
            ADDConstraints(8)
            point_lwt_end.Select4(False, Nothing)
            point_lwr_star.Select4(True, Nothing)
            ADDConstraints(8)
            point_lwu_star.Select4(False, Nothing)
            point_lwl_star.Select4(True, Nothing)
            ADDConstraints(8)
            point_lwu_end.Select4(False, Nothing)
            point_lwr_end.Select4(True, Nothing)
            ADDConstraints(8)
            'Lselect(line_wedge_left, False)
            'Lselect(linec_wedge, True)
            'arc_Groovetop_Reference.Select4(True, Nothing)
            'part.EditDelete()
            arc_trim = SkeManger.CreateCircleByRadius(0.01, 0, 0, IPGWedge_reference_circle_diameter / 2 - Inside_diameter / 2)
            arc_trim.Select4(False, Nothing)
            point_lgr_star.Select4(True, Nothing)
            ADDConstraints(16)
            line_trim = SkeManger.CreateLine(0, 0.01, 0, 0, 0.02, 0)
            point_ltrim_end = line_trim.GetEndPoint2
            point_ltrim_star = line_trim.GetStartPoint2
            point_ltrim_star.Select4(False, Nothing)
            arc_trim.Select4(True, Nothing)
            ADDConstraints(16)
            point_ltrim_end.Select4(False, Nothing)
            arc_trim.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_trim, False)
            part.Extension.RotateOrCopy(False, 1, False, point_lgr_star.X, point_lgr_star.Y, point_lgr_star.Z, 0, 0, 1, -IPGPhase_Angle / 2 * PI / 180)
            Dim x, y, z As Double
            x = point_ltrim_end.X
            y = point_ltrim_end.Y
            z = point_ltrim_end.Z
            Lselect(line_trim, False)
            arc_trim.Select4(True, Nothing)
            Lselect(line_wedge_left, True)
            arc_wedge_reference.Select4(True, Nothing)
            part.EditDelete()
            Lselect(line_groove_right, False)
            SkeManger.SketchTrim(0, x, y, z)
            arc_wedge_reference1 = SkeManger.CreateCircleByRadius(0, 0, 0, IPGWedge_reference_circle_diameter / 2)
            SetConstructionline(1)
        End If

        If Not flat_top_groove_top_left_right_line_length = 0 Then
            point_lgr_end.Select4(False, Nothing)
            point_lgtr_end.Select4(True, Nothing)
            ADDConstraints(8)
            Lselect(line_groove_top_right, False)
            part.SketchConstraintsDel(0, "sgPERPENDICULAR")
            point_lgtr_end.Select4(False, Nothing)
            point_lgr_end.Select4(True, Nothing)

            ADDConstraints(8)
            Lselect(line_groove_top_right, False)
            Lselect(line_groove_right, True)
            ADDConstraints(14)

            Lselect(line_groove_top_right, False)
            DisplayDimension = part.AddDimension2(0.01, IPGDome_Base_Circle_Diameter / 2, 0)
            ChangeDimensionVaule(flat_top_groove_top_left_right_line_length)
            Lselect(line_string, False)
            Lselect(linec_right, True)
            part.EditDelete()
            arc_inside1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, Inside_diameter / 2, 0, 0)
            line_level_top = SkeManger.CreateLine(-0.01, 0, 0, 0.01, 0, 0)
            ADDConstraints(2)
            point_llt_star = line_level_top.GetStartPoint2
            point_llt_end = line_level_top.GetEndPoint2
            point_llt_end.Select4(False, Nothing)
            point_lgtr_star.Select4(True, Nothing)
            ADDConstraints(8)
            point_llt_star.Select4(False, Nothing)
            Lselect(linec, True)
            ADDConstraints(5)

            'arc_Groovetop_Reference.Select4(False, Nothing)
            'part.EditDelete()

            arc_inside1.SelectChain(False, Nothing)
            Lselect(linec, True)
            ADDConstraints(9)
            Lselect(linec, False)

            part.EditDelete()

            Getsketch = SkeManger.ActiveSketch
            Exterminate(1)

            'Dim SketchSegments() As Object
            'SketchSegments = Getsketch.GetSketchSegments
            'For i = 0 To UBound(SketchSegments)
            '    SketchSegment = SketchSegments(i)
            '    SketchSegment.Select4(False, Nothing)
            '    part.SketchConstraintsDelAll()
            'Next i

            Dim px, py As Double
            px = point_lgtr_end.X
            py = point_lgtr_end.Y

            'point_lgr_end.Select4(False, Nothing)
            'point_lgr_star.Select4(True, Nothing)
            'DisplayDimension = part.AddDimension2((Inside_diameter / 2 + 0.02) * Sin(360 / IPGGroove_Number / 2 * 4 / 5 * PI / 180), Inside_diameter / 2 + 0.005, 0)
            'DisplayDimension.CenterText = True
            point_lgr_star.Select4(False, Nothing)
            point_lgtr_end.Select4(True, Nothing)

            DisplayDimension = part.AddDimension2(IPGChord_Length / 1.5, Inside_diameter / 2 + IPGGroove_Side_Length + 0.005, 0)

            arc_inside1.Select4(False, Nothing)
            ADDConstraints(1)
            Dim pointstrr As SketchPoint
            Dim pointstrl As SketchPoint
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            pointstrr = SkeManger.CreatePoint(-0.01, 0.01, 0)
            pointstrr.Select4(False, Nothing)
            point_lgr_star.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            pointstrr.Select4(False, Nothing)
            ADDConstraints(1)
            pointstrl = SkeManger.CreatePoint(-0.02, 0.02, 0)
            arc_inside1.Select4(False, Nothing)
            pointstrl.Select4(True, Nothing)
            ADDConstraints(5)
            pointstrr.Select4(False, Nothing)
            pointstrl.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(-Inside_diameter / 2.5 * Sin(360 / IPGGroove_Number / 2 * PI / 180), Inside_diameter / 2.5 * Cos(360 / IPGGroove_Number / 2 * PI / 180), 0)
            ChangeDimensionVaule(IPGChord_Length#)
            DisplayDimension.CenterText = True
            part.ClearSelection2(True)
            Lselect(linec, False)
            part.SketchConstraintsDel(0, "sgPERPENDICULAR")
            If Not IPGWedge_reference_circle_diameter = 0 Then
                part.ClearSelection2(True)
                arc_wedge_reference1.Select4(False, Nothing)
                point_lgtr_star.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, Inside_diameter / 2 + 0.002, 0)
                Dimension = DisplayDimension.GetDimension2(0)
                Dimension.SetArcEndCondition(2, 2)
                DisplayDimension.GetAnnotation.setposition2(0, Inside_diameter / 2 + 0.002, 0)
                DisplayDimension.CenterText = True
                point_lwt_star.Select4(False, Nothing)
                point_lwu_star.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(IPGWedge_reference_circle_diameter / 2 * Sin(360 / IPGGroove_Number / 2 / 2 / 2 * PI / 180), IPGWedge_reference_circle_diameter / 2 * Cos(360 / IPGGroove_Number / 2 / 2 / 2 * PI / 180), 0)
                DisplayDimension.CenterText = True
                Lselect(line_wedge_right, False)
                DisplayDimension = part.AddDimension2(IPGWedge_reference_circle_diameter / 2 * Sin(360 / IPGGroove_Number / 1.7 * PI / 180), IPGWedge_reference_circle_diameter / 2 * Cos(360 / IPGGroove_Number / 1.7 * PI / 180), 0)
                DisplayDimension.CenterText = True
                Lselect(line_wedge_right, False)
                point_lgr_star.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2((Inside_diameter / 2 - 0.02) * Sin(360 / IPGGroove_Number / 1.7 * PI / 180), (Inside_diameter / 2 - 0.02) * Cos(360 / IPGGroove_Number / 1.7 * PI / 180), 0)
            End If
            point_lgtr_end.Select4(False, Nothing)

            part.SketchManager.CreateFillet(IPGFillet_Radius, 1)
            part.Extension.SelectByID2("", "SKETCHPOINT", -px, py, 0, False, 0, Nothing, 0)
            part.SketchManager.CreateFillet(IPGFillet_Radius, 1)
            If Not IPGDeflection_Angle = 0 Then
                Rotate_Select_Sketch(-IPGDeflection_Angle)
            End If

            part.Extension.RotateOrCopy(True, IPGGroove_Number - 1, False, 0, 0, 0, 0, 0, 1, 360 / IPGGroove_Number * PI / 180)
            AllCut(2)


        Else
            arc_groove_top = SkeManger.CreateCircleByRadius(0, 0.1, 0, IPGDome_Radius)
            arc_groove_top.Select4(False, Nothing)
            arc_Groovetop_Reference.Select4(True, Nothing)
            ADDConstraints(4)
            arc_groove_top.Select4(False, Nothing)
            ADDConstraints(1)
            point_lgr_end.Select4(False, Nothing)
            point_lgtr_end.Select4(True, Nothing)
            ADDConstraints(8)
            point_lgtr_star.Select4(False, Nothing)
            arc_groove_top.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_groove_top_right, False)
            arc_groove_top.Select4(True, Nothing)
            ADDConstraints(4)
            Dim px, py As Double
            px = point_lgr_end.X
            py = point_lgr_end.Y



            Lselect(line_string, False)
            Lselect(linec_right, True)
            arc_groove_top.Select4(True, Nothing)
            part.EditDelete()

            arc_inside1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, -Inside_diameter / 2, 0, 0)

            arc_inside1.SelectChain(False, Nothing)
            Lselect(linec, True)
            ADDConstraints(9)

            arc_Groovetop_Reference.Select4(False, Nothing)
            Lselect(linec, True)
            part.EditDelete()

            arc_groove_top = SkeManger.CreateTangentArc(-point_lgtr_star.X, point_lgtr_star.Y, 0, point_lgtr_star.X, point_lgtr_star.Y, 0, 1)
            part.ClearSelection2(True)

            Dim SketchSegments() As Object
            Getsketch = part.SketchManager.ActiveSketch
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select4(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i
            If Not IPGDome_Base_Circle_Diameter = 0 Then
                arc_groove_top.Select4(False, Nothing)
                ' part.Extension.SelectByID2(arc_groove_top.GetName, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                DisplayDimension = part.AddDimension2(0, IPGDome_Base_Circle_Diameter# / 2 - IPGDome_Radius / 2, 0)

            End If
            point_lgr_end.Select4(False, Nothing)
            part.SketchManager.CreateFillet(IPGFillet_Radius, 1)

            part.Extension.SelectByID2("", "SKETCHPOINT", -point_lgr_end.X, point_lgr_end.Y, 0, False, 0, Nothing, 0)
            part.SketchManager.CreateFillet(IPGFillet_Radius, 1)
            arc_inside1.Select4(False, Nothing)
            ADDConstraints(1)
            Dim pointstrr As SketchPoint
            Dim pointstrl As SketchPoint
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
            ADDConstraints(1)
            pointstrr = SkeManger.CreatePoint(-0.01, 0.01, 0)
            pointstrr.Select4(False, Nothing)
            point_lgr_star.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            pointstrr.Select4(False, Nothing)
            ADDConstraints(1)
            pointstrl = SkeManger.CreatePoint(-0.02, 0.02, 0)
            arc_inside1.Select4(False, Nothing)
            pointstrl.Select4(True, Nothing)
            ADDConstraints(5)
            pointstrr.Select4(False, Nothing)
            pointstrl.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(-Inside_diameter / 2.5 * Sin(360 / IPGGroove_Number / 2 * PI / 180), Inside_diameter / 2.5 * Cos(360 / IPGGroove_Number / 2 * PI / 180), 0)
            ChangeDimensionVaule(IPGChord_Length#)
            DisplayDimension.CenterText = True
            If Not IPGWedge_reference_circle_diameter = 0 Then
                arc_wedge_reference1.Select4(False, Nothing)
                point_lgr_star.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(0, Inside_diameter / 2 + 0.002, 0)

                Dimension = DisplayDimension.GetDimension2(0)
                Dimension.SetArcEndCondition(2, 2)
                DisplayDimension.GetAnnotation.setposition2(0, Inside_diameter / 2 + 0.002, 0)
                DisplayDimension.CenterText = True

                point_lwt_star.Select4(False, Nothing)
                point_lwu_star.Select4(True, Nothing)
                DisplayDimension = part.AddDimension2(IPGWedge_reference_circle_diameter / 2 * Sin(360 / IPGGroove_Number / 2 / 2 / 2 * PI / 180), IPGWedge_reference_circle_diameter / 2 * Cos(360 / IPGGroove_Number / 2 / 2 / 2 * PI / 180), 0)
                DisplayDimension.CenterText = True
                Lselect(line_wedge_right, False)
                DisplayDimension = part.AddDimension2(IPGWedge_reference_circle_diameter / 2 * Sin(360 / IPGGroove_Number / 1.7 * PI / 180), IPGWedge_reference_circle_diameter / 2 * Cos(360 / IPGGroove_Number / 1.7 * PI / 180), 0)
                DisplayDimension.CenterText = True
                Lselect(line_wedge_right, False)
                point_lgr_star.Select4(True, Nothing)

                DisplayDimension = part.AddDimension2((Inside_diameter / 2 - 0.02) * Sin(360 / IPGGroove_Number / 1.7 * PI / 180), (Inside_diameter / 2 - 0.02) * Cos(360 / IPGGroove_Number / 1.7 * PI / 180), 0)


            End If

            Dim pointregre As SketchPoint
            pointregre = SkeManger.CreatePoint(px, py, 0)
            pointregre.Select4(False, Nothing)
            point_lgr_star.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2((Inside_diameter / 2 + 0.02) * Sin(360 / IPGGroove_Number / 2 * 4 / 5 * PI / 180), Inside_diameter / 2 + 0.02, 0)
            DisplayDimension.CenterText = True
            arc_groove_top.SelectChain(True, Nothing)
            If Not IPGDeflection_Angle = 0 Then
                Rotate_Select_Sketch(-IPGDeflection_Angle)
            End If
            part.Extension.RotateOrCopy(True, IPGGroove_Number - 1, False, 0, 0, 0, 0, 0, 1, 360 / IPGGroove_Number * PI / 180)

            AllCut(2)
            SelectPlane("front")
            SkeManger.InsertSketch(True)
            arc_Groovetop_Reference1 = SkeManger.CreateCircleByRadius(0, 0, 0, IPGDome_Base_Circle_Diameter / 2)
            SetConstructionline(1)
            arc_Groovetop_Reference1.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(IPGDome_Base_Circle_Diameter / 4 * Sin(-120 * PI / 180), IPGDome_Base_Circle_Diameter / 4 * Cos(-120 * PI / 180), 0)
            part.EditDimensionProperties2(0, 0, 0, 0, 0, False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
            If Not IPG_tol_type = "0" Then
                SetTolvalue(IPG_tol_type, IPG_tol_max, IPG_tol_min)
                DisplayDimension.ShowTolParenthesis = True
            End If
            SkeManger.InsertSketch(True)
        End If

        SelectPlane("front")
        SkeManger.InsertSketch(True)
        Dim pointre As SketchPoint
        pointre = SkeManger.CreatePoint(-Inside_diameter / 1.8 * Sin(IPGDeflection_Angle / 2 * PI / 180), -Inside_diameter / 1.8 * Cos(IPGDeflection_Angle / 2 * PI / 180), 0)
        part.Extension.SelectByID2("", "SKETCHPOINT", pointre.X, -pointre.Y, 0, False, 0, Nothing, 0)
        Dim myGtol As Object
        Dim myAnno As Annotation
        myGtol = part.InsertGtol()
        myGtol.SetFrameSymbols2(1, IPG_gtol_symbol, True, "", False, "", "", "", "")
        myGtol.SetFrameValues(1, IPG_gtol_value1, "", IPG_gtol_main, "", "")
        myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
        myGtol.SetFrameValues(2, "", "", "", "", "")
        myGtol.SetPTZHeight("", False)
        myGtol.SetCompositeFrame(False)
        myGtol.SetText(4, "")
        myGtol.SetBetweenTwoPoints(False, "", "")
        myAnno = myGtol.GetAnnotation()
        myAnno.SetPosition(-diameter / 1.2 * Sin(45 * PI / 180), -diameter / 1.2 * Cos(45 * PI / 180), 0)
        myAnno.SetLeader3(2, 0, True, False, False, False)
        Dim number As String
        Dim myNote As Object
        number = IPGGroove_Number & "槽均布"
        myNote = part.InsertNote(number)
        myNote.GetAnnotation().SetPosition(-diameter / 1.2 * Sin(45 * PI / 180) + 0.03, -diameter / 1.2 * Cos(45 * PI / 180) + 0.02, 0)
        Anno = myNote.GetAnnotation()
        Anno.SetLeader3(0, 0, True, False, False, False)



    End Sub
    'Public Sub 可选左右突起型内多边形槽(槽数#, 弦长#, 外圆直径#,内圆直径#, 相间角度#, 偏转角度#, 槽边长#, 圆顶基准圆直径#, 圆顶半径#, 圆角半径#, 楔基准圆直径#, 右楔左边长#, 右楔右边长#, 楔宽#,平顶时槽顶左右线长#)
    Public Sub Out_Horseshoe_Groove(OHGroove_number#, OHDeflection_Angle#, diameter#, OHReference_circle_diameter#, OHGroove_hole_diameter#, OHGroove_width#)
        If Not OHGroove_number = 0 Then
            Dim line_left, line_right, linec As SketchLine
            Dim arc1, arc2, arcre As SketchSegment
            Dim point_ll_star, point_ll_end, point_lr_star, point_lr_end As SketchPoint
            Setting(0)
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)

            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
            ADDConstraints(1)
            arc2 = SkeManger.CreateCircleByRadius(0, OHReference_circle_diameter / 2, 0, OHGroove_hole_diameter / 2)
            ADDConstraints(1)
            line_left = SkeManger.CreateLine(-0.01, diameter / 2 + 0.01, 0, -0.1, diameter / 2 + 0.02, 0)
            ADDConstraints(3)
            line_right = SkeManger.CreateLine(0.01, diameter / 2 + 0.01, 0, 0.1, diameter / 2 + 0.02, 0)
            ADDConstraints(3)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            ADDConstraints(1)
            Lselect(line_left, False)
            Lselect(line_right, True)
            Lselect(linec, True)
            ADDConstraints(6)
            point_ll_end = line_left.GetEndPoint2
            point_ll_star = line_left.GetStartPoint2
            point_lr_end = line_right.GetEndPoint2
            point_lr_star = line_right.GetStartPoint2
            point_ll_star.Select4(False, Nothing)
            arc2.Select4(True, Nothing)
            ADDConstraints(5)
            point_lr_star.Select4(False, Nothing)
            arc2.Select4(True, Nothing)
            ADDConstraints(5)
            point_lr_end.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            point_ll_end.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            Lselect(line_left, False)
            Lselect(line_right, True)
            DisplayDimension = part.AddDimension2(0, diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(OHGroove_width)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, diameter / 2, 0, 0)
            arc2.Select4(False, Nothing)
            SkeManger.SketchTrim(0, 0, OHReference_circle_diameter / 2 + OHGroove_hole_diameter / 2, 0)
            arcre = SkeManger.CreateCircleByRadius(0, 0, 0, OHReference_circle_diameter / 2)
            SetConstructionline(1)
            arcre.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(-OHReference_circle_diameter / 4, -OHReference_circle_diameter / 4, 0)
            DisplayDimension.Diametric = True
            arc2.Select4(False, Nothing)
            DisplayDimension = part.AddDimension2(-OHReference_circle_diameter / 4, OHReference_circle_diameter / 1.7, 0)
            DisplayDimension.Diametric = True
            part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "10×<MOD-DIAM>", "", True, "", "", False)
            DisplayDimension.SetBrokenLeader2(False, 2)
            'Exterminate(1)
            Rotate_Select_Sketch(OHDeflection_Angle)
            part.Extension.RotateOrCopy(True, OHGroove_number - 1, False, 0, 0, 0, 0, 0, 1, 360 / OHGroove_number * PI / 180)

            AllCut(2)
        End If
    End Sub
    ' Public Sub 外圆马蹄槽(外圆直径,槽基准圆直径,槽孔直径,槽宽)
    Public Sub Inside_Hypotenuse_Tapezoid_Groove(inside_diameter#, IHTGroove_Depth#, IHTGroove_Top_Width#, IHTGroove_under_Width#, IHTGroove_Number#, IHTGFillet_Radius#, IHTGDeflection_Angle#, IHTGPhase_Angle#)
        If Not IHTGroove_Depth = 0 Then
            Dim line_top, line_left, line_right, linec As SketchLine
            Dim arc1 As SketchSegment
            Dim point_lt_star, point_lt_end, point_ll_star, point_ll_end, point_lr_star, point_lr_end As SketchPoint
            SelectPlane("front")
            part.SketchManager.InsertSketch(True)
            linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            ADDConstraints(1)
            arc1 = SkeManger.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            ADDConstraints(1)
            line_top = SkeManger.CreateLine(-0.015, inside_diameter / 2 + 0.001, 0, 0.015, inside_diameter / 2 + 0.001, 0)
            line_left = SkeManger.CreateLine(-0.01, 0, 0, -0.01, 0.01, 0)
            line_right = SkeManger.CreateLine(0.01, 0, 0, 0.01, 0.01, 0)
            Lselect(line_left, False)
            Lselect(line_right, True)
            Lselect(linec, True)
            ADDConstraints(6)
            point_ll_star = line_left.GetStartPoint2
            point_ll_end = line_left.GetEndPoint2
            point_lr_star = line_right.GetStartPoint2
            point_lr_end = line_right.GetEndPoint2
            point_lt_star = line_top.GetStartPoint2
            point_lt_end = line_top.GetEndPoint2
            Lselect(line_top, False)
            arc1.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0.1, inside_diameter / 2 + 0.001, 0)
            Dimension = DisplayDimension.GetDimension2(0)
            Dimension.SetArcEndCondition(1, 2)
            DisplayDimension.GetAnnotation().SetPosition(0.01, inside_diameter / 2 + 0.002, 0)
            ChangeDimensionVaule(IHTGroove_Depth)
            point_lt_end.Select4(False, Nothing)
            point_lt_star.Select4(True, Nothing)
            Lselect(linec, True)
            ADDConstraints(6)
            point_ll_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            point_ll_end.Select4(False, Nothing)
            point_lt_star.Select4(True, Nothing)
            ADDConstraints(8)
            point_lr_star.Select4(False, Nothing)
            arc1.Select4(True, Nothing)
            ADDConstraints(5)
            point_lr_end.Select4(False, Nothing)
            point_lt_end.Select4(True, Nothing)
            ADDConstraints(8)
            Lselect(line_top, False)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 + 0.01, 0)
            ChangeDimensionVaule(IHTGroove_Top_Width)
            point_ll_star.Select4(False, Nothing)
            point_lr_star.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 - 0.01, 0)
            ChangeDimensionVaule(IHTGroove_under_Width)
            arc1.Select4(False, Nothing)
            SkeManger.SketchTrim(0, inside_diameter / 2, 0, 0)
            Lselect(linec, False)
            part.EditDelete()

            Dim SketchSegments() As Object
            Getsketch = part.SketchManager.ActiveSketch
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select4(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i

            Lselect(line_top, False)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 + IHTGroove_Depth# + 0.002, 0)
            DisplayDimension.CenterText = True
            point_ll_star.Select4(False, Nothing)
            point_lr_star.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0, inside_diameter / 2 - 0.01, 0)
            DisplayDimension.CenterText = True
            Lselect(line_top, False)
            arc1.Select4(True, Nothing)
            DisplayDimension = part.AddDimension2(0.01, inside_diameter / 2, 0)
            Dimension = DisplayDimension.GetDimension2(0)
            Dimension.SetArcEndCondition(1, 2)
            DisplayDimension.CenterText = True
            point_ll_end.Select4(False, Nothing)
            SkeManger.CreateFillet(IHTGFillet_Radius, 2)
            point_lr_end.Select4(False, Nothing)
            SkeManger.CreateFillet(IHTGFillet_Radius, 1)
            arc1.SelectChain(False, Nothing)
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, IHTGDeflection_Angle# * PI / 180)
            part.Extension.RotateOrCopy(True, IHTGroove_Number# - 1, False, 0, 0, 0, 0, 0, 1, -IHTGPhase_Angle# * PI / 180)
            Getsketch = SkeManger.ActiveSketch
            IHTsketch = Getsketch
            AllCut(2)
        End If
    End Sub
    'Public sub 内圆斜边梯形槽(内圆直径,槽深,槽顶宽,槽底宽,槽数,偏转角度,相间角度)
    Public Sub External_Boss(table_number#, diameter#, out_diameter#, table_width#, grooves_distance#, groove_all_width#, groove_radius#, mid_groove_hight#, fillet_radius#)
        Dim line_left, line_right, line_mid, linec, line_mleft, line_mright As SketchLine
        Dim arc_outest, arc_out, arc_out1, arc_left1, arc_right1, arc_outest1 As SketchSegment
        Dim arc_left, arc_right As SketchArc
        Dim point_ll_star, point_ll_end, point_lr_star, point_lr_end, point_lm_star, point_lm_end, point_al_center, point_ar_center, point_lml_star, point_lml_end, point_lmr_star, point_lmr_end As SketchPoint
        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        arc_outest = SkeManger.CreateCircleByRadius(0, 0, 0, out_diameter / 2)
        ADDConstraints(1)
        arc_out = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.001, 0)
        ADDConstraints(1)
        line_left = SkeManger.CreateLine(-0.01, diameter / 2, 0, -0.01, out_diameter / 2, 0)
        ADDConstraints(3)
        line_right = SkeManger.CreateLine(0.01, diameter / 2, 0, 0.01, out_diameter / 2, 0)
        ADDConstraints(3)
        line_mid = SkeManger.CreateLine(-0.015, 0.01, 0, 0.015, 0.01, 0)
        ADDConstraints(2)
        point_ll_star = line_left.GetStartPoint2
        point_ll_end = line_left.GetEndPoint2
        point_lr_star = line_right.GetStartPoint2
        point_lr_end = line_right.GetEndPoint2
        point_lm_star = line_mid.GetStartPoint2
        point_lm_end = line_mid.GetEndPoint2
        point_ll_star.Select4(False, Nothing)
        arc_out.Select4(True, Nothing)
        ADDConstraints(5)
        point_ll_end.Select4(False, Nothing)
        arc_outest.Select4(True, Nothing)
        ADDConstraints(5)
        point_lr_star.Select4(False, Nothing)
        arc_out.Select4(True, Nothing)
        ADDConstraints(5)
        point_lr_end.Select4(False, Nothing)
        arc_outest.Select4(True, Nothing)
        ADDConstraints(5)
        Lselect(line_left, False)
        Lselect(line_right, True)
        DisplayDimension = part.AddDimension2(0, out_diameter / 2 + 0.05, 0)
        ChangeDimensionVaule(table_width)
        Lselect(line_left, False)
        Lselect(line_right, True)
        Lselect(linec, True)
        ADDConstraints(6)

        arc_out.Select4(False, Nothing)
        SkeManger.SketchTrim(0, 0, diameter / 2, 0)
        point_ll_star.Select4(False, Nothing)
        point_lr_star.Select4(True, Nothing)
        part.SketchManager.CreateFillet(fillet_radius, 1)
        arc_out.Select4(False, Nothing)
        part.EditDelete()
        arc_out1 = SkeManger.CreateCircleByRadius(0, 0, 0, diameter / 2)
        ADDConstraints(1)
        arc_out1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, diameter / 2, 0, 0)
        Lselect(line_mid, False)
        DisplayDimension = part.AddDimension2(0, out_diameter / 2 + 0.02, 0)
        ChangeDimensionVaule(grooves_distance - groove_radius * 2)
        point_lm_end.Select4(False, Nothing)
        point_lm_star.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        Lselect(line_mid, False)
        arc_outest.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0.001, out_diameter / 2 - 0.001, 0)
        DisplayDimension.GetDimension2(0).SetArcEndCondition(1, 2)
        'DisplayDimension.GetAnnotation().SetPosition(0, out_diameter / 2 - 0.01, 0)
        ChangeDimensionVaule(mid_groove_hight)
        arc_left = SkeManger.CreateCircleByRadius(-0.01, out_diameter / 2, 0, groove_radius)
        arc_right = SkeManger.CreateCircleByRadius(0.01, out_diameter / 2, 0, groove_radius)
        point_al_center = arc_left.GetCenterPoint2
        point_ar_center = arc_right.GetCenterPoint2

        point_lm_end.Select4(False, Nothing)
        point_ar_center.Select4(True, Nothing)
        ADDConstraints(10)
        point_lm_star.Select4(False, Nothing)
        point_al_center.Select4(True, Nothing)
        ADDConstraints(10)
        arc_left1 = arc_left
        arc_right1 = arc_right
        arc_left1.Select4(False, Nothing)
        arc_right1.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        arc_right1.Select4(False, Nothing)
        point_lm_end.Select4(True, Nothing)
        ADDConstraints(5)
        arc_left1.Select4(False, Nothing)
        point_lm_star.Select4(True, Nothing)
        ADDConstraints(5)

        'arc_left1.Select4(False, Nothing)
        'arc_right1.Select4(True, Nothing)
        'DisplayDimension = part.AddDimension2(0, out_diameter / 2 + 0.01, 0)
        'ChangeDimensionVaule(grooves_distance)
        line_mleft = SkeManger.CreateLine(-0.01, diameter / 2, 0, -0.01, out_diameter / 2, 0)
        ADDConstraints(3)
        line_mright = SkeManger.CreateLine(0.01, diameter / 2, 0, 0.01, out_diameter / 2, 0)
        ADDConstraints(3)
        point_lml_star = line_mleft.GetStartPoint2
        point_lml_end = line_mleft.GetEndPoint2
        point_lmr_star = line_mright.GetStartPoint2
        point_lmr_end = line_mright.GetEndPoint2
        arc_left1.Select4(False, Nothing)
        DisplayDimension = part.AddDimension2(0.01, out_diameter / 2 - 0.01, 0)
        ChangeDimensionVaule(groove_radius * 2)
        point_lml_star.Select4(False, Nothing)
        arc_left1.Select4(True, Nothing)
        ADDConstraints(5)
        point_lml_end.Select4(False, Nothing)
        arc_outest.Select4(True, Nothing)
        ADDConstraints(5)

        point_lmr_star.Select4(False, Nothing)
        arc_right1.Select4(True, Nothing)
        ADDConstraints(5)
        point_lmr_end.Select4(False, Nothing)
        arc_outest.Select4(True, Nothing)
        ADDConstraints(5)

        Lselect(line_mleft, False)
        arc_left1.Select4(True, Nothing)
        ADDConstraints(4)
        Lselect(line_mright, False)
        arc_right1.Select4(True, Nothing)
        ADDConstraints(4)

        arc_outest.Select4(False, Nothing)
        part.EditDelete()
        arc_left1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, point_al_center.X, point_al_center.Y + groove_radius, 0)
        arc_right1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, point_ar_center.X, point_ar_center.Y + groove_radius, 0)
        arc_outest1 = SkeManger.CreateCircleByRadius(0, 0, 0, out_diameter / 2)
        arc_outest1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, out_diameter / 2, 0, 0)
        arc_outest1.Select4(False, Nothing)
        SkeManger.SketchTrim(0, 0, out_diameter / 2, 0)
        AllExtrusion(1)




    End Sub
    'Public Sub 外圆凸台(外圆凸台直径,外圆直径,凸台宽,凸台内槽圆心距,凸台内槽整体宽,凸台内槽半径,槽中间与外圆凸台高度)

    Public Function Refplane(plane$, distance#) As Feature
        Dim feature As Feature
        If plane = "front" Then
            part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        ElseIf plane = "top" Then
            part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        ElseIf plane = "right" Then
            part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        End If
        feature = part.FeatureManager.InsertRefPlane(8, distance, 0, 0, 0, 0)
        Refplane = feature
    End Function
    Public Function AllCut(vaule#) As Feature '完全贯穿 2反向 
        Dim feature As Feature
        If vaule = 1 Then
            part.FeatureCut(True, False, False, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
            feature = SelectionMgr.GetSelectedObject6(1, -1)
            AllCut = feature
        ElseIf vaule = 2 Then
            part.FeatureCut(True, False, True, 1, 0, 0, 0, False, False, 0, 0, 0, 0, 0, 0)
            feature = SelectionMgr.GetSelectedObject6(1, -1)
            AllCut = feature
        End If
    End Function
    Public Function Table(vaule#, distance#) As Feature
        Dim feature As Feature
        If vaule = 1 Then
            feature = part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, distance, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
            Table = feature
        ElseIf vaule = 2 Then
            feature = part.FeatureManager.FeatureExtrusion2(True, False, True, 0, 0, distance, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
            Table = feature
        End If
    End Function
    Public Function AllExtrusion(vaule#) As Feature '完全拉伸 2反向 
        Dim feature As Feature
        If vaule = 1 Then
            feature = part.FeatureManager.FeatureExtrusion2(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
            AllExtrusion = feature
        ElseIf vaule = 2 Then
            feature = part.FeatureManager.FeatureExtrusion2(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
            AllExtrusion = feature
        End If
    End Function
    Public Function Cut(vaule#, distance#) As Feature
        Dim feature As Feature
        If vaule = 1 Then
            feature = part.FeatureManager.FeatureCut4(True, False, False, 0, 0, distance, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
            Cut = feature
        ElseIf vaule = 2 Then
            feature = part.FeatureManager.FeatureCut4(True, False, True, 0, 0, distance, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
            Cut = feature
        End If
    End Function
    Public Sub Lselect(name As SldWorks.SketchLine, value As Boolean)
        If Not name Is Nothing Then
            If value = False Then
                name.select2(False, Nothing)
            ElseIf value = True Then
                name.select2(True, Nothing)
            End If
        End If
    End Sub
    Public Sub ChangeDimensionVaule(vaule#) '修改标注尺寸
        Dimension = DisplayDimension.GetDimension2(0)
        Dimension.SystemValue = vaule
    End Sub
    Public Sub SetTolvalue(type#, max$, min$)
        Dimension = DisplayDimension.GetDimension2(0)
        DimensionTolerance = Dimension.Tolerance
        DimensionTolerance.Type = type
        DimensionTolerance.SetFitValues(max, min)

    End Sub
    Public Sub SelectPlane(plane$) '选择基准面
        If plane = "front" Then
            part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        ElseIf plane = "up" Then
            part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        ElseIf plane = "right" Then
            part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
        End If
    End Sub
    Public Sub Rotate_Select_Sketch(Deflection_Angle#)
        part.ClearSelection2(True)
        'line01.Select4(False, Nothing)
        Dim P1 As SketchPoint
        Dim points As Object
        Getsketch = SkeManger.ActiveSketch
        points = Getsketch.GetSketchPoints2
        SketchSegments = Getsketch.GetSketchSegments
        For i = 0 To UBound(SketchSegments)
            SketchSegment = SketchSegments(i)
            SketchSegment.Select2(True, Nothing)
        Next i
        For i = 0 To UBound(points)
            P1 = points(i)
            P1.Select4(True, Nothing)
        Next i
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Deflection_Angle / 180)
    End Sub
    Public Sub ADDConstraints(type#) '各种草图方法
        If type = 1 Then '固定
            part.SketchAddConstraints("sgFIXED")
        ElseIf type = 2 Then '水平
            part.SketchAddConstraints("sgHORIZONTAL2D")
        ElseIf type = 3 Then '竖直
            part.SketchAddConstraints("sgVERTICAL2D")
        ElseIf type = 4 Then '相切
            part.SketchAddConstraints("sgTANGENT")
        ElseIf type = 5 Then '重合
            part.SketchAddConstraints("sgCOINCIDENT")
        ElseIf type = 6 Then '对称
            part.SketchAddConstraints("sgSYMMETRIC")
        ElseIf type = 7 Then '相等
            part.SketchAddConstraints("sgSAMELENGTH")
        ElseIf type = 8 Then '合并
            part.SketchAddConstraints("sgMERGEPOINTS")
        ElseIf type = 9 Then '镜像
            part.SketchMirror()
        ElseIf type = 10 Then '点水平排布
            part.SketchAddConstraints("sgHORIZONTALPOINTS2D")
        ElseIf type = 11 Then '点竖直排布
            part.SketchAddConstraints("sgVERTICALPOINTS2D")
        ElseIf type = 12 Then '共线
            part.SketchAddConstraints("sgCOLINEAR")
        ElseIf type = 13 Then '全等
            part.SketchAddConstraints("sgCORADIAL")
        ElseIf type = 14 Then '相互垂直
            part.SketchAddConstraints("sgPERPENDICULAR")
        ElseIf type = 15 Then '平行
            part.SketchAddConstraints("sgPARALLEL")
        ElseIf type = 16 Then '同心
            part.SketchAddConstraints("sgCONCENTRIC")
        ElseIf type = 17 Then '相等曲率
            part.SketchAddConstraints("sgEQUALCURV3DALIGN")
        ElseIf type = 18 Then '曲线长度相等
            part.SketchAddConstraints("sgSAMECURVELENGTH")
        End If

    End Sub
    Public Function AXIS(Reference$) As SldWorks.Feature '插入基准轴
        Dim AXI As SldWorks.Feature
        Dim line1 As SldWorks.SketchLine
        Dim line1Segment As SldWorks.SketchSegment
        If Reference = "Z" Then
            part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
            part.SketchManager.InsertSketch(True)
            line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, -0.01, 0)
            line1Segment = line1
            part.InsertSketch2(True)
            line1Segment.Select4(False, Nothing)
            part.InsertAxis2(True)
            AXI = SelectionMgr.GetSelectedObject6(1, -1)
            AXI.Select2(False, Nothing)
        End If
        If Reference = "Y" Then
            part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
            part.SketchManager.InsertSketch(True)
            line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
            line1Segment = line1
            part.InsertSketch2(True)
            line1Segment.Select4(False, Nothing)
            part.InsertAxis2(True)
            AXI = SelectionMgr.GetSelectedObject6(1, -1)
            AXI.Select2(False, Nothing)
        End If
        If Reference = "X" Then
            part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
            part.SketchManager.InsertSketch(True)
            line1 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.01, 0, 0)
            line1Segment = line1
            part.InsertSketch2(True)
            line1Segment.Select4(False, Nothing)
            part.InsertAxis2(True)
            AXI = SelectionMgr.GetSelectedObject6(1, -1)
            AXI.Select2(False, Nothing)
        End If
        AXI = SelectionMgr.GetSelectedObject6(1, -1)
        AXIS = AXI
    End Function
    Public Sub SetConstructionline(value#)
        If value = 1 Then
            part.SketchManager.CreateConstructionGeometry()
        End If

    End Sub
    Public Sub Exterminate(vaule#)
        If vaule = 1 Then
            part.ClearSelection2(True)
            'line01.Select4(False, Nothing)
            Dim P1 As SketchPoint
            Dim points As Object
            Getsketch = SkeManger.ActiveSketch
            points = Getsketch.GetSketchPoints2
            SketchSegments = Getsketch.GetSketchSegments
            For i = 0 To UBound(SketchSegments)
                SketchSegment = SketchSegments(i)
                SketchSegment.Select2(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i
            For i = 0 To UBound(points)
                P1 = points(i)
                P1.Select4(False, Nothing)
                part.SketchConstraintsDelAll()
            Next i


        End If
    End Sub
    Public Sub InsertA4Drawings(dz$, Scale2#, front#, right#, up#, material$, company$, name$, Code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$， skills_requirement5$)
        Dim Draw As SldWorks.DrawingDoc
        Dim View As SldWorks.View '视图对象
        Dim Notes As Object
        Dim Count As Long
        Dim Annpos() As Double
        Dim Annotation As SldWorks.Annotation
        Dim myView As SldWorks.View
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4.drwdot", 1, 0, 0)


        Dim DrawTitle As String
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        'Dim myViewname As String
        part = swapp.ActiveDoc
        Draw = swapp.ActiveDoc
        SelectionMgr = part.SelectionManager

        part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
        part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
        swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
        swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见
        Draw = swapp.ActiveDoc

        If front = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*前视", 0.1, 0.13, 0)
        End If
        If right = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*右视", 0.11, 0.15, 0)
        End If
        If up = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*上视", 0.11, 0.15, 0)
        End If

        'myViewname = myView.Name
        'Debug.Print(myViewname)
        'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
        'myViewname = myView.Name
        'Debug.Print(myViewname)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
        Dim myNote As Object
        myNote = part.InsertNote("公司名称")
        myNote.GetAnnotation().SetPosition(0.251, 0.055, 0)
        part.ClearSelection2(True)

        View = Draw.GetFirstView
        Do Until View Is Nothing
            Notes = View.GetNotes()
            Count = View.GetNoteCount()
            If Count > 0 Then
                For Each N1 In Notes
                    Annotation = N1.GetAnnotation()
                    Annpos = Annotation.GetPosition()
                    If Annpos(0) > 192 / 1000 And Annpos(0) < 240.7 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                        N1.SetText(material)
                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                        N1.SetText(company)


                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 24 / 1000 And Annpos(1) < 43 / 1000 Then
                        N1.SetText(name)


                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 12.16 / 1000 And Annpos(1) < 24 / 1000 Then
                        N1.SetText(Code)


                    End If
                    If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 191 / 1000 And Annpos(1) < 205 / 1000 Then
                        N1.SetText(Code)


                    End If

                Next
            End If
            View = View.GetNextView() '获得下一个视图引用
        Loop

        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        SheetPr(2) = 1
        SheetPr(3) = Scale2
        SheetPr(4) = False
        Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
        Draw.EditRebuild3()
        myNote = part.InsertNote(skills_requirement_title）
        myNote.GetAnnotation().SetPosition(0.06, 0.052, 0)
        part.FontPoints(22)
        myNote = part.InsertNote(skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4 + Chr(13) + Chr(10) +
                                 skills_requirement5）
        myNote.GetAnnotation().SetPosition(0.038, 0.044, 0)

        'part.WindowRedraw()
        part.ActivateView("工程图视图1")
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        part.EditUndo2(1)
        part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, True, False, True, True)





    End Sub
    Public Sub one_six_InsertA4Drawings(dz$, Scale2#, front#, right#, up#, material$, company$, name$, Code$, skills_requirement_title$, skills_requirement1$, skills_requirement2$, skills_requirement3$, skills_requirement4$， skills_requirement5$)
        Dim Draw As SldWorks.DrawingDoc
        Dim View As SldWorks.View '视图对象
        Dim Notes As Object
        Dim Count As Long
        Dim Annpos() As Double
        Dim Annotation As SldWorks.Annotation
        Dim myView As SldWorks.View
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4.drwdot", 1, 0, 0)


        Dim DrawTitle As String
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        'Dim myViewname As String
        part = swapp.ActiveDoc
        Draw = swapp.ActiveDoc
        SelectionMgr = part.SelectionManager

        part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
        part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
        swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, swDisplayMode_e.swHIDDEN_GREYED)
        swapp.SetUserPreferenceIntegerValue(swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见
        Draw = swapp.ActiveDoc

        If front = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*前视", 0.1, 0.15, 0)
        End If
        If right = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*右视", 0.11, 0.15, 0)
        End If
        If up = 1 Then
            myView = Draw.CreateDrawViewFromModelView3(dz + ".SLDPRT", "*上视", 0.11, 0.15, 0)
        End If

        'myViewname = myView.Name
        'Debug.Print(myViewname)
        'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
        'myViewname = myView.Name
        'Debug.Print(myViewname)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
        part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
        Dim myNote As Object
        myNote = part.InsertNote("公司名称")
        myNote.GetAnnotation().SetPosition(0.251, 0.055, 0)
        part.ClearSelection2(True)

        View = Draw.GetFirstView
        Do Until View Is Nothing
            Notes = View.GetNotes()
            Count = View.GetNoteCount()
            If Count > 0 Then
                For Each N1 In Notes
                    Annotation = N1.GetAnnotation()
                    Annpos = Annotation.GetPosition()
                    If Annpos(0) > 192 / 1000 And Annpos(0) < 240.7 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                        N1.SetText(material)
                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                        N1.SetText(company)


                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 24 / 1000 And Annpos(1) < 43 / 1000 Then
                        N1.SetText(name)


                    End If
                    If Annpos(0) > 240.7 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 12.16 / 1000 And Annpos(1) < 24 / 1000 Then
                        N1.SetText(Code)


                    End If
                    If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 191 / 1000 And Annpos(1) < 205 / 1000 Then
                        N1.SetText(Code)


                    End If

                Next
            End If
            View = View.GetNextView() '获得下一个视图引用
        Loop

        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        SheetPr(2) = 1
        SheetPr(3) = Scale2
        SheetPr(4) = False
        Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
        Draw.EditRebuild3()
        myNote = part.InsertNote(skills_requirement_title）
        myNote.GetAnnotation().SetPosition(0.06, 0.052, 0)
        part.FontPoints(22)
        myNote = part.InsertNote(skills_requirement1 + Chr(13) + Chr(10) +
                                 skills_requirement2 + Chr(13) + Chr(10) +
                                 skills_requirement3 + Chr(13) + Chr(10) +
                                 skills_requirement4 + Chr(13) + Chr(10) +
                                 skills_requirement5）
        myNote.GetAnnotation().SetPosition(0.038, 0.044, 0)

        'part.WindowRedraw()
        part.ActivateView("工程图视图1")
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        part.EditUndo2(1)
        part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, True, False, True, True)





    End Sub
    Public Sub 六分之一冲片圆底槽口具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#, inside_diameter#, arcangle#, Groove_number#)
        ' Public Sub 圆底槽口局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, 局部视图圆心X#, 局部视图圆心Y#, 局部视图圆半径#, Slot_Relative_Y_axis_deflection_angle#)
        Dim point1, point2 As SketchPoint
        part.ActivateView("工程图视图1") '局部视图
        part.Extension.SelectByID2("Arc1@" & feature_sno16pvl.Name & "@*-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.SketchManager.SketchUseEdge3(False, False)
        'LINE01 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.002, 0, 0)
        'LINE01.Select4(False, Nothing)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 1 / 局部视图图纸比例值#, "A", 0, False, False, False, False)
        part.EditRebuild3()
        part.InsertModelAnnotations3(0, 32768, True, False, True, True) '允许有重复标注


        'part.Extension.SketchBoxSelect((主视图X# + arc1.IGetCenterPoint2.X * 图纸比例值 - 局部视图半径 * SelectBox_proportion) / 图纸比例值, (主视图Y# + arc1.IGetCenterPoint2.Y * 图纸比例值 - 局部视图半径 * SelectBox_proportion) / 图纸比例值, 0#, (主视图X# + arc1.IGetCenterPoint2.X * 图纸比例值 + 局部视图半径 * SelectBox_proportion) / 图纸比例值, (主视图Y# + arc1.IGetCenterPoint2.Y * 图纸比例值 + 局部视图半径 * SelectBox_proportion) / 图纸比例值, 0#)


        part.Extension.SelectByID2("D1@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.SelectByID2("D1@" & feature_sno1bcen.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D2@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D3@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D4@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D5@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D6@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D7@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D8@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D9@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.EditDelete()
        'part = swapp.ActiveDoc

        'part.ActivateView("工程图视图2")
        'part.Extension.SelectByID2("Point2@草图10@*-2@工程图视图2", "EXTSKETCHPOINT", 0, 0.1486, 0, False, 0, Nothing, 0)

        'part.BlankSketch()
        'part.Extension.SelectByID2("D1@草图7@SL_8LY_670_0001-1@工程图视图1", "DIMENSION", 0.13937635582527, 0.0896908349896933, 0, False, 0, Nothing, 0)



        'myDatumTag = part.InsertDatumTag2()
        'If Not myDatumTag Is Nothing Then
        '    myDatumTag.FilledTriangle = True
        '    myDatumTag.Shoulder = True
        '    myDatumTag.SetLabel("B")
        '    myAnnotation = myDatumTag.GetAnnotation()
        '    'myAnnotation.SetPosition(0.16439218647149, 0.112131109719077, 0)
        '    myAnnotation.SetPosition(inside_diameter# / 1.9 * Sin(arcangle / 2 * 1.5 * PI / 180), inside_diameter# / 1.9 * Cos（arcangle / 2 * 1.5 * PI / 180) + 0.01, 0)

        'End If
        'part.WindowRedraw()


    End Sub
    Public Sub 完整冲片圆底槽口具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#, inside_diameter#, Groove_number#)
        ' Public Sub 圆底槽口局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, 局部视图圆心X#, 局部视图圆心Y#, 局部视图圆半径#, Slot_Relative_Y_axis_deflection_angle#)

        part.ActivateView("工程图视图1") '局部视图
        part.Extension.SelectByID2("Arc1@" & feature_sno16pvl.Name & "@*-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.SketchManager.SketchUseEdge3(False, False)
        'LINE01 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.002, 0, 0)
        'LINE01.Select4(False, Nothing)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 1 / 局部视图图纸比例值#, "A", 0, False, False, False, False)
        part.EditRebuild3()
        part.InsertModelAnnotations3(0, 32768, True, False, True, True) '允许有重复标注

        part.Extension.SelectByID2("D1@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.SelectByID2("D2@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D3@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D4@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D5@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D6@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D7@" & feature_sno16pven.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D8@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D9@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.EditDelete()

    End Sub
    Public Sub 反向平顶槽口具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#)
        ' Public Sub 圆底槽口局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, 局部视图圆心X#, 局部视图圆心Y#, 局部视图圆半径#, Slot_Relative_Y_axis_deflection_angle#)

        part.ActivateView("工程图视图1") '局部视图
        part.Extension.SelectByID2("Arc1@" & UNFarc_sketch.Name & "@*@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.SketchManager.SketchUseEdge3(False, False)
        'LINE01 = part.SketchManager.CreateCenterLine(0, 0, 0, 0.002, 0, 0)
        'LINE01.Select4(False, Nothing)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
        part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 1 / 局部视图图纸比例值#, "A", 0, False, False, False, False)
        part.EditRebuild3()
        part.InsertModelAnnotations3(0, 32768, True, False, True, True) '允许有重复标注

        part.Extension.SelectByID2("D1@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.SelectByID2("D2@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D3@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D4@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D5@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D6@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D7@" & UNFsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D8@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        'part.Extension.SelectByID2("D9@草图2@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.EditDelete()

    End Sub
    Public Sub 可选左右突起型内多边形槽具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#, inside_diameter#, diameter#, arcangle#, 槽类型#, otp_angle#)
        Dim arc1, arc2, arc_inside, line1, line2 As ISketchSegment
        Dim linel, liner, linec As SketchLine
        Dim pointlr1, pointlr2 As SketchPoint

        part.ActivateView("工程图视图1") '局部视图
        arc_inside = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
        arc_inside.Layer = "点划线层"

        part.ActivateView("工程图视图1")
        'line1 = part.SketchManager.CreateLine(inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        'line1.Layer = "点划线层"
        'line2 = part.SketchManager.CreateLine(-inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, -diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        'line2.Layer = "点划线层"
        'line1.Select4(False, Nothing)
        'line2.Select4(True, Nothing)
        'part.AddDimension2(0 + 0.11, diameter / 2 + 0.015, 0)
        Setting(1)
        linel = part.SketchManager.CreateLine(0, 0, 0, -(diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
        liner = part.SketchManager.CreateLine(0, 0, 0, (diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
        arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2 - 0.01)
        part.SketchManager.SketchTrim(0, inside_diameter / 2 - 0.01, 0, 0)
        arc2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter / 2 + 0.01)
        part.SketchManager.SketchTrim(0, diameter / 2 + 0.01, 0, 0)
        Lselect(linel, False)
        part.SketchManager.SketchTrim(0, -diameter / 4 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
        Lselect(liner, False)
        part.SketchManager.SketchTrim(0, diameter / 4 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
        arc2.SelectChain(True, Nothing)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
        part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 局部视图图纸比例值#, "A", 0, False, False, False, False)
        part.EditRebuild3()
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        Setting(0)
        If 槽类型 = 1 Then
            part.Extension.SelectByID2("D2@草图12@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            Dim myGtol As Object
            Dim myAnno As Annotation
            myGtol = part.InsertGtol()
            If Not myGtol Is Nothing Then
                myGtol.SetFrameSymbols2(1, "<IGTOL-SYMMETRY>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.03", "", "A", "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetLeader3(0, 0, True, False, False, False)
            End If
            part.WindowRedraw()
            part.ActivateView("工程图视图1")
            part.Extension.SelectByID2("D3@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图梯形定位槽尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆顶半径尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D1@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            'part.Extension.SelectByID2("D13@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            'part.EditDelete() '删除槽边长尺寸
            part.Extension.SelectByID2("D10@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D11@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D12@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D6@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D7@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D8@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D9@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

            part.EditDelete() '删除主视图楔形突起尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D2@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D4@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)

            part.EditDelete() '删除局部视图右侧圆角尺寸
            part.Extension.SelectByID2("D2@草图12@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图12@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除局部视图内圆矩形槽尺寸
        End If
        If 槽类型 = 2 Or 槽类型 = 3 Then
            part.ActivateView("工程图视图1")
            part.Extension.SelectByID2("D3@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图梯形定位槽尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆顶半径尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D1@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.Extension.SelectByID2("D9@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除槽边长尺寸
            part.Extension.SelectByID2("D8@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D7@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D6@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图楔形突起尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D2@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
        End If
        If 槽类型 = 4 Then
            part.Extension.SelectByID2("D2@草图10@*-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            Dim myGtol As Object
            Dim myAnno As Annotation
            myGtol = part.InsertGtol()
            If Not myGtol Is Nothing Then
                myGtol.SetFrameSymbols2(1, "<IGTOL-SYMMETRY>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.03", "", "A", "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetLeader3(0, 0, True, False, False, False)
            End If
            part.WindowRedraw()
            part.ActivateView("工程图视图1")
            part.Extension.SelectByID2("D3@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图梯形定位槽尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆顶半径尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D1@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除槽边长尺寸
            part.Extension.SelectByID2("D2@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D2@草图10@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图10@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除局部视图内圆矩形槽尺寸
        End If
        If 槽类型 = 5 Then
            part.Extension.SelectByID2("D3@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D1@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图梯形定位槽尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆顶半径尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D1@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除槽边长尺寸
            part.Extension.SelectByID2("D2@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
        End If
        If 槽类型 = 6 Or 槽类型 = 7 Then
            part.ActivateView("工程图视图1")
            'part.Extension.SelectByID2("D3@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            'part.Extension.SelectByID2("D2@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D1@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.EditDelete() '删除主视图梯形定位槽尺寸
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D7@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D8@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图7@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D6@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
            part.Extension.SelectByID2("D1@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D3@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除局部视图槽边长尺寸
        End If
        If 槽类型 = 8 Then
            part.ActivateView("工程图视图1")
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图槽边长尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D4@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
        End If
        If 槽类型 = 9 Then
            part.ActivateView("工程图视图1")
            part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图槽边长尺寸
            part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete() '删除主视图圆角尺寸
            part.Extension.SelectByID2("D1@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除小圆孔尺寸
            part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图弦长尺寸
            part.Extension.SelectByID2("D4@草图8@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除主视图内圆梯形槽右侧圆角尺寸
            part.ActivateView("工程图视图2")
            part.Extension.SelectByID2("D4@草图4@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.EditDelete() '删除局部视图右侧圆角尺寸
        End If
        If 槽类型 = 10 Then
            part.ActivateView("工程图视图1")
            If Not IPGsketch Is Nothing Then
                part.Extension.SelectByID2("D1@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D4@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D5@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D6@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D7@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D8@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D9@" + IPGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            If Not IRGsketch Is Nothing Then
                part.Extension.SelectByID2("D1@" + IRGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" + IRGsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            If otp_angle < arcangle Then
                part.Extension.SelectByID2("D1@" + OTPsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" + OTPsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@" + OTPsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D4@" + OTPsketch.Name + "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            part.EditDelete()
            part.ActivateView("工程图视图2")
            If Not IPGsketch Is Nothing Then
                'part.Extension.SelectByID2("D7@" + IPGsketch.Name + "@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@" + RHsketch.Name + "@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
            End If
        End If


    End Sub
    '槽类型：
    '圆顶槽 有外圆缺口 有内圆矩形槽 有楔形突起=1
    '圆顶槽 无外圆缺口 无内圆矩形槽 有楔形突起=2
    '圆顶槽 有外圆缺口 无内圆矩形槽 有楔形突起=3
    '圆顶槽 无外圆缺口 有内圆矩形槽 无楔形突起=4
    '圆顶槽 无外圆缺口 无内圆矩形槽 无楔形突起=5
    '平顶槽 有外圆缺口 无内圆矩形槽 有楔形突起=6
    '平顶槽 无外圆缺口 无内圆矩形槽 有楔形突起=7
    '平顶槽 无外圆缺口 无外圆梯形定位槽 无内圆矩形槽 有楔形突起=8
    '平顶槽 无外圆缺口 无外圆梯形定位槽 无内圆矩形槽 有内圆梯形槽 有楔形突起=9
    '平顶槽 有外圆缺口 有外圆梯形定位槽 有内圆矩形槽 有楔形突=10
    Public Sub 平顶槽具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#, inside_diameter#, diameter#, arcangle#, code$)
        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim r As MySqlDataReader
        mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from flat_topslot_lamination", mysqlcon)
        r = mysqlcom.ExecuteReader()
        r.Read()
        Do Until r("Code") = code
            r.Read()
        Loop
        Dim arc1, arc2, arc_inside, line1, line2 As ISketchSegment
        Dim linel, liner, linec As SketchLine
        Dim pointlr1, pointlr2 As SketchPoint
        If r("T_table_number") = 0 Then
            part.ActivateView("工程图视图1") '局部视图
            arc_inside = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
            arc_inside.Layer = "点划线层"

            part.ActivateView("工程图视图1")
            line1 = part.SketchManager.CreateLine(inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
            line1.Layer = "点划线层"
            line2 = part.SketchManager.CreateLine(-inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, -diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
            line2.Layer = "点划线层"
            'line1.Select4(False, Nothing)
            'line2.Select4(True, Nothing)
            'part.AddDimension2(0 + 0.11, diameter / 2 + 0.015, 0)

            linel = part.SketchManager.CreateLine(0, 0, 0, -(diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
            liner = part.SketchManager.CreateLine(0, 0, 0, (diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
            arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2 - 0.01)
            part.SketchManager.SketchTrim(0, inside_diameter / 2 - 0.01, 0, 0)
            arc2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter / 2 + 0.01)
            part.SketchManager.SketchTrim(0, diameter / 2 + 0.01, 0, 0)
            Lselect(linel, False)
            part.SketchManager.SketchTrim(0, -diameter / 8 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
            Lselect(liner, False)
            part.SketchManager.SketchTrim(0, diameter / 8 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
            arc2.SelectChain(True, Nothing)
            part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
            part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 局部视图图纸比例值#, "A", 0, False, False, False, False)
            part.EditRebuild3()
            part.InsertModelAnnotations3(0, 32768, True, False, True, True)
            'part.Extension.SketchBoxSelect("0.185428", "0.362576", "0.000000", "0.246544", "0.292950", "0.000000")
            If Not r("FTGroove_number") = 0 Then
                part.Extension.SelectByID2("D1@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D4@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D5@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D6@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D7@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            If Not r("OTPGroove_right_length") = 0 Then
                part.Extension.SelectByID2("D1@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            If Not r("IHTGroove_Depth") = 0 Then
                part.Extension.SelectByID2("D1@" & IHTsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@" & IHTsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@" & IHTsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
            'part.Extension.SelectByID2("D1@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D2@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D3@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D4@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D5@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D6@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D7@草图4@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            'part.Extension.SelectByID2("D1@草图6@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.EditDelete()
            part.ActivateView("工程图视图2")
            If Not r("FTGroove_number") = 0 Then
                part.Extension.SelectByID2("D7@" & FTGsketch.Name & "@*@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            End If
            If Not r("Hole_Diameter") = 0 Then
                part.Extension.SelectByID2("D1@" & RHsketch.Name & "@*@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            End If
        End If
        part.EditDelete()
    End Sub
    Public Sub 槽底外凸型平顶槽具体及局部视图(局部视图X#, 局部视图Y#, 局部视图图纸比例值#, Slot_Relative_Y_axis_deflection_angle#, inside_diameter#, diameter#, arcangle#, code$)
        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim r As MySqlDataReader
        mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from test", mysqlcon)
        r = mysqlcom.ExecuteReader()
        r.Read()
        Do Until r("Code") = code
            r.Read()
        Loop

        Dim arc1, arc2, arc_inside, line1, line2 As ISketchSegment
        Dim linel, liner, linec As SketchLine
        Dim pointlr1, pointlr2 As SketchPoint
        part.ActivateView("工程图视图1") '局部视图
        'arc_inside = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2)
        'arc_inside.Layer = "点划线层"

        'part.ActivateView("工程图视图1")
        'line1 = part.SketchManager.CreateLine(inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        'line1.Layer = "点划线层"
        'line2 = part.SketchManager.CreateLine(-inside_diameter / 2 * Sin(arcangle / 2 * PI / 180), inside_diameter / 2 * Cos(arcangle / 2 * PI / 180), 0, -diameter / 2 * Sin(arcangle / 2 * PI / 180), diameter / 2 * Cos(arcangle / 2 * PI / 180), 0)
        'line2.Layer = "点划线层"
        'line1.Select4(False, Nothing)
        'line2.Select4(True, Nothing)
        'part.AddDimension2(0 + 0.11, diameter / 2 + 0.015, 0)

        linel = part.SketchManager.CreateLine(0, 0, 0, -(diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
        liner = part.SketchManager.CreateLine(0, 0, 0, (diameter / 2 + 0.01) * Sin(arcangle * 0.95 * PI / 180), (diameter / 2 + 0.01) * Cos(arcangle * 0.95 * PI / 180), 0)
        arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, inside_diameter / 2 - 0.01)
        part.SketchManager.SketchTrim(0, inside_diameter / 2 - 0.01, 0, 0)
        arc2 = part.SketchManager.CreateCircleByRadius(0, 0, 0, diameter / 2 + 0.01)
        part.SketchManager.SketchTrim(0, diameter / 2 + 0.01, 0, 0)
        Lselect(linel, False)
        part.SketchManager.SketchTrim(0, -diameter / 4 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
        Lselect(liner, False)
        part.SketchManager.SketchTrim(0, diameter / 4 * Sin(arcangle * 0.95 * PI / 180), diameter / 4 * Cos(arcangle * 0.95 * PI / 180), 0)
        arc2.SelectChain(True, Nothing)
        part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, PI * Slot_Relative_Y_axis_deflection_angle / 180)
        part.CreateDetailViewAt4(局部视图X#, 局部视图Y#, 0, 0, 1, 局部视图图纸比例值#, "A", 0, False, False, False, False)
        part.EditRebuild3()
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        Debug.Print(FTGsketch.Name)

        If Not r("FTGroove_number") = 0 Then
            part.Extension.SelectByID2("D1@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D3@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D4@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D5@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D6@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D7@" & FTGsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        End If
        If Not r("OTPGroove_right_length") = 0 Then
            part.Extension.SelectByID2("D1@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D2@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
            part.Extension.SelectByID2("D3@" & OTPsketch.Name & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        End If
        part.EditDelete()
    End Sub
    Public Sub Setting(type#)
        swapp.Visible = True
        swapp.FrameState = 1
        If type = 0 Then '关闭捕捉
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False) '捕捉
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
        ElseIf type = 1 Then '激活捕捉,打开端点和草图点
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
        ElseIf type = 2 Then '激活捕捉,打开端点和草图点
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, True) '靠近
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
        ElseIf type = 3 Then '激活捕捉,打开端点和草图点
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
            swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False) '取消输入尺寸值
        End If

    End Sub

    Public Sub Parting()
        part.Extension.InsertScene("\scenes\01 basic scenes\00 soft spotlight.p2s")
        Setting(0)
        Dim AxisY As Feature = AXIS("Y")
        Dim AxisZ As Feature = AXIS("Z")
        Dim mysqlcon As MySqlConnection
        Dim mysqlcom As MySqlCommand
        Dim r As MySqlDataReader
        mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from front_end_cover", mysqlcon)
        r = mysqlcom.ExecuteReader()
        r.Read()
        Do Until r("Code") = "8EQ.013.2053"
            r.Read()
        Loop
        Dim line1, line2, line3, line4 As SketchLine
        Dim nohead_out_arc, nohead_cut_arc, nohead_inside_arc, withhead_out_arc, withhead_cut_arc, withhead_inside_arc, rib_out_arc, rib_inside_arc, ear_top_arc, ear_hole_arc, out_arc, hole_arc As SketchSegment
        Dim point1, point2, point3, point4, point5, point6, point7, point8 As SketchPoint

        Dim Table1, Table2 As Feature
        Dim refplane1, refplane2 As Feature
        Dim fillet1 As Feature
        'part.SetUnits(0, 1, 0, 0, False)

        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        nohead_out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 2 / 1000)
        Dimension1 = part.AddDimension2(-0.112, 0.088, 0)
        Dimension1.GetDimension2(0).Name = "尺寸1"
        nohead_inside_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("nohead_inside_diameter") / 2 / 1000)
        Dimension2 = part.AddDimension2(-0.0842, 0.123, 0)
        Table2 = Table(1, r("nohead_table_thickness") / 1000)

        refplane1 = Refplane("front", r("allcover_thickness") / 1000 - r("withhead_table_thickness") / 1000)
        refplane1.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        withhead_out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 2 / 1000)
        withhead_inside_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("withhead_inside_diameter") / 2 / 1000)
        Dimension3 = part.AddDimension2(0.124, 0.106, 0)

        Table(1, r("withhead_table_thickness") / 1000)

        SelectPlane("front")
        part.SketchManager.InsertSketch(True)
        nohead_out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 2 / 1000)
        nohead_cut_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("nohead_cut_diameter") / 2 / 1000)
        Dimension4 = part.AddDimension2(0.171, 0.088, 0)
        part.EditDimensionProperties2(8, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
        Dimension = Dimension4.GetDimension2(0)
        DimensionTolerance = Dimension.Tolerance
        DimensionTolerance.Type = 8
        DimensionTolerance.SetFitValues("", "js6")
        Dimension4.ShowTolParenthesis = True
        Cut(2, r("nohead_cut_thickness") / 1000)

        refplane1.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        rib_out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("rib_out_diameter") / 2 / 1000)
        ADDConstraints(1)
        rib_inside_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("rib_inside_diameter") / 2 / 1000)
        ADDConstraints(1)
        line1 = SkeManger.CreateLine(-0.01, r("rib_inside_diameter") / 2 / 1000, 0, -0.01, r("rib_out_diameter") / 2 / 1000, 0)
        line2 = SkeManger.CreateLine(0.01, r("rib_inside_diameter") / 2 / 1000, 0, 0.01, r("rib_out_diameter") / 2 / 1000, 0)
        point1 = line1.GetStartPoint2
        point2 = line1.GetEndPoint2
        point3 = line2.GetStartPoint2
        point4 = line2.GetEndPoint2
        point1.Select4(False, Nothing)
        rib_inside_arc.Select4(True, Nothing)
        ADDConstraints(5)
        point2.Select4(False, Nothing)
        rib_out_arc.Select4(True, Nothing)
        ADDConstraints(5)
        point3.Select4(False, Nothing)
        rib_inside_arc.Select4(True, Nothing)
        ADDConstraints(5)
        point4.Select4(False, Nothing)
        rib_out_arc.Select4(True, Nothing)
        ADDConstraints(5)
        Dim linec As SketchLine = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
        ADDConstraints(1)
        Lselect(line1, False)
        Lselect(line2, True)
        Lselect(linec, True)
        ADDConstraints(6)
        Lselect(line1, False)
        Lselect(line2, True)
        DisplayDimension = part.AddDimension2(0, 0.01, 0)
        ChangeDimensionVaule(r("rib_width") / 1000)
        rib_inside_arc.Select4(False, Nothing)
        SkeManger.SketchTrim(0, r("rib_inside_diameter") / 2 / 1000, 0, 0)
        rib_out_arc.Select4(False, Nothing)
        SkeManger.SketchTrim(0, r("rib_out_diameter") / 2 / 1000, 0, 0)
        Lselect(linec, False)
        part.EditDelete()
        Table1 = part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) '反向成型到下一面

        Dim par As PartDoc = swapp.ActiveDoc
        par.GetTessTriStripEdges()
        Dim body() As Object
        Dim edge() As Object
        body = par.GetBodies2(0, True)
        edge = body(0).GetEdges()
        part.ClearSelection2(True)
        'Dim i As Integer = 0
        'Do Until i > 100
        '    SelectionMgr.AddSelectionListObject(edge(i), Nothing)
        '    MsgBox(i)
        '    part.ClearSelection2(True)
        '    i = i + 1
        'Loop
        'SelectionMgr.SetSelectedObjectMark(1, 1, 0)
        'SelectionMgr.SetSelectedObjectMark(2, 1, 0)
        'SelectionMgr.SetSelectedObjectMark(3, 1, 0)
        'SelectionMgr.SetSelectedObjectMark(4, 1, 0)
        'SelectionMgr.SetSelectedObjectMark(5, 1, 0)
        'SelectionMgr.SetSelectedObjectMark(6, 1, 0)
        SelectionMgr.AddSelectionListObject(edge(4), Nothing)
        SelectionMgr.AddSelectionListObject(edge(6), Nothing)
        SelectionMgr.AddSelectionListObject(edge(7), Nothing)
        SelectionMgr.AddSelectionListObject(edge(12), Nothing)
        SelectionMgr.AddSelectionListObject(edge(14), Nothing)
        SelectionMgr.AddSelectionListObject(edge(15), Nothing)
        fillet1 = part.FeatureManager.FeatureFillet3(195, r("rib_fillet_radius") / 1000, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)


        part.ClearSelection2(True)
        Table1.Select2(False, Nothing)
        fillet1.Select2(True, Nothing)
        AxisZ.Select2(True, Nothing)
        SelectionMgr.SetSelectedObjectMark(1, 4, 0)
        SelectionMgr.SetSelectedObjectMark(2, 4, 0)
        SelectionMgr.SetSelectedObjectMark(3, 1, 0)
        FeatureManager.FeatureCircularPattern5(r("rib_number"), 2 * PI, False, 0, False, True, False, False, False, False, 0, 0, 0, False)
        Setting(0)
        SelectPlane("right")
        SkeManger.InsertSketch(True)
        'part.ShowNamedView2("*右视", 4)
        'part.ViewZoomtofit2()
        SkeManger.CreateCornerRectangle(r("ear_table_thickness") / 1000 - r("allcover_thickness") / 1000, r("out_diameter") / 2 / 1000, 0, -r("allcover_thickness") / 1000 + r("circumcision_thickness") / 1000 + r("ear_table_thickness") / 1000, r("rib_out_diameter") / 2 / 1000, 0)
        'part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0.281982343176717, 0.148463816752539, False, 0, Nothing, 0)
        Getsketch = SkeManger.ActiveSketch
        Dim sgm() As Object
        sgm = Getsketch.GetSketchSegments
        part.ClearSelection2(True)
        'Dim co As Integer
        'co = 0
        'Do Until co > sgm.Count - 1
        '    SelectionMgr.AddSelectionListObject(sgm(co), Nothing)
        '    MsgBox(co)
        '    part.ClearSelection2(True)
        '    co += 1
        'Loop
        SelectionMgr.AddSelectionListObject(sgm(0), Nothing)
        DisplayDimension = part.AddDimension2(0, r("out_diameter") / 1.9 / 1000, r("allcover_thickness") / 1000 / 2)
        DisplayDimension.CenterText = True

        part.Extension.SelectByID2(AxisZ.Name, "AXIS", 0, 0, 0, False, 16, Nothing, 0)
        part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 6.2831853071796, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True) '旋转切除
        SelectPlane("right")
        SkeManger.InsertSketch(True)

        point1 = SkeManger.CreatePoint(-r("nohead_cut_thickness") / 1000, r("nohead_cut_diameter") / 1000 / 2, 0)
        point2 = SkeManger.CreatePoint(-r("allcover_thickness") / 1000, r("nohead_cut_diameter") / 2 / 1000, 0)
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0, r("out_diameter") / 1.7 / 1000, r("allcover_thickness") / 1000 / 2)
        part.EditDimensionProperties2(8, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
        SetTolvalue(8, "", "h11")
        DisplayDimension.ShowTolParenthesis = True
        SkeManger.InsertSketch(True)
        refplane2 = Refplane("front", r("allcover_thickness") / 1000)
        refplane2.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        withhead_cut_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("withhead_cut_diameter") / 1000 / 2)
        Dimension7 = part.AddDimension2(0.1, -0.06, 0)
        part.EditDimensionProperties2(8, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
        Dimension = Dimension7.GetDimension2(0)
        DimensionTolerance = Dimension.Tolerance
        DimensionTolerance.Type = 8
        DimensionTolerance.SetFitValues("H8", "")
        Dimension7.ShowTolParenthesis = True
        withhead_inside_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("withhead_inside_diameter") / 1000 / 2)
        Cut(1, r("withhead_cut_thickness") / 1000)

        refplane2 = Refplane("front", r("allcover_thickness") / 1000)
        refplane2.Select2(False, Nothing)
        rib_out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("rib_out_diameter") / 2 / 1000)
        ADDConstraints(1)
        rib_inside_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("rib_inside_diameter") / 2 / 1000)
        ADDConstraints(1)
        rib_inside_arc.Select4(False, Nothing)
        Dimension5 = part.AddDimension2(0.0386, 0.224, 0)
        rib_out_arc.Select4(False, Nothing)
        Dimension6 = part.AddDimension2(0.065, 0.217, 0)
        out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 2 / 1000)
        ADDConstraints(1)
        point1 = SkeManger.CreatePoint(0.01, 0.01, 0)
        point1.Select4(False, Nothing)
        out_arc.Select4(True, Nothing)
        ADDConstraints(5)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
        ADDConstraints(1)
        point2 = SkeManger.CreatePoint(-0.01, 0.01, 0)
        point2.Select4(False, Nothing)
        out_arc.Select4(True, Nothing)
        ADDConstraints(5)
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        point1.Select4(False, Nothing)
        point2.Select4(True, Nothing)
        DisplayDimension = part.AddDimension2(0, r("out_diameter") / 1.8 / 1000, 0)
        ChangeDimensionVaule(r("rib_width") / 1000)
        Anno = DisplayDimension.GetAnnotation
        Anno.SetPosition2(0, r("out_diameter") / 1.8 / 1000, 0)
        line3 = SkeManger.CreateCenterLine(0, 0, 0, r("out_diameter") / 2 / 1000 * Sin(360 / r("screw_hole_number") / 2 * PI / 180), r("out_diameter") / 2 / 1000 * Cos(360 / r("screw_hole_number") / 2 * PI / 180), 0)
        Lselect(line3, False)
        Lselect(linec, True)
        part.AddDimension2(r("out_diameter") / 1.9 / 1000 * Sin(360 / r("screw_hole_number") / 2 / 2 * PI / 180), r("out_diameter") / 1.9 / 1000 * Cos(360 / r("screw_hole_number") / 2 / 2 * PI / 180), 0)
        SkeManger.InsertSketch(True)


        refplane2.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 1000 / 2)
        ADDConstraints(1)
        ear_hole_arc = SkeManger.CreateCircleByRadius(0, r("ear_hole_refarc_diameter") / 2 / 1000, 0, r("ear_hole_diameter") / 2 / 1000)
        ADDConstraints(1)
        ear_top_arc = SkeManger.CreateCircleByRadius(0, r("ear_hole_refarc_diameter") / 2 / 1000, 0, r("ear_toparc_radius") / 1000)
        ADDConstraints(1)
        line3 = SkeManger.CreateLine(-r("ear_toparc_radius") / 2 / 1000 - 0.03, r("ear_hole_refarc_diameter") / 2 / 1000, 0, -r("ear_toparc_radius") / 2 / 1000 - 0.02, r("ear_hole_refarc_diameter") / 2 / 1000 + 0.01, 0)
        line4 = SkeManger.CreateLine(r("ear_toparc_radius") / 2 / 1000 + 0.03, r("ear_hole_refarc_diameter") / 2 / 1000, 0, r("ear_toparc_radius") / 2 / 1000 + 0.02, r("ear_hole_refarc_diameter") / 2 / 1000 + 0.01, 0)
        point5 = line3.GetStartPoint2
        point6 = line3.GetEndPoint2
        point7 = line4.GetStartPoint2
        point8 = line4.GetEndPoint2

        point5.Select4(False, Nothing)
        out_arc.Select4(True, Nothing)
        ADDConstraints(5)
        point6.Select4(False, Nothing)
        ear_top_arc.Select4(True, Nothing)
        ADDConstraints(5)
        Lselect(line3, False)
        ear_top_arc.Select4(True, Nothing)
        ADDConstraints(4)
        linec = SkeManger.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
        ADDConstraints(1)
        Lselect(line3, False)
        Lselect(line4, True)
        ADDConstraints(7)
        point6.Select4(False, Nothing)
        point8.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        point5.Select4(False, Nothing)
        point7.Select4(True, Nothing)
        Lselect(linec, True)
        ADDConstraints(6)
        Lselect(line3, False)
        Lselect(line4, True)
        DisplayDimension = part.AddDimension2(0, r("nohead_inside_diameter") / 1000 / 2 - 0.03, 0)
        ChangeDimensionVaule(r("ear_edges_angle") * PI / 180)

        out_arc.Select4(False, Nothing)
        part.EditDelete()
        ear_top_arc.Select4(False, Nothing)
        SkeManger.SketchTrim(0, 0, r("ear_hole_refarc_diameter") / 2 / 1000 - r("ear_hole_refarc_diameter") / 2 / 1000, 0)
        out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 1000 / 2)
        out_arc.Select4(False, Nothing)
        SkeManger.SketchTrim(0, 0, r("out_diameter") / 2 / 1000, 0)
        point5.Select4(False, Nothing)
        point7.Select4(True, Nothing)
        part.SketchManager.CreateFillet(r("ear_fillet_radius") / 1000, 1)
        out_arc.Select4(False, Nothing)
        part.EditDelete()
        out_arc = SkeManger.CreateCircleByRadius(0, 0, 0, r("out_diameter") / 1000 / 2)
        out_arc.Select4(False, Nothing)
        SkeManger.SketchTrim(0, r("out_diameter") / 2 / 1000, 0, 0)

        Rotate_Select_Sketch(-r("ear_deflection_angle"))
        DisplayDimension.GetAnnotation.setposition2((r("nohead_inside_diameter") / 1000 / 2 - 0.03) * Sin(r("ear_deflection_angle") * PI / 180), (r("nohead_inside_diameter") / 1000 / 2 - 0.03) * Cos(r("ear_deflection_angle") * PI / 180), 0)
        ear_top_arc.Select4(False, Nothing)
        part.AddDimension2(r("out_diameter") / 2.1 / 1000, r("out_diameter") / 5 * 4 / 2 / 1000, 0)
        ear_hole_arc.Select4(False, Nothing)
        Dim myGtol As Object
        Dim myAnno As Object
        myGtol = part.InsertGtol()
        If Not myGtol Is Nothing Then
            myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
            myGtol.SetFrameValues(1, "0.8", "", "B", "D", "")
            myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
            myGtol.SetFrameValues(2, "", "", "", "", "")
            myGtol.SetPTZHeight("", False)
            myGtol.SetCompositeFrame(False)
            myGtol.SetText(4, "")
            myGtol.SetBetweenTwoPoints(False, "", "")
            myAnno = myGtol.GetAnnotation()
            If Not myAnno Is Nothing Then
                myAnno.SetPosition2(r("out_diameter") / 1.9 / 1000, r("out_diameter") / 4 / 1000, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
            End If
        End If
        Dim note As Note = part.InsertNote("4×M" & r("ear_hole_diameter"))
        Anno = note.GetAnnotation
        Anno.SetPosition2(r("out_diameter") / 1.9 / 1000 + 0.02, r("out_diameter") / 4 / 1000 + 0.015, 0)
        Select_Sketch()
        part.Extension.RotateOrCopy(True, 1, False, 0, 0, 0, 0, 0, 1, -r("ear_phase_angle") * PI / 180)

        Table1 = Table(2, r("ear_table_thickness") / 1000)
        Table1.Select2(False, Nothing)
        SelectionMgr.SetSelectedObjectMark(1, 1, 0)
        part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
        part.FeatureManager.InsertMirrorFeature(False, False, False, False)
        refplane2.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        Dim linet, lineu, linem As SketchLine
        linet = SkeManger.CreateCenterLine(0, 0, 0, (r("ear_hole_refarc_diameter") / 2 / 1000 + r("ear_toparc_radius") / 1000) * Sin(r("ear_deflection_angle") * PI / 180), (r("ear_hole_refarc_diameter") / 2 / 1000 + r("ear_toparc_radius") / 1000) * Cos(r("ear_deflection_angle") * PI / 180), 0)
        lineu = SkeManger.CreateCenterLine(0, 0, 0, (r("ear_hole_refarc_diameter") / 2 / 1000 + r("ear_toparc_radius") / 1000) * Sin((r("ear_deflection_angle") + r("ear_phase_angle")) * PI / 180), (r("ear_hole_refarc_diameter") / 2 / 1000 + r("ear_toparc_radius") / 1000) * Cos((r("ear_deflection_angle") + r("ear_phase_angle")) * PI / 180), 0)
        linem = SkeManger.CreateCenterLine(0, 0, 0, r("out_diameter") / 2 / 1000, 0, 0)
        Lselect(linet, False)
        Lselect(linem, True)
        DisplayDimension = part.AddDimension2(0.15, 0.01, 0)
        part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", True)
        DisplayDimension.CenterText = True
        Lselect(lineu, False)
        Lselect(linem, True)
        DisplayDimension = part.AddDimension2(0.15, -0.01, 0)
        part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", True)
        DisplayDimension.CenterText = True
        part.ClearSelection2(True)
        Dim arcr As SketchSegment = SkeManger.CreateCircleByRadius(0, 0, 0, r("ear_hole_refarc_diameter") / 2 / 1000)
        SetConstructionline(1)
        arcr.Select4(False, Nothing)
        DisplayDimension = part.AddDimension2(-0.1, -0.15, 0)
        part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)

        SelectPlane("front")
        SkeManger.InsertSketch(True)
        SkeManger.CreateCircleByRadius(0, 0, 0, r("screw_hole_refarc_diameter") / 1000 / 2)
        SetConstructionline(1)
        hole_arc = SkeManger.CreateCircleByRadius(r("screw_hole_refarc_diameter") / 1000 / 2 * Sin(r("screw_hole_deflection_angle") * PI / 180),
                                   r("screw_hole_refarc_diameter") / 1000 / 2 * Cos(r("screw_hole_deflection_angle") * PI / 180), 0, r("screw_hole_diameter") / 1000 / 2)
        'hole_arc.Select4(False, Nothing)
        'DisplayDimension = part.AddDimension2(r("ear_hole_refarc_diameter") / 4 / 1000, r("ear_hole_refarc_diameter") / 1.9 / 1000, 0)
        'hole_arc.Select4(False, Nothing)
        'myGtol = part.InsertGtol()
        'myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
        'myGtol.SetFrameValues(1, "0.4", "", "A", "C", "")
        'myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
        'myGtol.SetFrameValues(2, "", "", "", "", "")
        'myGtol.SetPTZHeight("", False)
        'myGtol.SetCompositeFrame(False)
        'myGtol.SetText(4, "")
        'myGtol.SetBetweenTwoPoints(False, "", "")
        'myAnno = myGtol.GetAnnotation()
        'myAnno.SetPosition(-r("ear_hole_refarc_diameter") / 2.1 / 1000, r("ear_hole_refarc_diameter") / 1.9 / 1000, 0)
        'myAnno.SetLeader3(2, 0, True, False, False, False)
        part.Extension.RotateOrCopy(True, r("screw_hole_number") - 1, False, 0, 0, 0, 0, 0, 1, 360 / r("screw_hole_number") * PI / 180)

        Cut(2, r("nohead_table_thickness") / 1000)
        refplane2.Select2(False, Nothing)
        SkeManger.InsertSketch(True)
        hole_arc = SkeManger.CreateCircleByRadius(r("screw_hole_refarc_diameter") / 1000 / 2 * Sin(r("screw_hole_deflection_angle") * PI / 180),
                                   r("screw_hole_refarc_diameter") / 1000 / 2 * Cos(r("screw_hole_deflection_angle") * PI / 180), 0, r("screw_hole_diameter") / 1000 / 2)
        hole_arc.Select4(False, Nothing)
        myGtol = part.InsertGtol()
        myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
        myGtol.SetFrameValues(1, "0.4", "", "A", "C", "")
        myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
        myGtol.SetFrameValues(2, "", "", "", "", "")
        myGtol.SetPTZHeight("", False)
        myGtol.SetCompositeFrame(False)
        myGtol.SetText(4, "")
        myGtol.SetBetweenTwoPoints(False, "", "")
        myAnno = myGtol.GetAnnotation()
        myAnno.SetPosition(r("ear_hole_refarc_diameter") / 4 / 1000, r("ear_hole_refarc_diameter") / 2 / 1000, 0)
        myAnno.SetLeader3(2, 0, True, False, False, False)
        note = part.InsertNote("12×M" & r("screw_hole_diameter"))
        Anno = note.GetAnnotation
        Anno.SetPosition2(r("ear_hole_refarc_diameter") / 4 / 1000 + 0.02, r("ear_hole_refarc_diameter") / 2 / 1000 + 0.015, 0)
        Dim archre As SketchSegment = SkeManger.CreateCircleByRadius(0, 0, 0, r("screw_hole_refarc_diameter") / 1000 / 2)
        SetConstructionline(1)
        archre.Select4(False, Nothing)
        part.AddDimension2(0.1, -0.15, 0)
        part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
        Dim face() As Object
        face = Table2.GetFaces
        edge = face(1).GetEdges
        part.ClearSelection2(True)
        'Dim i As Integer = 0
        'Do Until i > 100
        '    SelectionMgr.AddSelectionListObject(edge(i), Nothing)
        '    MsgBox(i)
        '    part.ClearSelection2(True)
        '    i = i + 1
        'Loop
        SelectionMgr.AddSelectionListObject(edge(1), Nothing)
        part.FeatureManager.FeatureFillet3(195, 2 / 1000, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
        part.ClearSelection2(True)
        Dim cusproper As SldWorks.CustomPropertyManager
        cusproper = part.Extension.CustomPropertyManager("")
        cusproper.Set2("名称", r("name"))
        cusproper.Set2("代号", r("Code"))
        cusproper.Set2("材料", r("material"))
        part.BlankRefGeom() '隐藏
        part.EditRebuild3()
        part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
        'Feature = part.FirstFeature
        'Dim LibraryFeatureData As LibraryFeatureData
        'Dim dimeDimensions() As Object
        'Dim i As Integer = 0
        'Do Until Feature Is Nothing
        '    If Feature.GetTypeName = "LibraryFeature" Then
        '        Debug.Print(Feature.Name, Feature.GetTypeName)
        '        LibraryFeatureData = Feature.GetDefinition
        '        dimeDimensions = LibraryFeatureData.GetDimensions(1, Feature.Name)
        '        SelectionMgr.AddSelectionListObject(dimeDimensions(0), Nothing)
        '        MsgBox(i)
        '        part.ClearSelection2(True)
        '        i += 1
        '    End If
        'Loop
    End Sub
    Public Sub Draw(dz$, Scale2#, FX_k#, FY_k#, RX_k#, RY_k#, LX_k#, LY_k#, TX_k#, TY_k#, skills_requirement1$,
                            skills_requirement2$, skills_requirement3$, skills_requirement4$, skills_requirement5$, skills_requirement6$)
        Dim Draw As SldWorks.DrawingDoc
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a2.drwdot", 1, 0, 0)
        part = swapp.ActiveDoc
        Dim lyNote As Object
        lyNote = part.InsertNote("江西兰叶科技有限公司")
        Anno = lyNote.GetAnnotation()
        Anno.SetPosition2(0.544, 0.06, 0)
        part.WindowRedraw()
        part.SaveAs3("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\ly_a2.drwdot", 0, 2)
        Dim DrawTitle As String
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        swapp.CloseDoc(DrawTitle)
        Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\ly_a2.drwdot", 1, 0, 0)
        DrawTitle = Draw.GetTitle
        Debug.Print(DrawTitle)
        Dim S() As String
        S = Split(DrawTitle, "-")
        S(0) = Replace(S(0), " ", "")
        Draw = swapp.ActiveDoc
        part = swapp.ActiveDoc
        SelectionMgr = part.SelectionManager
        If Not FX_k = 0 Then
            InsertFrontView(dz, FX_k, FY_k)
        End If
        If Not LX_k = 0 Then
            InsertLeftView(dz, LX_k, LY_k)
        End If
        If Not RX_k = 0 Then
            InsertLeftView(dz, RX_k#, RY_k#)
        End If
        If Not TX_k = 0 Then
            InsertLeftView(dz, TX_k#, TY_k#)
        End If
        Dim Sheet1 As SldWorks.Sheet '图纸对象
        Dim SheetPr() As Double
        Sheet1 = Draw.GetCurrentSheet()
        SheetPr = Sheet1.GetProperties2()
        SheetPr(2) = 1
        SheetPr(3) = Scale2
        SheetPr(4) = False
        Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
        Draw.EditRebuild3()
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.004)
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.002)
        'part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowHeight, 0, 0.0005)
        Dim mynote As Note
        mynote = part.InsertNote("技术要求"）
        mynote.GetAnnotation().SetPosition(SheetPr(5) * 0.2, SheetPr(6) * 0.2, 0)
        part.FontPoints(22)
        mynote = part.InsertNote(skills_requirement1 + Chr(13) + Chr(10) +
                             skills_requirement2 + Chr(13) + Chr(10) +
                             skills_requirement3 + Chr(13) + Chr(10) +
                             skills_requirement4 + Chr(13) + Chr(10) +
                             skills_requirement5 + Chr(13) + Chr(10) +
                             skills_requirement6)
        mynote.GetAnnotation().SetPosition(SheetPr(5) * 0.2, SheetPr(6) * 0.2 - 0.01, 0)
        part.ActivateView("工程图视图1")
        part.Extension.SetUserPreferenceToggle(swUserPreferenceToggle_e.swDisplayShadedCosmeticThreads, 0, True)
        part.InsertModelAnnotations3(0, 32768, True, False, True, True)
        part.EditUndo2(1)
        part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, True, False, True, True）
        Dim line1 As SketchLine = part.SketchManager.CreateLine(0.495 / 2 * Sin(-15 * PI / 180), 0.495 / 2 * Cos(-15 * PI / 180), 0, 0.564 / 2 * Sin(-15 * PI / 180), 0.564 / 2 * Cos(-15 * PI / 180), 0)
        Lselect(line1, False)
        Dim view2 As View = part.CreateSectionViewAt5(0, 0, 0, "A", 144, Nothing, 0)
        part.ActivateView("工程图视图2")
        'part.InsertModelAnnotations3(0, 32768, True, False, True, True)

        view2.AlignDrawingView(0) '解除视图对齐锁定
        view2.AlignWithView(0, Nothing) '设置顺时针旋转水平对齐
        Dim pos() As Double
        pos = view2.Position
        pos(0) = SheetPr(5) * 0.8
        pos(1) = SheetPr(6) * 0.8
        view2.Position = pos '设置视图位置



        part.EditRebuild3()
        part.ClearSelection2(True)
        Setting(1)
        part.ActivateView("工程图视图1")
        Dim line3 As SketchLine = part.SketchManager.CreateLine(0, 0, 0, 0.65 / 2 * Sin(53 * PI / 180), 0.65 / 2 * Cos(53 * PI / 180), 0)
        Dim line2 As SketchLine = part.SketchManager.CreateLine(0, 0, 0, 0, -0.65 / 2, 0)
        Lselect(line2, False)
        Lselect(line3, True)
        Dim view3 As View = part.CreateSectionViewAt5(SheetPr(5) * 0.2, SheetPr(6) * 0.6, 0, "B", 134, Nothing, 0)
        part.ActivateView("工程图视图3")
        part.InsertModelAnnotations3(0, 32768 + 32 + 4 + 2 + 64, False, False, True, True)
        pos = view3.Position
        pos(0) = SheetPr(5) * 0.1
        pos(1) = SheetPr(6) * 0.6
        Debug.Print(SheetPr(5))
        Debug.Print(SheetPr(6))
        view3.Position = pos
        part.ActivateView("工程图视图3")
        part.Extension.SelectByID2("D1@草图14@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        part.Extension.SelectByID2("D3@草图12@*@工程图视图3", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D1@基准面3@*@工程图视图3", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D1@基准面2@*@工程图视图3", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2("D1@基准面1@*@工程图视图3", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.EditDelete()
        part.ActivateView("工程图视图1")
        part.Extension.SelectByID2(Dimension1.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2(Dimension2.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2(Dimension3.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2(Dimension5.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2(Dimension6.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.Extension.SelectByID2(Dimension7.GetNameForSelection & "@*@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
        part.EditDelete()
        part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
        Dim View1 As View = SelectionMgr.GetSelectedObject6(1, -1)
        Dim vComponents() As Object = View1.GetVisibleComponents() '获得可视组件集合
        Dim Edge1() As Object = View1.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
        part.ClearSelection2(True)
        'Dim i As Integer = 0
        'Do Until i > 100
        '    SelectionMgr.AddSelectionListObject(Edge1(i), Nothing)
        '    MsgBox(i)
        '    part.ClearSelection2(True)
        '    i += 1
        'Loop

        part.Extension.SelectByID2("D1@切除-拉伸1@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.14, SheetPr(6) * 0.883, 0)
        part.Extension.SelectByID2("D1@草图8@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.2, SheetPr(6) * 0.883, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2("D1@草图7@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.2, SheetPr(6) * 0.852, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2("D1@凸台-拉伸4@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.269, SheetPr(6) * 0.852, 0)
        part.Extension.SelectByID2("D1@凸台-拉伸1@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()

        Anno.SetPosition2(SheetPr(5) * 0.16, SheetPr(6) * 0.738, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2("D1@切除-拉伸2@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.269, SheetPr(6) * 0.757, 0)
        part.Extension.SelectByID2("D1@凸台-拉伸2@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()

        Anno.SetPosition2(SheetPr(5) * 0.234, SheetPr(6) * 0.738, 0)
        part.Extension.SelectByID2(Dimension1.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.0757, SheetPr(6) * 0.595, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2(Dimension4.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()

        Anno.SetPosition2(SheetPr(5) * 0.101, SheetPr(6) * 0.595, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2(Dimension2.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.126, SheetPr(6) * 0.595, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2(Dimension5.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()




        Anno.SetPosition2(SheetPr(5) * 0.197, SheetPr(6) * 0.774, 0)
        part.Extension.SelectByID2(Dimension6.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.219, SheetPr(6) * 0.774, 0)
        part.Extension.SelectByID2(Dimension3.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.303, SheetPr(6) * 0.774, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2(Dimension7.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
        DisplayDimension = SelectionMgr.GetSelectedObject6(1, -1)
        Anno = DisplayDimension.GetAnnotation()
        Anno.SetPosition2(SheetPr(5) * 0.3535, SheetPr(6) * 0.774, 0)
        DisplayDimension.CenterText = True
        part.Extension.SelectByID2(Dimension4.GetNameForSelection & "@*@工程图视图3", "DIMENSION", 0.062, 0.337, 0, False, 0, Nothing, 0)
        Dim myDatumTag As Object
        Dim myAnnotation As Object
        myDatumTag = part.InsertDatumTag2()
        myDatumTag.FilledTriangle = True
        myDatumTag.Shoulder = False
        myDatumTag.SetLabel("A")
        myAnnotation = myDatumTag.GetAnnotation()
        myAnnotation.SetPosition(SheetPr(5) * 0.1044, SheetPr(6) * 0.824, 0)


        part.Extension.SelectByID2(Dimension4.GetNameForSelection & "@*@工程图视图3", "DIMENSION", SheetPr(5) * 0.121, SheetPr(6) * 0.802, 0, False, 0, Nothing, 0)
        part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 3.2", "", "", "")
        'part.Extension.SelectByID2("D1@切除-拉伸1@*@工程图视图3", "DIMENSION", 0.091, 0.358, 0, False, 0, Nothing, 0)
        part.ActivateSheet("图纸1")
        Dim myGtol As Object
        Dim point1 As SketchPoint
        SkeManger = part.SketchManager
        point1 = SkeManger.CreatePoint(SheetPr(5) * 0.1532 * Scale2, SheetPr(6) * 0.8524 * Scale2, 0)
        point1.Select4(False, Nothing)
        myGtol = part.InsertGtol()
        myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
        myGtol.SetFrameValues(1, "0.10", "", "A", "", "")
        Anno = myGtol.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.0976, SheetPr(6) * 0.8607, 0)
        Anno.SetLeader3(1, 0, True, False, False, False)
        'Anno.SetLeaderAttachmentPointAtIndex(1, SheetPr(5) * 0.1532, SheetPr(6) * 0.8524, 0)
        part.Extension.SelectByID2("D1@草图8@*@工程图视图3", "DIMENSION", SheetPr(5) * 0.2373, SheetPr(6) * 0.8833, 0, False, 0, Nothing, 0)
        part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 6.3", "", "", "")

        part.Extension.SelectByID2("D1@草图7@*@工程图视图3", "DIMENSION", SheetPr(5) * 0.2188, SheetPr(6) * 0.8524, 0, False, 0, Nothing, 0)
        part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Dim sys As SFSymbol = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Anno = sys.GetAnnotation

        Anno.SetPosition2(SheetPr(5) * 0.1885, SheetPr(6) * 0.822, 0)
        point1 = SkeManger.CreatePoint(SheetPr(5) * 0.2582 * Scale2, SheetPr(6) * 0.8714 * Scale2, 0)
        ADDConstraints(1)
        point1.Select4(False, Nothing)
        myGtol = part.InsertGtol()
        myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
        myGtol.SetFrameValues(1, "0.1", "", "A", "", "")
        Anno = myGtol.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.2862, SheetPr(6) * 0.87975, 0)
        Anno.SetLeader3(1, 0, True, False, False, False)
        'Anno.SetLeaderAttachmentPointAtIndex(1, SheetPr(5) * 0.2582, SheetPr(6) * 0.8714, 0)
        point1 = SkeManger.CreatePoint(SheetPr(5) * 0.2828 * Scale2, SheetPr(6) * 0.8055 * Scale2, 0)
        ADDConstraints(1)
        point1.Select4(False, Nothing)
        myGtol = part.InsertGtol()
        myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
        myGtol.SetFrameValues(1, "0.03", "", "A", "", "")
        Anno = myGtol.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.3182, SheetPr(6) * 0.8612, 0)
        Anno.SetLeader3(2, 0, True, False, False, False)
        Anno.SetLeaderAttachmentPointAtIndex(2, SheetPr(5) * 0.2828, SheetPr(6) * 0.8055, 0)
        part.Extension.SelectByID2(Dimension7.GetNameForSelection & "@*@工程图视图3", "DIMENSION", SheetPr(5) * 0.3199, SheetPr(6) * 0.8059, 0, False, 0, Nothing, 0)
        myDatumTag = part.InsertDatumTag2()
        myDatumTag.FilledTriangle = True
        myDatumTag.Shoulder = False
        myDatumTag.SetLabel("B")
        myAnnotation = myDatumTag.GetAnnotation()
        myAnnotation.SetPosition(SheetPr(5) * 0.3283, SheetPr(6) * 0.821, 0)
        sys = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Anno = sys.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.303, SheetPr(6) * 0.631, 0)
        sys.SetAngle(PI / 2)
        sys = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 3.2", "", "", "")
        Anno = sys.GetAnnotation

        Anno.SetPosition2(SheetPr(5) * 0.3535, SheetPr(6) * 0.681, 0)
        sys.SetAngle(PI / 2)
        sys = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Anno = sys.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.2525, SheetPr(6) * 0.6, 0)
        sys.SetAngle(PI / 2)
        SelectionMgr.AddSelectionListObject(Edge1(39), Nothing)

        DisplayDimension = part.AddDimension2(SheetPr(5) * 0.1886, SheetPr(6) * 0.4167, 0)
        DisplayDimension.SetBrokenLeader2(False, 2)
        Anno = DisplayDimension.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.1894, SheetPr(6) * 0.4285, 0)
        SelectionMgr.AddSelectionListObject(Edge1(36), Nothing)
        DisplayDimension = part.AddDimension2(SheetPr(5) * 0.1431, SheetPr(6) * 0.35, 0)
        DisplayDimension.SetBrokenLeader2(False, 2)
        sys = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Anno = sys.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.1527, SheetPr(6) * 0.4524, 0)
        sys.SetAngle(PI / 2)

        Dim seldata As SelectData
        seldata = SelectionMgr.CreateSelectData
        seldata.X = SheetPr(5) * 0.1528
        seldata.Y = SheetPr(6) * 0.3868
        SelectionMgr.AddSelectionListObject(Edge1(25), seldata)
        myDatumTag = part.InsertDatumTag2()
        myDatumTag.FilledTriangle = True
        myDatumTag.Shoulder = False
        myDatumTag.SetLabel("C")
        myAnnotation = myDatumTag.GetAnnotation()
        myAnnotation.SetPosition(0.08, 0.16245, 0)
        seldata.X = SheetPr(5) * 0.2583
        seldata.Y = SheetPr(6) * 0.4095
        SelectionMgr.AddSelectionListObject(Edge1(57), seldata)
        myDatumTag = part.InsertDatumTag2()
        myDatumTag.FilledTriangle = True
        myDatumTag.Shoulder = False
        myDatumTag.SetLabel("D")
        myAnnotation = myDatumTag.GetAnnotation()
        myAnnotation.SetPosition(SheetPr(5) * 0.2744, SheetPr(6) * 0.419, 0)
        part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
        part.ActivateView("工程图视图1")
        sys = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "Rz 12.5", "", "", "")
        Anno = sys.GetAnnotation
        Anno.SetPosition2(SheetPr(5) * 0.6734, SheetPr(6) * 0.8301, 0)



    End Sub


End Class


Public Class Run_wangbo
    Public Class EQ_214_2431
        Public Class Front_End_Cover
            Public Sub FEC_8EQ_013_2053()
                Dim Front_End_Cover As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=eq_214_2431;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from front_end_cover", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8EQ.013.2053"
                    r.Read()
                Loop
                Front_End_Cover.part_initialization()
                Front_End_Cover.Parting()
                Front_End_Cover.Over(r("part_save_address") + r("code"), 1)
                Front_End_Cover.Draw(r("part_save_address"), 3, 0.55, 0.6, 0, 0, 0, 0, 0, 0, S(r("skills_requirement"), 1), S(r("skills_requirement"), 2), S(r("skills_requirement"), 3),
                                            S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
                Front_End_Cover.ADDPro(r("name"), r("Code"), r("material"))
                Front_End_Cover.Over(r("drawing_save_address") + r("code"), 2)
            End Sub
            Public Function S(str$, number#) As String
                Dim c() As String
                c = Split(str, ","）
                S = c(number - 1)
            End Function

        End Class
        Public Class Stator_lamination
            Public Sub SL_8LY_670_001()
                Dim SL_8LY_670_001 As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from one_sixth_domeslot_lamination", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.670.001"
                    r.Read()
                Loop
                SL_8LY_670_001.part_initialization()
                SL_8LY_670_001.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                      r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台

                SL_8LY_670_001.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除

                SL_8LY_670_001.Round_Top_Groove(r("Deflection_Angle"), r("Groove_number"), r("arcangle"), r("diameter") / 1000, r("inside_diameter") / 1000, r("Groove_Bottom_Width") / 1000,
                                             r("Groove_Bottom_Short_Hight") / 1000, r("Groove_Bottom_Long_Hight") / 1000, r("Bottom_tip_width") / 1000, r("Dome_center_height") / 1000,
                                             r("Dome_Radius") / 1000, S(r("rtg_gtol_member"), 1), S(r("rtg_gtol_member"), 2), S(r("rtg_gtol_member"), 3)) '圆顶槽

                SL_8LY_670_001.Connected_Wedge(r("diameter") / 1000, r("arcangle"), r("end_cuts") / 1000, r("Length_right_centerAogrooveline") / 1000,
                                           r("Wedge_reference_radius") / 1000, r("Length_left_centerAogrooveline") / 1000, r("Ao_wedge_width") / 1000,
                                           r("Length_right_centerTugrooveline") / 1000, r("Length_left_centerTugrooveline") / 1000, r("Tu_wedge_width") / 1000) '连接楔
                SL_8LY_670_001.ADDPro(r("name"), r("Code"), r("material"))
                SL_8LY_670_001.Over(r("part_save_address") + r("code"), 1)

                SL_8LY_670_001.InsertA4Drawings(r("part_save_address") + r("code"), 3, 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2),
                                            S(r("skills_requirement"), 3), S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))

                SL_8LY_670_001.六分之一冲片圆底槽口具体及局部视图(222 / 1000, 107 / 1000, 2, 0, r("diameter") / 1000, r("arcangle"), r("Groove_number"))

                SL_8LY_670_001.Over(r("drawing_save_address") + r("code"), 2)

            End Sub

            Public Sub SL_8LY_670_002()
                Dim SL_8LY_670_002 As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from hexagonal_slot_lamination", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = "8LY.670.002"
                    r.Read()
                Loop
                SL_8LY_670_002.part_initialization()
                SL_8LY_670_002.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                     r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台

                SL_8LY_670_002.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除

                SL_8LY_670_002.Inside_Polygon_Groove(r("IPGGroove_Number"), r("IPGChord_Length") / 1000, r("diameter") / 1000, r("Inside_diameter") / 1000, r("IPGPhase_Angle"),
                                                 r("IPGDeflection_Angle"), r("IPGGroove_Side_Length") / 1000, r("IPGDome_Base_Circle_Diameter") / 1000, r("IPGDome_Radius") / 1000,
                                                 r("IPGFillet_Radius") / 1000, r("IPGWedge_reference_circle_diameter") / 1000, r("IPGRight_wedge_left_length") / 1000,
                                                 r("IPGRight_wedge_right_length") / 1000, r("IPGwedge_width") / 1000, r("flat_top_groove_top_left_right_line_length") / 1000,
                                                 r("IPG_tol_type"), r("IPG_tol_max"), r("IPG_tol_min"), S(r("IPG_gtol_member"), 1), S(r("IPG_gtol_member"), 2), S(r("IPG_gtol_member"), 3)) '可选左右突起型内多边形槽

                SL_8LY_670_002.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000,
                                                           r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽

                SL_8LY_670_002.Round_Hole(r("Circle_Base_Diameter") / 1000, r("Hole_Diameter") / 1000, r("Hole_number"), r("Hole_Deflection_Angle"), r("H_gtol_symbol")) '圆孔

                SL_8LY_670_002.ADDPro(r("name"), r("Code"), r("material"))
                SL_8LY_670_002.Over(r("part_save_address") + r("code"), 1)


                SL_8LY_670_002.InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2), S(r("skills_requirement"), 3),
                                            S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))

                SL_8LY_670_002.可选左右突起型内多边形槽具体及局部视图(225 / 1000, 140 / 1000, 2, 0, r("Inside_diameter") / 1000, r("diameter") / 1000, r("IPGPhase_Angle"), 3, r("OTPPositioning_Deflection_Angle"))

                SL_8LY_670_002.Over(r("drawing_save_address") + r("code"), 2)
            End Sub

            Public Function S(str$, number#) As String
                Dim c() As String
                c = Split(str, ","）
                S = c(number - 1)
            End Function
        End Class
    End Class
    Public Class Stator_lamination
        Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")
        Dim part As ModelDoc2 = swapp.ActiveDoc
        Public Sub one_sixth_domeslot_lamination(code$)
            Dim one_sixth_domeslot_lamination As New Module_wangbo
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from one_sixth_domeslot_lamination", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()
            Do Until r("Code") = code
                r.Read()
            Loop

            one_sixth_domeslot_lamination.part_initialization()
            one_sixth_domeslot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")

            one_sixth_domeslot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                      r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台

            one_sixth_domeslot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除

            one_sixth_domeslot_lamination.Round_Top_Groove(r("Deflection_Angle"), r("Groove_number"), r("arcangle"), r("diameter") / 1000, r("inside_diameter") / 1000, r("Groove_Bottom_Width") / 1000,
                                             r("Groove_Bottom_Short_Hight") / 1000, r("Groove_Bottom_Long_Hight") / 1000, r("Bottom_tip_width") / 1000, r("Dome_center_height") / 1000,
                                             r("Dome_Radius") / 1000, S(r("rtg_gtol_member"), 1), S(r("rtg_gtol_member"), 2), S(r("rtg_gtol_member"), 3)) '圆顶槽
            'SL_8LY_670_001.Flat_Top_Groove(360 / 24, 24, 360, 338 / 1000, 3 / 1000, 1 / 1000, 1 / 1000, 9.4 / 1000, 11 / 1000, 8 / 1000, 0.5 / 1000) '平顶槽
            'SL_8LY_670_001.Flat_Bottom_Groove(0, 24, 493 / 1000, 12.2 / 1000, 7 / 1000, 3.2 / 1000, 20 / 1000, 2 / 1000, 2 / 1000, 1 / 1000, 1 / 1000) '平底槽
            'SL_8LY_670_001.Inside_Polygon_Groove(14, 32 / 1000, 368 / 1000, 260.6 / 1000, 25.7, 0, 34.2 / 1000, 334.4 / 1000, 20 / 1000, 0.5 / 1000, (260.6 + 4.2 * 2) / 1000, 4 / 1000, 3 / 1000, 2.5 / 1000, 0 / 1000) '可选左右突起型内多边形槽
            'SL_8LY_670_001.Out_Rectangle_Positioning_Groove(493 / 1000, 3.5 / 1000, 6 / 1000) '外圆矩形定位槽
            'one_sixth_domeslot_lamination.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000, r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽
            'SL_8LY_670_001.Inside_Tapezoid_Positioning_Groove(338 / 1000, 3 / 1000, 3 / 1000, 6 / 1000, 30) '内圆梯形定位槽
            'SL_8LY_670_001.Inside_RectangleGroove(260.6 / 1000, 8 / 1000, 10 / 1000, 25.7) '内圆矩形槽
            'SL_8LY_670_001.Inside_Fillet_Trapezoid_table(4, 275 / 1000, 338 / 1000, 40 / 1000, 50 / 1000, 4 / 1000) '内圆圆角梯形凸台
            one_sixth_domeslot_lamination.Connected_Wedge(r("diameter") / 1000, r("arcangle"), r("end_cuts") / 1000, r("Length_right_centerAogrooveline") / 1000, r("Wedge_reference_radius") / 1000, r("Length_left_centerAogrooveline") / 1000,
                                           r("Ao_wedge_width") / 1000, r("Length_right_centerTugrooveline") / 1000, r("Length_left_centerTugrooveline") / 1000, r("Tu_wedge_width") / 1000) '连接楔
            'one_sixth_domeslot_lamination.Out_SmArc_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSGroove_Radius") / 1000, r("OSPositioning_Deflection_Angle"), r("OSGroove_number")) '外圆小圆形凹槽
            'SL_8LY_670_001.Inside_SmArc_Groove(338 / 1000, 338 / 2 / 1000, 5 / 1000, 0, 6) '内圆小圆形凹槽
            'SL_8LY_670_001.Round_Hole(356 / 1000, 7 / 1000, 7, -25.7) '圆孔
            'SL_8LY_670_001.Rectangle_Clasp_Groove(493 / 1000, 3 / 1000, 16 / 1000, 6, 360 / 6) '矩形扣片槽
            'one_sixth_domeslot_lamination.Trapezoid_Clasp_Groove(r("diameter") / 1000, r("TCGroove_Depth") / 1000, r("Trapezoid_angle"), r("TCGroove_under_length") / 1000, r("TCGroove_number"), r("TCPositioning_Deflection_Angle#")) '梯形扣片槽
            'one_sixth_domeslot_lamination.Out_Rectangle_Positioning_Groove_InClaspGroove(r("diameter") / 1000, r("ORPGroove_Depth#") / 1000, r("ORPGroove_under_length##") / 1000, r("TCGroove_Depth") / 1000) '在扣片槽内的矩形定位槽
            'SL_8LY_670_001.Out_Horseshoe_Groove(368 / 1000, 362 / 1000, 5 / 1000, 4 / 1000) '外圆马蹄槽 
            'one_sixth_domeslot_lamination.Inside_Hypotenuse_Tapezoid_Groove(260.6 / 1000, 5 / 1000, 8 / 1000, 6 / 1000, 4, 45, 45) '内圆斜边梯形槽
            'SL_8LY_670_001.External_Boss(4, 80 / 1000, 90 / 1000, 16 / 1000, 5 / 1000, 8 / 1000, 1.5 / 1000, 1 / 1000, 1 / 1000)
            one_sixth_domeslot_lamination.Out_SmArc_Positioning_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSPGroove_Radius") / 1000, r("OSPPositioning_Deflection_Angle")) '外圆小圆形定位槽
            one_sixth_domeslot_lamination.Out_SmArc_Positioning_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSPGroove_Radius") / 1000, r("OSPPositioning_Deflection_Angle1")) '外圆小圆形定位槽
            'part.ClearSelection2(True)
            'Dim cusproper As SldWorks.CustomPropertyManager
            'cusproper = part.Extension.CustomPropertyManager("")
            'cusproper.Set2("名称", r("name"))
            'cusproper.Set2("代号", r("Code"))
            'cusproper.Set2("材料", r("material"))
            'part.BlankRefGeom() '隐藏
            'part.EditRebuild3()
            one_sixth_domeslot_lamination.ADDPro(r("name"), r("Code"), r("material"))

            one_sixth_domeslot_lamination.Over(r("part_save_address") + r("code"), 1)
            '技术要求， 1、冲片毛刺不大于0.10；， 2、槽形尺寸公差按GB/T1801-H10级精度；， 3、全圆分为六拼而成；， 4、未注公差尺寸的极限偏差按GB/T1804-m级精度。
            one_sixth_domeslot_lamination.one_six_InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2), S(r("skills_requirement"), 3),
                                            S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            'one_sixth_domeslot_lamination.完整冲片圆底槽口具体及局部视图(222 / 1000, 107 / 1000, 2, 0, 250 / 1000, 8)
            one_sixth_domeslot_lamination.六分之一冲片圆底槽口具体及局部视图(222 / 1000, 120 / 1000, 2, 0, r("diameter") / 1000, r("arcangle"), r("Groove_number")) '((151.6 - 125) / 2 + 125) / 1000 - 0.132, ((151.6 - 125) / 2 + 125) / 1000
            one_sixth_domeslot_lamination.Over(r("drawing_save_address") + r("code"), 2)

            'SL_8LY_670_001.可选左右突起型内多边形槽具体及局部视图(225 / 1000, 140 / 1000, 2, 0, 260.6 / 1000, 368 / 1000, 25.7, 1)
        End Sub
        Public Sub all_domeslot_lamination(code$, host$)


            Dim all_domeslot_lamination As New Module_wangbo
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from all_domeslot_lamination", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()

            Do Until r("Code") = code
                r.Read()
            Loop
            all_domeslot_lamination.part_initialization()
            all_domeslot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")
            all_domeslot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                      r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台

            all_domeslot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除

            all_domeslot_lamination.Round_Top_Groove(r("Deflection_Angle"), r("Groove_number"), r("arcangle"), r("diameter") / 1000, r("inside_diameter") / 1000, r("Groove_Bottom_Width") / 1000,
                                             r("Groove_Bottom_Short_Hight") / 1000, r("Groove_Bottom_Long_Hight") / 1000, r("Bottom_tip_width") / 1000, r("Dome_center_height") / 1000,
                                             r("Dome_Radius") / 1000, S(r("rtg_gtol_member"), 1), S(r("rtg_gtol_member"), 2), S(r("rtg_gtol_member"), 3)) '圆顶槽
            'SL_8LY_670_001.Flat_Top_Groove(360 / 24, 24, 360, 338 / 1000, 3 / 1000, 1 / 1000, 1 / 1000, 9.4 / 1000, 11 / 1000, 8 / 1000, 0.5 / 1000) '平顶槽
            'SL_8LY_670_001.Flat_Bottom_Groove(0, 24, 493 / 1000, 12.2 / 1000, 7 / 1000, 3.2 / 1000, 20 / 1000, 2 / 1000, 2 / 1000, 1 / 1000, 1 / 1000) '平底槽
            'SL_8LY_670_001.Inside_Polygon_Groove(14, 32 / 1000, 368 / 1000, 260.6 / 1000, 25.7, 0, 34.2 / 1000, 334.4 / 1000, 20 / 1000, 0.5 / 1000, (260.6 + 4.2 * 2) / 1000, 4 / 1000, 3 / 1000, 2.5 / 1000, 0 / 1000) '可选左右突起型内多边形槽
            'SL_8LY_670_001.Out_Rectangle_Positioning_Groove(493 / 1000, 3.5 / 1000, 6 / 1000) '外圆矩形定位槽
            all_domeslot_lamination.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000, r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽
            'SL_8LY_670_001.Inside_Tapezoid_Positioning_Groove(338 / 1000, 3 / 1000, 3 / 1000, 6 / 1000, 30) '内圆梯形定位槽
            'SL_8LY_670_001.Inside_RectangleGroove(260.6 / 1000, 8 / 1000, 10 / 1000, 25.7) '内圆矩形槽
            'SL_8LY_670_001.Inside_Fillet_Trapezoid_table(4, 275 / 1000, 338 / 1000, 40 / 1000, 50 / 1000, 4 / 1000) '内圆圆角梯形凸台
            'all_domeslot_lamination.Connected_Wedge(r("diameter") / 1000, r("arcangle"), r("end_cuts") / 1000, r("Length_right_centerAogrooveline") / 1000, r("Wedge_reference_radius") / 1000, r("Length_left_centerAogrooveline") / 1000,
            '                               r("Ao_wedge_width") / 1000, r("Length_right_centerTugrooveline") / 1000, r("Length_left_centerTugrooveline") / 1000, r("Tu_wedge_width") / 1000) '连接楔
            all_domeslot_lamination.Out_SmArc_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSGroove_Radius") / 1000, r("OSPositioning_Deflection_Angle"), r("OSGroove_number"), r("OS_CoverWithOTP")) '外圆小圆形凹槽
            all_domeslot_lamination.Out_SmArc_Positioning_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSPGroove_Radius") / 1000, r("OSPPositioning_Deflection_Angle")) '外圆小圆形定位槽
            'SL_8LY_670_001.Inside_SmArc_Groove(338 / 1000, 338 / 2 / 1000, 5 / 1000, 0, 6) '内圆小圆形凹槽
            all_domeslot_lamination.Round_Hole(r("RHCircle_Base_Diameter") / 1000, r("RHole_Diameter") / 1000, r("RHole_number"), r("RHole_Deflection_Angle"), r("RH_gtol_symbol")) '圆孔
            'SL_8LY_670_001.Rectangle_Clasp_Groove(493 / 1000, 3 / 1000, 16 / 1000, 6, 360 / 6) '矩形扣片槽
            all_domeslot_lamination.Trapezoid_Clasp_Groove(r("diameter") / 1000, r("TCGroove_Depth") / 1000, r("Trapezoid_angle"), r("TCGroove_under_length") / 1000, r("TCGroove_number"), r("TCPositioning_Deflection_Angle")) '梯形扣片槽
            all_domeslot_lamination.Out_Rectangle_Positioning_Groove_InClaspGroove(r("diameter") / 1000, r("ORPGroove_Depth") / 1000, r("ORPGroove_under_length") / 1000, r("TCGroove_Depth") / 1000) '在扣片槽内的矩形定位槽
            all_domeslot_lamination.Out_Bottom_Groove(r("ORPGroove_under_length"), r("diameter") / 1000, r("TCGroove_under_length") / 1000, r("Trapezoid_angle"), r("TCGroove_number") / 1000, r("TCPositioning_Deflection_Angle") / 1000, code, host)
            'SL_8LY_670_001.Out_Horseshoe_Groove(368 / 1000, 362 / 1000, 5 / 1000, 4 / 1000) '外圆马蹄槽 
            'SL_8LY_670_001.Inside_Hypotenuse_Tapezoid_Groove(260.6 / 1000, 5 / 1000, 8 / 1000, 6 / 1000, 4, 45, 45) '内圆斜边梯形槽
            'SL_8LY_670_001.External_Boss(4, 80 / 1000, 90 / 1000, 16 / 1000, 5 / 1000, 8 / 1000, 1.5 / 1000, 1 / 1000, 1 / 1000)
            all_domeslot_lamination.ADDPro(r("name"), r("Code"), r("material"))
            all_domeslot_lamination.Over(r("part_save_address") + r("code"), 1)
            all_domeslot_lamination.InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2), S(r("skills_requirement"), 3),
                                            S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            all_domeslot_lamination.完整冲片圆底槽口具体及局部视图(222 / 1000, 107 / 1000, 2, 0, 250 / 1000, 8)
            'all_domeslot_lamination.六分之一冲片圆底槽口具体及局部视图(222 / 1000, 107 / 1000, 2, 0, r("diameter") / 1000, r("arcangle"), r("Groove_number")) '((151.6 - 125) / 2 + 125) / 1000 - 0.132, ((151.6 - 125) / 2 + 125) / 1000
            all_domeslot_lamination.Over(r("drawing_save_address") + r("code"), 2)

            'SL_8LY_670_001.可选左右突起型内多边形槽具体及局部视图(225 / 1000, 140 / 1000, 2, 0, 260.6 / 1000, 368 / 1000, 25.7, 1)
        End Sub
        Public Sub flat_topslot_lamination(code$)
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from flat_topslot_lamination", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()
            Do Until r("Code") = code
                r.Read()
            Loop
            Dim flat_topslot_lamination As New Module_wangbo
            flat_topslot_lamination.part_initialization()

            flat_topslot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")
            flat_topslot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                     r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台
            flat_topslot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除
            flat_topslot_lamination.Flat_Top_Groove(r("FTDeflection_Angle"), r("FTGroove_number"), r("arcangle"), r("inside_diameter") / 1000, r("FTgroove_top_rearc_diameter") / 1000, r("FTGroove_Bottom_Width") / 1000, r("FTGroove_Bottom_Short_Hight") / 1000, r("FTGroove_Bottom_Long_Hight") / 1000, r("FTBottom_tip_width") / 1000, r("FTGroove_Top_Width") / 1000, r("FTFillet_Radius") / 1000) '平顶槽
            flat_topslot_lamination.T_Table_Inside(r("T_table_number"), r("TT_inside_under_diameter") / 1000, r("TT_inside_top_diameter") / 1000, r("T_table_under_width") / 1000, r("T_table_under_short_height") / 1000, r("T_table_long_width") / 1000) '内圆T型凸台
            flat_topslot_lamination.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000, r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽
            flat_topslot_lamination.Inside_Hypotenuse_Tapezoid_Groove(r("inside_diameter") / 1000, r("IHTGroove_Depth") / 1000, r("IHTGroove_Top_Width") / 1000, r("IHTGroove_under_Width") / 1000, r("IHTGroove_Number"), r("IHTGFillet_Radius"), r("IHTGDeflection_Angle"), r("IHTGPhase_Angle")) '内圆斜边梯形槽
            flat_topslot_lamination.Round_Hole(r("Circle_Base_Diameter") / 1000, r("Hole_Diameter") / 1000, r("Hole_number"), r("Hole_Deflection_Angle"), r("H_gtol_symbol")) '圆孔
            flat_topslot_lamination.Out_Horseshoe_Groove(r("OHGroove_number"), r("OHDeflection_Angle"), r("diameter") / 1000, r("OHReference_circle_diameter") / 1000, r("OHGroove_hole_diameter") / 1000, r("OHGroove_width") / 1000) '外圆马蹄槽 
            flat_topslot_lamination.Out_SmArc_Groove(r("diameter") / 1000, r("diameter") / 2 / 1000, r("OSGroove_Radius") / 1000, r("OSPositioning_Deflection_Angle"), r("OSGroove_number"), r("OS_CoverWithOTP")) '外圆小圆形凹槽
            flat_topslot_lamination.ADDPro(r("name"), r("Code"), r("material"))
            flat_topslot_lamination.Over(r("part_save_address") + r("code"), 1)
            flat_topslot_lamination.InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2),
                                            S(r("skills_requirement"), 3), S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            flat_topslot_lamination.平顶槽具体及局部视图(225 / 1000, 140 / 1000, 1, r("FTDeflection_Angle"), r("inside_diameter") / 1000, r("diameter") / 1000, 360 / (r("FTGroove_number") + r("T_table_number")), code)
            flat_topslot_lamination.Over(r("drawing_save_address") + r("code"), 2)
        End Sub
        Public Sub 槽底外凸型平底槽(code$)
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from test", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()
            Do Until r("Code") = code
                r.Read()
            Loop
            Dim flat_topslot_lamination As New Module_wangbo
            flat_topslot_lamination.part_initialization()

            flat_topslot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")
            flat_topslot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                     r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台
            flat_topslot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除
            flat_topslot_lamination.槽底外凸型平顶槽(r("FTDeflection_Angle"), r("FTGroove_number"), r("arcangle"), r("inside_diameter") / 1000, r("FTgroove_top_rearc_diameter") / 1000, r("FTGroove_Bottom_Width") / 1000, r("FTGroove_Bottom_Short_Hight") / 1000, r("FTGroove_Bottom_Long_Hight") / 1000, r("FTGroove_Bottom_Angle"), r("FTFillet_Radius") / 1000)
            flat_topslot_lamination.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000, r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽
            flat_topslot_lamination.Trapezoid_Clasp_Groove(r("diameter") / 1000, r("TCGroove_Depth") / 1000, r("Trapezoid_angle"), r("TCGroove_under_length") / 1000, r("TCGroove_number"), r("TCPositioning_Deflection_Angle")) '梯形扣片槽
            flat_topslot_lamination.ADDPro(r("name"), r("Code"), r("material"))
            flat_topslot_lamination.Over(r("part_save_address") + r("code"), 1)
            flat_topslot_lamination.Drawing(r("part_save_address") + r("code"), 3, 0.4, 0.6, 0, 0, 0, 0, 0, 0, S(r("skills_requirement"), 1), S(r("skills_requirement"), 2), S(r("skills_requirement"), 3),
                                            S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            flat_topslot_lamination.槽底外凸型平顶槽具体及局部视图(472 / 1000, 268 / 1000, 1, r("FTDeflection_Angle"), r("inside_diameter") / 1000, r("diameter") / 1000, 360 / (r("FTGroove_number") + r("T_table_number")), code)
            flat_topslot_lamination.Over(r("drawing_save_address") + r("code"), 2)



        End Sub
        Public Sub hexagonal_slot_lamination(code$)
            Dim hexagonal_slot_lamination As New Module_wangbo
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from hexagonal_slot_lamination", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()
            Do Until r("Code") = code
                r.Read()
            Loop
            hexagonal_slot_lamination.part_initialization()

            hexagonal_slot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")
            hexagonal_slot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                     r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台

            hexagonal_slot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除

            hexagonal_slot_lamination.Inside_Polygon_Groove(r("IPGGroove_Number"), r("IPGChord_Length") / 1000, r("diameter") / 1000, r("Inside_diameter") / 1000, r("IPGPhase_Angle"),
                                                 r("IPGDeflection_Angle"), r("IPGGroove_Side_Length") / 1000, r("IPGDome_Base_Circle_Diameter") / 1000, r("IPGDome_Radius") / 1000,
                                                 r("IPGFillet_Radius") / 1000, r("IPGWedge_reference_circle_diameter") / 1000, r("IPGRight_wedge_left_length") / 1000,
                                                 r("IPGRight_wedge_right_length") / 1000, r("IPGwedge_width") / 1000, r("flat_top_groove_top_left_right_line_length") / 1000,
                                                 r("IPG_tol_type"), r("IPG_tol_max"), r("IPG_tol_min"), S(r("IPG_gtol_member"), 1), S(r("IPG_gtol_member"), 2), S(r("IPG_gtol_member"), 3)) '可选左右突起型内多边形槽

            hexagonal_slot_lamination.Out_Tapezoid_Positioning_Groove(r("diameter") / 1000, r("OTPGroove_right_length") / 1000, r("OTPGroove_left_length") / 1000, r("OTPGroove_Width") / 1000, r("OTPPositioning_Deflection_Angle")) '外圆梯形定位槽
            hexagonal_slot_lamination.Round_Hole(r("Circle_Base_Diameter") / 1000, r("Hole_Diameter") / 1000, r("Hole_number"), r("Hole_Deflection_Angle"), r("H_gtol_symbol")) '圆孔
            If Not S(r("Hole_Diameter1"), 1) = "0" Then
                hexagonal_slot_lamination.Round_Hole(S(r("Circle_Base_Diameter1"), 1) / 1000, S(r("Hole_Diameter1"), 1) / 1000, S(r("Hole_number1"), 1), S(r("Hole_Deflection_Angle1"), 1), S(r("H_gtol_symbol1"), 1))
                If Not S(r("Hole_Diameter1"), 2) Is Nothing Then
                    hexagonal_slot_lamination.Round_Hole(S(r("Circle_Base_Diameter1"), 2) / 1000, S(r("Hole_Diameter1"), 2) / 1000, S(r("Hole_number1"), 2), S(r("Hole_Deflection_Angle1"), 2), S(r("H_gtol_symbol1"), 2))
                End If
            End If

            hexagonal_slot_lamination.Out_SmArc_Groove(r("diameter") / 1000, r("OSSmArc_Groove_Outradius") / 1000, r("OSGroove_Radius") / 1000, r("OSPositioning_Deflection_Angle"), r("OSGroove_number"), r("OS_CoverWithOTP")) '外圆小圆形凹槽
            hexagonal_slot_lamination.Inside_RectangleGroove(r("inside_diameter") / 1000, r("IRGroove_depth") / 1000, r("IRGroove_Width") / 1000, r("IRPositioning_Deflection_Angle"), r("IPGGroove_Number"), r("IRGroove_number")) '内圆矩形槽
            hexagonal_slot_lamination.Inside_Dome_RectangleGroove(r("inside_diameter") / 1000, r("IDRGroove_depth") / 1000, r("IDRGroove_Width") / 1000, r("IDRPositioning_Deflection_Angle")) '内圆圆顶矩形槽
            hexagonal_slot_lamination.Inside_Hypotenuse_Tapezoid_Groove(r("inside_diameter") / 1000, r("IHTGroove_Depth") / 1000, r("IHTGroove_Top_Width") / 1000, r("IHTGroove_under_Width") / 1000, r("IHTGroove_Number"), r("IHTGFillet_Radius") / 1000, r("IHTGDeflection_Angle"), r("IHTGPhase_Angle")) '内圆斜边梯形槽
            hexagonal_slot_lamination.ADDPro(r("name"), r("Code"), r("material"))

            hexagonal_slot_lamination.Over(r("part_save_address") + r("code"), 1)
            hexagonal_slot_lamination.InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2),
                                            S(r("skills_requirement"), 3), S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            hexagonal_slot_lamination.可选左右突起型内多边形槽具体及局部视图(225 / 1000, 140 / 1000, 2, 0, r("Inside_diameter") / 1000, r("diameter") / 1000, r("IPGPhase_Angle"), r("type"), r("OTPPositioning_Deflection_Angle"))
            hexagonal_slot_lamination.Over(r("drawing_save_address") + r("code"), 2)
        End Sub
        Public Sub unflat_topslot_lamination(code$)
            'Dim code As String = "8MJ.660.590"
            Dim unflat_topslot_lamination As New Module_wangbo
            Dim mysqlcon As MySqlConnection
            Dim mysqlcom As MySqlCommand
            Dim r As MySqlDataReader
            mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=stator_lamination;pooling=false")
            '//打开数据库连接
            mysqlcon.Open()
            '//sql查询
            mysqlcom = New MySqlCommand("select * from unflat_topslot_insideTtable_lamination", mysqlcon)
            r = mysqlcom.ExecuteReader()
            r.Read()
            Do Until r("Code") = code
                r.Read()
            Loop
            unflat_topslot_lamination.part_initialization()

            unflat_topslot_lamination.EditMaterial("C:/Program Files/SOLIDWORKS Corp/SOLIDWORKS/lang/chinese-simplified/sldmaterials/碳素结构钢gbt700-198.sldmat", "Q235锻制")
            unflat_topslot_lamination.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, r("arcangle"), r("End_cuts") / 1000, r("arc_table_tol_type"), r("arc_table_tol_max"),
                                                r("arc_table_tol_min"), S(r("arc_table_GTOL_member"), 1), S(r("arc_table_GTOL_member"), 2), S(r("arc_table_GTOL_member"), 3)) '圆弧凸台
            unflat_topslot_lamination.Reverse_Circle_Cut(r("inside_diameter") / 1000, r("arcangle"), r("inside_tol_type"), r("inside_tol_max"), r("inside_tol_min")) '反向圆切除
            unflat_topslot_lamination.UNFlat_Bottom_Groove(r("Relative_Y_axis_deflection_angle"), r("UNFslot_number"), r("diameter") / 1000, r("UNFshoulder_width") / 1000, r("UNFbottom_width") / 1000, r("UNFtop_width") / 1000, r("UNFone_Step_height") / 1000,
                                                           r("UNFtwo_steps_height") / 1000, r("UNFthree_steps_height") / 1000, r("UNFrounded_R1") / 1000, r("UNFrounded_R2") / 1000) '反向平顶槽
            unflat_topslot_lamination.Inside_Fillet_Trapezoid_table(r("IFTTable_Number"), r("IFTUnder_Round_Diameter") / 1000, r("IFTTop_Round_Diameter") / 1000, r("IFTUnder_Width") / 1000, r("IFTTop_Width") / 1000, r("IFTFillet_Radius") / 1000) '内圆圆角梯形凸台
            unflat_topslot_lamination.Round_Hole(r("RHCircle_Base_Diameter") / 1000, r("RHole_Diameter") / 1000, r("RHole_number"), r("RHole_Deflection_Angle"), r("H_gtol_symbol")) '圆孔
            unflat_topslot_lamination.Inside_SmArc_Groove(r("inside_diameter") / 1000, r("ISSmArc_Groove_Outradius") / 2 / 1000, r("ISGroove_Radius") / 1000, r("ISPositioning_Deflection_Angle"), r("ISGroove_number")) '内圆小圆形凹槽
            unflat_topslot_lamination.Inside_Tapezoid_Positioning_Groove(r("inside_diameter") / 1000, r("ITPGroove_right_length") / 1000, r("ITPGroove_left_length") / 1000, r("ITPGroove_Width") / 1000, r("ITPPositioning_Deflection_Angle")) '内圆梯形定位槽
            unflat_topslot_lamination.ADDPro(r("name"), r("Code"), r("material"))
            unflat_topslot_lamination.Over(r("part_save_address") + r("code"), 1)
            unflat_topslot_lamination.InsertA4Drawings(r("part_save_address") + r("code"), r("scale_d"), 1, 0, 0, r("material"), r("company"), r("name"), r("Code"), S(r("skills_requirement"), 1), S(r("skills_requirement"), 2),
                                            S(r("skills_requirement"), 3), S(r("skills_requirement"), 4), S(r("skills_requirement"), 5), S(r("skills_requirement"), 6))
            unflat_topslot_lamination.反向平顶槽口具体及局部视图(225 / 1000, 130 / 1000, 2, 0)
            unflat_topslot_lamination.Over(r("drawing_save_address") + r("code"), 2)
        End Sub

        Public Function S(str$, number#) As String
            Dim c() As String
            c = Split(str, ","）
            S = c(number - 1)
        End Function


    End Class
    Public Class Y2_80
        Public Class 电机总装配
            Public Sub 电机总装配()
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\电机总装配.SLDASM"
                Dim dz3 As String = "\电机总装配.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim Assem As SldWorks.AssemblyDoc
                swapp = CreateObject("Sldworks.application")
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.FrameState = 1 '窗体大小调整为最大
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
                swapp.Visible = True
                Assem = swapp.ActiveDoc
                Dim pi As Double = 3.1415926535897931
                Dim AssemblyTitle As String
                AssemblyTitle = Assem.GetTitle
                Debug.Print(AssemblyTitle)
                Dim errors As Long
                Dim longwarnings As Long
                Dim part As SldWorks.ModelDoc2
                Dim selectmgr As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                part = swapp.ActiveDoc
                selectmgr = part.SelectionManager
                Dim 机座 As SldWorks.Feature
                Dim 铭牌 As SldWorks.Feature
                Dim 垫圈 As SldWorks.Feature
                Dim 接线盒 As SldWorks.Feature
                Dim 铆钉 As SldWorks.Feature
                Dim 螺栓 As SldWorks.Feature
                Dim bodies() As Object
                Dim swInsertedComponent As SldWorks.Component2
                Dim add As SldWorks.AssemblyDoc
                add = swapp.ActiveDoc
                Dim edge1() As Object
                Dim edge2() As Object
                Dim edge3() As Object
                Dim edge4() As Object
                Dim edge5() As Object
                Dim edge6() As Object

                Dim JZface1 As Object
                Dim JZface2 As Object
                Dim JZface3 As Object
                Dim MDface1 As Object
                Dim MDface2 As Object
                Dim MPface As Object
                Dim DQface1 As Object
                Dim DQface2 As Object
                Dim DZTXface3 As Object
                Dim DZTXface4 As Object
                Dim DGface As Object
                Dim JXHface1 As Object
                Dim JXHface2 As Object
                Dim JXHface3 As Object
                Dim DG1face As Object
                Dim LSface1 As Object
                Dim LSface2 As Object
                Dim FZface3 As Object
                Dim ZZface1 As Object
                Dim ZZface2 As Object
                Dim ZZface3 As Object
                Dim count As Integer

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\机座.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\机座.SLDPRT", 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\机座.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\定子铁心5MJ.663.674.SLDASM", 2, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\定子铁心5MJ.663.674.SLDASM", 0, "", False, "", 0, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\定子铁心5MJ.663.674.SLDASM")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT", 0, "", False, "", 0, 0.3, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\接线盒.SLDASM", 2, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\接线盒.SLDASM", 0, "", False, "", 0, 0.4, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\接线盒.SLDASM")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\风罩.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\风罩.SLDPRT", 0, "", False, "", 0, 0.5, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\风罩.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\端盖1.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\端盖1.SLDPRT", 0, "", False, "", 0, 0.6, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\端盖1.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\转子装配.SLDASM", 2, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\转子装配.SLDASM", 0, "", False, "", 0, 0.7, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\转子装配.SLDASM")
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swViewDisplayHideAllTypes, True)
                part.EditRebuild3()

                part.Extension.SelectByID2("BaseBody@接线盒-1@" & AssemblyTitle & "/slotted pan head screws gb-5@接线盒", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒 = selectmgr.GetSelectedObject6(1, -1)
                JXHface1 = 接线盒.GetFaces() '1
                part.ClearSelection2（True)

                part.Extension.SelectByID2("BaseBody@接线盒-1@" & AssemblyTitle & "/slotted pan head screws gb-6@接线盒", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒 = selectmgr.GetSelectedObject6(1, -1)
                JXHface2 = 接线盒.GetFaces() '1
                part.ClearSelection2（True)

                part.Extension.SelectByID2("凸台-拉伸1@接线盒-1@" & AssemblyTitle & "/橡胶衬垫-1@接线盒", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒 = selectmgr.GetSelectedObject6(1, -1)
                JXHface3 = 接线盒.GetFaces() '24
                part.ClearSelection2（True)

                part.Extension.SelectByID2("M5 螺纹孔的螺纹孔钻头1@机座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                机座 = selectmgr.GetSelectedObject6(1, -1)
                JZface1 = 机座.GetFaces() '0
                part.ClearSelection2（True)

                part.Extension.SelectByID2("M5 螺纹孔的螺纹孔钻头2@机座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                机座 = selectmgr.GetSelectedObject6(1, -1)
                JZface2 = 机座.GetFaces() '0
                part.ClearSelection2（True)

                part.Extension.SelectByID2("凸台-拉伸19@机座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                机座 = selectmgr.GetSelectedObject6(1, -1)
                JZface3 = 机座.GetFaces() '2
                part.ClearSelection2（True)

                selectmgr.AddSelectionListObject(JZface1(0), Nothing)
                selectmgr.AddSelectionListObject(JXHface1(1), Nothing)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                selectmgr.AddSelectionListObject(JZface2(0), Nothing)
                selectmgr.AddSelectionListObject(JXHface2(1), Nothing)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                selectmgr.AddSelectionListObject(JZface3(2), Nothing)
                selectmgr.AddSelectionListObject(JXHface3(24), Nothing)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(-0.0393900706299064, 0.161209068644789, 0.0319999999998686, -0.780955824239709, 0.0171561870979545, -0.624350595283081, 0.00148918198386084, 2, False, 0, 0)
                part.Extension.SelectByRay(0.0739999999998417, 0.0667158707437441, -0.00460698236787493, -0.780955824239709, 0.0171561870979545, -0.624350595283081, 0.00148918198386084, 2, True, 1, 0)
                Assem.AddMate5(5, 0, False, 0.042, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0319557754621655, 0.238272732993522, 0.119601222347285, -0.553662081799873, -0.150661728027116, -0.818998988329604, 0.00126610532488449, 1, True, 1, 0)
                part.Extension.SelectByRay(0.0744703170256003, 0.0586979748496219, 0.0321812185244426, -0.553662081799873, -0.150661728027116, -0.818998988329604, 0.00126610532488449, 1, True, 1, 0)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0301689629634438, 0.733373138541438, 0.00668343430129426, -0.553662081799873, -0.150661728027116, -0.818998988329604, 0.000761103162439785, 1, True, 1, 0)
                part.Extension.SelectByRay(0.0305622238638534, 0.0190601370790233, -0.0284977244035076, -0.553662081799873, -0.150661728027116, -0.818998988329604, 0.000761103162439785, 1, True, 1, 0)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.00885311001900391, 0.361196842024569, 0.0405000000001223, 0.70601476324633, -0.142625407110897, 0.693686634817682, 0.00100958133297269, 2, True, 1, 0)
                part.Extension.SelectByRay(-0.0739999999998986, 0.0662481354019349, 0.0059586976089463, 0.70601476324633, -0.142625407110897, 0.693686634817682, 0.00100958133297269, 2, True, 1, 0)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(-0.0849579858558513, 0.216762806955913, 0.0266286324584826, 0.70601476324633, -0.142625407110897, 0.693686634817682, 0.00100958133297269, 2, True, 1, 0)
                part.Extension.SelectByRay(-0.070780216189803, 0.0682888112901168, 0.00239670828818817, 0.70601476324633, -0.142625407110897, 0.693686634817682, 0.00100958133297269, 2, True, 1, 0)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0165200597328408, 0.658318633030717, 0.0405000000000086, -0.819600450782901, 0.240932137373857, 0.519814203592909, 0.00217036236666922, 2, True, 1, 0)
                part.Extension.SelectByRay(0.0739999999998417, 0.065730466763938, -0.00587361795948027, -0.819600450782901, 0.240932137373857, 0.519814203592909, 0.00217036236666922, 2, True, 1, 0)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0834321879666504, 0.218325022703453, 0.00840823733437901, -0.819600450782901, 0.240932137373857, 0.519814203592909, 0.000255336749019909, 2, True, 1, 0)
                part.Extension.SelectByRay(0.0703390667719646, 0.0705749517216816, 0.0019415269956653, -0.819600450782901, 0.240932137373857, 0.519814203592909, 0.000331398491916129, 2, True, 1, 0)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByRay(-0.0754666773231065, 0.491012196384304, 0.0223440577854319, -0.957240263557173, -0.197703762549913, -0.211197301352555, 0.00295478224232476, 2, False, 0, 0)
                part.Extension.SelectByRay(0.0839255032353776, 0.0763784733117063, -0.00429619457997887, -0.789674192178307, -0.459524574747454, -0.406511790002099, 0.000458465229711354, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByRay(-0.0951590005507228, 0.0518816071267736, 0.0290279393083779, 0.425610101753005, -0.331181534087251, -0.842125188297685, 0.00042742870232746, 1, True, 1, 0)
                part.Extension.SelectByRay(-0.0697064673729813, 0.0612632552270611, 0.0282281209825896, 0.425610101753005, -0.331181534087251, -0.842125188297685, 0.00042742870232746, 2, True, 1, 0)
                add.AddMate5(1, 0, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0950243698512736, 0.0551103567993891, 0.0226012969684461, -0.214587962888565, -0.297706690122459, -0.930227247955931, 0.000286309155452532, 1, True, 1, 0)
                part.Extension.SelectByRay(0.0720927239656532, 0.0603672076634325, 0.0300818457973833, -0.214587962888565, -0.297706690122459, -0.930227247955931, 0.000286309155452532, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0797877527806312, 0.0750920663142551, -0.00218642554858661, -0.0109974122290795, -0.585255784371473, -0.810774150910102, 0.000405728094848207, 2, False, 0, 0)
                part.Extension.SelectByRay(0.140942350022844, 0.0770201307277603, -0.00236210974014739, -0.0109974122290795, -0.585255784371473, -0.810774150910102, 0.000405728094848207, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByID2("LimitDistance1", "MATE", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\垫圈93_87_6.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\垫圈93_87_6.SLDPRT", 0, "", False, "", -0.163, 0.0512, -0.016)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\垫圈93_87_6.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\螺栓5784_6_25.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\螺栓5784_6_25.SLDPRT", 0, "", False, "", -0.2, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\螺栓5784_6_25.SLDPRT")

                part.Extension.SelectByRay(-0.166497858766533, 0.0535059074338733, -0.0152000000001635, 0.213189641021584, -0.493220911287516, -0.843376137692904, 0.000417272450890122, 2, True, 1, 0)
                part.Extension.SelectByRay(-0.0879999999999654, 0.0737400236614008, -0.002836219665312, 0.213189641021584, -0.493220911287516, -0.843376137692904, 0.000417272450890122, 2, True, 1, 0)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(-0.0880903517968932, 0.0679719535964978, 0.00328609458819074, 0.213189641021584, -0.493220911287516, -0.843376137692904, 0.000164365314326041, 1, True, 1, 0)
                part.Extension.SelectByRay(-0.0892963842806012, 0.0683253065165559, -0.00749925387123085, 0.213189641021584, -0.493220911287516, -0.843376137692904, 0.000164365314326041, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(-0.192470518219096, -0.000574874347158527, 0.00294440477591706, -0.323232227519151, 0.108544736313471, -0.940073915876644, 0.000698293755306112, 2, False, 0, 0)
                part.Extension.SelectByRay(-0.0860027008114912, 0.0690230430919954, -0.00349992414436429, 0.560724705870924, -0.0671247187146464, -0.825276969485666, 0.000399275291465216, 2, True, 1, 0)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByID2("BaseHead@螺栓5784_6_25-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                螺栓 = selectmgr.GetSelectedObject6(1, -1)
                LSface1 = 螺栓.GetFaces() '7
                part.ClearSelection2（True)
                part.Extension.SelectByID2("Base-Extrude@垫圈93_87_6-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                垫圈 = selectmgr.GetSelectedObject6(1, -1)
                DQface1 = 垫圈.GetFaces() '1
                part.ClearSelection2（True)
                selectmgr.AddSelectionListObject(DQface1(1), Nothing)
                selectmgr.AddSelectionListObject(LSface1(7), Nothing)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\螺钉M5X8.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\螺钉M5X8.SLDPRT", 0, "", False, "", 0.2, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\螺钉M5X8.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\垫圈97.1_85.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\垫圈97.1_85.SLDPRT", 0, "", False, "", 0.2, 0.1, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\垫圈97.1_85.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\垫圈93_87_5.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\垫圈93_87_5.SLDPRT", 0, "", False, "", 0.2, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\垫圈93_87_5.SLDPRT")

                part.Extension.SelectByRay(0.201993815032836, 0.103595001373321, 0.000499999999988177, 0.455669186328816, -0.702562429480114, -0.54660005974518, 0.000532797719800293, 2, True, 1, 0)
                part.Extension.SelectByRay(0.0926854246334869, 0.0775557459946299, -0.00471720353618821, 0.455669186328816, -0.702562429480114, -0.54660005974518, 0.000532797719800293, 2, True, 1, 0)
                add.AddMate5(4, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '切
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0828861727753178, 0.0778324412617053, -0.00182096970115708, 0.455669186328816, -0.702562429480114, -0.54660005974518, 0.000367044349170422, 1, True, 1, 0)
                part.Extension.SelectByRay(0.100516785347224, 0.0747612581751582, -0.077451762414853, 0.455669186328816, -0.702562429480114, -0.54660005974518, 0.000367044349170422, 1, True, 1, 0)
                add.AddMate5(4, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '切
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.196628857472533, 0.200445327340162, 0.000650000000007367, -0.543054171796548, -0.122252848573086, -0.83075050858253, 0.000327437595931244, 2, True, 1, 0)
                part.Extension.SelectByRay(0.0826540149374182, 0.0787032965358776, -0.00396265275560381, -0.543054171796548, -0.122252848573086, -0.83075050858253, 0.000327437595931244, 2, True, 1, 0)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.084311956058059, 0.0801282452910073, -0.0055189351613194, -0.266780550236732, -0.649275110545443, -0.712228873917359, 0.000327437595931244, 1, True, 1, 0)
                part.Extension.SelectByRay(0.0793176500381492, 0.0787111167091439, -0.00192963879339914, -0.266780550236732, -0.649275110545443, -0.712228873917359, 0.000327437595931244, 1, True, 1, 0)
                add.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.0785263742098437, 0.0794430553720531, -0.000991970869904435, -0.628902625306369, -0.722784789524716, -0.286467512843026, 0.000286309155452532, 2, True, 1, 0)
                part.Extension.SelectByRay(0.202742627364501, 0.00216804868301779, 0.00124481521032749, -0.628902625306369, -0.722784789524716, -0.286467512843026, 0.000335407301449116, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Base-Extrude@垫圈93_87_5-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                垫圈 = selectmgr.GetSelectedObject6(1, -1)
                DQface2 = 垫圈.GetFaces() '1
                part.ClearSelection2（True)

                part.Extension.SelectByID2("BaseHead@螺钉M5X8-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                螺栓 = selectmgr.GetSelectedObject6(1, -1)
                LSface2 = 螺栓.GetFaces() '1
                part.ClearSelection2（True)
                selectmgr.AddSelectionListObject(DQface2(1), Nothing)
                selectmgr.AddSelectionListObject(LSface2(1), Nothing)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT", 0, "", False, "", 0.1, 0.15, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT")

                part.Extension.SelectByID2("BaseHead@铆钉2X5-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                铆钉 = selectmgr.GetSelectedObject6(1, -1)
                MDface1 = 铆钉.GetFaces() '1
                part.ClearSelection2（True)

                part.Extension.SelectByID2("凸台-拉伸22@机座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                铭牌 = selectmgr.GetSelectedObject6(1, -1)
                MPface = 铭牌.GetFaces() '2
                part.ClearSelection2（True)

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT", 0, "", False, "", 0.1, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\铆钉2X5.SLDPRT")
                part.Extension.SelectByID2("BaseHead@铆钉2X5-2@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                铆钉 = selectmgr.GetSelectedObject6(1, -1)
                MDface2 = 铆钉.GetFaces() '1
                part.ClearSelection2（True)

                part.Extension.SelectByRay(0.100827115829532, 0.150014865203104, 0.00107489721636966, 0, 0, -1, 0.000610583200658032, 2, True, 1, 0)
                part.Extension.SelectByRay(-0.0359059259537358, 0.0629648969427032, 0.0482692439981633, 0, 0, -1, 0.000163707853068737, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                part.Extension.SelectByRay(0.100204209641447, 0.199480918003502, 0.000941370745579206, 0.529923373938742, 0.223105800339305, -0.818171754345222, 0.000579583816904073, 2, True, 1, 0)
                part.Extension.SelectByRay(0.0366499639706603, 0.0629583342812623, 0.0485966357750272, 0.529923373938742, 0.223105800339305, -0.818171754345222, 0.000157276160082715, 2, True, 1, 0)
                add.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                selectmgr.AddSelectionListObject(MPface(2), Nothing)
                selectmgr.AddSelectionListObject(MDface1(1), Nothing)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）
                selectmgr.AddSelectionListObject(MPface(2), Nothing)
                selectmgr.AddSelectionListObject(MDface2(1), Nothing)
                add.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByRay(-0.0950475461621636, 0.0563665943543583, 0.0192337969538698, 0.37078660630393, -0.435197824629697, -0.820438995918157, 0.00090064016872291, 1, True, 2, 0)
                part.Extension.SelectByID2("螺栓5784_6_25-1@装配体93", "COMPONENT", -0.0922633154212917, 0.071036772013656, 0.0049751841621628, True, 1, Nothing, 0)
                part.Extension.SelectByID2("垫圈93_87_6-1@装配体93", "COMPONENT", -0.0882569130623096, 0.0711821500606789, 0.00422893064575192, True, 1, Nothing, 0)
                part.Extension.SelectByID2("螺钉M5X8-1@装配体93", "COMPONENT", 0.0832941700754475, 0.0826962335273151, 0.00279851180829382, True, 1, Nothing, 0)
                part.Extension.SelectByID2("垫圈93_87_5-1@装配体93", "COMPONENT", 0.0791909467178016, 0.0789889610738896, 0.00343707131270321, True, 1, Nothing, 0)
                part.Extension.SelectByID2("垫圈97.1_85-1@装配体93", "COMPONENT", 0.0785157003377606, 0.0784285284566977, 0.0042966561927642, True, 1, Nothing, 0)
                part.FeatureManager.FeatureCircularPattern5(3, pi * 2, False, "NULL", False, True, False, False, False, False, 0, 0, "NULL", False)
                part.ClearSelection2(True)
                part.SaveAs3(dz1 + dz2, 0, 8)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Dim myGtol As SldWorks.Gtol '形位公差
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a2.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                part.ViewZoomtofit2()
                selecmag = part.SelectionManager
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*左视", 0.45, 0.28, 0) '零件视图几何中心坐标（0.44, 0.27, 0）
                'Dim Sheet1 As SldWorks.Sheet '图纸对象
                'Dim SheetPr() As Double
                'Draw = swapp.ActiveDoc
                'Sheet1 = Draw.GetCurrentSheet()
                'SheetPr = Sheet1.GetProperties2()
                'SheetPr(2) = 1
                'SheetPr(3) = 3
                'SheetPr(4) = 1
                'Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                'Draw.EditRebuild()
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*左视", 0.45, 0.27, 0)
                part.SetupSheet5("图纸1", 12, 12, 1, 1.5, True, "v:\updated cs\a2 - gb.slddrt", 0.594, 0.42, "默认", False)
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'part.DrawingViewRotate(pi / 2) '旋转视图
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ViewDisplayHidden
                myViewname = myView.Name

                Debug.Print(myViewname)
                'myView = Draw.CreateUnfoldedViewAt3(0.3, 0.19, 0, False)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.545, 0.06, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView 'A2
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    count = View.GetNoteCount()
                    If count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 484 / 1000 And Annpos(0) < 534 / 1000 And Annpos(1) > 48 / 1000 And Annpos(1) < 66 / 1000 Then
                                N1.SetText(" ")
                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 48 / 1000 And Annpos(1) < 66 / 1000 Then
                                N1.SetText("江西兰叶科技有限公司")
                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 28 / 1000 And Annpos(1) < 48 / 1000 Then
                                N1.SetText("LY-W8-64.d发电机")
                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 19 / 1000 And Annpos(1) < 28 / 1000 Then
                                N1.SetText("LY25.026")
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 400 / 1000 And Annpos(1) < 410 / 1000 Then
                                N1.SetText("LY25.026")
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()

                part = swapp.ActiveDoc
                part.FontPoints(18)
                myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                "1.电动机应符合'Y2系列(IP54)三相异步电动机技术条件'的规定；" + Chr(13) + Chr(10) +
                "2.轴承清洗，安装按'JDCB12三相异步电动机轴承清洗及安装技术条件'的规定；" + Chr(13) + Chr(10) +
                "3.电动机外表面(除轴伸、底脚平面外)喷电梯绿丙烯酸磁漆并应符合JDCB124-92；" + Chr(13) + Chr(10) +
                "  '中小型电机油漆涂饰技术条件’的规定；" + Chr(13) + Chr(10) +
                "4.轴伸表面防锈涂封用907防锈脂(冷冻型)；；" + Chr(13) + Chr(10) +
                "5.装配前轴承盖和转轴间的油槽内须充满中小型电机润滑脂；" + Chr(13) + Chr(10) +
                "6.铁心紧定螺钉孔处用灰色过氯乙烯腻子填平G03-7。"）
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.048, 0.125, 0)
                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图1")
                Dim line1, line2, line3, line4, line5, line6, line7 As SldWorks.SketchLine
                Dim p1, p2, p3, p4, p5, p6, p7, p8, p9 As SldWorks.SketchPoint
                line1 = part.SketchManager.CreateLine(0.06087, 0.112883, 0#, 0.06087, 0.051249, 0#)
                line2 = part.SketchManager.CreateLine(0.06087, 0.051249, 0#, -0.000083, 0.051249, 0#)
                line3 = part.SketchManager.CreateLine(-0.000083, 0.051249, 0#, -0.000083, -0.014131, 0#)
                line4 = part.SketchManager.CreateLine(-0.000083, -0.014131, 0#, 0.096284, -0.014131, 0#)
                line5 = part.SketchManager.CreateLine(0.096284, -0.014131, 0#, 0.096284, -0.090748, 0#)
                line6 = part.SketchManager.CreateLine(0.096284, -0.090748, 0#, 0.062232, -0.090748, 0#)
                line7 = part.SketchManager.CreateLine(0.062232, -0.090748, 0#, 0.062232, -0.111179, 0#)
                part.ClearSelection2(True)
                line1.GetEndPoint2().select2(False, Nothing)
                line2.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                line2.GetEndPoint2().select2(False, Nothing)
                line3.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                line3.GetEndPoint2().select2(False, Nothing)
                line4.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                line4.GetEndPoint2().select2(False, Nothing)
                line5.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                line5.GetEndPoint2().select2(False, Nothing)
                line6.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                line6.GetEndPoint2().select2(False, Nothing)
                line7.GetStartPoint2().select2(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False)
                part.ClearSelection2(True)
                Dim bool1, bool2, bool3, bool4, bool5, bool6, bool7 As Boolean
star:           bool1 = part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.489898762810239, 0.363223864111095, 0, False, 0, Nothing, 0)

                bool2 = part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.466970410621133, 0.334393163831959, -249.9325, True, 0, Nothing, 0)

                bool3 = part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0.450398433296333, 0.318729240059203, -249.9035, True, 0, Nothing, 0)

                bool4 = part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0.465608330293067, 0.290806593333856, -249.9035, True, 0, Nothing, 0)

                bool5 = part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0.513508155163378, 0.27854787038301, 0, True, 0, Nothing, 0)

                bool6 = part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0.505108659806973, 0.240636634585181, 0, True, 0, Nothing, 0)

                bool7 = part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0.491260843138305, 0.237685460539293, -249.9915, True, 0, Nothing, 0)


                'part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.489898762810239, 0.363223864111095, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.466970410621133, 0.334393163831959, -249.9325, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0.450398433296333, 0.318729240059203, -249.9035, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0.465608330293067, 0.290806593333856, -249.9035, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0.513508155163378, 0.27854787038301, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0.505108659806973, 0.240636634585181, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0.491260843138305, 0.237685460539293, -249.9915, True, 0, Nothing, 0)
                'star:   bool = sgmt1.SelectChain(True, Nothing)

                If bool1 = True And bool2 = True And bool3 = True And bool4 = True And bool5 = True And bool6 = True And bool7 = True Then
                    part.CreateSectionViewAt5(0.192584994786461, 0.28, 0, "A", 128, Nothing, 0)
                Else
                    GoTo star
                End If


                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                'Dim edgel As SldWorks.Edge
                'Dim vComponents() As Object
                'Dim vComponents1() As Object
                'Dim vCompCount As Integer
                'Dim vEdges() As Object
                'Dim i As Integer
                'Dim name1 As String = "机座"
                'Dim name2 As String = "法兰2-1"
                'Dim name1_value As Integer = 1
                'Dim name2_value As Integer = 1
                'part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'View = selecmag.GetSelectedObject6(1, -1)
                'vComponents = View.GetVisibleComponents() '获得可视组件集合
                'vCompCount = View.GetVisibleComponentCount
                'Dim vCompCount0 As Integer
                'vCompCount0 = vCompCount
                ''获得需要组件的序号
                'i = 0
                'Do Until i > vCompCount - 1
                '    If IIf(InStr(1, vComponents(i).Name2, name1, vbTextCompare) > 0, True, False) Then
                '        name1_value = i
                '        i += 1
                '    End If
                'Loop
                'Do Until vCompCount = 0
                '    vComponents1 = View.GetVisibleComponents() '获得可视组件集合
                '    vCompCount = View.GetVisibleComponentCount
                '    i = 0
                '    Do Until i > vCompCount - 1
                '        part.Extension.SelectByID2(vComponents1(i).GetSelectByIDString(), "COMPONENT", 0, 0, 0, True, 0, Nothing, 0)
                '        i += 1
                '    Loop
                '    part.HideComponent2()
                '    part.ClearSelection2(True)
                'Loop

                'part.Extension.SelectByID2(vComponents(name1_value).GetSelectByIDString(), "COMPONENT", 0, 0, 0, True, 0, Nothing, 0)

                'part.ShowComponent2()
                'vEdges = View.GetVisibleEntities2(vComponents(name1_value), 1) '获得特定可视实体集合

                'selecmag.AddSelectionListObject(vEdges(2), Nothing)
                'edgel = vEdges(2)
                'Displaydimention = part.AddDimension2(0.0499029166666663, 0.270907975770637, 0)
                'part.Extension.EditDimensionProperties(2, -0.00005, -0.00009, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", "", False, 1, "")
                'Displaydimention.ShowTolParenthesis = True '显示括号
                'part.ClearSelection2(True)



                'part.Extension.SelectByID2(vComponents(name1_value).GetSelectByIDString(), "COMPONENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.HideComponent2()
                'part.Extension.SelectByID2(vComponents(name2_value).GetSelectByIDString(), "COMPONENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.ShowComponent2()
                'vEdges = View.GetVisibleEntities2(vComponents(name2_value), 1)


                'i = 0
                'Do Until i > vCompCount0 - 1
                '    part.Extension.SelectByID2(vComponents(i).GetSelectByIDString(), "COMPONENT", 0, 0, 0, True, 0, Nothing, 0)
                '    i += 1
                'Loop
                'part.ShowComponent2()
                'part.ClearSelection2(True)


                part.ActivateSheet("图纸1")
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图2")
                Dim swActiveView As SldWorks.View
                swActiveView = part.ActiveDrawingView
                Dim swBOMTable As SldWorks.TableAnnotation
                Dim swBOMTable1 As SldWorks.TableAnnotation
                Dim swBOMTable2 As SldWorks.TableAnnotation
                Dim width As Double
                Dim height As Double
                swBOMTable = swActiveView.InsertBomTable4(True, 0, 0, 1, 1, "默认", "C:\Program Files\SOLIDWORKS Corp\SOLIDWORKS\lang\chinese-simplified\bom-standard.sldbomtbt", False, 0, False) '插入BOM表

                swBOMTable.Anchored = False

                swBOMTable.SetHeader(2, 4)

                'swBOMTable.SetColumnType3(1, 204, False, "名称") '从0开始计算列数

                swBOMTable.SetColumnType3(2, 204, False, "材料")

                swBOMTable.AnchorType = 4

                swBOMTable.InsertColumn2(3, 0, "代号", 0) '插入一列，名叫代号

                swBOMTable.SetColumnType3(1, 204, False, "代号")

                swBOMTable.InsertColumn2(3, 4, "单件", 2)

                swBOMTable.InsertColumn2(3, 5, "总计", 0)

                swBOMTable.InsertColumn2(3, 6, "备注", 0)


                width = swBOMTable.GetColumnWidth(0)
                swBOMTable.SetColumnWidth(0, width / 2, 0)
                width = swBOMTable.GetColumnWidth(1)
                swBOMTable.SetColumnWidth(1, width * 3 / 2, 1）
                width = swBOMTable.GetColumnWidth(2)
                swBOMTable.SetColumnWidth(2, width * 8 / 7, 0）
                width = swBOMTable.GetColumnWidth(3)
                swBOMTable.SetColumnWidth(3, width / 2, 0）
                width = swBOMTable.GetColumnWidth(4)
                swBOMTable.SetColumnWidth(4, width / 2, 0）
                width = swBOMTable.GetColumnWidth(7)
                swBOMTable.SetColumnWidth(7, width * 2, 0）
                'swBOMTable.Text2(7, 0, False) = "序号"
                swBOMTable1 = swBOMTable.Split(1, 15）

                Dim oldTableAnchor As SldWorks.TableAnchor
                Dim BOMTableAnchor As SldWorks.TableAnchor
                part = Draw
                part.Extension.SelectByID2(Sheet1.GetName(), "SHEET", 0, 0, 0, False, 0, Nothing, 0)
                Draw.EditTemplate()
                part.EditSketch()
                Dim skPoint As SldWorks.SketchPoint
                skPoint = part.SketchManager.CreatePoint(1.212 / 3, 0.03 / 3, 0#)
                skPoint.Select4(False, Nothing)
                'oldTableAnchor = Sheet1.TableAnchor(2)
                BOMTableAnchor = Sheet1.SetAsTableAnchor(2)
                swBOMTable.AnchorType = 4
                swBOMTable.Anchored = True
                swBOMTable.Anchored = False
                'swBOMTable2 = swBOMTable.Split(1, 10)
                'skPoint = part.SketchManager.CreatePoint(0.669422 / 3, 0.03 / 3, 0#)
                'skPoint.Select4(False, Nothing)
                ''oldTableAnchor = Sheet1.TableAnchor(2)
                'BOMTableAnchor = Sheet1.SetAsTableAnchor(2)
                'swBOMTable.AnchorType = 4
                'swBOMTable.Anchored = True
                'swBOMTable.Anchored = False
                'MsgBox(1)
                Draw.EditSheet()
                part.EditSketch()
                part.ForceRebuild3(True)



                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                Dim vNotes As Object
                Dim autoballoonParams As Object
                autoballoonParams = part.CreateAutoBalloonOptions()
                autoballoonParams.Layout = 1
                autoballoonParams.ReverseDirection = False
                autoballoonParams.IgnoreMultiple = True
                autoballoonParams.InsertMagneticLine = True
                autoballoonParams.LeaderAttachmentToFaces = False
                autoballoonParams.Style = 10
                autoballoonParams.Size = 2
                autoballoonParams.EditBalloonOption = 1
                autoballoonParams.EditBalloons = 1
                autoballoonParams.UpperTextContent = 1
                autoballoonParams.UpperText = """"
                autoballoonParams.Layername = "10"
                autoballoonParams.ItemNumberStart = 1
                autoballoonParams.ItemNumberIncrement = 1
                autoballoonParams.ItemOrder = 0
                vNotes = part.AutoBalloon5(autoballoonParams)
                part.ClearSelection2(True)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.400477162274265, 0.350074349094495, 0, False, 0, Nothing, 0)

                autoballoonParams = part.CreateAutoBalloonOptions()
                autoballoonParams.Layout = 1
                autoballoonParams.ReverseDirection = False
                autoballoonParams.IgnoreMultiple = True
                autoballoonParams.InsertMagneticLine = True
                autoballoonParams.LeaderAttachmentToFaces = False
                autoballoonParams.Style = 10
                autoballoonParams.Size = 2
                autoballoonParams.EditBalloonOption = 1
                autoballoonParams.EditBalloons = 1
                autoballoonParams.UpperTextContent = 1
                autoballoonParams.UpperText = """"
                autoballoonParams.Layername = "10"
                vNotes = part.AutoBalloon5(autoballoonParams)
                part.ClearSelection2(True)
                'Dim note As SldWorks.Note
                part.ActivateView("工程图视图2")


                line1 = part.SketchManager.CreateLine(-0.051559, -0.1015, 0, -0.051559, -0.096, 0)
                line2 = part.SketchManager.CreateLine(0.048441, -0.1015, 0, 0.048441, -0.096, 0)
                line1.Select2(False, Nothing)
                line2.Select2(True, Nothing)
                Displaydimention = part.AddDimension2(0.192, 0.205, 0)
                Displaydimention.CenterText = True
                part.Extension.SelectByRay(0.146660263274698, 0.211012762614381, -249.945625025, 0, 0, -1, 0.000360098549364213, 1, False, 0, 0)
                part.Extension.SelectByRay(0.236684900615751, 0.210800939938284, -249.945625025, 0, 0, -1, 0.000360098549364213, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.191991276166287, 0.199333333333333, 0)
                Displaydimention.CenterText = True

                part.Extension.SelectByRay(0.0972359983255199, 0.263608850762729, -249.991250848819, 0, 0, -1, 0.000600125838428422, 1, False, 0, 0)
                part.Extension.SelectByRay(0.124141743067739, 0.266329704458777, -249.991108545203, 0, 0, -1, 0.000155160878656536, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.11160894511332, 0.205, 0)
                part.EditDimensionProperties2(4, 0.00031, 0, "", "", False, 2, 2, True, 12, 12, "", "", True, "", "", False)
                Displaydimention.CenterText = True

                part.Extension.SelectByRay(0.124199577094076, 0.259958527342758, -249.990295950318, 0, 0, -1, 0.000120893803855952, 1, False, 0, 0)
                part.Extension.SelectByRay(0.148332806493013, 0.211178282305764, -249.945625025, 0, 0, -1, 0.000301850999341934, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.137590462104668, 0.205, 0)
                part.EditDimensionProperties2(4, 0.0015, 0, "", "", False, 2, 2, True, 12, 12, "", "", True, "", "", False)
                Displaydimention.CenterText = True
                part.ClearSelection2(True)
                Dim Dimension As SldWorks.Dimension
                part.Extension.SelectByRay(0.287406388084909, 0.302606936551369, -249.999208025, 0, 0, -1, 0.000190119277617675, 1, False, 0, 0)
                part.Extension.SelectByRay(0.0971703150253767, 0.263025501291306, -249.991143152735, 0, 0, -1, 0.000855250388189916, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.191545661453128, 0.187333333333333, 0)
                Displaydimention.CenterText = True
                Dimension = Displaydimention.GetDimension2(0)
                Dimension.SetArcEndCondition(1, 3)
                part.ActivateView("工程图视图1")
                line1 = part.SketchManager.CreateCenterLine(0, 0.12, 0, 0, -0.12, 0)
                line2 = part.SketchManager.CreateCenterLine(-0.093, -0.026, 0, 0.093, -0.026, 0)
                line3 = part.SketchManager.CreateCenterLine(-0.0625, -0.0938, 0#, -0.0625, -0.1032, 0#)
                line4 = part.SketchManager.CreateCenterLine(0.0625, -0.0938, 0#, 0.0625, -0.1032, 0#)
                part.ClearSelection2(True)
                part.Extension.SelectByRay(0.401403057346995, 0.216141192851888, -249.9335, 0, 0, -1, 0.000286155738698242, 1, False, 0, 0)
                part.Extension.SelectByRay(0.400056442106062, 0.209492280099781, -249.931, 0, 0, -1, 0.000286155738698242, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.390461808514415, 0.213027145108975, 0)
                Displaydimention.CenterText = True

                line2.Select2(False, Nothing)
                part.Extension.SelectByRay(0.399886487830168, 0.209655246047178, -249.931, 0, 0, -1, 0.000681167456362509, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.382055927943032, 0.221475504850508, 0)
                Displaydimention.CenterText = True
                part.Extension.SelectByRay(0.431011032345066, 0.350624053201616, -249.924499930638, 0, 0, -1, 0.00117705736459442, 1, False, 0, 0)
                part.Extension.SelectByRay(0.40089221154515, 0.210069556135342, -249.931, 0, 0, -1, 0.00117705736459442, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.369, 0.26646669755202, 0)
                Displaydimention.CenterText = True
                part.Extension.SelectByRay(0.397958134945456, 0.268064040168019, -249.940465537827, 0, 0, -1, 0.000467723744116139, 1, False, 0, 0)
                part.Extension.SelectByRay(0.501957885107751, 0.268751869203484, -249.940382084617, 0, 0, -1, 0.000467723744116139, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.424, 0.360666666666667, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 0, 2, True, 12, 12, "", "", True, "", "", True)
                Displaydimention.CenterText = True
                Dimension = Displaydimention.GetDimension2(0)
                Dimension.SetArcEndCondition(1, 3)
                Dimension.SetArcEndCondition(2, 3)
                line1.Select2(False, Nothing)
                line3.Select2(True, Nothing)
                Displaydimention = part.AddDimension2(0.430881939366795, 0.201793816866196, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 2, 2, True, 12, 12, "", "", True, "", "", False)
                Displaydimention.CenterText = True
                line4.Select2(False, Nothing)
                line3.Select2(True, Nothing)
                Displaydimention = part.AddDimension2(0.45, 0.193333333333333, 0)
                Displaydimention.CenterText = True
                part.Extension.SelectByRay(0.396972698353223, 0.212998911885548, -249.9335, 0, 0, -1, 0.000728830150338352, 1, False, 0, 0)
                part.Extension.SelectByRay(0.503510517387976, 0.212784550076625, -249.9335, 0, 0, -1, 0.000728830150338352, 1, True, 0, 0)
                Displaydimention = part.AddDimension2(0.45, 0.187333333333333, 0)
                Displaydimention.CenterText = True
                part.SaveAs3(dz1 + dz3, 0, 8)
                MsgBox(1)
                swapp.ExitApp()
            End Sub
        End Class
        Public Class 定子
            Public Sub 机座()
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\机座.SLDPRT"
                Dim dz3 As String = "\机座.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                Dim dimensi As SldWorks.DisplayDimension
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")

                'swapp.OpenDoc("E:\works\generator_parts_library\Y2_80\机座.SLDPRT", 1)

                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                Dim Title As String
                Title = part.GetTitle
                Dim pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from house", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("Code") = "8MJ.043.895"
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim scale_m As Double = dr("scale_m")
                Dim scale_d As Double = dr("scale_d")
                Dim A_out_fillet_radius As Double = dr("A_out_fillet_radius") / 1000
                Dim A_inside_fillet_radius As Double = dr("A_inside_fillet_radius") / 1000
                Dim A_hole_edge_hor_dis As Double = dr("A_hole_edge_hor_dis") / 1000
                Dim A_holeandedge_verdistance As Double = dr("A_holeandedge_verdistance") / 1000
                Dim A_holeandhole_hordistance As Double = dr("A_holeandhole_hordistance") / 1000
                Dim A_outRectangle_distance As Double = dr("A_outRectangle_distance") / 1000
                Dim A_fillettransition_distance As Double = dr("A_fillettransition_distance") / 1000
                Dim A_left_hordistance1 As Double = dr("A_left_hordistance1") / 1000
                Dim A_left_hordistance2 As Double = dr("A_left_hordistance2") / 1000
                Dim A_left_hordistance3 As Double = dr("A_left_hordistance3") / 1000
                Dim A_fillet_verdistance As Double = dr("A_fillet_verdistance") / 1000
                Dim A_mid_holeandedge2_hordistance As Double = dr("A_mid_holeandedge2_hordistance") / 1000
                Dim A_mid_holeandedge2_verdistance As Double = dr("A_mid_holeandedge2_verdistance") / 1000
                Dim A_left_top_right_under_holeandhole_distance As Double = dr("A_left_top_right_under_holeandhole_distance") / 1000
                Dim A_mid_hollow_hordistance As Double = dr("A_mid_hollow_hordistance") / 1000
                Dim A_mid_holeandhole_distance As Double = dr("A_mid_holeandhole_distance") / 1000
                Dim A_mid_raised_hordistance As Double = dr("A_mid_raised_hordistance") / 1000
                Dim A_mid_raised_verdistance As Double = dr("A_mid_raised_verdistance") / 1000
                Dim A_heat_sink_left_hordistance As Double = dr("A_heat_sink_left_hordistance") / 1000
                Dim A_heat_sink_verdistance As Double = dr("A_heat_sink_verdistance") / 1000
                Dim A_heat_sink_outdistance As Double = dr("A_heat_sink_outdistance") / 1000
                Dim A_heat_sink_right_hordistance As Double = dr("A_heat_sink_right_hordistance") / 1000
                Dim A_heat_sink_right_edge_distance As Double = dr("A_heat_sink_right_edge_distance") / 1000
                Dim B_left_hordistance As Double = dr("B_left_hordistance") / 1000
                Dim B_inside_holeandedge_hordistance As Double = dr("B_inside_holeandedge_hordistance") / 1000
                Dim B_holeandhole_distance As Double = dr("B_holeandhole_distance") / 1000
                Dim C_top_hordis1 As Double = dr("C_top_hordis1") / 1000
                Dim C_top_hordis2 As Double = dr("C_top_hordis2") / 1000
                Dim C_top_hordis3 As Double = dr("C_top_hordis3") / 1000
                Dim C_top_hordis4 As Double = dr("C_top_hordis4") / 1000
                Dim C_top_hordis5 As Double = dr("C_top_hordis5") / 1000
                Dim C_top_verdis1 As Double = dr("C_top_verdis1") / 1000
                Dim C_top_verdis2 As Double = dr("C_top_verdis2") / 1000
                Dim C_top_verdis3 As Double = dr("C_top_verdis3") / 1000
                Dim C_mid_hordis1 As Double = dr("C_mid_hordis1") / 1000
                Dim C_mid_hordis2 As Double = dr("C_mid_hordis2") / 1000
                Dim C_mid_hordis3 As Double = dr("C_mid_hordis3") / 1000
                Dim C_diameter1 As Double = dr("C_diameter1") / 1000
                Dim C_diameter2 As Double = dr("C_diameter2") / 1000
                Dim C_diameter3 As Double = dr("C_diameter3") / 1000
                Dim C_mid_verdis As Double = dr("C_mid_verdis") / 1000
                Dim C_under_hordis1 As Double = dr("C_under_hordis1") / 1000
                Dim C_under_hordis2 As Double = dr("C_under_hordis2") / 1000
                Dim C_under_hordis3 As Double = dr("C_under_hordis3") / 1000
                Dim C_under_hordis4 As Double = dr("C_under_hordis4") / 1000
                Dim C_under_hordis5 As Double = dr("C_under_hordis5") / 1000
                Dim C_under_hordis6 As Double = dr("C_under_hordis6") / 1000
                Dim C_under_hordis7 As Double = dr("C_under_hordis7") / 1000
                Dim C_under_verdis1 As Double = dr("C_under_verdis1") / 1000
                Dim C_under_fillet_radius As Double = dr("C_under_fillet_radius") / 1000
                Dim D_top_hordis1 As Double = dr("D_top_hordis1") / 1000
                Dim D_top_verdis1 As Double = dr("D_top_verdis1") / 1000
                Dim D_top_angle1 As Double = dr("D_top_angle1")
                Dim D_fillet_radius As Double = dr("D_fillet_radius") / 1000
                Dim D_top_hordis2 As Double = dr("D_top_hordis2") / 1000
                Dim D_top_verdis2 As Double = dr("D_top_verdis2") / 1000
                Dim D_top_angle2 As Double = dr("D_top_angle2")
                Dim D_top_hordis3 As Double = dr("D_top_hordis3") / 1000
                Dim D_top_verdis3 As Double = dr("D_top_verdis3") / 1000
                Dim D_top_angle3 As Double = dr("D_top_angle3")
                Dim D_left_hordis1 As Double = dr("D_left_hordis1") / 1000
                Dim D_left_verdis1 As Double = dr("D_left_verdis1") / 1000
                Dim D_left_angle1 As Double = dr("D_left_angle1")
                Dim D_left_hordis2 As Double = dr("D_left_hordis2") / 1000
                Dim D_left_verdis2 As Double = dr("D_left_verdis2") / 1000
                Dim D_left_angle2 As Double = dr("D_left_angle2")
                Dim D_left_hordis3 As Double = dr("D_left_hordis3") / 1000
                Dim D_left_verdis3 As Double = dr("D_left_verdis3") / 1000
                Dim D_left_angle3 As Double = dr("D_left_angle3")
                Dim D_left_hordis4 As Double = dr("D_left_hordis4") / 1000
                Dim D_left_verdis4 As Double = dr("D_left_verdis4") / 1000
                Dim D_left_angle4 As Double = dr("D_left_angle4")
                Dim D_left_hordis5 As Double = dr("D_left_hordis5") / 1000
                Dim D_left_verdis5 As Double = dr("D_left_verdis5") / 1000
                Dim D_left_angle5 As Double = dr("D_left_angle5")
                Dim D_left_hordis6 As Double = dr("D_left_hordis6") / 1000
                Dim D_left_verdis6 As Double = dr("D_left_verdis6") / 1000
                Dim D_left_angle6 As Double = dr("D_left_angle6")
                Dim D_left_hordis7 As Double = dr("D_left_hordis7") / 1000
                Dim D_left_verdis7 As Double = dr("D_left_verdis7") / 1000
                Dim D_left_angle7 As Double = dr("D_left_angle7")
                Dim D_left_hordis8 As Double = dr("D_left_hordis8") / 1000
                Dim D_left_verdis8 As Double = dr("D_left_verdis8") / 1000
                Dim D_left_angle8 As Double = dr("D_left_angle8")
                Dim D_under_verdis1 As Double = dr("D_under_verdis1") / 1000
                Dim D_under_angle1 As Double = dr("D_under_angle1")
                Dim D_under_hordis2 As Double = dr("D_under_hordis2") / 1000
                Dim D_under_verdis2 As Double = dr("D_under_verdis2") / 1000
                Dim D_under_angle2 As Double = dr("D_under_angle2")
                Dim D_under_hordis3 As Double = dr("D_under_hordis3") / 1000
                Dim D_under_verdis3 As Double = dr("D_under_verdis3") / 1000
                Dim D_under_angle3 As Double = dr("D_under_angle3")
                Dim D_under_hordis4 As Double = dr("D_under_hordis4") / 1000
                Dim D_under_verdis4 As Double = dr("D_under_verdis4") / 1000
                Dim D_under_angle4 As Double = dr("D_under_angle4")
                Dim D_cover_radius1 As Double = dr("D_cover_radius1") / 1000
                Dim D_cover_diameter2 As Double = dr("D_cover_diameter2") / 1000
                Dim D_cover_hole_diameter As Double = dr("D_cover_hole_diameter") / 1000
                Dim D_cover_hordis As Double = dr("D_cover_hordis") / 1000
                Dim D_cover_angle As Double = dr("D_cover_angle")
                Dim D_box_hordis As Double = dr("D_box_hordis") / 1000
                Dim D_box_angle As Double = dr("D_box_angle")
                Dim D_foot_edge_hordis As Double = dr("D_foot_edge_hordis") / 1000
                Dim D_foot_edge_verdis As Double = dr("D_foot_edge_verdis") / 1000
                Dim D_foot_hordis As Double = dr("D_foot_hordis") / 1000
                Dim D_foot_verdis As Double = dr("D_foot_verdis") / 1000
                Dim D_foot_groove_hordis As Double = dr("D_foot_groove_hordis") / 1000
                Dim D_foot_groove_verdis As Double = dr("D_foot_groove_verdis") / 1000
                Dim D_foot_fillet_radius1 As Double = dr("D_foot_fillet_radius1") / 1000
                Dim D_foot_fillet_radius2 As Double = dr("D_foot_fillet_radius2") / 1000
                Dim D_foot_fillet_radius3 As Double = dr("D_foot_fillet_radius3") / 1000
                Dim D_foot_hole_diameter As Double = dr("D_foot_hole_diameter") / 1000
                Dim C_top_hordisall As Double = dr("C_top_hordisall") / 1000
                Dim D_out_inside_radius As Double = dr("D_out_inside_radius") / 1000
                Dim heat_sink_length As Double = dr("heat_sink_length") / 1000
                Dim C_cover_outside As Double = dr("C_cover_outside") / 1000
                Dim D_foot_leg1_hordis As Double = dr("D_foot_leg1_hordis") / 1000
                Dim D_foot_leg1_verdis As Double = dr("D_foot_leg1_verdis") / 1000
                Dim D_foot_leg2_hordis As Double = dr("D_foot_leg2_hordis") / 1000
                Dim D_foot_leg2_verdis As Double = dr("D_foot_leg2_verdis") / 1000
                Dim D_foot_hordistance As Double = dr("D_foot_hordistance") / 1000

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter1 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter3 / 2)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, C_top_hordisall, C_top_hordisall, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)


                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter1 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter2 / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, C_mid_hordis2, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter3 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, D_out_inside_radius)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, C_top_hordisall, C_top_hordisall, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter3 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, C_diameter2 / 2)
                Featmgr.FeatureCut4(True, False, True, 0, 0, C_mid_hordis1, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, C_top_hordisall / 2, 0, 0, 0, 0)
                part.ClearSelection2(True)

                Dim feature As SldWorks.Feature
                Dim vface1 As Object
                Dim vface2 As Object
                Dim vface3 As Object
                Dim vface4 As Object
                Dim edge1() As Object
                Dim edge2() As Object
                Dim edge3() As Object
                Dim edge4() As Object
                Dim face1() As Object
                Dim face2() As Object
                Dim face3() As Object
                Dim count As Integer



                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_left_verdis1, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_left_verdis1, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) '成形到下一面

                part.Extension.SelectByID2("凸台-拉伸3", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                count = feature.GetFaceCount()
                count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                'count = vface1.GetEdgeCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(edge4(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis1, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis1, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis1, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis1 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图6", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                Dim swFeatData As Object
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)

                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis1, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis1 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图7", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("凸台-拉伸3", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle1 * pi / 180, False, False, 0, False, False) '拔模

                'selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角



                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_left_verdis2, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_left_verdis2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸4", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis2, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis2, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis2, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis2 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图9", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis2, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis2 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图10", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸4", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle2 * pi / 180, False, False, 0, False, False) '拔模

                'selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角



                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面4", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_left_verdis3, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_left_verdis3, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸5", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis3, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis3, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis3, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis3 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图12", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis3, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis3 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图13", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸5", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle3 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角




                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis4, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面5", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_left_verdis4, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_left_verdis4, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸6", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis4, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis4, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis4, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis4 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图15", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis4, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis4, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis4, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis4 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图16", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸6", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle4 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis5, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面6", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_left_verdis5, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_left_verdis5, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸7", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis5, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis5, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis5, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis5 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图18", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis5, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis5, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis5, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis5 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图19", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸7", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle5 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis6, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面7", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, -D_left_verdis6, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 - D_left_verdis6, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸8", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis6, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis6, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis6, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis6 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图21", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis6, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis6, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis6, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis6 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图22", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸8", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle6 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis7, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面8", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, -D_left_verdis7, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 - D_left_verdis7, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸9", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis7, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis7, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis7, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis7 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图24", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis7, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis7, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis7, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis7 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图25", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸9", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle7 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_left_hordis8, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面9", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, -D_left_verdis8, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 - D_left_verdis8, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸10", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_left_hordis8, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis8, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis8, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_left_hordis8 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图27", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_left_hordis8, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis8, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis8, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_left_hordis8 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图28", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("凸台-拉伸10", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_left_angle8 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角




                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_verdis1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面10", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, 0, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸11", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(3), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(A_heat_sink_right_edge_distance, -D_under_verdis1, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_under_verdis1, 0)
                sketcher.CreateLine(A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_under_verdis1, 0, A_heat_sink_right_edge_distance + A_heat_sink_right_hordistance, -D_under_verdis1 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图30", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, A_heat_sink_verdistance / 2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面11", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_under_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis1, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis1 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图31", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸11", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_under_angle1 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge4(0), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.0025, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角




                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_verdis2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面12", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_under_hordis2, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_under_hordis2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸12", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(3), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)
                count = vface1.GetEdgeCount()
                count = 0


                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(3), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance, -D_under_verdis2, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2, 0)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2 + 0.012, 0)

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_hordis2 + A_heat_sink_verdistance / 2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面13", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_under_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis2 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸12", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face2(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_under_angle2 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge4(0), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.0025, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角


                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_verdis3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面14", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_under_hordis3, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_under_hordis3, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸13", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(3), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)
                count = vface1.GetEdgeCount()
                count = 0


                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(3), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance, -D_under_verdis3, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3, 0)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3 + 0.012, 0)

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_hordis3 + A_heat_sink_verdistance / 2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面15", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_under_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis3 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸13", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face2(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_under_angle3 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge4(0), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.0025, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角



                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_verdis4, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面16", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall / 2, D_under_hordis4, 0, heat_sink_length / 2 + C_top_hordisall / 2, A_heat_sink_verdistance / 2 + D_under_hordis4, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸14", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(3), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)
                count = vface1.GetEdgeCount()
                count = 0


                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(3), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance, -D_under_verdis4, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4, 0)
                sketcher.CreateLine(-A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4, 0, -A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4 + 0.012, 0)

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, D_under_hordis4 + A_heat_sink_verdistance / 2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面17", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, -D_under_verdis4, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, -D_under_verdis4 + 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(0), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸14", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_under_angle4 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge4(0), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.0025, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角


                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_top_verdis1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面18", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall - A_heat_sink_outdistance / 2 - A_heat_sink_right_edge_distance, D_top_hordis1, 0, C_top_hordisall - A_heat_sink_outdistance - A_heat_sink_right_edge_distance, A_heat_sink_verdistance / 2 + D_top_hordis1, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸15", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)



                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)
                'count = vface1.GetEdgeCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(edge4(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop


                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, D_top_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis1, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis1 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, -A_heat_sink_verdistance / 2 + D_top_hordis1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面19", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance, D_top_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis1, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis1, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis1 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸15", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_top_angle1 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角


                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_top_verdis2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面20", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall - A_heat_sink_outdistance / 2 - A_heat_sink_right_edge_distance, D_top_hordis2, 0, C_top_hordisall - A_heat_sink_outdistance - A_heat_sink_right_edge_distance, A_heat_sink_verdistance / 2 + D_top_hordis2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸16", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(3), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)
                'count = vface1.GetEdgeCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(edge4(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, D_top_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis2, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis2 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, -A_heat_sink_verdistance / 2 + D_top_hordis2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面21", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance, D_top_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis2, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis2, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis2 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸16", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_top_angle2 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角


                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, D_top_verdis3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面22", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(C_top_hordisall - A_heat_sink_outdistance / 2 - A_heat_sink_right_edge_distance, D_top_hordis3, 0, C_top_hordisall - A_heat_sink_outdistance - A_heat_sink_right_edge_distance, A_heat_sink_verdistance / 2 + D_top_hordis3, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸17", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(0), Nothing)
                vface4 = selecmag.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                sketcher.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance, D_top_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis3, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_right_hordistance, D_top_verdis3 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, -A_heat_sink_verdistance / 2 + D_top_hordis3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面23", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance, D_top_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis3, 0)
                sketcher.CreateLine(C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis3, 0, C_top_hordisall - A_heat_sink_right_edge_distance - A_heat_sink_outdistance + A_heat_sink_left_hordistance, D_top_verdis3 - 0.012, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS") '合并
                sketcher.InsertSketch(True)

                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(edge3(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 4, 0) '标记
                selecmag.AddSelectionListObject(edge3(1), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmSweepCut)
                swFeatData.MergeSmoothFaces = True
                Featmgr.CreateFeature(swFeatData) '扫描切除
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸17", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_top_angle3 * pi / 180, False, False, 0, False, False) '拔模

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge4(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_fillet_radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face2(1), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(face2(0), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(face2(2), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0) '完整圆角


                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, D_cover_radius1)

                sketcher.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                sketcher.CreateLine(0.002, 0.073, 0, 0.008, 0.068, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", -0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0, 0.078, 0.00037)
                part.Parameter("D1@草图50").SystemValue = D_cover_hordis
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0, 0.076, -0.00028)
                part.Parameter("D2@草图50").SystemValue = D_cover_angle * pi / 180
                sketcher.CreateCircleByRadius(0, 0, 0, D_out_inside_radius)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", -0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, D_cover_radius1, 0, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, D_out_inside_radius, 0, 0)
                Featmgr.FeatureExtrusion2(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                sketcher.InsertSketch(True)

                part.Extension.SelectByID2("凸台-拉伸18", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("草图51", "SKETCH", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr.FeatureCircularPattern5(3, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False)

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, C_cover_outside, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面24", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(A_left_hordistance1 + A_holeandhole_hordistance / 2 + A_hole_edge_hor_dis, 0, 0, A_left_hordistance1, A_holeandhole_hordistance / 2 + A_holeandedge_verdistance, 0)
                Featmgr.FeatureExtrusion2(True, False, True, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸19", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'count = feature.GetFaceCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop
                selecmag.AddSelectionListObject(face1(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)
                selecmag.AddSelectionListObject(face1(3), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(face1(4), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(D_box_angle * pi / 180, False, False, 0, False, False)

                part.Extension.SelectByID2("基准面24", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2, 0, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, 1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, A_left_hordistance1 + A_fillet_verdistance / 2 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0)

                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                sketcher.CreateCenterLine(A_left_hordistance1 + A_fillet_verdistance / 2 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, 0, 0, A_left_hordistance1 + A_fillet_verdistance / 2 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, 0.1, 0)

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)

                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)

                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, C_top_verdis3, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, C_cover_outside - C_top_verdis3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面25", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2, A_mid_raised_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, 1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2, A_mid_raised_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_mid_raised_verdistance / 2, 0)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_mid_raised_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0)
                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("基准面25", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2, 0, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0)

                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2, A_fillet_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance, A_fillet_verdistance / 2 + A_out_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, 1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0)
                sketcher.CreateArc(A_left_hordistance1 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance, 0, A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, -1)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius + A_out_fillet_radius, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0, A_outRectangle_distance + A_left_hordistance1 - A_left_hordistance2 - A_mid_hollow_hordistance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0)

                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                sketcher.CreateCenterLine(A_left_hordistance1 + A_fillet_verdistance / 2 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, 0, 0, A_left_hordistance1 + A_fillet_verdistance / 2 + A_out_fillet_radius + A_left_hordistance2 + A_out_fillet_radius + A_fillettransition_distance + A_inside_fillet_radius, 0.1, 0)

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_mid_raised_verdistance / 2, 0, A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_fillet_verdistance / 2 + A_out_fillet_radius + A_inside_fillet_radius + A_fillettransition_distance + A_out_fillet_radius, 0)
                sketcher.CreateLine(A_left_hordistance1 + A_left_hordistance2 + A_mid_hollow_hordistance, A_mid_raised_verdistance / 2, 0, A_mid_raised_hordistance + A_left_hordistance2 + A_left_hordistance1, A_mid_raised_verdistance / 2, 0)
                sketcher.CreateLine(A_mid_raised_hordistance + A_left_hordistance2 + A_left_hordistance1, A_mid_raised_verdistance / 2, 0, A_mid_raised_hordistance + A_left_hordistance2 + A_left_hordistance1, 0, 0)

                part.Extension.SelectByID2("Line15", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line16", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line17", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, -0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, -0, False, 0, Nothing, 0)
                part.EditDelete()

                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, C_top_verdis2, C_top_verdis2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("基准面24", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(A_left_hordistance1 + A_left_hordistance2 + A_left_hordistance3 / 2, 0, 0, A_left_hordistance1 + A_left_hordistance2 + A_left_hordistance3, A_mid_raised_verdistance / 2, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, C_top_verdis1, C_top_verdis1, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, C_under_hordis6, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面26", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(-D_foot_edge_hordis, -D_foot_edge_verdis, 0, -D_foot_edge_hordis - D_foot_hordis, -D_foot_edge_verdis + C_under_verdis1, 0)
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(D_foot_fillet_radius1, 1)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, C_under_hordis7, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, C_under_hordis1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面27", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(-D_foot_edge_hordis, -D_foot_edge_verdis, 0, -D_foot_edge_hordis - D_foot_hordis, -D_foot_edge_verdis + C_under_verdis1, 0)
                sketcher.CreateLine(-D_foot_leg1_hordis, -D_foot_leg1_verdis, 0, -D_foot_leg1_hordis, -D_foot_leg1_verdis - 0.01, 0)
                sketcher.CreateLine(-D_foot_leg2_hordis, -D_foot_leg2_verdis, 0, -D_foot_leg2_hordis, -D_foot_leg2_verdis - 0.01, 0)
                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", -0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgPARALLEL")
                sketcher.CreateCircleByRadius(0, 0, 0, D_out_inside_radius)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateTangentArc(-D_foot_leg1_hordis, -D_foot_leg1_verdis, 0, -D_foot_leg1_hordis - 0.003, -D_foot_leg1_verdis + 0.003, 0, -1)
                sketcher.CreateTangentArc(-D_foot_leg2_hordis, -D_foot_leg2_verdis, 0, -D_foot_leg2_hordis + 0.003, -D_foot_leg2_verdis + 0.003, 0, 1)
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Point13", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, -0, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -D_foot_hordis - D_foot_edge_hordis, -D_foot_edge_verdis + C_under_verdis1, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, D_out_inside_radius, 0, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(D_foot_fillet_radius1, 1)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, C_under_hordis2, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸20", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateLine(0, 0, 0, -0.02, 0, 0)
                sketcher.CreateCircleByRadius(0, 0, 0, D_box_hordis)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", -0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", -0, -0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, -0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, -0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge1(2), Nothing)
                part.AddDimension2(0.074, -0.066, 0.056)
                part.Parameter("D1@草图59").SystemValue = 60 * pi / 180
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                Featmgr.InsertRib(True, False, 0.014, 0, True, False, True, 0.0174532925199433, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("基准面25", "PLANE", A_left_hordistance1 + A_mid_holeandedge2_hordistance, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.HoleWizard5(2, 13, 357, "M5", 0, 0.0042, 0.0124, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2("基准面25", "PLANE", A_left_hordistance1 + A_mid_holeandedge2_hordistance + A_mid_holeandhole_distance, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.HoleWizard5(2, 13, 357, "M5", 0, 0.0042, 0.0124, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, D_cover_diameter2 / 2, 0, False, 0, Nothing, 0)
                part.FeatureManager.HoleWizard5(2, 13, 357, "M6", 0, 0.005, 0.021, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.InsertAxis2(True)
                part.Extension.SelectByID2("M6 螺纹孔的螺纹孔钻头1", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr.FeatureCircularPattern5(3, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False)
                part.Extension.SelectByID2("阵列(圆周)2", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                part.Extension.SelectByID2("凸台-拉伸20", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge1(4), Nothing)
                selecmag.AddSelectionListObject(edge2(4), Nothing)
                part.FeatureManager.FeatureFillet3(195, D_foot_fillet_radius1, D_foot_fillet_radius1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(2), Nothing)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(-D_foot_hordistance, -D_foot_edge_verdis + D_foot_groove_verdis / 2, 0, -D_foot_hordistance + D_foot_groove_hordis / 2, -D_foot_edge_verdis, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                selecmag.AddSelectionListObject(face1(6), Nothing)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(C_under_hordis4, -D_foot_hordistance, 0, D_foot_hole_diameter / 2)
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("切除-拉伸8", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("凸台-拉伸19", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing)
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge1(1), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.003, 0.003, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 2, Nothing, 0)
                part.Extension.SelectByID2("圆角32", "SOLIDBODY", 0, 0, 0, True, 256, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(True, False, True, False)

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(C_top_hordisall / 2, -D_under_hordis2 / 2, 0, 0.0025)
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("基准面24", "PLANE", A_left_hordistance1 + A_hole_edge_hor_dis, 0, A_holeandhole_hordistance / 2, False, 0, Nothing, 0)
                part.FeatureManager.HoleWizard5(2, 13, 357, "M5", 0, 0.0042, 0.0144, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2("基准面24", "PLANE", A_left_hordistance1 + A_hole_edge_hor_dis + A_holeandhole_hordistance, 0, A_holeandhole_hordistance / 2, False, 0, Nothing, 0)
                part.FeatureManager.HoleWizard5(2, 13, 357, "M5", 0, 0.0042, 0.0144, -1, 1, 2.05948851735331, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, "", False, True, True, True, True, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 2, Nothing, 0)
                part.Extension.SelectByID2("M5 螺纹孔的螺纹孔钻头3", "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("M5 螺纹孔的螺纹孔钻头4", "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                part.Extension.SelectByID2("凸台-拉伸19", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '2
                feature = selecmag.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                'count = feature.GetFaceCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(face1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                part.Extension.SelectByID2("凸台-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = selecmag.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)



                part.Extension.SelectByID2("切除-扫描1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = selecmag.GetSelectedObject6(1, -1)
                face3 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(4), Nothing) '0,1
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)

                count = 0
                Do Until count > edge1.Count - 1
                    selecmag.AddSelectionListObject(edge1(count), Nothing)
                    Debug.Print(count)
                    part.ClearSelection2(True)
                    count = count + 1
                Loop

                selecmag.AddSelectionListObject(face2(1), Nothing) '3
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)

                count = 0
                Do Until count > edge2.Count - 1
                    selecmag.AddSelectionListObject(edge2(count), Nothing)
                    Debug.Print(count)
                    part.ClearSelection2(True)
                    count = count + 1
                Loop


                selecmag.AddSelectionListObject(face3(0), Nothing) '2
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                count = 0
                Do Until count > edge3.Count - 1
                    selecmag.AddSelectionListObject(edge3(count), Nothing)
                    Debug.Print(count)
                    part.ClearSelection2(True)
                    count = count + 1
                Loop

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, 0.033, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面28", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                selecmag.AddSelectionListObject(edge1(1), Nothing)
                selecmag.AddSelectionListObject(edge2(3), Nothing)
                selecmag.AddSelectionListObject(edge3(2), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)

                sketcher.CreateLine(0, 0.01, 0, 0.031, 0.01, 0)

                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.033, 0.016, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", -0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Point12", "SKETCHPOINT", -0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", -0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.033, 0.0736, 0)
                part.Parameter("D2@草图73").SystemValue = 0.00581
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0.033, 0.0512372309952929, 0.0604575217162922, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0.033, 0.0774832327472042, 0.038132699939827, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0.033, 0.0612084984761885, 0.0272492149297999, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0.033, 0.0476134608354164, 0.0471376531795365, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, B_holeandhole_distance + B_inside_holeandedge_hordistance * 2, B_holeandhole_distance + B_inside_holeandedge_hordistance * 2, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("凸台-拉伸22", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = part.SelectionManager.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(face1(2), Nothing) '2
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)
                'count = vface1.GetEdgeCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(edge1(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop


                selecmag.AddSelectionListObject(face1(2), Nothing)
                sketcher.InsertSketch(True)

                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius(0.05, 0, 0, 0.001)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SelectMidpoint()
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgHORIZONTALPOINTS2D")

                part.AddDimension2(0.04, 0.06, 0)
                part.Parameter("D1@草图74").SystemValue = B_inside_holeandedge_hordistance
                sketcher.CreateCircleByRadius(0.1, 0, 0, 0.001)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgHORIZONTALPOINTS2D")
                part.AddDimension2(0.05, 0.057, 0)
                part.Parameter("D2@草图74").SystemValue = B_holeandhole_distance

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 0.005, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("凸台-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = part.SelectionManager.GetSelectedObject6(1, -1)
                face1 = feature.GetFaces()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸2", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = part.SelectionManager.GetSelectedObject6(1, -1)
                face2 = feature.GetFaces()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = part.SelectionManager.GetSelectedObject6(1, -1)
                face3 = feature.GetFaces()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(face1(1), Nothing) '15
                vface1 = selecmag.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face2(1), Nothing)
                vface2 = selecmag.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(face3(1), Nothing)
                vface3 = selecmag.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge1(15), Nothing)
                selecmag.AddSelectionListObject(edge2(1), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.001, 45 * pi / 180, 0, 0, 0, 0)
                selecmag.AddSelectionListObject(edge3(0), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.0005, 45 * pi / 180, 0, 0, 0, 0)

                Dim linez As SldWorks.SketchSegment
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                linez = sketcher.CreateLine(-0.005, 0, 0, 0.153, 0, 0)
                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("切除-拉伸2", "BODYFEATURE", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertMirrorFeature(False, False, False, False)

                part.Extension.SelectByRay(0.123990666970201, 0.00325056692652481, 0.0599007920940267, -0.763100928798278, -0.0295517735118182, 0.64560333421499, 0.000221736795030161, 1, False, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.0005, 0.78539816339745, 0, 0, 0, 0)
                part.Extension.SelectByRay(0.140990003769673, -0.00599763513726259, 0.0601901011676205, -0.763100928798278, -0.0295517735118182, 0.64560333421499, 0.000221736795030161, 1, False, 0, 0)
                part.Extension.SelectByRay(0.147915465257199, 0.00870899287866678, 0.0607775913596811, -0.763100928798278, -0.0295517735118182, 0.64560333421499, 0.000221736795030161, 1, True, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.001, 0.78539816339745, 0, 0, 0, 0)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()

                part.SaveAs3(dz1 + dz2, 0, 2)



                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydim As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a2.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*左视", 0.442, 0.168, 0)
                Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*上视", 0.178339363283363, 0.320538074379422, 0)
                part.ViewDisplayHidden
                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)


                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.5448, 0.06, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    count = View.GetNoteCount()
                    If count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 484 / 1000 And Annpos(0) < 534 / 1000 And Annpos(1) > 48 / 1000 And Annpos(1) < 66 / 1000 Then
                                N1.SetText(material)

                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 48 / 1000 And Annpos(1) < 66 / 1000 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 28 / 1000 And Annpos(1) < 48 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 534 / 1000 And Annpos(0) < 584 / 1000 And Annpos(1) > 19 / 1000 And Annpos(1) < 28 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 398 / 1000 And Annpos(1) < 410 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.ClearSelection2(True)

                myNote = part.InsertNote("技术要求"）

                myNote.GetAnnotation().SetPosition(0.17, 0.067, 0)

                part.Extension.SelectByID2("细节项目270@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                "1.止口内圆铁心档内圆的圆度公差为相应公差带的75%，但其平均直径仍应在公差带内。" + Chr(13) + Chr(10) +
                "2.机座内圆非配合面应涂H06-2铁红环氧酯底漆。" + Chr(13) + Chr(10) +
                "3.未注公差的线性尺寸的极限偏差按GB/T1804-m。" + Chr(13) + Chr(10) +
                "4.2-∅2可在总装配时与铭牌配钻。"）
                myNote.GetAnnotation().SetPosition(0.107, 0.057, 0)
                part.Extension.SelectByID2("细节项目271@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ClearSelection2(True)

                part = swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\机座.SLDPRT", 1, 0, "", 0, 0)
                Dim faces As Object
                part = swapp.ActiveDoc
                Dim myModelView As Object
                myModelView = part.ActiveView
                myModelView.FrameLeft = 0
                myModelView.FrameTop = 22
                myModelView = part.ActiveView
                myModelView.FrameState = swWindowState_e.swWindowMaximized
                swapp.ActivateDoc2（"机座", False, 0）
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("凸台-拉伸22", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '0
                feature = part.SelectionManager.GetSelectedObject6(1, -1)
                faces = feature.GetFaces()
                part.ClearSelection2(True)
                'count = feature.GetFaceCount()
                'count = 0
                'Do Until count > 100
                '    selecmag.AddSelectionListObject(faces(count), Nothing)
                '    MsgBox(count)
                '    part.ClearSelection2(True)
                '    count = count + 1
                'Loop


                selecmag.AddSelectionListObject(faces(2), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0)

                selecmag.AddSelectionListObject(faces(1), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)

                part = swapp.ActiveDoc
                myModelView = part.ActiveView
                myModelView.FrameLeft = 0
                myModelView.FrameTop = 22
                myModelView = part.ActiveView
                myModelView.FrameState = swWindowState_e.swWindowMaximized

                'DrawTitle = Draw.GetTitle
                swapp.ActivateDoc2（DrawTitle, False, 0）
                part = swapp.ActiveDoc

                part.CreateRelativeView("E:\works\generator_parts_library\Y2_80\机座.SLDPRT", 0.44149953772485, 0.320538074379422, 0, 1)
                part.ActivateView("工程图视图3")
                part.ViewDisplayHidden

                Dim pointArray As Object
                Dim points(0 To 41) As Double
                points(0) = -0.0836718892633588
                points(1) = 0.0277997196436354
                points(2) = 0
                points(3) = -0.0391091429823728
                points(4) = 0.0318508783964523
                points(5) = 0
                points(6) = 0.00849197236322585
                points(7) = 0.0288125093318397
                points(8) = 0
                points(9) = 0.0554178945833551
                points(10) = 0.0328636680846566
                points(11) = 0
                points(12) = 0.0834384092903387
                points(13) = 0.0277997196436354
                points(14) = 0
                points(15) = 0.0820880230393997
                points(16) = -0.00967349881992102
                points(17) = 0
                points(18) = 0.0655457914653974
                points(19) = -0.00933590225718622
                points(20) = 0
                points(21) = 0.0439396114503738
                points(22) = -0.0150750438236769
                points(23) = 0
                points(24) = 0.0196326589334724
                points(25) = -0.0103486919453905
                points(26) = 0
                points(27) = -0.00332390733249016
                points(28) = -0.0150750438236769
                points(29) = 0
                points(30) = -0.0380963532941686
                points(31) = -0.0106862885081252
                points(32) = 0
                points(33) = -0.0681424473775607
                points(34) = -0.0106862885081252
                points(35) = 0
                points(36) = -0.0836718892633588
                points(37) = 0.0203725952634711
                points(38) = 0
                points(39) = -0.0836718892633588
                points(40) = 0.0277997196436354
                points(41) = 0
                pointArray = points
                Dim skSegment1 As SldWorks.SketchSegment
                Dim skSegment2 As SldWorks.SketchSegment
                Dim skSegment3 As SldWorks.SketchSegment
                Dim skSegment4 As SldWorks.SketchSegment
                Dim skSegment5 As SldWorks.SketchSegment
                Dim skSegment6 As SldWorks.SketchSegment
                Dim skSegment7 As SldWorks.SketchSegment
                Dim skSegment8 As SldWorks.SketchSegment
                Dim skSegment9 As SldWorks.SketchSegment
                Dim skSegment10 As SldWorks.SketchSegment
                Dim skSegment11 As SldWorks.SketchSegment
                Dim skSegment12 As SldWorks.SketchSegment


                part.SketchManager.CreateSpline((pointArray))
                part.ActivateView("工程图视图3")
                part.Extension.SelectByID2("Spline1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.ActiveDrawingView.Crop()
                part.Extension.SelectByID2("草图51@机座-2@工程图视图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.BlankSketch()
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False)
                skSegment1 = part.SketchManager.CreateLine(0, 0.088, 0, 0, 0.045, 0)
                part.SketchAddConstraints("sgFIXED")
                skSegment2 = part.SketchManager.CreateLine(0, 0.045, 0, 0.098, 0.045, 0)
                part.SketchAddConstraints("sgFIXED")
                skSegment3 = part.SketchManager.CreateLine(0.098, 0.045, 0, 0.098, -0.048, 0)
                part.SketchAddConstraints("sgFIXED")
                skSegment4 = part.SketchManager.CreateLine(0.098, -0.048, 0, 0.0045, -0.048, 0#)
                part.SketchAddConstraints("sgFIXED")
                skSegment5 = part.SketchManager.CreateLine(0.0045, -0.048, 0#, 0.0045, -0.06873, 0#)
                part.SketchAddConstraints("sgFIXED")
                skSegment7 = part.SketchManager.CreateLine(0.0045, -0.06873, 0#, 0.0625, -0.06873, 0#)
                part.SketchAddConstraints("sgFIXED")
                skSegment8 = part.SketchManager.CreateLine(0.0625, -0.06873, 0#, 0.0625, -0.081848, 0#)
                part.SketchAddConstraints("sgFIXED")
                MsgBox(1)
                'part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                'part.SketchAddConstraints("sgMERGEPOINTS")
                'part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                'part.SketchAddConstraints("sgMERGEPOINTS")
                'part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                'part.SketchAddConstraints("sgMERGEPOINTS")
                'part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                'part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)
                skSegment1.Select4(False, Nothing)
                skSegment2.Select4(True, Nothing)
                skSegment3.Select4(True, Nothing)
                skSegment4.Select4(True, Nothing)
                skSegment5.Select4(True, Nothing)
                'skSegment6.Select4(True, Nothing)
                skSegment7.Select4(True, Nothing)
                skSegment8.Select4(True, Nothing)
                'skSegment1.SelectChain(True, Nothing)

                part.CreateSectionViewAt5(0.178339363283363, 0.168, 0, "E", 128, Nothing, 0)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False) '捕捉
                part.ActivateView("工程图视图4")

                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图2")
                part.ClearSelection2(True)

                points(0) = -0.0810559441539576
                points(1) = 0.0420011834488821
                points(2) = 0
                points(3) = -0.04166479937764
                points(4) = 0.0461205188503271
                points(5) = 0
                points(6) = 0.00956943467783197
                points(7) = 0.0440608511496046
                points(8) = 0
                points(9) = 0.0458710779030659
                points(10) = 0.0448332265373755
                points(11) = 0
                points(12) = 0.0780533857268548
                points(13) = 0.0476652696258689
                points(14) = 0
                points(15) = 0.0878368073052867
                points(16) = -0.0481092784577269
                points(17) = 0
                points(18) = 0.0654379210599295
                points(19) = -0.0434750261311013
                points(20) = 0
                points(21) = 0.0453561609778853
                points(22) = -0.0442474015188722
                points(23) = 0
                points(24) = 0.0152335208548189
                points(25) = -0.0419302753555594
                points(26) = 0
                points(27) = 0.00853960082747071
                points(28) = -0.0427026507433304
                points(29) = 0
                points(30) = -0.0251874577718601
                points(31) = -0.0450197769066432
                points(32) = 0
                points(33) = -0.064836061010768
                points(34) = -0.0450197769066432
                points(35) = 0
                points(36) = -0.0810559441539576
                points(37) = -0.0406429830426079
                points(38) = 0
                points(39) = -0.0810559441539576
                points(40) = 0.0420011834488821
                points(41) = 0
                pointArray = points
                part.SketchManager.CreateSpline((pointArray))
                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("Spline1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.ActiveDrawingView.Crop()

                part.Extension.SelectByID2("工程图视图4", "DRAWINGVIEW", 0.102727656148624, 0.24987988327235, 0, False, 0, Nothing, 0)
                part.InsertCenterLine2()



                'Dim smg1 As SldWorks.SketchSegment
                'Dim smg2 As SldWorks.SketchSegment
                'Dim smg3 As SldWorks.SketchSegment
                'part.ActivateView("工程图视图1")
                'smg1 = part.SketchManager.CreateCenterLine(0#, 0.0005, 0#, -0.386037, 0.0005, 0#)
                'smg2 = part.SketchManager.CreateCenterLine(-0.337661, -0.037315, 0#, -0.189661, -0.037315, 0#)
                'smg3 = part.SketchManager.CreateCenterLine(-0.263661, -0.037315, 0#, -0.263661, 0.088223, 0#)
                'part.ActivateView("工程图视图4")
                'part.SketchManager.CreateCircle(0.002224, 0.013627, 0#, 0.086679, -0.021472, 0#)
                'part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line5@草图3", "EXTSKETCHSEGMENT", -0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line3@草图3", "EXTSKETCHSEGMENT", -0, 0, 0, True, 0, Nothing, 0)
                'part.SketchAddConstraints("sgATINTERSECT") '交叉点
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'part.ActivateView("工程图视图1")
                'smg1.Select2(False, Nothing)
                'smg2.Select2(True, Nothing)
                'smg3.Select2(True, Nothing)
                'part.SketchConstraintsDel(0, "sgATINTERSECT")
                'part.EditDelete()
                'MsgBox(1)
                'part.ActivateView("工程图视图4")
                'part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                'Dim myCenterMark As Object
                'myCenterMark = part.InsertCenterMark3(0, True, True)
                'If Not myCenterMark Is Nothing Then
                '    myCenterMark.RotationAngle = 0
                '    myCenterMark.ConnectionLines = 0
                'End If
                'part.ClearSelection2(True)
                'part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                'part.EditDelete()

                'part.ActivateView("工程图视图4")
                'part.Extension.SelectByRay(0.108987475986768, 0.230027515441705, 0, 0, 0, -1, 0.000845796620909685, 1, False, 0, 0)
                'part.Extension.SelectByID2("细节项目275@工程图视图4", "CENTERMARKSYM", 0.0925690709926385, 0.168831642281769, 0, True, 0, Nothing, 0)
                'part.AddDimension2(0.0679414635014447, 0.198185760301576, 0)
                'part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图4")
                Dim name1 As String
                Dim S() As String
                S = Split(DrawTitle, "-")
                Debug.Print(S(0))
                name1 = "草图75@机座-4@" & S(0) & "-SectionAssembly-1-1/机座-1@工程图视图1"
                name1 = Replace(name1, " ", "")
                Debug.Print(name1)
                part.Extension.SelectByID2(name1, "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchUseEdge3(False, False)
                part.Extension.SelectByRay(0.107852481150413, 0.229966965580384, 0, 0, 0, -1, 0.000775559671147381, 1, False, 0, 0)

                part.SketchManager.SketchUseEdge3(False, False)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.101899372844066, 0.168792648173859, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateConstructionGeometry()
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0.108463082609183, 0.229844729864028, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.101546224180373, 0.169239875059221, 0, True, 0, Nothing, 0)

                part.SketchMirror()

                Dim SF As Object
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0.108306220309606, 0.229899356598589, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0.107628462714929, 0.107080005719647, 0.0267641754598458, True, 0, Nothing, 0)

                Displaydim = part.AddDimension2(0.0583, 0.186, 0)
                part.EditDimensionProperties2(8, 0.000063, 0, "H8", "", False, 3, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)

                Displaydim.ShowTolParenthesis = True
                Displaydim.LeaderVisibility = 2
                Displaydim.WitnessVisibility = 2
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "3.2", "")
                SF.GetAnnotation().SetPosition2(0.06982, 0.22987, 0)
                SF.SetAngle(180 * pi / 180)

                part.Extension.SelectByRay(0.115313619455647, 0.228653829062248, 0, 0, 0, -1, 0.000495925307752872, 1, False, 0, 0)
                part.SketchManager.SketchUseEdge3(False, False)

                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0.114000875993948, 0.229091410216148, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.101968931215697, 0.168456849157243, 0, True, 0, Nothing, 0)
                part.SketchMirror()

                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0.114824770281143, 0.228582799098347, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0.124611326681901, 0.108771623767856, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.08, 0.177, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = part.SelectionManager.GetSelectedObject6(1, -1)
                Displaydim.LeaderVisibility = 2
                Displaydim.WitnessVisibility = 2
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "25", "")
                SF.GetAnnotation().SetPosition2(0.09, 0.229, 0)
                SF.SetAngle(180 * pi / 180)

                part.Extension.SelectByRay(0.103999183983911, 0.221702597319921, -0.0327983785942934, 0, 0, -1, 0.000671966396076561, 1, False, 0, 0)
                part.Extension.SelectByRay(0.11111412229531, 0.222295508845871, -0.0298042484893131, 0, 0, -1, 0.000671966396076561, 1, True, 0, 0)
                part.AddDimension2(0.108601506904785, 0.222943298593507, 0)

                part.Extension.SelectByRay(0.104102980324201, 0.217136109734935, -0.0392527556975324, 0, 0, -1, 0.000278090734072438, 1, False, 0, 0)
                part.Extension.SelectByRay(0.128313232466978, 0.216563569988315, -0.0367442953392469, 0, 0, -1, 0.000278090734072438, 1, True, 0, 0)
                part.AddDimension2(0.116944228926958, 0.215909238849321, 0)

                part.Extension.SelectByRay(0.128104452602572, 0.214867538893862, -0.0388625956020405, 0, 0, -1, 0.000341603069467046, 1, False, 0, 0)
                part.Extension.SelectByRay(0.228375000640252, 0.215068481875902, -0.0386215807000667, 0, 0, -1, 0.000341603069467046, 1, True, 0, 0)
                part.AddDimension2(0.179746798986707, 0.215909238849321, 0)

                part.ActivateView("工程图视图2")
                part.ActivateView("工程图视图4")
                part.Extension.SelectByRay(0.203826535994667, 0.22816933736277, 0, 0, 0, -1, 0.000850017749816241, 1, False, 0, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.253827580101505, 0.169168105316701, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.26607783590768, 0.194918643031723, 0).SetOverride(True, 120)
                part.EditDimensionProperties2(8, 0.000021, -0.000029, "", "", False, 3, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = part.SelectionManager.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True
                Displaydim.LeaderVisibility = 2
                Displaydim.WitnessVisibility = 2
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "3.2", "")
                SF.GetAnnotation().SetPosition2(0.256, 0.22844, 0)
                SF.SetAngle(180 * pi / 180)

                part.Extension.SelectByRay(0.244942874081753, 0.229628426052546, 0, 0, 0, -1, 0.000395348619063195, 1, False, 0, 0)


                Dim myAnnotation As Object
                myNote = part.InsertNote("2*1*45° 两端")
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                myAnnotation.SetPosition(0.208431266321211, 0.227884240968444, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByRay(0.228052129789593, 0.228746716161593, 0.000874975000215272, 0, 0, -1, 0.0000354162274381485, 1, False, 0, 0)
                myNote = part.InsertNote("0.5*45° 两端")
                myAnnotation = myNote.GetAnnotation()
                myAnnotation.SetLeader3(swLeaderStyle_e.swUNDERLINED, 0, True, False, False, False)
                myAnnotation.SetPosition(0.248061291286495, 0.216, 0)

                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图4")
                part.Extension.SelectByRay(0.104071505489508, 0.118705717476077, 0.0448277751837622, 0, 0, -1, 0.00126136142573547, 1, False, 0, 0)
                part.Extension.SelectByRay(0.252837955995368, 0.11425385362054, 0.0393237282436303, 0, 0, -1, 0.00126136142573547, 1, True, 0, 0)
                part.AddDimension2(0.179746798986707, 0.2635, 0)
                part.ActivateView("工程图视图4")
                part.Extension.SelectByID2("RD4@工程图视图4", "DIMENSION", 0.177457199322346, 0.265958760631419, 0, False, 0, Nothing, 0)
                part.EditDimensionProperties2(8, 0, -0.00025, "", "h11", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                Displaydim = part.SelectionManager.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True


                part.Extension.SelectByRay(0.188409141778477, 0.245983123723746, 0, 0, 0, -1, 0.000658872194585958, 1, False, 0, 0)
                part.AddDimension2(0.195191649663921, 0.245983123723746, 0)

                part.ActivateView("工程图视图4")

                part.Extension.SelectByRay(0.234530195399494, 0.239588187717471, 0, 0, 0, -1, 0.000658872194585958, 1, False, 0, 0)
                part.AddDimension2(0.242669204862027, 0.255866206642536, 0)

                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图4")
                part.Extension.SelectByRay(0.104416253885033, 0.113069758164917, -0.0279995516646068, 0, 0, -1, 0.000658872194585958, 1, False, 0, 0)
                part.Extension.SelectByRay(0.128058138514294, 0.112488400346165, -0.0219931404496378, 0, 0, -1, 0.000658872194585958, 1, True, 0, 0)
                part.AddDimension2(0.116022058764875, 0.0765670193329509, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "js14(<MOD-PM>0.26)", True, "", "", False)

                part.Extension.SelectByRay(0.128353207318243, 0.112436995584406, -0.0218668265094948, 0, 0, -1, 0.000459757956601519, 1, False, 0, 0)
                part.Extension.SelectByRay(0.228688620200104, 0.112301772655994, -0.0215305877778178, 0, 0, -1, 0.000459757956601519, 1, True, 0, 0)
                part.AddDimension2(0.179197028401235, 0.0765670193329509, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.Extension.SelectByRay(0.176339771267381, 0.104816403626871, 0.00537497499999517, 0, 0, -1, 0.000689620881938334, 1, False, 0, 0)
                part.Extension.SelectByRay(0.180885872291406, 0.105890107289769, 0.00537497499999517, 0, 0, -1, 0.0000849364681335205, 1, True, 0, 0)
                part.AddDimension2(0.178162909048302, 0.112060491886528, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M", "-6H", True, "", "", False)

                part.ActivateView("工程图视图2")
                part.Extension.SelectByRay(0.14203950470644, 0.318922867545724, 0.07650000000001, 0, 0, -1, 0.000375166317248439, 1, False, 0, 0)
                part.Extension.SelectByRay(0.161901250913711, 0.319033210580209, 0.07650000000001, 0, 0, -1, 0.000375166317248439, 1, True, 0, 0)
                part.AddDimension2(0.149653174085894, 0.307447191959301, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.Extension.SelectByRay(0.121515700292261, 0.348605143822145, 0.0794999999999959, 0, 0, -1, 0.000375166317248439, 1, False, 0, 0)
                part.Extension.SelectByRay(0.11213654236105, 0.347722399546266, 0.0794999999999959, 0, 0, -1, 0.000375166317248439, 1, True, 0, 0)
                part.AddDimension2(0.11784039449964, 0.376844574579641, 0)

                part.Extension.SelectByRay(0.124895286752463, 0.349197023859121, 0.0794999999999959, 0, 0, -1, 0.000648287396205303, 1, False, 0, 0)
                part.Extension.SelectByRay(0.175614241867348, 0.349006351095531, 0.0794999999999959, 0, 0, -1, 0.000648287396205303, 1, True, 0, 0)
                part.AddDimension2(0.149653174085894, 0.376844574579641, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)


                part.Extension.SelectByRay(0.121840895313651, 0.349345558757392, 0.0794999999999959, 0, 0, -1, 0.000505781158337196, 1, False, 0, 0)
                part.Extension.SelectByRay(0.11812191620823, 0.358568626938835, 0.0794999999999959, 0, 0, -1, 0.000505781158337196, 1, True, 0, 0)
                part.AddDimension2(0.0980394290389593, 0.353213297027029, 0)
                part.Extension.SelectByRay(0.121840895313651, 0.345626579651972, 0.0794999999999959, 0, 0, -1, 0.000505781158337196, 1, False, 0, 0)
                part.Extension.SelectByRay(0.121840895313651, 0.295345982146686, 0.0794999999999959, 0, 0, -1, 0.000505781158337196, 1, True, 0, 0)
                part.AddDimension2(0.0980394290389593, 0.321230076720412, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                'part.Extension.SelectByRay(0.121840895313651, 0.348899281264742, 0.0794999999999959, 0, 0, -1, 0.000505781158337196, 1, False, 0, 0)
                'part.AddDimension2(0.078998256019206, 0.364518993507507, 0)
                'part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "4-M5-6H", "", False, "", "", False)
                'Displaydim = part.SelectionManager.GetSelectedObject6(1, -1)
                'Displaydim.SetLowerText("深12")
                'Displaydim.SetBrokenLeader2(False, 2)

                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图3")
                part.Extension.SelectByRay(0.400447948613558, 0.323551214597245, 0.0792909037286336, 0, 0, -1, 0.000392534068734863, 1, False, 0, 0)
                part.Extension.SelectByRay(0.404979142851577, 0.329360661944146, 0.0792909037286336, 0, 0, -1, 0.000225320965096215, 1, True, 0, 0)
                part.AddDimension2(0.403567361209331, 0.301983528484583, 0)
                part.Extension.SelectByRay(0.406590585377248, 0.329192545995836, 0.0792909037286336, 0, 0, -1, 0.000467225553223512, 1, False, 0, 0)
                part.Extension.SelectByRay(0.478598288285813, 0.329329965276195, 0.0792909037286336, 0, 0, -1, 0.000467225553223512, 1, True, 0, 0)
                part.AddDimension2(0.437509923458215, 0.301983528484584, 0)

                part.Extension.SelectByRay(0.404856106110314, 0.33096301214423, 0.0792909037286336, 0, 0, -1, 0.000239459907876001, 1, False, 0, 0)
                part.AddDimension2(0.350645429961513, 0.344819419218426, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "2-<MOD-DIAM>", "深5", True, "", "", False)
                Displaydim = part.SelectionManager.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)



                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCircleByRadius(0#, 0.0005, 0#, 0.0685)
                part.AddDimension2(0.462495331709158, 0.146135212309186, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByRay(0.433495400306324, 0.239341185357451, 0.074000000000126, 0, 0, -1, 0.000428770912401375, 1, False, 0, 0)
                part.Extension.SelectByRay(0.450394018618613, 0.239341185357451, 0.0739999999998986, 0, 0, -1, 0.000428770912401375, 1, True, 0, 0)
                part.AddDimension2(0.443458018565062, 0.214497694256548, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", False, "", "", False)
                part.ClearSelection2(True)


                part.Extension.SelectByRay(0.379411585715157, 0.09280208346071, 0.0649999999999977, 0, 0, -1, 0.000588690493550733, 1, False, 0, 0)

                part.SketchManager.SketchUseEdge3(False, False)

                part.SketchManager.CreateLine(-0.0625, -0.075, 0#, -0.0625, -0.066887, 0#)

                part.Extension.SelectByRay(0.500093136893057, 0.0924557949350919, 0.0649999999999977, 0, 0, -1, 0.000588690493550733, 1, False, 0, 0)

                part.SketchManager.SketchUseEdge3(False, False)

                part.SketchManager.CreateLine(0.0625, -0.075, 0#, 0.0625, -0.066887, 0#)

                part.Extension.SelectByID2("Line13", "SKETCHSEGMENT", 0.379429037086466, 0.0996763210769478, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("Line16", "SKETCHSEGMENT", 0.504472988255768, 0.100032613457837, 0, True, 0, Nothing, 0)

                part.AddDimension2(0.441154121011307, 0.073, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.SketchManager.CreateLine(0#, 0.0005, 0#, -0.086618, 0.0005, 0#)
                part.Extension.SelectByID2("Line17", "SKETCHSEGMENT", 0.357750583583553, 0.168781066551117, 0, False, 0, Nothing, 0)
                part.Extension.SelectByRay(0.367916804070656, 0.0884886720917546, 0.0649999999999977, 0, 0, -1, 0.000705411217472441, 1, True, 0, 0)
                part.AddDimension2(0.3465, 0.129983449590133, 0)
                part.EditDimensionProperties2(8, -0.0001, -0.0004, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.SketchManager.CreateLine(0#, 0.0005, 0#, 0#, -0.07933, 0#)

                part.Extension.SelectByID2("Line13", "SKETCHSEGMENT", 0.379617731778848, 0.0972482312053309, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line19", "SKETCHSEGMENT", 0.441858549940837, 0.0906650677458898, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.412533549076054, 0.08268547567384, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)

                part.ActivateView("工程图视图2")
                part.Extension.SelectByRay(0.121908605156166, 0.34901001095819, 0.0794999999999959, 0, 0, -1, 0.000312964586709912, 1, False, 0, 0)
                Dim myGtol As Object
                Dim myAnno As Object
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.3", "", "", "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.056, 0.373, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByRay(0.138656291253099, 0.319157655773307, 0.07650000000001, 0, 0, -1, 0.000881997886937383, 1, False, 0, 0)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.3", "", "", "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.056, 0.291, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)

                myNote = part.InsertNote("4-M5-6H")
                myNote.GetAnnotation().SetPosition(0.0586, 0.379, 0)

                myNote = part.InsertNote("2-M5-6H")
                myNote.GetAnnotation().SetPosition(0.0586, 0.2968, 0)
                myNote = part.InsertNote("深12")
                myNote.GetAnnotation().SetPosition(0.0627, 0.3654, 0)
                myNote = part.InsertNote("深10")
                myNote.GetAnnotation().SetPosition(0.0627, 0.2842, 0)

                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.075", "", "B1-B2", "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.066, 0.254, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(2, 0.10433, 0.25045, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 橡胶垫()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\橡胶垫.SLDPRT"
                Dim dz3 As String
                dz3 = "\橡胶垫.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim swedge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim thickness1 As Double
                Dim hor_distance As Double
                Dim hor_hole_distance As Double
                Dim ver_distance1 As Double
                Dim ver_hole_distance As Double
                Dim ver_distance2 As Double
                Dim diameter As Double
                Dim thickness2 As Double
                Dim thickness3 As Double
                Dim radius1 As Double
                Dim radius2 As Double
                Dim por_hor_distance As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Rubber_mat", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        thickness1 = dr.GetString("thickness1") / 1000
                        thickness2 = dr.GetString("thickness2") / 1000
                        thickness3 = dr.GetString("thickness3") / 1000
                        hor_distance = dr.GetString("hor_distance") / 1000
                        hor_hole_distance = dr.GetString("hor_hole_distance") / 1000
                        ver_distance1 = dr.GetString("ver_distance1") / 1000
                        por_hor_distance = dr.GetString("ver_distance1") / 1000
                        ver_hole_distance = dr.GetString("ver_hole_distance") / 1000
                        ver_distance2 = dr.GetString("ver_distance2") / 1000
                        diameter = dr.GetString("diameter") / 1000
                        radius1 = dr.GetString("radius1") / 1000
                        radius2 = dr.GetString("radius2") / 1000
                    End If
                Loop
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCornerRectangle(0, ver_distance2, 0, hor_distance, 0, 0)
                part.SketchAddConstraints("sgFIXED")
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, thickness3, thickness3, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(0, ver_distance2 / 2 + por_hor_distance / 2 - radius2 + radius1, 0, -thickness3 + radius2 - radius1, ver_distance2 / 2 - por_hor_distance / 2 + radius2 - radius1, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, thickness3, 0, 0, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(radius2 - radius1, ver_distance2 - radius2 + radius1, thickness3, hor_distance, ver_distance1 / 2 + ver_distance2 / 2, thickness3)
                sketcher.CreateCornerRectangle(radius2 - radius1, radius2 - radius1, thickness3, hor_distance, ver_distance2 / 2 - ver_distance1 / 2, thickness3)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, thickness3 - thickness1, thickness3 - thickness1, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, ver_distance2, 0, 0, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.CreateCornerRectangle(0, -thickness2, 0, hor_distance, -thickness3, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, ver_distance2 / 2 - ver_distance1 / 2, ver_distance2 / 2 - ver_distance1 / 2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(0, -thickness2, 0, hor_distance, -thickness3, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, ver_distance2 / 2 - ver_distance1 / 2, ver_distance2 / 2 - ver_distance1 / 2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                'Dim edge() As Object
                'Dim vEdgeCount As Integer
                'part.Extension.SelectByID2("切除-拉伸4", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'swbody = selecmag.GetSelectedObject6(1, -1)
                'edge = swbody.GetEdges()
                'vEdgeCount = swbody.GetEdgeCount()
                'Debug.Print(vEdgeCount)
                'part.ClearSelection2(True)

                'vEdgeCount = 30
                'Do Until vEdgeCount > 50
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                'Loop

                part.Extension.SelectByID2("切除-拉伸4", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                swedge = swbody.GetEdges()
                Dim facenumber As Integer
                facenumber = swbody.GetEdgeCount()
                Debug.Print(facenumber)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(swedge(1), Nothing)
                selecmag.AddSelectionListObject(swedge(4), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius2, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '圆角
                part.ClearSelection2（True）
                selecmag.AddSelectionListObject(swedge(23), Nothing)
                selecmag.AddSelectionListObject(swedge(35), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius1, 0.01, 0, 0, 0, 0, 0， 0， 0， 0， 0， 0， 0)
                part.ClearSelection2（True）
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, hor_distance, 0, 0, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(0, ver_distance2 / 2 + ver_distance1 / 2, 0, -thickness3, ver_distance2 / 2 - ver_distance1 / 2, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, hor_distance - por_hor_distance, hor_distance - por_hor_distance, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(hor_distance - hor_hole_distance, ver_distance2 / 2 + ver_hole_distance / 2, 0, diameter / 2)
                sketcher.CreateCircleByRadius(hor_distance - hor_hole_distance, ver_distance2 / 2 - ver_hole_distance / 2, 0, diameter / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2（True）

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)


                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager



                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.13, 0.16, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                'myView = Draw.CreateUnfoldedViewAt3(0.3, 0.19, 0, False)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.165, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()


                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()



                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(-0.005, 0.05, 0, -0.005, -0.06, 0)
                part.CreateSectionViewAt5(0.058, 0.14, 0, "B", 132, 0, 0)
                part.ActivateView("工程图视图2")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0.055, 0, 0, -0.04, 0, 0)

                part.CreateSectionViewAt5(0.145, 0.22, 0, "A", 128, 0, ver_hole_distance / 2)

                part.ActivateView("工程图视图3")


                DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                Debug.Print(DrawTitle)
                part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                Dim vEdgeCount As Integer
                Dim i As Integer




                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 25
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                selecmag.AddSelectionListObject(vEdges(16), Nothing)
                part.AddDimension2(0.17, 0.16, 0) 'ver_distance2
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(18), Nothing)
                selecmag.AddSelectionListObject(vEdges(22), Nothing)
                part.AddDimension2(0.16, 0.16, 0) 'pro_ver_distance
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(19), Nothing)
                selecmag.AddSelectionListObject(vEdges(21), Nothing)
                part.AddDimension2(0.14, 0.16, 0) 'ver_distance1
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(10), Nothing)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                part.AddDimension2(0.13, 0.11, 0) 'hor_distance
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(22), Nothing)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                part.AddDimension2(0.135, 0.118, 0) 'hor_hole_distance
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(18), Nothing)
                part.AddDimension2(0.138, 0.18, 0) 'diameter
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 0, True, 12, 12, "2-<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(13), Nothing)
                part.AddDimension2(0.128, 0.183, 0) 'radius1
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(15), Nothing)
                part.AddDimension2(0.104, 0.201, 0) 'radius2
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 1, 1, "R", "", True, "", "", False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.075, 0.198, 0) 'thickness2
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                selecmag.AddSelectionListObject(vEdges(24), Nothing)
                part.AddDimension2(0.046, 0.124, 0) 'thickness1
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                selecmag.AddSelectionListObject(vEdges(10), Nothing)
                part.AddDimension2(0.063, 0.116, 0) 'thickness3
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.1218, 0.227, 0) 'por_hor_distance
                part.ClearSelection2(True)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingDiameterDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineStyles_e.swLineCONTINUOUS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyleThickness, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineWeights_e.swLW_THIN)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 扣片()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\扣片.SLDPRT"
                Dim dz3 As String
                dz3 = "\扣片.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim L_top As Double
                Dim L_front As Double
                Dim ver_distance_front As Double
                Dim ver_distance_top As Double
                Dim v_d_t_tolerance_type As Double
                Dim v_d_t_tolerance_vale1 As Double
                Dim v_d_t_tolerance_vale2 As Double
                Dim radius As Double
                Dim pi As Double
                pi = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Clasp", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("Code") = "8MJ.146.546" Then
                        Code = dr("Code")
                        name = dr("name")
                        company = dr("company")
                        material = dr("material")
                        scale_m = dr("scale_m")
                        scale_d = dr("scale_d")
                        L_top = dr("L_top") / 1000
                        L_front = dr("L_front") / 1000
                        ver_distance_front = dr("ver_distance_front") / 1000
                        ver_distance_top = dr("ver_distance_top") / 1000
                        v_d_t_tolerance_type = dr("v_d_t_tolerance_type")
                        v_d_t_tolerance_vale1 = dr("v_d_t_tolerance_vale1")
                        v_d_t_tolerance_vale2 = dr("v_d_t_tolerance_vale2")
                        radius = dr("radius") / 1000
                    End If
                Loop
                'part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                'sketcher.InsertSketch(True)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                'sketcher.Create3PointCornerRectangle(0, 0, 0, L_top, 0, 0, L_top, ver_distance_top, 0)

                'part.ShowNamedView2("*上下二等角轴测", 8)
                'part.ViewZoomtofit2()
                'Dim customBendAllowance As Object
                'customBendAllowance = part.FeatureManager.CreateCustomBendAllowance()
                'customBendAllowance.KFactor = 0.5
                'Featmgr.InsertSheetMetalBaseFlange2(0.001, True, 0.001, 0.02, 0.01, True, 0, 0, 1, customBendAllowance, False, 2, 0.0001, 0.0001, 0.5, True, False, True, True)
                'part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                'sketcher.InsertSketch(True)
                'sketcher.CreateLine(L_front, 0, 0, L_front, ver_distance_top, 0)
                'part.Extension.SelectByRay(0.01, 0, -0.01, -0.1, 0.1, -0.1, 0.0001, 2, True, 0, 0)
                'Featmgr.InsertSheetMetal3dBend(90 * pi / 180, True, 0.001, False, 0, customBendAllowance)
                'part.ClearSelection2(True)
                'part.SaveAs3(dz1 + dz2, 0, 2)'折弯钣金
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateLine(0, 0, 0, L_front, 0, 0)
                part.SketchAddConstraints（"sgFIXED"）
                sketcher.CreateLine(L_front, 0, 0, L_front, -ver_distance_front， 0)
                part.SketchAddConstraints（"sgFIXED"）
                sketcher.CreateLine(0, 0, 0, 0, -ver_distance_front， 0)
                part.SketchAddConstraints（"sgFIXED"）
                part.ShowNamedView2（"*上下二等角轴测", 8）
                part.ViewZoomtofit2()
                Dim customBendAllowanceData As Object
                customBendAllowanceData = part.FeatureManager.CreateCustomBendAllowance()
                customBendAllowanceData.KFactor = 0.5
                part.FeatureManager.InsertSheetMetalBaseFlange2(0.001, False, 0.001, ver_distance_top, 0.01, False, 0, 0, 1, customBendAllowanceData, False, 2, 0.0001, 0.0001, 0.5, True, False, True, True) '直接生成钣金
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 定子冲片()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\定子冲片.SLDPRT"
                Dim dz3 As String
                dz3 = "\定子冲片.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim displaydimension As SldWorks.DisplayDimension
                Dim swbody As SldWorks.Body2
                Dim selecmag As SldWorks.SelectionMgr
                Dim pi As Double
                pi = 3.1415926535897931
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim Tolerance_type1 As Double
                Dim Tolerance_type2 As Double
                Dim diameter1 As Double
                Dim Tolerance_type1_value As String
                Dim diameter2 As Double
                Dim Tolerance_type2_value As String
                Dim diameter3 As Double
                Dim Tolerance_type3_value1 As String
                Dim Tolerance_type3_value2 As String
                Dim Geometric_tolerance_type As String
                Dim tolerance1_diameter As Double
                Dim tolerance_Value As Double
                Dim proA_diameter As Double
                Dim proA_hor_distance1 As Double
                Dim proA_hor_distance2 As Double
                Dim proA_ver_distance1 As Double
                Dim proA_ver_distance2 As Double
                Dim proA_angle As Double
                Dim proB_hor_distance1 As Double
                Dim proB_hor_distance2 As Double
                Dim proB_hor_distance3 As Double
                Dim proB_ver_distance1 As Double
                Dim proB_ver_distance2 As Double
                Dim proB_angle As Double
                Dim pro_scale_m As Double
                Dim slots_number As Double
                Dim lamination_area As Double
                Dim thickness As Double


                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Stator_lamination", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("Code") = "8MJ.660.561" Then
                        Code = dr("Code")
                        name = dr("name")
                        company = dr("company")
                        material = dr("material")
                        scale_m = dr("scale_m")
                        scale_d = dr("scale_d")
                        Tolerance_type1 = dr("Tolerance_type1")
                        Tolerance_type2 = dr("Tolerance_type2")
                        diameter1 = dr("diameter1") / 1000
                        Tolerance_type1_value = dr("Tolerance_type1_value")
                        diameter2 = dr("diameter2") / 1000
                        Tolerance_type2_value = dr("Tolerance_type2_value")
                        diameter3 = dr("diameter3") / 1000
                        Tolerance_type3_value1 = dr("Tolerance_type3_value1")
                        Tolerance_type3_value2 = dr("Tolerance_type3_value2")
                        Geometric_tolerance_type = dr("Geometric_tolerance_type")
                        tolerance1_diameter = dr("tolerance1_diameter") / 1000
                        tolerance_Value = dr("tolerance_Value") / 1000
                        proA_diameter = dr("proA_diameter") / 1000
                        proA_hor_distance1 = dr("proA_hor_distance1") / 1000
                        proA_hor_distance2 = dr("proA_hor_distance2") / 1000
                        proA_ver_distance1 = dr("proA_ver_distance1") / 1000
                        proA_ver_distance2 = dr("proA_ver_distance2") / 1000
                        proA_angle = dr("proA_angle")
                        proB_hor_distance1 = dr("proB_hor_distance1") / 1000
                        proB_hor_distance2 = dr("proB_hor_distance2") / 1000
                        proB_hor_distance3 = dr("proB_hor_distance3") / 1000
                        proB_ver_distance1 = dr("proB_ver_distance1") / 1000
                        proB_ver_distance2 = dr("proB_ver_distance2") / 1000
                        proB_angle = dr("proB_angle")
                        pro_scale_m = dr("pro_scale_m") / 1000
                        slots_number = dr("slots_number")
                        lamination_area = dr("lamination_area")
                        thickness = dr("thickness") / 1000

                    End If
                Loop


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter1 / 2)
                part.AddDimension2(-diameter1 / 4, -0.0045, 0)
                part.EditDimensionProperties2(8, 0.000046, 0, "H8", "", False, 3, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                displaydimension = selecmag.GetSelectedObject6(1, -1)
                displaydimension.ShowTolParenthesis = True


                sketcher.CreateCircleByRadius(0, 0, 0, diameter3 / 2)
                part.AddDimension2(diameter1 / 5, 0.006, 0)
                part.EditDimensionProperties2(2, 0.000054, -0.000019, "", "", False, 3, 2, True, 1, 1, "<MOD-DIAM>", "", True, "", "", False)
                Featmgr.FeatureExtrusion2(True, False, True, 0, 0, thickness, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                Dim linecen As SldWorks.SketchSegment
                linecen = sketcher.CreateCenterLine(0, diameter3 + 0.01, 0, 0, -diameter3 - 0.01, 0)

                Dim edge() As Object
                Dim vEdgeCount As Integer



                part.Extension.SelectByID2("凸台-拉伸1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True) '实体边线

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                'Loop

                Dim lineq As SldWorks.SketchSegment
                lineq = sketcher.CreateLine(-0.0117, 0.09, 0, -0.0117, 0.08, 0)
                linecen.Select4(False, Nothing)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(3), Nothing)
                'part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints（"sgCOINCIDENT"）
                lineq.Select4(False, Nothing)
                linecen.Select4(True, Nothing)
                part.SketchMirror()

                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(-Math.Tan(360 / slots_number / 2 * pi / 180) * (diameter1 / 2 - 0.0035) + proA_hor_distance1 * 2 + 0.0075, diameter1 / 2 - 0.0075, 0）
                part.Parameter("D1@草图2").SystemValue = proA_ver_distance1
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-Math.Tan(360 / slots_number / 2 * pi / 180) * (diameter1 / 2 - 0.0035) + proA_hor_distance1 * 2, diameter1 / 2 - 0.0035, 0)
                part.Parameter("D2@草图2").SystemValue = proA_hor_distance1
                part.ClearSelection2(True)

                Dim sketchline As SldWorks.SketchSegment
                sketchline = sketcher.CreateLine(-0.002339, 0.068007, 0#, -0.00443, 0.068732, 0#)

                part.Extension.SelectByID2("Point9", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")

                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()

                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-Math.Tan(360 / slots_number / 2 * pi / 180) * (diameter1 / 2 + 0.0035) + proA_hor_distance2 * 0.9, diameter1 / 2 + 0.0035, 0)
                part.Parameter("D3@草图2").SystemValue = proA_hor_distance2
                sketchline.Angle = (180 - proA_angle) * pi / 180

                Dim linew As SldWorks.SketchSegment
                linew = sketcher.CreateCircleByRadius(0, 0.075, 0, proA_diameter / 2)
                part.Extension.SelectByID2("Point13", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddVerticalDimension2(-Math.Tan(360 / slots_number / 2 * pi / 180) * (diameter1 / 2 - 0.0035) + proA_hor_distance1 * 3, diameter1 / 2 - 0.0015, 0) '此处尺寸位置随意，看错
                part.Parameter("D4@草图2").SystemValue = proA_ver_distance2 - proA_diameter / 2
                part.Extension.SelectByID2("D4@草图2@零件69.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                linew.Select4(False, Nothing)
                part.SketchAddConstraints("sgFIXED")

                part.SketchManager.CreateLine(-0.004733, 0.069319, 0#, -0.004877, 0.071268, 0#)
                part.Extension.SelectByID2("Point14", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")

                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")

                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(3), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)

                part.Extension.SelectByID2("圆弧3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -diameter1 / 2, 0, 0)

                part.Extension.SelectByID2("圆弧3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, diameter1 / 2, 0, 0)

                linecen.Select4(False, Nothing)
                part.EditDelete()
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, 0， diameter1 / 2 + proA_ver_distance2 - proA_diameter, 0)
                sketchline.SelectChain(True, Nothing)

                'part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.RotateOrCopy(False, 1, False, 0, 0, 0, 0, 0, 1, 360 / slots_number / 2 * pi / 180)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("切除-拉伸1", "SOLIDBODY", 0, 0, 0, False, 0, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                'vEdgeCount = swbody.GetEdgeCount()
                'Debug.Print(vEdgeCount)
                'part.ClearSelection2(True) '实体边线
                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                selecmag.AddSelectionListObject(edge(3), Nothing)
                Featmgr.FeatureCircularPattern5(slots_number, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False) '特征圆周阵列




                part.Extension.SelectByID2("阵列(圆周)1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                'vEdgeCount = swbody.GetEdgeCount()
                'Debug.Print(vEdgeCount)
                'part.ClearSelection2(True) '实体边线

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                'Loop
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, diameter3 + 0.01, 0, 0, -diameter3 - 0.01, 0)
                Dim linee As SldWorks.SketchSegment
                linee = sketcher.CreateLine(0, 0.11, 0, -proB_hor_distance3 / 2, 0.11, 0)
                part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0.11, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(1), Nothing)
                part.AddDimension2(0.02536, 0.0593, 0)
                part.Parameter("D1@草图3").SystemValue = diameter3 / 2 - proB_ver_distance2

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.SketchManager.CreateLine(-0.00767, 0.061416, 0#, -0.005277, 0.064803, 0#)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(1), Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.0052, 0.058, 0)
                part.Parameter("D2@草图3").SystemValue = (90 - proB_angle) * pi / 180

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(1), Nothing)
                part.SketchManager.SketchUseEdge3(False, False)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -diameter3 / 2, 0, 0)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, diameter3 / 2, 0, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.Extension.SelectByID2("切除-拉伸2", "SOLIDBODY", 0, 0, 0, False, 4, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                part.Extension.SelectByID2("切除-拉伸2", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                selecmag.AddSelectionListObject(edge(1), Nothing)
                Featmgr.FeatureCircularPattern5(4, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False) '特征圆周阵列

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.Create3PointCornerRectangle(0, 0.005, 0, 0.003, 0.005, 0, 0.003, 0.0065, 0)
                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("", "EXTSKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.00378018214037004, 0.00226450018113107, 0)
                part.Parameter("D1@草图4").SystemValue = 0.056
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter2 / 2)
                part.AddDimension2(diameter2 / 5, -0.01, 0)
                part.EditDimensionProperties2(8, 0.00014, 0, "H10", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.SketchManager.CreateConstructionGeometry()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter3 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter1 / 2)
                'part.SketchManager.CreateConstructionGeometry()
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.14, 0.153, 0)

                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)


                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.37461, 0.05504177, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 314 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.29, 0.12, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                "1.冲片毛刺不得大于0.05。复式冲模冲压的冲片，个别部位毛刺允许为0.1；" + Chr(13) + Chr(10) +
                "2.槽形尺寸公差按GB1801-79的H10，槽口宽度尺寸公差按GB1801-79的H12，扣片" + Chr(13) + Chr(10) +
                "槽尺寸公差按GB1801-79的H11，齿宽相差不大于0.12，个别齿宽相差不大于0.2；" + Chr(13) + Chr(10) +
                "轭高相差不大于0.2。"）
                myNote.GetAnnotation().SetPosition(0.25, 0.11, 0)
                part.Extension.SelectByID2("细节项目256@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ClearSelection2(True)


                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                Dim angle1 As Object
                Dim hypotenuse As Object
                angle1 = 360 / slots_number / 2 * pi / 180
                hypotenuse = diameter1 / 2 + proA_ver_distance2 / 2
                part.SketchManager.CreateEllipse(-Math.Sin(angle1) * hypotenuse, Math.Cos(angle1) * hypotenuse, 0,
                                                    -Math.Sin(angle1) * hypotenuse + proA_diameter / 2 + 0.002, Math.Cos(angle1) * hypotenuse, 0,
                                                    -Math.Sin(angle1) * hypotenuse + 0.01, Math.Cos(angle1) * hypotenuse - proA_ver_distance2 / 2 - 0.003, 0) '椭圆 
                part.CreateDetailViewAt4(0.27, 0.212, 0, 0, 2, 1, "I", 1, False, False, True, 0) '局部视图1

                'DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                'Debug.Print(DrawTitle)
                'part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vEdges As Object
                Dim vEdges1 As Object
                Dim vEdges2 As Object
                'Dim i As Integer
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges1 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                part.InsertModelAnnotations3(0, 32768, True, False, False, True)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCircle(0, diameter3 / 2 + 0.008, 0, 0, diameter3 / 2 - 0.007, 0)
                part.CreateDetailViewAt4(0.348, 0.204, 0, 0, 2, 1, "Ⅱ", 1, False, False, True, 0)
                part.ClearSelection2(True) '局部视图2
                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges2 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合


                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("D2@草图2@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@草图2@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@草图2@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@草图4@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D1@草图3@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@草图3@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()
                Dim mytextformat As Object
                mytextformat = part.Extension.GetUserPreferenceTextFormat(1, 200)
                mytextformat.CharHeight = 0.0025
                part.Extension.SetUserPreferenceTextFormat(1, 200, mytextformat)
                part.Extension.SelectByID2("D1@草图5@定子冲片-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDimensionProperties2(8, 0.00014, 0, "H10", "", False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)

                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("Arc2@草图6@定子冲片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchUseEdge3(False, False)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Dim myDatumTag As Object
                Dim myAnnotation As Object
                myDatumTag = part.InsertDatumTag2()
                If Not myDatumTag Is Nothing Then
                    myDatumTag.FilledTriangle = True
                    myDatumTag.Shoulder = True
                    myDatumTag.SetLabel("A")
                    myAnnotation = myDatumTag.GetAnnotation()
                    If Not myAnnotation Is Nothing Then
                        myAnnotation.SetPosition(-Math.Sin(45 * pi / 180) * diameter2 / 2 - 0.002 + 0.14, -Math.Sin(45 * pi / 180) * diameter2 / 2 - 0.002 + 0.153, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("Arc2@草图6@定子冲片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.BlankSketch()
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("草图6@定子冲片-1@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.UnblankSketch()
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)

                Dim myGtol As Object
                Dim myAnno As Object
                Dim X As Double
                Dim Y As Double
                Dim Z As Double
                X = Math.Cos(45 * pi / 180) * diameter3 / 2
                Y = Math.Sin(45 * pi / 180) * diameter3 / 2
                Z = 0
                myGtol = part.InsertGtol()
                If Not myGtol Is Nothing Then
                    myGtol.SetFrameSymbols2(1, "<IGTOL-CONC>", True, "", False, "", "", "", "")
                    myGtol.SetFrameValues(1, "0.04", "A", "", "", "")
                    myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                    myGtol.SetFrameValues(2, "", "", "", "", "")
                    myGtol.SetPTZHeight("", False)
                    myGtol.SetCompositeFrame(False)
                    myGtol.SetText(4, "")
                    myGtol.SetBetweenTwoPoints(False, "", "")
                    myAnno = myGtol.GetAnnotation()
                    myAnno.SetPosition(0.2, 0.211, 0)
                    myAnno.SetLeader3(2, 0, True, False, False, False)
                    myAnno.SetLeaderAttachmentPointAtIndex(0, X + 0.14, Y + 0.153, Z)
                End If

                Dim number As String
                number = slots_number & "槽"
                myNote = part.InsertNote(number)
                X = Math.Sin(360 / slots_number * 2.5 * pi / 180) * diameter2 / 2
                Y = Math.Cos(360 / slots_number * 2.5 * pi / 180) * diameter2 / 2
                Z = 0
                myNote.GetAnnotation().SetPosition(0.194, 0.229, 0)
                myAnno = myNote.GetAnnotation()
                myAnno.SetLeader3(3, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(0, X + 0.14, Y + 0.153, Z)

                part.Extension.SelectByID2("Arc1@草图6@定子冲片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.BlankSketch()


                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("D3@草图2@定子冲片-2@工程图视图2", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@草图2@定子冲片-2@工程图视图2", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc2@草图6@定子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1@草图5@定子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.BlankSketch()
                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                selecmag.AddSelectionListObject(vEdges1(0), Nothing)

                myNote = part.AddDimension2(0.288, 0.213, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)
                displaydimension = selecmag.GetSelectedObject6(1, -1)
                dimension = displaydimension.GetDimension2(0)
                dimension.SetArcEndCondition(1, 3)
                dimension.SetArcEndCondition(2, 2) '选择圆弧尺寸上的点
                myNote.GetAnnotation().SetPosition(0.285, 0.212, 0)




                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                Dim vpoint1 As Object
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vpoint1 = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合

                part.SketchManager.CreateLine(0, 0, 0, 0.003, 0, 0)
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(vpoint1(6), Nothing) '选择的点
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(6), Nothing)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.255, 0.2, 0)
                part.Parameter("D1@草图5").SystemValue = proA_angle * pi / 180
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                part.AddDimension2(0.252, 0.224, 0).Diametric(True)
                displaydimension = selecmag.GetSelectedObject6(1, -1)
                displaydimension.SetBrokenLeader2(False, 2)

                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(vEdges2(6), Nothing)
                selecmag.AddSelectionListObject(vEdges2(8), Nothing)
                myNote = part.AddDimension2(0.36, 0.218, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)
                displaydimension = selecmag.GetSelectedObject6(1, -1)
                dimension = displaydimension.GetDimension2(0)
                dimension.SetArcEndCondition(1, 2) '选择圆弧尺寸上的点
                myNote.GetAnnotation().SetPosition(0.36, 0.218, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                Dim vpoint2 As Object
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vpoint2 = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合

                selecmag.AddSelectionListObject(vEdges2(5), Nothing)
                part.AddDimension2(0.34, 0.2, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges2(0), Nothing)
                part.AddDimension2(0.35, 0.197, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)


                selecmag.AddSelectionListObject(vpoint2(3), Nothing)
                selecmag.AddSelectionListObject(vpoint2(6), Nothing)
                part.AddDimension2(0.348, 0.185, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 2, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 定子压圈()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\定子压圈.SLDPRT"
                Dim dz3 As String
                dz3 = "\定子压圈.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim swedge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim diameter1 As Double
                Dim Tolerance_type As Double
                Dim Tolerance_type_value As Double
                Dim diameterD As Double
                Dim hor_distance As Double
                Dim ver_distance As Double
                Dim thickness As Double
                Dim pi As Double
                pi = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Stator_pressing_ring", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("Code") = "8MJ.090.454" Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        diameter1 = dr.GetString("diameter1") / 1000
                        Tolerance_type = dr.GetString("Tolerance_type") / 1000
                        Tolerance_type_value = dr.GetString("Tolerance_type_value") / 1000
                        diameterD = dr.GetString("diameterD") / 1000
                        hor_distance = dr.GetString("hor_distance") / 1000
                        ver_distance = dr.GetString("ver_distance") / 1000
                        thickness = dr.GetString("thickness") / 1000
                    End If
                Loop

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCircleByRadius(0, 0, 0, diameterD / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter1 / 2)
                part.Extension.SelectByID2("草图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness, thickness, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                sketcher.CreateLine(0.008, 0.01, 0, 0.008, 0.0125, 0)

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0.008, 0.0125, 0, False, 0, Nothing, 0)
                part.Extension.SelectByRay(0, 0.0001, 0, 0, -1, 0, 0.0001, 1, True, 0, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.015, 0.046, 0)
                part.Parameter("D1@草图2").SystemValue = hor_distance / 2

                Dim linea As SldWorks.SketchSegment
                linea = sketcher.CreateLine(0, 0.001, 0, 0.001, 0.001, 0)
                part.AddDimension2(1.43, 5.32, 0)
                part.Parameter("D2@草图2").SystemValue = hor_distance / 2
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(1.31, 5.35, 0)
                part.Parameter("D3@草图2").SystemValue = ver_distance

                part.Extension.SelectByID2("D1@草图2@零件10.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("D3@草图2@零件10.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("D2@草图2@零件10.SLDPRT", "DIMENSION", 0, 0, 0, True, 0, Nothing, 0)
                part.EditDelete()

                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchConstraintsDel(0, "sgCOINCIDENT")
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgVERTICAL2D")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.01, 0.06, 0)
                part.Parameter("D1@草图2").SystemValue = 0.005

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(1, 2, 0.01, 0.005, 0, 1.5707963267949, "", False, False, False, False, True)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)



                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByRay(0, 0, 0, 0, 1, 0, 0.001, 1, True, 1, 0)

                Dim swFeat As Object
                Dim swFeatMgr As Object
                swFeatMgr = part.FeatureManager
                Dim swFeatData As Object
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = False
                swFeatData.GeometryPattern = False
                swFeatData.ReverseDirection = False
                swFeatData.Spacing = 90 * pi / 180
                swFeatData.TotalInstances = 4
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData) '以上为特征圆周阵列
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.1, 0.192, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.165, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                part.Extension.SelectByID2("细节项目256@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(22)
                myNote.GetAnnotation().SetPosition(0.057, 0.112, 0)


                myNote = part.InsertNote(
                "1.自由尺寸公差按GB1804-79的Js15；" + Chr(13) + Chr(10) +
                "2.毛刺不超过0.2mm。"）
                myNote.GetAnnotation().SetPosition(0.043, 0.102, 0)
                part.Extension.SelectByID2("细节项目257@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateCircle(-0.000426, 0.072115, 0#, 0.01677, 0.060407, 0#)
                myView = part.CreateDetailViewAt4(0.147, 0.098, 0, 0, 2, 1, "I", 0, False, False, False, False)
                myViewname = myView.Name
                Debug.Print(myViewname)
                part.ClearSelection2(True) '局部视图

                DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                Debug.Print(DrawTitle)
                part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '前视图
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                part.AddDimension2(0.1204, 0.2118, 0).Diametric = True
                part.EditDimensionProperties2(4, 0.001, 0, "", "", False, 1, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(16), Nothing)
                part.AddDimension2(0.075, 0.211, 0)
                part.ClearSelection2(True)


                part.SketchManager.CreateLine(0, 0.07, 0, 0, -0.07, 0)
                part.CreateSectionViewAt5(0.182, 0.192, 0, "", 132, 0, 0) '剖面图
                part.ClearSelection2(True)
                Dim X As Double
                Dim Y As Double
                Dim Z As Double
                Dim point As SldWorks.IEdgePoint
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.SelectMidpoint()
                point = selecmag.GetSelectedObject6(1, -1)
                point.GetPointCoordinates(X, Y, Z)
                myNote = part.InsertNote("4槽均布")
                Annotation = myNote.GetAnnotation
                Annotation.SetPosition(0.058, 0.276, 0)
                myNote.GetAnnotation.SetLeader3(3, 0, False, False, False, False)
                Annotation.SetLeaderAttachmentPointAtIndex(0, X + 0.1, Y + 0.192, Z) '设置注释引线位置
                part.ClearSelection2(True)



                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges(13), Nothing)
                part.AddDimension2(0.184, 0.256, 0)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("细节项目258@工程图视图2", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.148, 0.1135, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.192, 0.1032, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 相间绝缘()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\相间绝缘.SLDPRT"
                Dim dz3 As String
                dz3 = "\相间绝缘.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim swedge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance_under_left As Double
                Dim h_d_top_left As Double
                Dim h_d_under_middle1 As Double
                Dim h_d_under_middle2 As Double
                Dim ver_distance_left As Double
                Dim v_d_middle As Double
                Dim v_d_right As Double
                Dim radius_out As Double
                Dim radius_middle As Double
                Dim radius_right As Double
                Dim thickness As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Phase_insulation_463", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr("Code")
                        name = dr("name")
                        company = dr("company")
                        material = dr("material")
                        scale_m = dr("scale_m")
                        scale_d = dr("scale_d")
                        hor_distance_under_left = dr("hor_distance_under_left") / 1000
                        h_d_top_left = dr("h_d_top_left") / 1000
                        h_d_under_middle1 = dr("h_d_under_middle1") / 1000
                        h_d_under_middle2 = dr("h_d_under_middle2") / 1000
                        ver_distance_left = dr("ver_distance_left") / 1000
                        v_d_middle = dr("v_d_middle") / 1000
                        v_d_right = dr("v_d_right") / 1000
                        radius_out = dr("radius_out") / 1000
                        radius_middle = dr("radius_middle") / 1000
                        radius_right = dr("radius_right") / 1000
                        thickness = dr("thickness") / 1000
                    End If
                Loop

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateLine(0, 0, 0, hor_distance_under_left, 0, 0)
                sketcher.CreateLine(0, 0, 0, h_d_top_left, ver_distance_left, 0)
                sketcher.CreateCircleByRadius(hor_distance_under_left + h_d_under_middle1, -v_d_middle, 0, radius_out)
                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                sketcher.CreateLine(0, 0, 0, 0.2, 0, 0)
                sketcher.CreateLine(0.115, 0, 0, 0.115, 0.003, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point9", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgVERTICAL2D")
                part.AddDimension2(0.11, 0.001, 0)
                part.Parameter("D1@草图1").SystemValue = v_d_right
                part.ClearSelection2(True)
                part.SketchManager.CreateArc(hor_distance_under_left + radius_middle, 0, 0, hor_distance_under_left, 0, 0, hor_distance_under_left + radius_middle, radius_middle, 0, -1)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(0.06, 0.05, 0, 0.065, 0.06, 0)
                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Point14", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance_under_left + h_d_under_middle1, -v_d_middle - radius_out, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0.107263145237424, 0.003, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0.044, 0, 0, True, 0, Nothing, 0)
                part.AddVerticalDimension2(0.113, 0.00166, 0)
                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateFillet(radius_right, 1) '圆角
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)


                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.114, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)

                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.165, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                myNote = part.InsertNote("12件/台"）
                part.Extension.SelectByID2("细节项目256@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(22)
                myNote.GetAnnotation().SetPosition(0.144, 0.112, 0)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()





                DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                Debug.Print(DrawTitle)
                part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                Dim vpoints As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0) '前视图
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                vpoints = View.GetVisibleEntities2(vComponent, 2)
                part.InsertModelAnnotations3(0, 32768, True, False, False, True)
                part.Extension.SelectByID2("D2@草图1@相间绝缘-1@工程图视图1", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("草图1@相间绝缘-1@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.UnblankSketch()

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                part.AddHorizontalDimension2(0.0625, 0.201, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                part.AddVerticalDimension2(0.055, 0.179, 0)

                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddHorizontalDimension2(0.08303, 0.158, 0)

                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                selecmag.AddSelectionListObject(vpoints(3), Nothing)
                part.AddHorizontalDimension2(0.1087, 0.158, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                selecmag.AddSelectionListObject(vpoints(3), Nothing)
                part.AddHorizontalDimension2(0.11, 0.149, 0)

                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                selecmag.AddSelectionListObject(vpoints(3), Nothing)
                part.AddVerticalDimension2(0.125, 0.1636, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges(1), Nothing) '选择圆角
                Dim displaydimension As SldWorks.DisplayDimension
                Dim myadd As Object
                myadd = part.AddDimension2(0.151, 0.18, 0)
                displaydimension = selecmag.GetSelectedObject6(1, -1)
                displaydimension.SetBrokenLeader2(False, 2)
                Annotation = myadd.GetAnnotation()
                Annotation.SetPosition(0.1525, 0.182, 0) '位置微调，消除延伸线
                'part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineStyles_e.swLineCONTINUOUS)
                'part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyleThickness, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineWeights_e.swLW_THIN)
                'part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText)
                ''改变尺寸样式为折引线
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "R", "", True, "", "", False) '改变箭头方向

                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.088, 0.187, 0)
                'displaydimension = selecmag.GetSelectedObject6(1, -1)
                'displaydimension.SetBrokenLeader2(False, 2)

                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.113, 0.17, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "R", "", True, "", "", False)
                'displaydimension = selecmag.GetSelectedObject6(1, -1)
                'displaydimension.SetBrokenLeader2(False, 1)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 槽楔()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\槽楔.SLDPRT"
                Dim dz3 As String
                dz3 = "\槽楔.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim Displaydimention As SldWorks.DisplayDimension
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim swedge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim pi As Double
                pi = 3.14159265358979
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_wedge As Double
                Dim ver_distance As Double
                Dim surface_finish_type As Double
                Dim angle As Double
                Dim hor_L As Double
                Dim hor_B As Double
                Dim hor_b1 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Slot_wedge", mysqlcon)
                dr = mysqlcom.ExecuteReader()



                Do Until dr.Read() = False
                    If dr.GetString("Code") = "8MJ.783.852" Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        hor_wedge = dr.GetString("hor_wedge") / 1000
                        ver_distance = dr.GetString("ver_distance") / 1000
                        surface_finish_type = dr.GetString("surface_finish_type") / 1000
                        angle = dr.GetString("angle")
                        hor_L = dr.GetString("hor_L") / 1000
                        hor_B = dr.GetString("hor_B") / 1000
                        hor_b1 = dr.GetString("hor_b1") / 1000
                    End If
                Loop
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCornerRectangle(0, ver_distance / 2, hor_B, hor_B / 2, 0, 0)
                sketcher.CreateLine(0, ver_distance, 0, hor_b1 / 2, ver_distance, 0)
                sketcher.CreateLine(hor_B / 2, ver_distance / 2, 0, hor_b1 / 2, ver_distance, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgHORIZONTAL2D")
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgVERTICAL2D")

                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0, 0.00137, -0.002)
                part.ClearSelection2(True)
                part.Parameter("D1@草图1").SystemValue = angle * pi / 180
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)

                Dim lines As SldWorks.SketchSegment
                lines = part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.05, 0)

                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                lines.Select4(True, Nothing)

                part.SketchMirror()
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                lines.Select4(True, Nothing)
                part.EditDelete()
                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("草图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, hor_L, hor_L, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.ClearSelection2(True)
                part.Extension.SelectByRay(-0.001, 0, 0, 1, 0, 0, 0.0001, 1, False, 0, 0)
                part.FeatureManager.InsertFeatureChamfer(6, 2, ver_distance - ((hor_B - hor_b1) / 2 * Math.Tan(angle * pi / 180)), 0, hor_wedge, 0, 0, 0)
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager


                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.082, 0.2, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                'myView = Draw.CreateUnfoldedViewAt3(0.3, 0.19, 0, False)
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.162, 0.2, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                If Not myNote Is Nothing Then
                    myNote.LockPosition = False
                    myNote.Angle = 0
                    myNote.SetBalloon(0, 0)
                    Annotation = myNote.GetAnnotation()
                    If Not Annotation Is Nothing Then
                        Annotation.SetLeader3(SwConst.swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                        Annotation.SetPosition(0.165, 0.055, 0)
                        Annotation.SetTextFormat(0, True, 0)
                    End If
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求" + Chr(13) + Chr(10) +
                "未注公差的线性尺寸的极限偏差按GB/1804-C。"）
                part.Extension.SelectByID2("细节项目255@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(18)
                Annotation = myNote.GetAnnotation()
                Annotation.SetPosition(0.081, 0.135, 0)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)
                Dim mySFSymbol As SldWorks.SFSymbol
                mySFSymbol = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                Annotation = mySFSymbol.GetAnnotation()
                Annotation.SetPosition2(0.077, 0.201, 0)
                mySFSymbol = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "", "")
                mySFSymbol.SetAngle(180 * pi / 180)
                Annotation = mySFSymbol.GetAnnotation()
                Annotation.SetPosition2(0.086, 0.199, 0)


                DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                Debug.Print(DrawTitle)
                part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                Dim Edges As SldWorks.Edge
                Dim vertex As SldWorks.Vertex
                Dim point As SldWorks.EdgePoint
                Dim vEdgeCount As Integer
                Dim i As Integer
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 30
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 25
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddHorizontalDimension2(0.049, 0.193, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.083, 0.183, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                part.AddDimension2(0.124, 0.2, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)
                part.AddHorizontalDimension2(0.162, 0.204, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 1, 1, "", "", True, "", "", False)
                part.AddHorizontalDimension2(0.162, 0.191, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.178, 0.198, 0)
                part.ClearSelection2(True)
                Dim myTextFormat As Object
                myTextFormat = part.Extension.GetUserPreferenceTextFormat(swUserPreferenceTextFormat_e.swDetailingDimensionTextFormat, swUserPreferenceOption_e.swDetailingDimension)
                myTextFormat.CharHeight = 0.003
                part.Extension.SetUserPreferenceTextFormat(swUserPreferenceTextFormat_e.swDetailingDimensionTextFormat, swUserPreferenceOption_e.swDetailingDimension, myTextFormat)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingLinearDimPrecision, swUserPreferenceOption_e.swDetailingDimension, 1)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 定子铁心（）
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\定子铁心5MJ.663.674.SLDASM"
                Dim dz3 As String = "\定子铁心5MJ.663.674.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim Assem As SldWorks.AssemblyDoc
                swapp = CreateObject("Sldworks.application")
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.FrameState = 1 '窗体大小调整为最大
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
                swapp.Visible = True
                Assem = swapp.ActiveDoc

                Dim AssemblyTitle As String
                AssemblyTitle = Assem.GetTitle
                Debug.Print(AssemblyTitle)
                Dim errors As Long
                Dim longwarnings As Long
                Dim tmpObj As SldWorks.ModelDoc2
                Dim selecter As SldWorks.SelectionMgr
                tmpObj = swapp.ActiveDoc
                selecter = tmpObj.SelectionManager

                Const pi As Double = 3.1415962
                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\定子冲片.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                Dim swInsertedComponent As SldWorks.Component2
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\定子冲片.SLDPRT", 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\定子冲片.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT", 0, "", False, "", 0, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\扣片.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\扣片.SLDPRT", 0, "", False, "", 0, 0.3, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\扣片.SLDPRT")


                Dim 定子压圈1 As SldWorks.Feature
                Dim 定子压圈2 As SldWorks.Feature
                Dim 定子冲片 As SldWorks.Feature
                Dim 定子冲片1 As SldWorks.Feature
                Dim 扣片 As SldWorks.Feature

                Dim vface1 As Object
                Dim vface2 As Object
                Dim vface3 As Object
                Dim vface4 As Object
                Dim vface5 As Object
                Dim edge1() As Object
                Dim edge2() As Object
                Dim edge3() As Object
                Dim edge4() As Object
                Dim edge5() As Object
                Dim TTfaces（） As Object
                Dim QFfaces（） As Object
                Dim HFfaces（） As Object
                Dim JTfaces（） As Object
                Dim CP1faces（） As Object
                Dim count As Integer
                Dim Part As SldWorks.ModelDoc2
                Dim feater As SldWorks.FeatureManager
                Dim selectmgr As SldWorks.SelectionMgr

                Part = swapp.ActiveDoc
                Part.ClearSelection2(True)
                selectmgr = Part.SelectionManager
                feater = Part.FeatureManager
                Part.Extension.SelectByID2("凸台-拉伸1@定子冲片-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                MsgBox(1)
                定子冲片 = selecter.GetSelectedObject6(1, -1)
                QFfaces = 定子冲片.GetFaces() '21竖面
                Part.ClearSelection2（True)

                Part.Extension.SelectByID2("切除-拉伸2@定子冲片-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                定子冲片1 = selecter.GetSelectedObject6(1, -1)
                CP1faces = 定子冲片1.GetFaces() '0

                Part.ClearSelection2（True)

                'Dim seledateT As SldWorks.SelectData
                'seledateT = selecter.CreateSelectData（）
                'seledateT.Mark = 2
                'Part.Extension.SelectByID2("定子冲片-1@" & AssemblyTitle, "COMPONENT", 0.02921377756212, 0.02945923284733, 0.00396211915150957, False, 1, Nothing, 0)
                'selecter.AddSelectionListObject(QFfaces（7）, seledateT)
                'feater.FeatureCircularPattern5(7, pi * 2, False, "NULL", False, True, False, False, False, False, 0, 0, "NULL", False)
                'MsgBox(0)

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT", 1, 32, "", errors, longwarnings)
                Assem = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = Assem.AddComponent5("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT", 0, "", False, "", 0, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\定子压圈.SLDPRT")

                Part.Extension.SelectByID2("凸台-拉伸1@定子压圈-2@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                定子压圈2 = selecter.GetSelectedObject6(1, -1)
                TTfaces = 定子压圈2.GetFaces()
                Part.ClearSelection2（True)
                'count = 定子压圈2.GetFaceCount()
                'count = 0
                'Do Until count > 100
                '    selecter.AddSelectionListObject(TTfaces(count), Nothing)
                '    MsgBox(count)
                '    Part.ClearSelection2(True)
                '    count = count + 1
                'Loop

                selectmgr.AddSelectionListObject(QFfaces（21）, Nothing)
                vface1 = selectmgr.GetSelectedObject6(1, -1)
                edge1 = vface1.GetEdges()
                Part.ClearSelection2(True)

                selectmgr.AddSelectionListObject(TTfaces(1), Nothing) '4
                vface2 = selectmgr.GetSelectedObject6(1, -1)
                edge2 = vface2.GetEdges()
                Part.ClearSelection2(True)
                'count = vface2.GetEdgeCount()
                'count = 0
                'Do Until count > 100
                '    selecter.AddSelectionListObject(edge2(count), Nothing)
                '    MsgBox(count)
                '    Part.ClearSelection2(True)
                '    count = count + 1
                'Loop
                Part.Extension.SelectByID2("凸台-拉伸1@定子压圈-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                定子压圈1 = selecter.GetSelectedObject6(1, -1)
                HFfaces = 定子压圈1.GetFaces()

                Part.ClearSelection2（True)



                selectmgr.AddSelectionListObject(QFfaces(22), Nothing)
                vface4 = selectmgr.GetSelectedObject6(1, -1)
                edge4 = vface4.GetEdges()
                Part.ClearSelection2(True)


                Part.Extension.SelectByID2("基体-法兰1@扣片-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                扣片 = selecter.GetSelectedObject6(1, -1)
                JTfaces = 扣片.GetFaces() '5X,6D
                'count = 扣片.GetFaceCount()
                'count = 0
                'Do Until count > 100
                '    selecter.AddSelectionListObject(JTfaces(count), Nothing)
                '    MsgBox(count)
                '    Part.ClearSelection2(True)
                '    count = count + 1
                'Loop
                Part.ClearSelection2（True)
                selectmgr.AddSelectionListObject(JTfaces(2), Nothing)
                vface5 = selectmgr.GetSelectedObject6(1, -1)
                edge5 = vface5.GetEdges()
                Part.ClearSelection2(True)


                selecter.AddSelectionListObject(TTfaces（1）, Nothing)
                selecter.AddSelectionListObject(QFfaces（21）, Nothing)
                Assem.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)   '重合
                selecter.AddSelectionListObject(edge1（3）, Nothing)
                selecter.AddSelectionListObject(edge2（4）, Nothing)
                Assem.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                Part.Extension.SelectByID2("定子压圈-2@" & AssemblyTitle, "COMPONENT", 0, 0, 0, False, 1, Nothing, 0)
                Part.Extension.SelectByID2("定子冲片-1@" & AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                Assem.AddMate5(16, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                selecter.AddSelectionListObject(HFfaces（1）, Nothing)
                selecter.AddSelectionListObject(QFfaces（22）, Nothing)
                Assem.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)   '重合

                selectmgr.AddSelectionListObject(HFfaces(1), Nothing) '4
                vface3 = selectmgr.GetSelectedObject6(1, -1)
                edge3 = vface3.GetEdges()
                Part.ClearSelection2(True)

                selecter.AddSelectionListObject(edge4（6）, Nothing)
                selecter.AddSelectionListObject(edge3（4）, Nothing)
                Assem.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                selecter.AddSelectionListObject(edge4（0）, Nothing)
                selecter.AddSelectionListObject(edge3（2）, Nothing)
                Assem.AddMate5(3, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                selecter.AddSelectionListObject(CP1faces（2）, Nothing)
                selecter.AddSelectionListObject(JTfaces（6）, Nothing)
                Assem.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                selecter.AddSelectionListObject(TTfaces（0）, Nothing)
                selecter.AddSelectionListObject(JTfaces（5）, Nothing)
                Assem.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                selecter.AddSelectionListObject(edge5（2）, Nothing)
                selecter.AddSelectionListObject(CP1faces（1）, Nothing)
                Assem.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                Part.ClearSelection2(True)
                Dim seledateS As SldWorks.SelectData

                seledateS = selecter.CreateSelectData（）
                seledateS.Mark = 2
                Part.Extension.SelectByID2("扣片-1@" & AssemblyTitle, "COMPONENT", 0.02921377756212, 0.02945923284733, 0.00396211915150957, False, 1, Nothing, 0)
                selecter.AddSelectionListObject(edge1（3）, seledateS)
                feater.FeatureCircularPattern5(5, pi * 2, False, "NULL", False, True, False, False, False, False, 0, 0, "NULL", False)
                Part.ClearSelection2(True)  '圆周阵列
                Dim cusproper As SldWorks.CustomPropertyManager '设置属性
                cusproper = Part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "定子铁心")
                cusproper.Set2("代号", "5MJ.663.674")
                cusproper.Set2("材料", " ")
                'Part = swapp.ActiveDoc
                'swapp.OpenDoc6("C:\SOLIDWORKS Data\browser\GB\screws\machine screws\slotted pan head screws gb.sldprt", 1, 32, "", errors, longwarnings)
                'Part.AddComponent5("C:\SOLIDWORKS Data\browser\GB\screws\machine screws\slotted pan head screws gb.sldprt", 0, "PreviewCfg", False, "", -0.090911894812345, -0.0504623388652101, 0)
                'swapp.CloseDoc("C:\SOLIDWORKS Data\browser\GB\screws\machine screws\slotted pan head screws gb.sldprt")
                'Part.ShowConfiguration2("GB_FASTENER_SCREWS_NCHB M6X8-8-N")

                Part.BlankRefGeom() '隐藏
                Part.EditRebuild3()
                Part.SaveAs3(dz1 + dz2, 0, 2)
                swapp.ExitApp()

            End Sub

        End Class
        Public Class 接线盒
            Public Sub 密封垫()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\密封垫.SLDPRT"
                Dim dz3 As String
                dz3 = "\密封垫.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim hor_distance4 As Double
                Dim hor_distance5 As Double
                Dim hor_distance6 As Double
                Dim hor_distance7 As Double
                Dim hor_distance8 As Double
                Dim hor_distance9 As Double
                Dim hor_distance10 As Double
                Dim diameter_d1 As Double
                Dim radius1 As Double
                Dim radius2 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from seal", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                hor_distance3 = dr.GetString("hor_distance3") / 1000
                hor_distance4 = dr.GetString("hor_distance4") / 1000
                hor_distance5 = dr.GetString("hor_distance5") / 1000
                hor_distance6 = dr.GetString("hor_distance6") / 1000
                hor_distance7 = dr.GetString("hor_distance7") / 1000
                hor_distance8 = dr.GetString("hor_distance8") / 1000
                hor_distance9 = dr.GetString("hor_distance9") / 1000
                hor_distance10 = dr.GetString("hor_distance10") / 1000
                radius1 = dr.GetString("radius1") / 1000
                radius2 = dr.GetString("radius2") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance1 / 2, ver_distance1 / 2, 0)
                sketcher.CreateCircleByRadius(hor_distance3 / 2, -ver_distance2 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(-hor_distance3 / 2, -ver_distance2 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(-hor_distance3 / 2, +ver_distance2 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(hor_distance3 / 2, ver_distance2 / 2, 0, diameter_d1 / 2)
                part.ClearSelection2(True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, 0.001, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)

                part.FeatureManager.InsertRefPlane(8, 0.001, 0, 0, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(-hor_distance1 / 2 - 0.001, 0, 0, hor_distance1 / 2 + 0.001, 0, 0)
                sketcher.CreateCenterLine(0, -ver_distance1 / 2 - 0.001, 0, 0, ver_distance1 / 2 + 0.001, 0)

                sketcher.CreateLine(hor_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, 0, 0, hor_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, hor_distance5 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(hor_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, hor_distance5 / 2, 0, hor_distance1 / 2 - hor_distance10, hor_distance6 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(hor_distance1 / 2 - hor_distance10, hor_distance6 / 2, 0, hor_distance1 / 2 - hor_distance10, ver_distance1 / 2 - hor_distance10 - radius2, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateArc(hor_distance1 / 2 - hor_distance10, ver_distance1 / 2 - hor_distance10, 0, hor_distance1 / 2 - hor_distance10, ver_distance1 / 2 - hor_distance10 - radius2, 0, hor_distance1 / 2 - hor_distance10 - radius2, ver_distance1 / 2 - hor_distance10, 0, -1)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(hor_distance1 / 2 - hor_distance10 - radius2, ver_distance1 / 2 - hor_distance10, 0, hor_distance6 / 2, ver_distance1 / 2 - hor_distance10, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(hor_distance6 / 2, ver_distance1 / 2 - hor_distance10, 0, hor_distance5 / 2, ver_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(hor_distance5 / 2, ver_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, 0, 0, ver_distance1 / 2 - hor_distance7 - hor_distance8 - hor_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line13", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line14", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 1, 0.001, 0.001, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(-hor_distance4 / 2, -ver_distance1 / 2 + hor_distance8 + hor_distance9, 0, hor_distance4 / 2, -ver_distance1 / 2 + hor_distance8, 0)
                sketcher.CreateCornerRectangle(hor_distance1 / 2 - hor_distance8 - hor_distance9, hor_distance4 / 2, 0, hor_distance1 / 2 - hor_distance8, -hor_distance4 / 2, 0)
                sketcher.CreateCornerRectangle(-hor_distance4 / 2, ver_distance1 / 2 - hor_distance8, 0, hor_distance4 / 2, ver_distance1 / 2 - hor_distance8 - hor_distance9, 0)
                sketcher.CreateCornerRectangle(-hor_distance1 / 2 + hor_distance8, hor_distance4 / 2, 0, -hor_distance1 / 2 + hor_distance8 + hor_distance9, -hor_distance4 / 2, 0)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 0.001, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                Dim edge() As Object
                Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("切除-拉伸2", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(0), Nothing)
                selecmag.AddSelectionListObject(edge(1), Nothing)
                selecmag.AddSelectionListObject(edge(2), Nothing)
                selecmag.AddSelectionListObject(edge(3), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation

                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc


                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.109, 0.212, 0)
                myViewname = myView.Name

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object

                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 50
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                part.Extension.SelectByID2("Point40@草图2@密封垫-1@工程图视图1", "EXTSKETCHPOINT", 0.012, -0.041, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point37@草图2@密封垫-1@工程图视图1", "EXTSKETCHPOINT", -0.012, -0.041, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.108, 0.188, 0)
                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                selecmag.AddSelectionListObject(vEdges(9), Nothing)
                part.AddDimension2(0.108, 0.15, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                part.AddDimension2(0.042, 0.21, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddDimension2(0.054, 0.21, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddDimension2(0.108, 0.157, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                part.AddDimension2(0.108, 0.183, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(49), Nothing)
                part.AddDimension2(0.108, 0.178, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(24), Nothing)
                part.AddDimension2(0.077, 0.18, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                part.AddDimension2(0.051, 0.271, 0)
                Dim myGtol As Object
                Dim myAnno As Object
                myGtol = part.InsertGtol()
                If Not myGtol Is Nothing Then
                    myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                    myGtol.SetFrameValues(1, "0.3", "", "", "", "")
                    myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                    myGtol.SetFrameValues(2, "", "", "", "", "")
                    myGtol.SetPTZHeight（"", False）
                    myGtol.SetCompositeFrame（False）
                    myGtol.SetText（4, ""）
                    myGtol.SetBetweenTwoPoints（False, "", ""）
                    myAnno = myGtol.GetAnnotation()
                    If Not myAnno Is Nothing Then
                        myAnno.SetPosition(0.031337184612869697, 0.265752224297202, 0)
                        myAnno.SetLeader3(swLeaderStyle_e.swSTRAIGHT, 0, True, False, False, False)


                    End If
                End If
                part.WindowRedraw()

                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.058, 0.165, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(45), Nothing)
                part.AddDimension2(0.158, 0.221, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(44), Nothing)
                selecmag.AddSelectionListObject(vEdges(9), Nothing)
                part.AddDimension2(0.162, 0.214, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(46), Nothing)
                selecmag.AddSelectionListObject(vEdges(33), Nothing)
                part.AddDimension2(0.141, 0.21, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddDimension2(0.067, 0.157, 0)
                part.ClearSelection2(True)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.042, 0.108, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.内外边应整齐.无毛刺；" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.042, 0.1, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
            End Sub
            Public Sub 橡胶衬垫()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\橡胶衬垫.SLDPRT"
                Dim dz3 As String
                dz3 = "\橡胶衬垫.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager

                Const pi As Single = 3.141596

                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim thickness As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim hor_distance4 As Double
                Dim hor_distance5 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim ver_distance3 As Double
                Dim ver_distance4 As Double
                Dim diameter_D As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double
                Dim FilCorn1 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from rubber_gasket", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        hor_distance1 = dr.GetString("hor_distance1") / 1000
                        hor_distance2 = dr.GetString("hor_distance2") / 1000
                        hor_distance3 = dr.GetString("hor_distance3") / 1000
                        hor_distance4 = dr.GetString("hor_distance4") / 1000
                        hor_distance5 = dr.GetString("hor_distance5") / 1000
                        ver_distance1 = dr.GetString("ver_distance1") / 1000
                        ver_distance2 = dr.GetString("ver_distance2") / 1000
                        ver_distance3 = dr.GetString("ver_distance3") / 1000
                        ver_distance4 = dr.GetString("ver_distance4") / 1000
                        diameter_D = dr.GetString("diameter_D") / 1000
                        diameter_d1 = dr.GetString("diameter_d1") / 1000
                        diameter_d2 = dr.GetString("diameter_d2") / 1000
                        FilCorn1 = dr.GetString("FilCorn1") / 1000
                        thickness = dr.GetString("thickness") / 1000
                    End If
                Loop

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance1 / 2, ver_distance1 / 2, 0)
                part.ClearSelection2(True)
                part.SketchManager.CreateCircleByRadius(0, -diameter_D / 2, 0, diameter_d1 / 2)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("", "SKETCHSEGMENT", 0, -diameter_D / 2 - diameter_d1 / 2, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateCircularSketchStepAndRepeat(diameter_D / 2, pi / 2, 8, pi / 4, True, "", False, False, True)
                part.ClearSelection2(True)
                part.SketchManager.CreateCircleByRadius(hor_distance2 / 2, -ver_distance2 / 2, 0, diameter_d2 / 2)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("", "SKETCHSEGMENT", hor_distance2 / 2 - diameter_d2 / 2, -ver_distance2 / 2, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(2, 2, hor_distance2, ver_distance2, pi, pi / 2, "", False, False, False, True, True)
                part.SketchManager.CreateCenterRectangle(-hor_distance4 / 2, 0, 0, -hor_distance4 / 2 - hor_distance5 / 2, ver_distance4 / 2, 0)
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterRectangle(hor_distance4 / 2, 0, 0, hor_distance4 / 2 + hor_distance5 / 2, ver_distance4 / 2, 0)
                part.ClearSelection2(True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, thickness, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                Dim edge() As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("凸台-拉伸1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 50
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(edge(1), Nothing)
                selecmag.AddSelectionListObject(edge(2), Nothing)
                selecmag.AddSelectionListObject(edge(3), Nothing)
                selecmag.AddSelectionListObject(edge(0), Nothing)
                part.FeatureManager.FeatureFillet3(195, FilCorn1, FilCorn1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation


                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.113, 0.22, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*上视", 0.113, 0.144, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*上视", 0.113, 0.164, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object

                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                'Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 27
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(19), Nothing)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                part.AddDimension2(0.113, 0.167, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(21), Nothing)
                selecmag.AddSelectionListObject(vEdges(17), Nothing)
                part.AddDimension2(0.168, 0.224, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(6), Nothing)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.113, 0.171, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.158, 0.22, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(21), Nothing)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.158, 0.252, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.144, 0.171, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                part.AddDimension2(0.12, 0.249, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 1, 1, "8-<MOD-DIAM>", "均布", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(20), Nothing)
                part.AddDimension2(0.075, 0.257, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(26), Nothing)
                part.AddDimension2(0.103, 0.232, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                part.AddDimension2(0.083, 0.219, 0)
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                part.AddDimension2(0.067, 0.247, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 1, 1, "4-<MOD-DIAM>", "", True, "", "", False)

                Dim arc1 As SldWorks.SketchSegment
                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchSegment
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                arc1 = part.SketchManager.CreateCircle(0, 0, 0, diameter_D / 2, 0, 0)
                part.SketchManager.CreateConstructionGeometry()
                part.ClearSelection2(True)
                line1 = part.SketchManager.CreateCenterLine(-hor_distance4 / 2, ver_distance4 / 2 + 0.004, 0, -hor_distance4 / 2, -ver_distance4 / 2 - 0.004, 0)
                part.ClearSelection2(True)
                line2 = part.SketchManager.CreateCenterLine(hor_distance4 / 2, ver_distance4 / 2 + 0.004, 0, hor_distance4 / 2, -ver_distance4 / 2 - 0.004, 0)
                arc1.Select4(False, Nothing)
                part.AddDimension2(0.115, 0.221, 0)
                part.ClearSelection2(True)
                line1.Select4(False, Nothing)
                line2.Select4(True, Nothing)
                part.AddDimension2(0.112, 0.207, 0)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)

                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.161, 0.143, 0)
                part.ClearSelection2(True)

                part.SaveAs3(dz1 + dz3, 0, 2)
            End Sub
            Public Sub 接线盒盖()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\接线盒盖.SLDPRT"
                Dim dz3 As String
                dz3 = "\接线盒盖.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim swFeatData As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim line As SldWorks.SketchSegment
                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchLine
                Dim line3 As SldWorks.SketchLine
                Dim point As SldWorks.SketchPoint
                Dim point1 As SldWorks.SketchPoint
                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment
                Dim edge() As Object
                Dim vFaceCount As Integer
                Dim vEdgeCount As Integer
                Dim swbodys As Object



                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                'swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)



                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim weight As String
                Dim FilRad1 As Double
                Dim FilRad2 As Double
                Dim External_diameter As Double
                Dim External_hor_distance1 As Double
                Dim External_hor_distance2 As Double
                Dim External_hor_distance3 As Double
                Dim External_ver_distance1 As Double
                Dim External_ver_distance2 As Double
                Dim External_ver_distance3 As Double
                Dim External_FilRad As Double
                Dim Inside_hor_distance1 As Double
                Dim Inside_hor_distance2 As Double
                Dim Inside_hor_distance3 As Double
                Dim Inside_hor_distance4 As Double
                Dim Inside_hor_distance5 As Double
                Dim Inside_ver_distance1 As Double
                Dim Inside_ver_distance2 As Double
                Dim Inside_ver_distance3 As Double
                Dim Inside_ver_distance4 As Double
                Dim Inside_ver_distance5 As Double
                Dim Inside_ver_distance6 As Double
                Dim Inside_ver_distance7 As Double
                Dim Inside_ver_distance8 As Double
                Dim Inside_ver_distance9 As Double
                Dim Inside_diameter As Double
                Dim letter1 As String
                Dim letter2 As String
                Dim letter3 As String
                Dim letter4 As String
                Dim letter5 As String
                Dim letter6 As String
                Dim letter7 As String
                Dim letter8 As String
                Dim letter9 As String
                Dim letter10 As String
                Dim letter11 As String
                Dim letter12 As String
                Dim letter13 As String
                Dim Bulge_height As Double
                Dim proA_hor_distance1 As Double
                Dim proA_hor_distance2 As Double
                Dim proA_hor_distance3 As Double
                Dim proA_hor_distance4 As Double
                Dim proA_ver_distance1 As Double
                Dim proB_diameter As Double
                Dim proC_hor_distance1 As Double
                Dim proC_hor_distance2 As Double
                Dim proC_ver_distance1 As Double
                Dim proC_ver_distance2 As Double
                Dim proC_ver_distance3 As Double
                Dim proD_hor_distance1 As Double
                Dim proD_hor_distance2 As Double
                Dim Thin_wall_thickness As Double
                Const pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from JunctionBox_cover", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        weight = dr.GetString("weight")
                        FilRad1 = dr.GetString("FilRad1") / 1000
                        FilRad2 = dr.GetString("FilRad2") / 1000
                        External_diameter = dr.GetString("External_diameter") / 1000
                        External_hor_distance1 = dr.GetString("External_hor_distance1") / 1000
                        External_hor_distance2 = dr.GetString("External_hor_distance2") / 1000
                        External_hor_distance3 = dr.GetString("External_hor_distance3") / 1000
                        External_ver_distance1 = dr.GetString("External_ver_distance1") / 1000
                        External_ver_distance2 = dr.GetString("External_ver_distance2") / 1000
                        External_ver_distance3 = dr.GetString("External_ver_distance3") / 1000
                        External_FilRad = dr.GetString("External_FilRad"） / 1000
                        Inside_hor_distance1 = dr.GetString("Inside_hor_distance1") / 1000
                        Inside_hor_distance2 = dr.GetString("Inside_hor_distance2") / 1000
                        Inside_hor_distance3 = dr.GetString("Inside_hor_distance3") / 1000
                        Inside_hor_distance4 = dr.GetString("Inside_hor_distance4") / 1000
                        Inside_hor_distance5 = dr.GetString("Inside_hor_distance5") / 1000
                        Inside_ver_distance1 = dr.GetString("Inside_ver_distance1") / 1000
                        Inside_ver_distance2 = dr.GetString("Inside_ver_distance2") / 1000
                        Inside_ver_distance3 = dr.GetString("Inside_ver_distance3") / 1000
                        Inside_ver_distance4 = dr.GetString("Inside_ver_distance4") / 1000
                        Inside_ver_distance5 = dr.GetString("Inside_ver_distance5") / 1000
                        Inside_ver_distance6 = dr.GetString("Inside_ver_distance6") / 1000
                        Inside_ver_distance7 = dr.GetString("Inside_ver_distance7") / 1000
                        Inside_ver_distance8 = dr.GetString("Inside_ver_distance8") / 1000
                        Inside_ver_distance9 = dr.GetString("Inside_ver_distance9") / 1000
                        Inside_diameter = dr.GetString("Inside_diameter") / 1000
                        letter1 = dr.GetString("letter1")
                        letter2 = dr.GetString("letter2")
                        letter3 = dr.GetString("letter3")
                        letter4 = dr.GetString("letter4")
                        letter5 = dr.GetString("letter5")
                        letter6 = dr.GetString("letter6")
                        letter7 = dr.GetString("letter7")
                        letter8 = dr.GetString("letter8")
                        letter9 = dr.GetString("letter9")
                        letter10 = dr.GetString("letter10")
                        letter11 = dr.GetString("letter11")
                        letter12 = dr.GetString("letter12")
                        letter13 = dr.GetString("letter13")
                        Bulge_height = dr.GetString("Bulge_height") / 1000
                        proA_hor_distance1 = dr.GetString("proA_hor_distance1") / 1000
                        proA_hor_distance2 = dr.GetString("proA_hor_distance2") / 1000
                        proA_hor_distance3 = dr.GetString("proA_hor_distance3") / 1000
                        proA_hor_distance4 = dr.GetString("proA_hor_distance4") / 1000
                        proA_ver_distance1 = dr.GetString("proA_ver_distance1") / 1000
                        proB_diameter = dr.GetString("proB_diameter") / 1000
                        proC_hor_distance1 = dr.GetString("proC_hor_distance1") / 1000
                        proC_hor_distance2 = dr.GetString("proC_hor_distance2") / 1000
                        proC_ver_distance1 = dr.GetString("proC_ver_distance1") / 1000
                        proC_ver_distance2 = dr.GetString("proC_ver_distance2") / 1000
                        proC_ver_distance3 = dr.GetString("proC_ver_distance3") / 1000
                        proD_hor_distance1 = dr.GetString("proD_hor_distance1") / 1000
                        proD_hor_distance2 = dr.GetString("proD_hor_distance2") / 1000
                        Thin_wall_thickness = dr.GetString("Thin_wall_thickness") / 1000
                    End If
                Loop

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, External_hor_distance1 / 2, -External_hor_distance1 / 2, 0)
                part.SketchManager.CreateFillet(FilRad1, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0， 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0， 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(FilRad1, 2) '草图倒圆角
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, proA_hor_distance2, proA_hor_distance2, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("凸台-拉伸2[2]", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体面
                swbodys = part.SelectionManager.GetSelectedObject6(1, -1)
                edge = swbodys.Getfaces()
                selecmag.AddSelectionListObject(edge(1), Nothing)
                part.InsertFeatureShell(proA_hor_distance1, False)


                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateLine(-proA_hor_distance2, External_hor_distance2 / 2, 0, -proA_hor_distance2 - proC_hor_distance2, proC_ver_distance3 + External_hor_distance2 / 2 - proC_ver_distance2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-proA_hor_distance2 - proC_hor_distance2, proC_ver_distance3 + External_hor_distance2 / 2 - proC_ver_distance2, 0, -proA_hor_distance2 - proC_hor_distance2, External_hor_distance2 / 2 - proC_ver_distance2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-proA_hor_distance2 - proC_hor_distance2, External_hor_distance2 / 2 - proC_ver_distance2, 0, -proA_hor_distance1, External_hor_distance2 / 2 - proC_ver_distance2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-proA_hor_distance1, External_hor_distance2 / 2 - proC_ver_distance2, 0, -proA_hor_distance1, External_hor_distance2 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-proA_hor_distance1, External_hor_distance2 / 2, 0, -proA_hor_distance2, External_hor_distance2 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.FeatureManager.FeatureExtrusion2(True, False, False, 6, 0, proA_ver_distance1, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                '两侧拉伸输入的距离是拉伸的总距离
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("凸台-拉伸2", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体边线
                swbodys = part.SelectionManager.GetSelectedObject6(1, -1)
                edge = swbodys.GetEdges()
                'vEdgeCount = swbodys.GetEdgeCount()
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(41), Nothing)
                selecmag.AddSelectionListObject(edge(42), Nothing)
                selecmag.AddSelectionListObject(edge(47), Nothing)
                part.FeatureManager.FeatureFillet3(195, External_FilRad, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '特征倒圆角

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.InsertAxis2(True)   '建基准轴
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("圆角1", "SOLIDBODY", 0.00108992905896343, 0.0400000000000205, 0.0085184067937103, True, 256, Nothing, 0)
                Featmgr = part.FeatureManager
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = False
                swFeatData.Spacing = 2 * pi
                swFeatData.TotalInstances = 4
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)  '特征圆周阵列

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)


                arc2 = part.SketchManager.CreateCircleByRadius(External_hor_distance3 / 2, External_hor_distance3 / 2, 0, External_diameter / 2)
                arc1 = part.SketchManager.CreateCircleByRadius(External_hor_distance3 / 2, External_hor_distance3 / 2, 0, FilRad2)
                line = part.SketchManager.CreateLine(External_hor_distance2 / 2, External_hor_distance2 / 2, 0, External_hor_distance2 / 2, -External_hor_distance2 / 2, 0)
                line1 = part.SketchManager.CreateLine(External_hor_distance2 / 2, External_hor_distance2 / 2, 0, -External_hor_distance2 / 2, External_hor_distance2 / 2, 0)
                part.ClearSelection2(True)
                arc1.Select4(True, Nothing)
                part.SketchManager.SketchTrim(0, External_hor_distance3 / 2 + FilRad2, External_hor_distance3 / 2, 0)
                part.ClearSelection2(True) '修剪
                line.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, External_hor_distance2 / 2, -External_hor_distance2 / 2, 0)
                part.ClearSelection2(True) '修剪
                line1.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, -External_hor_distance2 / 2, External_hor_distance2 / 2, 0)
                part.ClearSelection2(True) '修剪
                part.FeatureManager.FeatureExtrusion2(True, False, True, 0, 0, proA_hor_distance3, proA_hor_distance3, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False     '距离拉伸


                part.Extension.SelectByID2("凸台-拉伸3", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbodys = selecmag.GetSelectedObject6(1, -1)
                edge = swbodys.GetEdges()
                vEdgeCount = swbodys.GetEdgeCount()
                selecmag.AddSelectionListObject(edge(62), Nothing)
                selecmag.AddSelectionListObject(edge(63), Nothing)
                part.FeatureManager.FeatureFillet3(195, External_FilRad, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) '特征倒圆角
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("圆角2", "SOLIDBODY", 0.00108992905896343, 0.0400000000000205, 0.0085184067937103, True, 256, Nothing, 0)
                Featmgr = part.FeatureManager
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = False
                swFeatData.Spacing = 2 * pi
                swFeatData.TotalInstances = 4
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)  '特征圆周阵列

                part.Extension.SelectByID2("阵列(圆周)2[3]", "SOLIDBODY", 0, 0, 0, False, 2, Nothing, 0)
                part.Extension.SelectByID2("阵列(圆周)2[2]", "SOLIDBODY", 0, 0, 0, True, 2, Nothing, 0)
                part.Extension.SelectByID2("阵列(圆周)2[1]", "SOLIDBODY", 0, 0, 0, True, 2, Nothing, 0)
                part.Extension.SelectByID2("圆角2", "SOLIDBODY", 0, 0, 0, True, 2, Nothing, 0)
                part.FeatureManager.InsertCombineFeature(15903, Nothing, Nothing)    '将几个实体组合


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                arc2 = part.SketchManager.CreateCircleByRadius(External_hor_distance3 / 2, External_hor_distance3 / 2, 0, proB_diameter / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, proA_hor_distance1, proA_hor_distance1, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False   '拉伸切除
                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr = part.FeatureManager
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = False
                swFeatData.Spacing = 2 * pi
                swFeatData.TotalInstances = 4
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)
                part.ClearSelection2(True)    '特征切除整列

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance1 - proD_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateLine(-Inside_hor_distance1 / 2, Inside_ver_distance1 / 2, 0, Inside_hor_distance1 / 2, Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance1 / 2, Inside_ver_distance1 / 2, 0, Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0, -Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0, -Inside_hor_distance1 / 2, Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("草图5", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 1, proD_hor_distance2, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance1 - proD_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                line = part.SketchManager.CreateCenterLine(0, External_hor_distance2 / 2, 0, 0, -External_hor_distance2 / 2, 0)
                arc1 = part.SketchManager.CreateCircleByRadius(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2, 0, Inside_diameter / 2)
                arc2 = part.SketchManager.CreateCircleByRadius(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0, Inside_diameter / 2)
                arc1.Select4(True, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 1, Inside_hor_distance2, 0.01, 0, 1.5707963267949, "", False, False, False, True, False)     '线性阵列
                arc1.Select4(False, Nothing)
                arc2.Select4(True, Nothing)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                line.Select4(True, Nothing)
                part.SketchMirror()
                part.ClearSelection2(True)

                part.SketchManager.CreateLine(-Inside_hor_distance5 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2, 0, Inside_hor_distance5 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance5 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2, 0, Inside_hor_distance5 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance5 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0, -Inside_hor_distance5 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-Inside_hor_distance5 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0, -Inside_hor_distance5 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("草图6", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, proD_hor_distance2, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance1 - proD_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                line = part.SketchManager.CreateLine(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_diameter / 2, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2, 0, -Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_diameter / 2, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 - Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2, 0, -Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 - Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0)
                line.Select4(True, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 1, Inside_hor_distance2, 0.01, 0, 1.5707963267949, "", False, False, False, True, False)
                part.ClearSelection2(True)
                arc2 = part.SketchManager.CreateCircleByRadius(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0, Inside_diameter / 2)

                line = part.SketchManager.CreateLine(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_hor_distance5 / 2, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0, -Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_hor_distance5 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                part.SketchManager.SketchTrim(0, -Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_hor_distance5 / 2, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0)
                part.ClearSelection2(True) '修剪
                line1 = part.SketchManager.CreateLine(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 - Inside_hor_distance5 / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2, 0, -Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 - Inside_hor_distance5 / 2 + Thin_wall_thickness, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                line.Select4(False, Nothing)
                line1.Select4(True, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 1, Inside_hor_distance2, 0.01, 0, 1.5707963267949, "", False, False, False, True, False)
                part.SketchManager.CreateCenterLine(0, External_hor_distance2 / 2, 0, 0, -External_hor_distance2 / 2, 0)
                arc2.Select4(False, Nothing)
                part.EditDelete()

                line.Select4(False, Nothing)
                line1.Select4(True, Nothing)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line13", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.MoveOrCopy(True, 1, False, 0, 0, 0, 2 * Inside_hor_distance4 + Inside_hor_distance2 + Inside_hor_distance3, 0, 0)
                part.ClearSelection2(True)

                part.SketchManager.CreateLine(Inside_hor_distance4, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 - Inside_diameter / 2 + Thin_wall_thickness, 0, Inside_hor_distance4 + Inside_hor_distance2 + Inside_hor_distance3, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 - Inside_diameter / 2 + Thin_wall_thickness, 0)
                part.SketchManager.CreateLine(Inside_hor_distance4, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 + Inside_diameter / 2, 0, Inside_hor_distance4 + Inside_hor_distance2 + Inside_hor_distance3, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 + Inside_diameter / 2, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("草图7", "SKETCH", 0, 0, 0, False, 4, Nothing, 0)
                part.FeatureManager.FeatureExtrusionThin(True, False, False, 0, 0, 0.0005, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, 0.0001, 0.01, 0.0001, 0, 0, False, 0.005, True, True)
                part.SelectionManager.EnableContourSelection = False   '特征薄壁拉伸


                Dim swtext As SldWorks.SketchText
                Dim textformat As SldWorks.ITextFormat
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance1 - proD_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                'line = part.SketchManager.CreateCenterLine(-Inside_hor_distance4 - Inside_hor_distance2 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2 + Inside_ver_distance3, 0, Inside_hor_distance4 + Inside_hor_distance2 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2 + Inside_ver_distance3, 0)
                'line.Select4(False, Nothing)
                part.InsertSketchText(-Inside_hor_distance4, Inside_ver_distance5 - Inside_ver_distance1 / 2 + Inside_ver_distance3, 0, letter1, 3, 0, 0, 100, 100)
                part.InsertSketchText(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_ver_distance4 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2 - Inside_ver_distance4, 0, "▲", 3, 0, 0, 100, 100)
                part.InsertSketchText(Inside_hor_distance4 + Inside_hor_distance2 + Inside_ver_distance4 / 2, Inside_ver_distance5 - Inside_ver_distance1 / 2 - Inside_ver_distance4, 0, "Y", 3, 0, 0, 100, 100)
                swtext = part.InsertSketchText(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_diameter / 2 - Thin_wall_thickness, 0, 0, letter2, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-Inside_hor_distance4 - Inside_hor_distance3 + Inside_diameter / 2 + Thin_wall_thickness, 0, 0, letter3, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-Inside_hor_distance4 + Inside_diameter / 2 - Thin_wall_thickness, 0, 0, letter4, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-Inside_hor_distance4 - Inside_hor_distance2 - Inside_hor_distance3 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter5, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-Inside_hor_distance4 - Inside_hor_distance3 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter6, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter7, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter11, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance3 + Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter12, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance2 + Inside_hor_distance3 + Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 - Inside_ver_distance1 / 2 - Inside_diameter / 2, 0, letter13, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 - 0.006, 0, letter8, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance3 + Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 - 0.006, 0, letter9, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(Inside_hor_distance2 + Inside_hor_distance3 + Inside_hor_distance4 + Inside_diameter / 2 + Thin_wall_thickness, Inside_ver_distance9 + Inside_ver_distance8 + Inside_ver_distance6 - Inside_ver_distance1 / 2 - 0.006, 0, letter10, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                part.Extension.SelectByID2("草图8", "SKETCH", 0, 0, 0, False, 4, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, Bulge_height, Bulge_height, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance1 - proD_hor_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateLine(-Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0, Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0, Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0, -Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2, 0, -Inside_hor_distance1 / 2, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0)
                part.SketchAddConstraints("sgFIXED")
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, proD_hor_distance1 - proD_hor_distance2, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)


                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim anno() As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim myNote As Object
                Dim myDatumTag As Object
                Dim myAnnotation As Object
                Dim SheetPr() As Double
                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim Annotation As SldWorks.Annotation
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vEdges As Object
                Dim vEdges2 As Object
                Dim i As Integer
                Dim Displaydimention As SldWorks.DisplayDimension



                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                swapp.SetUserPreferenceToggle（swUserPreferenceToggle_e.swSketchInferFromModel, False）
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                selecmag = part.SelectionManager
                part.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.12, 0.205, 0)
                'part.ViewDisplayHidden
                myNote = part.InsertNote(company)
                myAnnotation = myNote.GetAnnotation()
                If Not myAnnotation Is Nothing Then
                    myAnnotation.SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                    myAnnotation.SetPosition(0.374, 0.05457, 0)
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 0.31487 And Annpos(0) < 0.364 And Annpos(1) > 0.043 And Annpos(1) < 0.61 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 0.364 And Annpos(0) < 0.415 And Annpos(1) > 0.023 And Annpos(1) < 0.043 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 0.364 And Annpos(0) < 0.415 And Annpos(1) > 0.014 And Annpos(1) < 0.023 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 0.34 And Annpos(0) < 0.353 And Annpos(1) > 0.023 And Annpos(1) < 0.032 Then
                                N1.SetText(weight)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()


                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.298, 0.107, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.铸件应符合JDCB15铸件技术要求。" + Chr(13) + Chr(10) +
                    "2.铸件尺寸的极限偏差按OAGT.610.017《铝合金铸件加工余量与铸件尺寸公差》的Ⅰ级精度。" + Chr(13) + Chr(10) +
                    "3.未注明的圆角半径不超过2。" + Chr(13) + Chr(10) +
                    "4.字母及数字凸起1.0。"）
                myNote.GetAnnotation().SetPosition(0.278, 0.097, 0)
                part.FontPoints(16)

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), scale_m, scale_d, True, SheetPr(5), SheetPr(6), SheetPr(7))
                part.EditRebuild()
                part.Extension.SelectByID2("细节项目256@工程图视图1", "CENTERMARKSYM", 0.129510478750621, 0.259467695429652, 0, False, 0, Nothing, 0)
                part.HideDimension()
                part.Extension.SelectByID2("Line2@草图1@接线盒盖-1@工程图视图1", "EXTSKETCHSEGMENT", -0.046, -0.016392555778789, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4@草图1@接线盒盖-1@工程图视图1", "EXTSKETCHSEGMENT", 0.046, -0.0264764791894733, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.117844628708361, 0.135, 0)
                part.Extension.SelectByID2("Line1@草图1@接线盒盖-1@工程图视图1", "EXTSKETCHSEGMENT", 0.0297759884918553, 0.046, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图1@接线盒盖-1@工程图视图1", "EXTSKETCHSEGMENT", 0.03117034122285, -0.046, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.188, 0.204920367540204, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = part.SelectionManager.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合

                selecmag.AddSelectionListObject(vEdges(48), Nothing)
                selecmag.AddSelectionListObject(vEdges(57), Nothing)
                part.AddDimension2(0.117844628708361, 0.14, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(39), Nothing)
                selecmag.AddSelectionListObject(vEdges(37), Nothing)
                part.AddDimension2(0.117844628708361, 0.145, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(48), Nothing)
                selecmag.AddSelectionListObject(vEdges(57), Nothing)
                part.AddDimension2(0.117844628708361, 0.14, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(52), Nothing)
                selecmag.AddSelectionListObject(vEdges(62), Nothing)
                part.AddDimension2(0.183, 0.204920367540204, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(37), Nothing)
                selecmag.AddSelectionListObject(vEdges(38), Nothing)
                part.AddDimension2(0.178, 0.204920367540204, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(45), Nothing)
                part.AddDimension2(0.067, 0.254, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(65), Nothing)
                part.AddDimension2(0.091, 0.237, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(36), Nothing)
                part.AddDimension2(0.1, 0.267, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "4-<MOD-DIAM>", "", True, "", "", False)
                Dim myGtol As Object
                Dim myAnno As Object
                myGtol = part.InsertGtol()
                If Not myGtol Is Nothing Then
                    myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                    myGtol.SetFrameValues(1, "0.3", "", "", "", "")
                    myGtol.SetCompositeFrame(False)
                    myGtol.SetText(4, "")
                    myAnno = myGtol.GetAnnotation()
                    If Not myAnno Is Nothing Then
                        myAnno.SetPosition(0.0911582586900541, 0.258844989510586, 0)
                        myAnno.SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                    End If
                End If
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(734), Nothing)
                part.AddDimension2(0.12, 0.227, 0)
                selecmag.AddSelectionListObject(vEdges(735), Nothing)
                part.AddDimension2(0.156, 0.205, 0)
                selecmag.AddSelectionListObject(vEdges(795), Nothing)
                part.AddDimension2(0.152, 0.184, 0).Diametric = True
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "12-<MOD-DIAM>", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(714), Nothing)
                selecmag.AddSelectionListObject(vEdges(749), Nothing)
                part.AddDimension2(0.103956991752467, 0.181583030256693, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(714), Nothing)
                selecmag.AddSelectionListObject(vEdges(772), Nothing)
                part.AddDimension2(0.110956991752467, 0.181583030256693, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterLine(0, 0.001, 0, 0, -0.001, 0)
                selecmag.AddSelectionListObject(vEdges(772), Nothing)
                part.AddDimension2(0.110956991752467 + 0.0061, 0.181583030256693, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 0, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(785), Nothing)
                selecmag.AddSelectionListObject(vEdges(786), Nothing)
                part.AddDimension2(0.1285, 0.181583030256693, 0)
                selecmag.AddSelectionListObject(vEdges(736), Nothing)
                selecmag.AddSelectionListObject(vEdges(810), Nothing)
                part.AddDimension2(0.0915, 0.187, 0)
                selecmag.AddSelectionListObject(vEdges(749), Nothing)
                selecmag.AddSelectionListObject(vEdges(810), Nothing)
                part.AddDimension2(0.0915, 0.194, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, False, 4, 4, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(749), Nothing)
                selecmag.AddSelectionListObject(vEdges(738), Nothing)
                part.AddDimension2(0.0915, 0.201, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = part.SelectionManager.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges2 = View.GetVisibleEntities2(vComponents(0), 2) '获得特定可视实体集合


                selecmag.AddSelectionListObject(vEdges2(687), Nothing)
                selecmag.AddSelectionListObject(vEdges(736), Nothing)
                part.AddDimension2(0.087, 0.201, 0).SetOverride(True, 0.025)
                selecmag.AddSelectionListObject(vEdges2(687), Nothing)
                selecmag.AddSelectionListObject(vEdges(704), Nothing)
                part.AddDimension2(0.104, 0.211, 0).SetOverride(True, 0.0035)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 0, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges2(210), Nothing)
                selecmag.AddSelectionListObject(vEdges(729), Nothing)
                part.AddDimension2(0.0915, 0.225, 0).SetOverride(True, 0.0025)
                selecmag.AddSelectionListObject(vEdges2(212), Nothing)
                selecmag.AddSelectionListObject(vEdges2(210), Nothing)
                part.AddDimension2(0.113, 0.218, 0).SetOverride(True, 0.0035)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 0, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges2(590), Nothing)
                selecmag.AddSelectionListObject(vEdges2(593), Nothing)
                part.AddVerticalDimension2(0.15, 0.211, 0).SetOverride(True, 0.0025)

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)
                line = part.SketchManager.CreateLine(0, External_ver_distance1 / 2 + 0.001, 0, 0, External_ver_distance1 / 4, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(0, External_ver_distance1 / 4, 0, -Inside_hor_distance4, External_ver_distance1 / 4, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-Inside_hor_distance4, External_ver_distance1 / 4, 0, -Inside_hor_distance4, -External_ver_distance1 / 4 - 0.005, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-Inside_hor_distance4, -External_ver_distance1 / 4 - 0.005, 0, External_hor_distance3 / 2, -External_ver_distance1 / 4 - 0.005, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(External_hor_distance3 / 2, -External_ver_distance1 / 4 - 0.005, 0, External_hor_distance3 / 2, -External_ver_distance1 / 2 - 0.001, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                line.SelectChain(True, Nothing)
                part.CreateSectionViewAt5(0.24, 0.205, 0, "A", 132, Nothing, 0)


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = part.SelectionManager.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合

                selecmag.AddSelectionListObject(vEdges(60), Nothing)
                selecmag.AddSelectionListObject(vEdges(61), Nothing)
                part.AddDimension2(0.239, 0.233, 0)
                selecmag.AddSelectionListObject(vEdges(60), Nothing)
                selecmag.AddSelectionListObject(vEdges(126), Nothing)
                part.AddDimension2(0.256, 0.225, 0)
                selecmag.AddSelectionListObject(vEdges(117), Nothing)
                selecmag.AddSelectionListObject(vEdges(120), Nothing)
                part.AddDimension2(0.254, 0.158, 0)
                selecmag.AddSelectionListObject(vEdges(116), Nothing)
                part.AddDimension2(0.246, 0.153, 0)
                selecmag.AddSelectionListObject(vEdges(127), Nothing)
                selecmag.AddSelectionListObject(vEdges(128), Nothing)
                part.AddDimension2(0.259, 0.204, 0)
                part.ClearSelection2(True)

                part.SketchManager.CreateCircleByRadius(proA_hor_distance2 + 0.0045, External_ver_distance2 / 2, 0, 0.01)
                part.CreateDetailViewAt3(0.205, 0.118, 0, 0, 2, 1, "I", 1, False)
                part.Extension.SelectByRay(0.195721917706534, 0.131907538460114, 250.0035, 0, 0, -1, 0.000490078117231261, 3, False, 0, 0)
                part.Extension.SelectByRay(0.213595354923203, 0.122970819851779, 250.0035, 0, 0, -1, 0.000490078117231261, 3, True, 0, 0)
                part.AddHorizontalDimension2(0.204783204575748, 0.134934491535385, 0)

                part.Extension.SelectByRay(0.207685589391885, 0.126430194796941, 250.0035, 0, 0, -1, 0.000490078117231261, 1, False, 0, 0)
                part.Extension.SelectByRay(0.213883636168633, 0.121817694870058, 250.0035, 0, 0, -1, 0.000490078117231261, 1, True, 0, 0)
                part.AddVerticalDimension2(0.210856683091617, 0.128592304135921, 0)

                part.Extension.SelectByRay(0.207685589391885, 0.132195819705544, 250.0035, 0, 0, -1, 0.000490078117231261, 3, False, 0, 0)
                part.Extension.SelectByRay(0.213883636168633, 0.120088007397477, 250.0035, 0, 0, -1, 0.000490078117231261, 3, True, 0, 0)
                part.AddVerticalDimension2(0.235783204419286, 0.12628605417248, 0)

                part.Extension.SelectByRay(0.20754144876917, 0.124268085456215, 250.0035, 0, 0, -1, 0.000490078117231261, 3, False, 0, 0)
                part.Extension.SelectByRay(0.209991839355326, 0.120232148020193, 250.0035, 0, 0, -1, 0.000490078117231261, 1, True, 0, 0)
                part.AddVerticalDimension2(0.229783204419286, 0.122250116736458, 0)

                part.Extension.SelectByRay(0.213451214300488, 0.123259101097209, 250.0035, 0, 0, -1, 0.000490078117231261, 3, False, 0, 0)
                part.Extension.SelectByRay(0.211577386205192, 0.120232148020193, 250.0035, 0, 0, -1, 0.000490078117231261, 1, True, 0, 0)
                part.AddVerticalDimension2(0.221811370417962, 0.115043085600704, 0)



                part.ActivateView("工程图视图2")
                part.SketchManager.CreateCircleByRadius(proA_hor_distance2 - proA_hor_distance3 + 0.0045, -Inside_ver_distance1 / 2 + Inside_ver_distance9, 0, 0.006)
                part.CreateDetailViewAt3(0.118, 0.074, 0, 0, 2, 1, "II", 1, False)
                part.Extension.SelectByRay(0.118609659154638, 0.0767987306231386, 250.009, 0, 0, -1, 0.000447570866426055, 1, False, 0, 0)
                part.Extension.SelectByRay(0.119794405565766, 0.0785100309947677, 250.0086, 0, 0, -1, 0.000447570866426055, 1, True, 0, 0)
                part.AddDimension2(0.129930569305415, 0.0765354536411422, 0)

                part.Extension.SelectByRay(0.117819828213887, 0.0721913834687528, 250.009, 0, 0, -1, 0.000447570866426055, 1, False, 0, 0)
                part.Extension.SelectByRay(0.119926044055892, 0.0721913834687525, 249.9785, 0, 0, -1, 0.000447570866426055, 1, True, 0, 0)
                part.AddDimension2(0.119004574625014, 0.0558682106914685, 0)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0.256993280606299, 0.234815211758242, 0, False, 0, Nothing, 0)
                part.CreateUnfoldedViewAt3(0.312218682184761, 0.205, 0, False)
                part.Extension.SelectByID2("细节项目266@工程图视图5", "CENTERMARKSYM", 0.333046547922924, 0.233868490588325, 0, False, 0, Nothing, 0)
                part.HideDimension()
                part.ActivateView("工程图视图5")
                'part.SketchManager.CreateCircleByRadius(0, 0, 0, 0.01)
                part.SketchManager.CreateCornerRectangle(0.02025, -External_ver_distance1 / 2, 0, External_hor_distance1 / 2 + 0.02025, External_ver_distance1 / 2, 0)
                part.ActiveDrawingView.Crop()
                part.Extension.SelectByID2("工程图视图5", "DRAWINGVIEW", 0.256993280606299, 0.234815211758242, 0, False, 0, Nothing, 0)

                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.39, 0.176, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "4-<MOD-DIAM>", "", True, "", "", False)


                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingDiameterDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText) '直径折弯
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingAngleTrailingZero, swUserPreferenceOption_e.swDetailingAngleDimension, swDetailingDimTrailingZero_e.swDimSameAsDocumentDimension)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingAngleTrailingZeroTolerance, swUserPreferenceOption_e.swDetailingAngleDimension, swDetailingDimTrailingZero_e.swDimSameAsDocumentTolerance)

                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineStyles_e.swLineCONTINUOUS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyleThickness, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineWeights_e.swLW_THIN)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText) '半径折弯

                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowWidth, 0, 0.00208)
                part.Extension.SetUserPreferenceDouble(swUserPreferenceDoubleValue_e.swDetailingArrowLength, 0, 0.00435) '修改箭头大小
                part.SaveAs3(dz1 + dz3, 0, 2)
            End Sub
            Public Sub 接线盒座()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\接线盒座.SLDPRT"
                Dim dz3 As String
                dz3 = "\接线盒座.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim hor_distance4 As Double
                Dim hor_distance5 As Double
                Dim hor_distance6 As Double
                Dim hor_distance7 As Double
                Dim hor_distance8 As Double
                Dim par_A_hor_distance1 As Double
                Dim par_A_hor_distance2 As Double
                Dim par_A_hor_distance3 As Double
                Dim par_A_hor_distance4 As Double
                Dim par_A_hor_distance5 As Double
                Dim par_A_hor_distance6 As Double
                Dim par_A_hor_distance7 As Double
                Dim par_A_hor_distance8 As Double
                Dim par_A_hor_distance9 As Double
                Dim par_A_hor_distance10 As Double
                Dim par_A_hor_distance11 As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double
                Dim diameter_d3 As Double
                Dim radius1 As Double
                Dim radius2 As Double
                Dim radius3 As Double
                Dim radius4 As Double
                Dim radius5 As Double
                Dim par_A_ver_distance1 As Double
                Dim par_A_ver_distance2 As Double
                Dim par_A_ver_distance3 As Double
                Dim par_A_ver_distance4 As Double
                Dim par_A_ver_distance5 As Double
                Dim par_A_ver_distance6 As Double
                Dim par_A_ver_distance7 As Double

                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim ver_distance3 As Double
                Dim ver_distance4 As Double
                Dim ver_distance5 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from junction_box_seat", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                hor_distance3 = dr.GetString("hor_distance3") / 1000
                hor_distance4 = dr.GetString("hor_distance4") / 1000
                hor_distance5 = dr.GetString("hor_distance5") / 1000
                hor_distance6 = dr.GetString("hor_distance6") / 1000
                hor_distance7 = dr.GetString("hor_distance7") / 1000
                hor_distance8 = dr.GetString("hor_distance8") / 1000
                par_A_hor_distance1 = dr.GetString("par_A_hor_distance1") / 1000
                par_A_hor_distance2 = dr.GetString("par_A_hor_distance2") / 1000
                par_A_hor_distance3 = dr.GetString("par_A_hor_distance3") / 1000
                par_A_hor_distance4 = dr.GetString("par_A_hor_distance4") / 1000
                par_A_hor_distance5 = dr.GetString("par_A_hor_distance5") / 1000
                par_A_hor_distance6 = dr.GetString("par_A_hor_distance6") / 1000
                par_A_hor_distance7 = dr.GetString("par_A_hor_distance7") / 1000
                par_A_hor_distance8 = dr.GetString("par_A_hor_distance8") / 1000
                par_A_hor_distance9 = dr.GetString("par_A_hor_distance9") / 1000
                par_A_hor_distance10 = dr.GetString("par_A_hor_distance10") / 1000
                par_A_hor_distance11 = dr.GetString("par_A_hor_distance11") / 1000
                radius1 = dr.GetString("radius1") / 1000
                radius2 = dr.GetString("radius2") / 1000
                radius3 = dr.GetString("radius3") / 1000
                radius4 = dr.GetString("radius4") / 1000
                radius5 = dr.GetString("radius5") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                diameter_d2 = dr.GetString("diameter_d2") / 1000
                diameter_d3 = dr.GetString("diameter_d3") / 1000
                par_A_ver_distance1 = dr.GetString("par_A_ver_distance1") / 1000
                par_A_ver_distance2 = dr.GetString("par_A_ver_distance2") / 1000
                par_A_ver_distance3 = dr.GetString("par_A_ver_distance3") / 1000
                par_A_ver_distance4 = dr.GetString("par_A_ver_distance4") / 1000
                par_A_ver_distance5 = dr.GetString("par_A_ver_distance5") / 1000
                par_A_ver_distance6 = dr.GetString("par_A_ver_distance6") / 1000
                par_A_ver_distance7 = dr.GetString("par_A_ver_distance7") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                ver_distance3 = dr.GetString("ver_distance3") / 1000
                ver_distance4 = dr.GetString("ver_distance4") / 1000
                ver_distance5 = dr.GetString("ver_distance5") / 1000

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance1 / 2, hor_distance1 / 2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, par_A_hor_distance1, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByRay(0, 0, -1, 0, 0, 1, 0.001, 2, False, 1, 0)
                part.Extension.SelectByRay(hor_distance1 / 2, 0, par_A_hor_distance1 / 2 + 0.01, -1, 0, 0, 0.001, 2, False, 2, 0)
                part.Extension.SelectByRay(0, hor_distance1 / 2 + 0.01, par_A_hor_distance1 / 2, 0, -1, 0, 0.001, 2, False, 2, 0)
                part.Extension.SelectByRay(-hor_distance1 / 2, 0, par_A_hor_distance1 / 2 + 0.01, 1, 0, 0, 0.001, 2, False, 2, 0)
                part.Extension.SelectByRay(0, -hor_distance1 / 2 - 0.01, par_A_hor_distance1 / 2, 0, 1, 0, 0.001, 2, False, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(Math.Atan(2 / 37), True, False, 0, False, False)

                part.Extension.SelectByRay(0, 0, -1, 0, 0, 1, 0.001, 2, False, 1, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance2 / 2, ver_distance2 / 2, 0)


                sketcher.CreateCircleByRadius(hor_distance3 / 2, ver_distance3 / 2, 0, radius2)
                sketcher.CreateLine(hor_distance3 / 2 - radius2, ver_distance3 / 2, 0, hor_distance3 / 2 - radius2, ver_distance2 / 2, 0)
                sketcher.CreateLine(hor_distance3 / 2, ver_distance3 / 2 - radius2, 0, hor_distance2 / 2, ver_distance3 / 2 - radius2, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance3 / 2, ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance2 / 2, ver_distance3 / 2, 0)
                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance3 / 2 - radius2 + 0.001, ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance2 / 2, ver_distance3 / 2 - radius2 + 0.001, 0)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance3 / 2, ver_distance3 / 2 + radius2, 0)
                sketcher.CreateCenterLine(0, -ver_distance1 / 2, 0, 0, ver_distance1 / 2, 0)
                sketcher.CreateCenterLine(-hor_distance1 / 2, 0, 0, hor_distance1 / 2, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)

                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.SketchMirror()
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)

                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance2 / 2, ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance2 / 2, ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance2 / 2, -ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance2 / 2, -ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance2 / 2, -ver_distance2 / 2, 0)
                part.Extension.SelectByID2("直线4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance2 / 2, -ver_distance2 / 2, 0)
                sketcher.InsertSketch(True)

                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, par_A_hor_distance1 - par_A_hor_distance11, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(hor_distance3 / 2, ver_distance3 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(-hor_distance3 / 2, ver_distance3 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(hor_distance3 / 2, -ver_distance3 / 2, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(-hor_distance3 / 2, -ver_distance3 / 2, 0, diameter_d1 / 2)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, par_A_hor_distance8, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)


                part.Extension.SelectByRay(0, 0, par_A_ver_distance1, 0, 0, -1, 0.001, 2, False, 1, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance6 / 2, ver_distance4 / 2, 0)
                sketcher.CreateCircleByRadius(hor_distance4 / 2, -ver_distance5 / 2, 0, diameter_d2 / 2)


                sketcher.CreateLine(hor_distance4 / 2 - radius2, -ver_distance4 / 2, 0, hor_distance4 / 2 - radius2, -ver_distance5 / 2, 0)

                sketcher.CreateArc(hor_distance4 / 2, -ver_distance5 / 2, 0, hor_distance4 / 2 - radius2, -ver_distance5 / 2, 0, hor_distance4 / 2, -ver_distance5 / 2 + radius2, 0, -1)
                sketcher.CreateLine(hor_distance4 / 2, -ver_distance5 / 2 + radius2, 0, hor_distance6 / 2, -ver_distance5 / 2 + radius2, 0)
                sketcher.CreateCenterLine(0, -ver_distance1 / 2, 0, 0, ver_distance1 / 2, 0)
                sketcher.CreateCenterLine(-hor_distance1 / 2, 0, 0, hor_distance1 / 2, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()

                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance6 / 2, ver_distance4 / 2, 0)
                part.Extension.SelectByID2("直线2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance6 / 2, ver_distance4 / 2, 0)

                part.Extension.SelectByID2("直线2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance6 / 2, -ver_distance4 / 2, 0)

                part.Extension.SelectByID2("直线1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -hor_distance6 / 2, -ver_distance4 / 2, 0)
                part.Extension.SelectByID2("直线1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance6 / 2, -ver_distance4 / 2, 0)
                part.Extension.SelectByID2("直线4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance6 / 2, -ver_distance4 / 2, 0)
                part.Extension.SelectByID2("直线4", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance6 / 2, ver_distance4 / 2, 0)
                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, hor_distance6 / 2, ver_distance4 / 2, 0)
                sketcher.InsertSketch(True)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, par_A_hor_distance11, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)


                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("切除-拉伸3", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                swface = swbody.GetFaces()
                vEdgeCount = swbody.GetFaceCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(swface(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(swface(6), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0) '标记
                selecmag.AddSelectionListObject(swface(9), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0) '标记
                selecmag.AddSelectionListObject(swface(13), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0) '标记
                selecmag.AddSelectionListObject(swface(17), Nothing)
                selecmag.SetSelectedObjectMark(4, 2, 0) '标记
                selecmag.AddSelectionListObject(swface(21), Nothing)
                selecmag.SetSelectedObjectMark(5, 2, 0) '标记
                part.FeatureManager.InsertMultiFaceDraft(Math.Atan(2 / 37), False, False, 0, False, False)

                selecmag.AddSelectionListObject(swface(0), Nothing)
                sketcher.InsertSketch(True)

                sketcher.CreateCornerRectangle(hor_distance2 / 2, par_A_ver_distance3 + par_A_ver_distance4 / 2, 0, hor_distance2 / 2 - par_A_ver_distance3, par_A_ver_distance4 / 2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, par_A_hor_distance6, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)


                part.Extension.SelectByRay(hor_distance6 / 2 + 0.005, 0, par_A_hor_distance1 / 2, 0, 0, 1, 0.001, 2, False, 0, 0)

                sketcher.InsertSketch(True)

                sketcher.CreateCornerRectangle(hor_distance2 / 2, -par_A_ver_distance4 / 2, 0, hor_distance2 / 2 - par_A_ver_distance3, par_A_ver_distance4 / 2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, par_A_hor_distance5, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, par_A_hor_distance1 - par_A_hor_distance5 - par_A_hor_distance11, 0, 0, 0, 0)

                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 0, Nothing, 0)


                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(-hor_distance6 / 2 - hor_distance7, 0, 0, diameter_d3 / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, 0.016, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)



                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, ver_distance1 / 2, 0, 0, 0, 0)

                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateLine(0， 0， 0， hor_distance5 / 2, 0, 0)
                sketcher.CreateLine(hor_distance5 / 2, 0, 0, hor_distance5 / 2, -par_A_hor_distance1 + par_A_ver_distance7, 0)
                sketcher.CreateArc(0, -par_A_hor_distance1 + par_A_ver_distance7, 0, hor_distance5 / 2, -par_A_hor_distance1 + par_A_ver_distance7, 0, -hor_distance5 / 2, -par_A_hor_distance1 + par_A_ver_distance7, 0, -1)
                sketcher.CreateLine(-hor_distance5 / 2, -par_A_hor_distance1 + par_A_ver_distance7, 0, -hor_distance5 / 2, 0, 0)
                sketcher.CreateLine(-hor_distance5 / 2, 0, 0, 0, 0, 0)


                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.SketchAddConstraints("sgFIXED")
                sketcher.InsertSketch(True)

                part.Extension.SelectByID2("草图8", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)

                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, par_A_ver_distance6, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, -par_A_hor_distance1 + par_A_ver_distance7, 0, par_A_hor_distance3 / 2)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图9", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, par_A_ver_distance6, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                Dim edge() As Object



                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("切除-拉伸5", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 110
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(12), Nothing)
                selecmag.AddSelectionListObject(edge(13), Nothing)
                selecmag.AddSelectionListObject(edge(14), Nothing)
                selecmag.AddSelectionListObject(edge(15), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, par_A_hor_distance2, pi / 4, 0, 0, 0, 0)
                part.ClearSelection2(True)

                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                'sketcher.InsertSketch(True)
                'sketcher.CreateLine(-par_A_hor_distance1, par_A_ver_distance2 / 2, 0, -par_A_hor_distance1 + par_A_hor_distance2, par_A_ver_distance1 / 2, 0)
                'sketcher.CreateLine(-par_A_hor_distance1 + par_A_hor_distance2, par_A_ver_distance1 / 2, 0, -par_A_hor_distance1, par_A_ver_distance1 / 2, 0)
                'sketcher.CreateLine(-par_A_hor_distance1, par_A_ver_distance1 / 2, 0, -par_A_hor_distance1, par_A_ver_distance2 / 2, 0)
                'part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.00182411497354451, 0.0407323988470054, 0.0430000000000632, False, 0, Nothing, 0)
                'part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0.0000365697715096758, 0.0410218928345643, 0.0430000000001201, True, 0, Nothing, 1)
                'part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.00191070238906832, 0.0439442269497796, 0.0430089346058935, True, 0, Nothing, 1)
                'part.SketchAddConstraints("sgFIXED")
                'part.FeatureManager.FeatureCut4(True, False, False, 6, 0, par_A_ver_distance1, 0.092, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                'sketcher.InsertSketch(True)
                'sketcher.CreateLine(-par_A_hor_distance1, 0, 0, 0, 0, 0)
                'sketcher.InsertSketch(True)
                'part.Extension.SelectByID2("切除-拉伸6", "BODYFEATURE", -0.0143346134316857, 0.0397415856772838, 0.0412584143226127, False, 4, Nothing, 0)
                'part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", -0.0252378537312552, 0, 0, True, 1, Nothing, 0)
                'Dim swFeat As Object
                'Dim swFeatMgr As Object
                'swFeatMgr = part.FeatureManager
                'Dim swFeatData As Object
                'swFeatData = swFeatMgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                'swFeatData.Direction2 = False
                'swFeatData.EqualSpacing = False
                'swFeatData.GeometryPattern = False
                'swFeatData.ReverseDirection = False
                'swFeatData.Spacing = pi / 2
                'swFeatData.TotalInstances = 4
                'swFeatData.VarySketch = False
                'swFeat = swFeatMgr.CreateFeature(swFeatData)
                'part.ClearSelection2(True)



                selecmag.AddSelectionListObject(edge(38), Nothing)
                selecmag.AddSelectionListObject(edge(39), Nothing)
                selecmag.AddSelectionListObject(edge(43), Nothing)
                selecmag.AddSelectionListObject(edge(47), Nothing)
                selecmag.AddSelectionListObject(edge(51), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.004, pi / 4, 0, 0, 0, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(81), Nothing)
                selecmag.AddSelectionListObject(edge(84), Nothing)
                selecmag.AddSelectionListObject(edge(85), Nothing)
                selecmag.AddSelectionListObject(edge(88), Nothing)
                selecmag.AddSelectionListObject(edge(89), Nothing)
                selecmag.AddSelectionListObject(edge(92), Nothing)
                selecmag.AddSelectionListObject(edge(93), Nothing)
                selecmag.AddSelectionListObject(edge(96), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.002, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("圆角1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 300
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(80), Nothing)
                selecmag.AddSelectionListObject(edge(81), Nothing)
                selecmag.AddSelectionListObject(edge(82), Nothing)
                selecmag.AddSelectionListObject(edge(83), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(90), Nothing)
                selecmag.AddSelectionListObject(edge(91), Nothing)
                selecmag.AddSelectionListObject(edge(94), Nothing)
                selecmag.AddSelectionListObject(edge(95), Nothing)
                selecmag.AddSelectionListObject(edge(98), Nothing)
                selecmag.AddSelectionListObject(edge(99), Nothing)
                selecmag.AddSelectionListObject(edge(102), Nothing)
                selecmag.AddSelectionListObject(edge(103), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.002, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCornerRectangle(hor_distance5 / 2, -ver_distance2 / 2 + par_A_ver_distance5, 0, -hor_distance5 / 2, -ver_distance2 / 2， 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, par_A_hor_distance4, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸6", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                'part.Extension.SelectByID2("切除-拉伸7", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                vEdgeCount = 240
                'Do Until vEdgeCount > 300
                '    For i = vEdgeCount To vEdgeCount + 30
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 30
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 300
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(edge(268), Nothing)
                selecmag.AddSelectionListObject(edge(269), Nothing)
                selecmag.AddSelectionListObject(edge(270), Nothing)
                selecmag.AddSelectionListObject(edge(271), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation


                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.25, 0.055, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 191 / 1000 And Annpos(0) < 240 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 60 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 241 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 41 / 1000 And Annpos(1) < 59 / 1000 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 241 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 24 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 241 / 1000 And Annpos(0) < 292 / 1000 And Annpos(1) > 12 / 1000 And Annpos(1) < 24 / 1000 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 24 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 190 / 1000 And Annpos(1) < 204 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.073, 0.148, 0)
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*下视", 0.073, 0.066, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.DrawingViewRotate(pi)
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False)

                Dim line1 As SldWorks.SketchSegment
                line1 = part.SketchManager.CreateLine(-hor_distance3 / 2, ver_distance1 / 2 + 0.01, 0, -hor_distance3 / 2, ver_distance3 / 2 - radius2, 0)
                part.SketchManager.CreateLine(-hor_distance3 / 2, ver_distance3 / 2 - radius2, 0, -hor_distance4 / 2, ver_distance3 / 2 - radius2, 0)
                part.SketchManager.CreateLine(-hor_distance4 / 2, ver_distance3 / 2 - radius2, 0, -hor_distance4 / 2, 0, 0)
                part.SketchManager.CreateLine(-hor_distance4 / 2, 0, 0, 0, 0, 0)
                part.SketchManager.CreateLine(0, 0, 0, 0, -ver_distance1 / 2 - 0.01, 0)
                'part.ClearSelection2(True)
                line1.SelectChain(False, Nothing)
                part.CreateSectionViewAt5(0.171, 0.148, 0, "A", 132, Nothing, 0)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.221, 0.149, 0)

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                'Dim selecmag As SldWorks.SelectionMgr
                'Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(5), Nothing)
                selecmag.AddSelectionListObject(vEdges(17), Nothing)
                part.AddDimension2(0.072, 0.103, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                part.AddDimension2(0.114, 0.147, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                part.AddDimension2(0.085, 0.164, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                selecmag.AddSelectionListObject(vEdges(28), Nothing)
                part.AddDimension2(0.072, 0.107, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                selecmag.AddSelectionListObject(vEdges(29), Nothing)
                part.AddDimension2(0.11, 0.147, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(31), Nothing)
                selecmag.AddSelectionListObject(vEdges(35), Nothing)
                part.AddDimension2(0.119, 0.147, 0)
                part.ClearSelection2(True）
                selecmag.AddSelectionListObject(vEdges(33), Nothing)
                selecmag.AddSelectionListObject(vEdges(39), Nothing)
                part.AddDimension2(0.072, 0.099, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(78), Nothing)
                selecmag.AddSelectionListObject(vEdges(90), Nothing)
                part.AddDimension2(0.105, 0.147, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(84), Nothing)
                selecmag.AddSelectionListObject(vEdges(96), Nothing)
                part.AddDimension2(0.072, 0.111, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(53), Nothing)
                selecmag.AddSelectionListObject(vEdges(96), Nothing)
                part.AddDimension2(0.092, 0.14, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(56), Nothing)
                selecmag.AddSelectionListObject(vEdges(96), Nothing)
                part.AddDimension2(0.085, 0.144, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(75), Nothing)
                part.AddDimension2(0.078, 0.157, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(24), Nothing)
                part.AddDimension2(0.072, 0.135, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(32), Nothing)
                part.AddDimension2(0.106, 0.175, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 0, False, 1, 1, "R", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(97), Nothing)
                selecmag.AddSelectionListObject(vEdges(98), Nothing)
                part.AddDimension2(0.072, 0.115, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(98), Nothing)
                selecmag.AddSelectionListObject(vEdges(99), Nothing)
                part.AddDimension2(0.1, 0.147, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc1@草图7@接线盒座-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.078, 0.155, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M", "-6H深14", True, "", "", False)

                Dim Displaydim As Object

                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)



                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图2")

                part.SketchManager.CreateCircleByRadius(par_A_hor_distance9 / 2, par_A_hor_distance1 / 2, 0, par_A_ver_distance7)



                part.CreateBreakOutSection(0.048)
                part.ClearSelection2(True)

                Dim vEdgeCount1 As Integer
                Dim vEdges1 As Object


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合

                vEdges1 = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 2)
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 50
                '    selecmag.AddSelectionListObject(vEdges1(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                selecmag.AddSelectionListObject(vEdges(17), Nothing)
                part.AddDimension2(0.101, 0.06, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges(25), Nothing)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                part.AddDimension2(0.045, 0.06, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 0, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                part.AddDimension2(0.086, 0.061, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(6), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.073, 0.043， 0）
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(17), Nothing)
                selecmag.AddSelectionListObject(vEdges1(18), Nothing)
                part.AddDimension2(0.073, 0.048， 0）
                Dim displaymension As SldWorks.DisplayDimension
                displaymension = selecmag.GetSelectedObject6(1, -1)
                displaymension.SetOverride(True, 0.076)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合

                vEdges1 = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 2)
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 150
                '    selecmag.AddSelectionListObject(vEdges1(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(56), Nothing)
                part.AddDimension2(0.147, 0.159, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(58), Nothing)
                selecmag.AddSelectionListObject(vEdges(56), Nothing)
                part.AddDimension2(0.15, 0.152, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(59), Nothing)
                part.AddDimension2(0.156, 0.147, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(60), Nothing)
                part.AddDimension2(0.146, 0.139, 0)
                part.ClearSelection2(True)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                part.AddDimension2(0.157, 0.173, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(28), Nothing)
                selecmag.AddSelectionListObject(vEdges(35), Nothing)
                part.AddDimension2(0.15, 0.119, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges(40), Nothing)
                selecmag.AddSelectionListObject(vEdges(41), Nothing)
                part.AddDimension2(0.171, 0.126, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(34), Nothing)
                selecmag.AddSelectionListObject(vEdges(42), Nothing)
                part.AddDimension2(0.149, 0.109, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(30), Nothing)
                selecmag.AddSelectionListObject(vEdges(34), Nothing)
                part.AddDimension2(0.139, 0.119, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges(38), Nothing)

                part.AddDimension2(0.165, 0.127, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(39), Nothing)

                part.AddDimension2(0.15, 0.132, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(15), Nothing)

                part.AddDimension2(0.167, 0.148, 0)

                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "4-M", "-6H", True, "", "", False)

                Dim myGtol As Object
                Dim myAnno As Object
                myGtol = part.InsertGtol()
                If Not myGtol Is Nothing Then
                    myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                    myGtol.SetFrameValues(1, "0.3", "", "", "", "")
                    myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                    myGtol.SetFrameValues(2, "", "", "", "", "")
                    myGtol.SetPTZHeight（"", False）
                    myGtol.SetCompositeFrame（False）
                    myGtol.SetText（4, ""）
                    myGtol.SetBetweenTwoPoints（False, "", ""）
                    myAnno = myGtol.GetAnnotation()
                    If Not myAnno Is Nothing Then
                        myAnno.SetPosition(0.031337184612869697, 0.265752224297202, 0)
                        myAnno.SetLeader3(swLeaderStyle_e.swSTRAIGHT, 0, True, False, False, False)


                    End If
                End If
                part.WindowRedraw()

                part.ClearSelection2(True)
                'Dim displaymension As SldWorks.DisplayDimension
                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                selecmag.AddSelectionListObject(vEdges1(30), Nothing)
                part.AddDimension2(0.133, 0.147， 0）
                displaymension = selecmag.GetSelectedObject6(1, -1)
                displaymension.SetOverride(True, 0.076)


                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(6), Nothing)
                selecmag.AddSelectionListObject(vEdges1(28), Nothing)
                part.AddDimension2(0.126, 0.147， 0）
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图4", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图4")
                part.SketchManager.CreateCornerRectangle(0, par_A_ver_distance1 / 2 + 0.01, 0, hor_distance1 / 2 + 0.01, -par_A_ver_distance1 / 2 - 0.01, 0)
                myView.Crop()
                part.ClearSelection2(True)

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.166, 0.102, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.铸件应符合JDCB15铸件技术条件；" + Chr(13) + Chr(10) +
                    "2.铸件尺寸的极限偏差按OGAT.610.017（铝合金铸件加工余量与铸件尺寸公差）的I级精度；" + Chr(13) + Chr(10) +
                    "3.未注明圆角半径不超过2；" + Chr(13) + Chr(10) +
                    "4.接地标志凸起1.0" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.166, 0.094, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 接线板()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\接线板.SLDPRT"
                Dim dz3 As String
                dz3 = "\接线板.SLDDRW"
                Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                Dim part As SldWorks.ModelDoc2 = swapp.ActiveDoc
                Dim sketcher As SldWorks.SketchManager = part.SketchManager
                Dim Featmgr As SldWorks.FeatureManager = part.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr = part.SelectionManager
                Dim swFeatData As Object
                Dim line As SldWorks.SketchSegment
                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchLine
                Dim line3 As SldWorks.SketchLine
                Dim line4() As SldWorks.ISketchSegment
                Dim point As SldWorks.SketchPoint
                Dim point1 As SldWorks.SketchPoint
                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment
                Dim edge() As Object
                Dim vFaceCount As Integer
                Dim vEdgeCount As Integer
                Dim swbodys As Object



                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                'Const pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false") '//打开数据库连接
                mysqlcon.Open() '//sql查询
                Dim mysqlcom As MySqlCommand = New MySqlCommand("select * from terminal_Bock", mysqlcon)
                Dim dr As MySqlDataReader = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr.GetString("id") = 1
                    dr.Read()
                Loop

                Dim Code As String = dr.GetString("Code")
                Dim name As String = dr.GetString("name")
                Dim company As String = dr.GetString("company")
                Dim material As String = dr.GetString("material")
                Dim scale_m As Double = dr.GetString("scale_m")
                Dim scale_d As Double = dr.GetString("scale_d")
                Dim weight As String = dr.GetString("weight")
                Dim FilRad As Double = dr.GetString("FilRad") / 1000
                Dim TolType As Double = dr.GetString("TolType")
                Dim BottomView_hor_distance1 As Double = dr.GetString("BottomView_hor_distance1") / 1000
                Dim BottomView_hor_distance2 As Double = dr.GetString("BottomView_hor_distance2") / 1000
                Dim BottomView_hor_distance2_Tol As Double = dr.GetString("BottomView_hor_distance2_Tol")
                Dim BottomView_hor_distance3 As Double = dr.GetString("BottomView_hor_distance3") / 1000
                Dim BottomView_hor_distance4 As Double = dr.GetString("BottomView_hor_distance4") / 1000
                Dim BottomView_hor_distance5 As Double = dr.GetString("BottomView_hor_distance5") / 1000
                Dim BottomView_ver_distance1 As Double = dr.GetString("BottomView_ver_distance1") / 1000
                Dim BottomView_ver_distance2 As Double = dr.GetString("BottomView_ver_distance2") / 1000
                Dim BottomView_ver_distance3 As Double = dr.GetString("BottomView_ver_distance3"） / 1000
                Dim BottomView_ver_distance4 As Double = dr.GetString("BottomView_ver_distance4") / 1000
                Dim BottomView_ver_distance5 As Double = dr.GetString("BottomView_ver_distance5") / 1000
                Dim TopView_hor_distance1 As Double = dr.GetString("TopView_hor_distance1") / 1000
                Dim TopView_hor_distance2 As Double = dr.GetString("TopView_hor_distance2") / 1000
                Dim TopView_hor_distance3 As Double = dr.GetString("TopView_hor_distance3") / 1000
                Dim TopView_hor_distance3_Tol As Double = dr.GetString("TopView_hor_distance3_Tol")
                Dim TopView_hor_distance4 As Double = dr.GetString("TopView_hor_distance4") / 1000
                Dim TopView_hor_distance4_Tol As Double = dr.GetString("TopView_hor_distance4_Tol")
                Dim TopView_hor_distance5 As Double = dr.GetString("TopView_hor_distance5") / 1000
                Dim TopView_ver_distance1 As Double = dr.GetString("TopView_ver_distance1") / 1000
                Dim TopView_ver_distance2 As Double = dr.GetString("TopView_ver_distance2") / 1000
                Dim TopView_ver_distance2_Tol As Double = dr.GetString("TopView_ver_distance2_Tol")
                Dim TopView_ver_distance3 As Double = dr.GetString("TopView_ver_distance3") / 1000
                Dim TopView_ver_distance4 As Double = dr.GetString("TopView_ver_distance4") / 1000
                Dim MainView_hor_diameter1 As Double = dr.GetString("MainView_hor_diameter1") / 1000
                Dim MainView_hor_diameter2 As Double = dr.GetString("MainView_hor_diameter2") / 1000
                Dim MainView_hor_diameter3 As Double = dr.GetString("MainView_hor_diameter3") / 1000
                Dim MainView_FilRad As Double = dr.GetString("MainView_FilRad") / 1000
                Dim MainView_ver_distance1 As Double = dr.GetString("MainView_ver_distance1") / 1000
                Dim MainView_ver_distance2 As Double = dr.GetString("MainView_ver_distance2") / 1000
                Dim MainView_ver_distance3 As Double = dr.GetString("MainView_ver_distance3") / 1000
                Dim MainView_ver_distance4 As Double = dr.GetString("MainView_ver_distance4") / 1000
                Dim MainView_ver_distance5 As Double = dr.GetString("MainView_ver_distance5") / 1000
                Dim MainView_ver_distance6 As Double = dr.GetString("MainView_ver_distance6") / 1000
                Dim proA_hor_distance1 As Double = dr.GetString("proA_hor_distance1") / 1000
                Dim proA_ver_distance1 As Double = dr.GetString("proA_ver_distance1") / 1000
                Dim proB_hor_distance1 As Double = dr.GetString("proB_hor_distance1") / 1000
                Dim proB_ver_distance1 As Double = dr.GetString("proB_ver_distance1") / 1000
                Dim proB_ver_distance2 As Double = dr.GetString("proB_ver_distance2") / 1000
                Dim proB_ver_diameter As Double = dr.GetString("proB_ver_diameter") / 1000
                Dim letter1 As String = dr.GetString("letter1")
                Dim letter2 As String = dr.GetString("letter2")
                Dim letter3 As String = dr.GetString("letter3")
                Dim letter4 As String = dr.GetString("letter4")
                Dim letter5 As String = dr.GetString("letter5")
                Dim letter6 As String = dr.GetString("letter6")

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True) '捕捉
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPoints, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsCenterPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsMidPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsQuadrantPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsIntersections, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsNearest, False) '靠近
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsTangent, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsPerpendicular, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsParallel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVLines, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsHVPoints, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsLength, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsGrid, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapsAngle, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchSnapToGridIfDisplayed, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swInputDimValOnCreate, False)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(0, 0, 0, BottomView_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 0, 0, MainView_ver_distance5, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8 + 256, MainView_ver_distance5, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(BottomView_hor_distance1 / 2 - BottomView_hor_distance5, 0, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + BottomView_hor_distance3 / 2, BottomView_ver_distance2 / 2, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.SketchManager.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.FeatureManager.FeatureExtrusion2(True, False, True, 0, 0, MainView_ver_distance6, 0.01, True, False, False, False, Math.Atan(1 / 7), 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8 + 256, MainView_ver_distance5, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(BottomView_hor_distance1 / 2 - BottomView_hor_distance5, 0, 0, MainView_hor_diameter3 / 2)
                part.SketchManager.CreateCircleByRadius(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5, 0, 0, MainView_hor_diameter3 / 2)
                part.FeatureManager.FeatureCut4(False, False, False, 0, 0, MainView_ver_distance6, MainView_ver_distance5, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(TopView_hor_distance3, TopView_ver_distance2 / 2, 0, TopView_hor_distance3 - TopView_hor_distance1 / 2, TopView_ver_distance2 / 2 + TopView_hor_distance1 / 2, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                line = part.SelectionManager.GetSelectedObject6(1, -1)
                line.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 2, TopView_hor_distance4, TopView_ver_distance2, PI, 4.7123889803847, "", False, False, False, True, True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, proA_ver_distance1, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False) '捕捉
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2, proA_hor_distance1 / 2, 0, -BottomView_hor_distance1 / 2, proA_hor_distance1 / 2, 0)
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2, -proA_hor_distance1 / 2, 0, -BottomView_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchManager.CreateCircleByRadius(BottomView_hor_distance1 / 2 - BottomView_hor_distance5, 0, 0, MainView_hor_diameter1 / 2)
                part.SketchManager.CreateCircleByRadius(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5, 0, 0, MainView_hor_diameter1 / 2)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, 0, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, 0, 0)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5, MainView_hor_diameter1, 0)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5, -MainView_hor_diameter1, 0)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - MainView_hor_diameter1, 0, 0)
                part.Extension.SelectByID2("圆弧3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + MainView_hor_diameter1, 0, 0)

                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line11", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, 0, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, 0, 0)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5, MainView_hor_diameter1, 0)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5, -MainView_hor_diameter1, 0)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - MainView_hor_diameter1, 0, 0)
                part.Extension.SelectByID2("圆弧6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + MainView_hor_diameter1, 0, 0)

                line = part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter, 0)
                line1 = part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0)
                arc1 = part.SketchManager.CreateArc(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0, 1)
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterLine(-0.01, 0, 0, 0.01, 0, 0)
                line.SelectChain(True, Nothing)
                line1.SelectChain(True, Nothing)
                arc1.SelectChain(True, Nothing)
                part.SketchMirror()
                part.SketchManager.CreateCenterLine(0, -0.01, 0, 0, 0.01, 0)
                line.SelectChain(True, Nothing)
                line1.SelectChain(True, Nothing)
                arc1.SelectChain(True, Nothing)
                part.Extension.SelectByID2("圆弧10", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line18", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.Extension.SelectByID2("Line19", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchMirror()
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2 + proB_hor_distance1 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0)
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter - 2 * proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2 + proB_hor_distance1 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter - 2 * proB_ver_diameter, 0)
                part.SketchManager.CreateArc(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2 + proB_hor_distance1 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_distance2, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2 + proB_hor_distance1 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2 + proB_hor_distance1 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter - 2 * proB_ver_diameter, 0, -1)
                part.ClearSelection2(True)

                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter, 0)
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter + 2 * proB_ver_diameter, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter + 2 * proB_ver_diameter, 0)
                part.SketchManager.CreateArc(-(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2) - proB_hor_distance1 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_distance2, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter + 2 * proB_ver_diameter, 0, -1)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1, 0)
                part.Extension.SelectByID2("Line13", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2), BottomView_ver_distance1 / 2 - proB_ver_distance1, 0)
                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2), -BottomView_ver_distance1 / 2 + proB_ver_distance1, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_distance2, 0)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, -(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2), -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_distance2, 0)
                part.Extension.SelectByID2("Line28", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter, 0)

                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2, proA_hor_distance1 / 2, 0, BottomView_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2, proA_hor_distance1 / 2, 0, -BottomView_hor_distance1 / 2, -proA_hor_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0, BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, BottomView_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2, -BottomView_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, proA_ver_distance1, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8 + 256, MainView_ver_distance4 - proA_ver_distance1, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCircleByRadius(BottomView_hor_distance1 / 2 - BottomView_hor_distance5, 0, 0, MainView_hor_diameter2 / 2)
                part.SketchManager.CreateCircleByRadius(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5, 0, 0, MainView_hor_diameter2 / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, MainView_ver_distance6, proA_hor_distance1, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_ver_distance1, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面4", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(TopView_hor_distance3, TopView_ver_distance2 / 2, 0, TopView_hor_distance3 - TopView_hor_distance1 / 2, TopView_ver_distance2 / 2 + TopView_hor_distance1 / 2, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(FilRad, 2)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                line = part.SelectionManager.GetSelectedObject6(1, -1)
                line.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 2, TopView_hor_distance4, TopView_ver_distance2, PI, 4.7123889803847, "", False, False, False, True, True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, MainView_ver_distance3 - proA_ver_distance1, 0.01, True, False, False, False, Math.Atan(0.5 / 6), 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False


                Dim swtext As SldWorks.SketchText
                Dim textformat As SldWorks.ITextFormat
                part.Extension.SelectByID2("基准面4", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swtext = part.InsertSketchText(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2 - proB_ver_diameter / 2, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter * Math.Cos(35), 0, letter1, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + 0.0005, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter - 2 * proB_ver_diameter + 0.0001, 0, letter2, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 - proA_hor_distance1 / 2 - proB_hor_distance1 + proA_hor_distance1 / 2 - proB_ver_diameter / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter * Math.Cos(35), 0, letter3, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + 0.0005, BottomView_ver_distance1 / 2 - proB_ver_distance1 + proB_ver_diameter * Math.Cos(35), 0, letter4, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(-(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proA_hor_distance1 / 2) - proB_hor_distance1 + proA_hor_distance1 / 2 - proB_ver_diameter / 2, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_distance2 + proB_ver_diameter * Math.Cos(35), 0, letter5, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                swtext = part.InsertSketchText(BottomView_hor_distance1 / 2 - BottomView_hor_distance5 + 0.0005, -BottomView_ver_distance1 / 2 + proB_ver_distance1 + proB_ver_diameter - 2 * proB_ver_diameter + 0.0001, 0, letter6, 3, 0, 0, 100, 100)
                textformat = swtext.GetTextFormat
                textformat.CharHeight = 0.0025
                swtext.SetTextFormat(False, textformat) '修改草图文本字体高度
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, 0.0005, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, MainView_ver_distance2 + MainView_ver_distance3, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面5", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreatePolygon(-TopView_hor_distance3, TopView_ver_distance2 / 2, 0, -TopView_hor_distance3 + 0.00383, TopView_ver_distance2 / 2, 0, 6, True)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                line = part.SelectionManager.GetSelectedObject6(1, -1)
                line.SelectChain(False, Nothing)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 2, TopView_hor_distance4, TopView_ver_distance2, 0, 4.7123889803847, "", False, False, False, True, True)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, 0.0032, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, TopView_ver_distance2 / 2, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面6", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateLine(-TopView_hor_distance3, 0.002, 0, -TopView_hor_distance3 - 0.004, 0.002, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-TopView_hor_distance3 - 0.004, 0.002, 0, -TopView_hor_distance3 - 0.004, 0.002 - 0.00025, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-TopView_hor_distance3 - 0.004, 0.002 - 0.00025, 0, -TopView_hor_distance3 - 0.002, -0.0007, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-TopView_hor_distance3 - 0.002, -0.0007, 0, -TopView_hor_distance3 - 0.002, -MainView_ver_distance3, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-TopView_hor_distance3 - 0.002, -MainView_ver_distance3, 0, -TopView_hor_distance3, -MainView_ver_distance3, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-TopView_hor_distance3, 0.002, 0, -TopView_hor_distance3, -MainView_ver_distance3, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("草图10", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", -0.0201234298102981, 0, -0.0066154527142427, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 6.2831853071796, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, TopView_ver_distance2 / 2, 0, 0, 0, 0)  '256反转平面+8等距偏移建基准面
                part.Extension.SelectByID2("基准面7", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterRectangle(-TopView_hor_distance3, 0.002 - 0.0005, 0, -TopView_hor_distance3 + 0.0006, 0.001, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 6, 0, 0.008, 0.008, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.InsertAxis2(True)   '建基准轴
                part.Extension.SelectByID2("切除-旋转1", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("凸台-拉伸7", "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0.0288963805741371, 0.000399501551567674, -0.000213957247451487, True, 1, Nothing, 0)
                part.Extension.SelectByID2("基准面6", "PLANE", -0.0354285253908202, -0.0897939764292346, 0.0756315610657339, True, 2, Nothing, 0)
                Featmgr = part.FeatureManager
                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmLPattern)
                swFeatData.D1EndCondition = 0
                swFeatData.D1ReverseDirection = False
                swFeatData.D1Spacing = 0.02
                swFeatData.D1TotalInstances = 3
                swFeatData.D2EndCondition = 0
                swFeatData.D2PatternSeedOnly = False
                swFeatData.D2ReverseDirection = True
                swFeatData.D2Spacing = 0.02
                swFeatData.D2TotalInstances = 2
                swFeatData.GeometryPattern = False
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)



                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim anno() As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim myNote As Object
                Dim myDatumTag As Object
                Dim myAnnotation As Object
                Dim SheetPr() As Double
                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim Annotation As SldWorks.Annotation
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vEdges As Object
                Dim vEdges2 As Object
                Dim i As Integer
                Dim Displaydimention As SldWorks.DisplayDimension

                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                part = swapp.ActiveDoc
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)
                swapp.SetUserPreferenceToggle（swUserPreferenceToggle_e.swSketchInferFromModel, False）
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchSnapsNearest, True)
                selecmag = part.SelectionManager
                part.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.068, 0.24, 0)
                part.ViewDisplayHidden
                part.Extension.SelectByID2("细节项目254@工程图视图1", "CENTERMARKSYM", 0.08819808803484, 0.23969703947966, 0, False, 0, Nothing, 0)
                part.HideDimension()
                myNote = part.InsertNote(company)
                myAnnotation = myNote.GetAnnotation()
                If Not myAnnotation Is Nothing Then
                    myAnnotation.SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                    myAnnotation.SetPosition(0.165, 0.055, 0)
                End If
                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes
                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)
                            End If
                            If Annpos(0) > 0.13093 And Annpos(0) < 0.14281 And Annpos(1) > 0.02449 And Annpos(1) < 0.033 Then
                                N1.SetText(weight)
                            End If
                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.156, 0.107, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.字体凸起0.5,字母及数字为2.5号字" + Chr(13) + Chr(10) +
                    "2.任意两个端子间应能承受5000V,历时" + Chr(13) + Chr(10) +
                    "1min的耐压试验,热态绝缘电阻应不底于20兆欧姆。" + Chr(13) + Chr(10) +
                    "兆欧姆。" + Chr(13) + Chr(10) +
                    "3.接线板的相比漏电起痕指数（CTI）应不低于175V" + Chr(13) + Chr(10) +
                    "不低于175V" + Chr(13) + Chr(10) +
                    "4.未注明的圆角半径不超过2"）
                myNote.GetAnnotation().SetPosition(0.136, 0.101, 0)
                part.FontPoints(16)

                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), scale_m, scale_d, True, SheetPr(5), SheetPr(6), SheetPr(7))
                part.EditRebuild()

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                selecmag.AddSelectionListObject(vEdges(39), Nothing)
                selecmag.AddSelectionListObject(vEdges(49), Nothing)
                part.AddDimension2(0.078, 0.263, 0)
                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.078, 0.253, 0)
                selecmag.AddSelectionListObject(vEdges(35), Nothing)
                selecmag.AddSelectionListObject(vEdges(43), Nothing)
                part.AddDimension2(0.104, 0.239, 0)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                selecmag.AddSelectionListObject(vEdges(6), Nothing)
                part.AddDimension2(0.089, 0.239, 0)
                selecmag.AddSelectionListObject(vEdges(35), Nothing)
                selecmag.AddSelectionListObject(vEdges(55), Nothing)
                part.AddDimension2(0.104, 0.226, 0)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                selecmag.AddSelectionListObject(vEdges(30), Nothing)
                part.AddDimension2(0.068, 0.217, 0)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                selecmag.AddSelectionListObject(vEdges(57), Nothing)
                part.AddDimension2(0.086, 0.217, 0)
                selecmag.AddSelectionListObject(vEdges(53), Nothing)
                selecmag.AddSelectionListObject(vEdges(57), Nothing)
                part.AddDimension2(0.068, 0.212, 0)
                selecmag.AddSelectionListObject(vEdges(30), Nothing)
                selecmag.AddSelectionListObject(vEdges(55), Nothing)
                part.AddDimension2(0.036, 0.229, 0)
                selecmag.AddSelectionListObject(vEdges(50), Nothing)
                selecmag.AddSelectionListObject(vEdges(55), Nothing)
                part.AddDimension2(0.03, 0.238, 0)

                part.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.068, 0.102, 0)
                part.ViewDisplayHidden
                part.Extension.SelectByID2("细节项目259@工程图视图2", "CENTERMARKSYM", 0, 0, 0, False, 0, Nothing, 0)
                part.HideDimension()
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                selecmag.AddSelectionListObject(vEdges(33), Nothing)
                selecmag.AddSelectionListObject(vEdges(45), Nothing)
                part.AddDimension2(0.047, 0.08, 0)
                selecmag.AddSelectionListObject(vEdges(35), Nothing)
                selecmag.AddSelectionListObject(vEdges(47), Nothing)
                part.AddDimension2(0.047, 0.075, 0)
                selecmag.AddSelectionListObject(vEdges(39), Nothing)
                selecmag.AddSelectionListObject(vEdges(51), Nothing)
                part.AddDimension2(0.036, 0.093, 0)
                selecmag.AddSelectionListObject(vEdges(41), Nothing)
                selecmag.AddSelectionListObject(vEdges(52), Nothing)
                part.AddDimension2(0.032, 0.093, 0)
                selecmag.AddSelectionListObject(vEdges(180), Nothing)
                selecmag.AddSelectionListObject(vEdges(182), Nothing)
                part.AddDimension2(0.057, 0.127, 0)
                selecmag.AddSelectionListObject(vEdges(180), Nothing)
                selecmag.AddSelectionListObject(vEdges(184), Nothing)
                part.AddDimension2(0.077, 0.127, 0)
                selecmag.AddSelectionListObject(vEdges(468), Nothing)
                selecmag.AddSelectionListObject(vEdges(184), Nothing)
                part.AddDimension2(0.092, 0.127, 0)
                selecmag.AddSelectionListObject(vEdges(467), Nothing)
                selecmag.AddSelectionListObject(vEdges(184), Nothing)
                part.AddDimension2(0.102, 0.115, 0)
                selecmag.AddSelectionListObject(vEdges(185), Nothing)
                selecmag.AddSelectionListObject(vEdges(184), Nothing)
                part.AddDimension2(0.102, 0.1, 0)
                part.SketchManager.CreateCenterRectangle(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5, BottomView_ver_distance1 / 2 - proB_ver_distance1 - proB_ver_diameter, 0, -BottomView_hor_distance1 / 2 + BottomView_hor_distance5 + proB_hor_distance1 + proB_ver_diameter + 0.0001, BottomView_ver_distance1 / 2 + 0.001, 0)
                part.CreateDetailViewAt4(0.15, 0.217, 0, 1, 2, 1, "I", 0, False, True, False, 3)
                part.Extension.SelectByID2("工程图视图3", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                selecmag.AddSelectionListObject(vEdges(87), Nothing)
                selecmag.AddSelectionListObject(vEdges(97), Nothing)
                part.AddDimension2(0.138, 0.224, 0)
                'part.SketchManager.CreateCircleByRadius(0, 0, 0, 0.01)
                selecmag.AddSelectionListObject(vEdges(87), Nothing)
                selecmag.AddSelectionListObject(vEdges(93), Nothing)
                part.AddVerticalDimension2(0.138, 0.218, 0)
                selecmag.AddSelectionListObject(vEdges(93), Nothing)
                part.AddDimension2(0.165, 0.213, 0)
                part.SketchManager.CreateCenterLine(-0.01, 0.001 + 0.018, 0, -0.01, -0.001 + 0.018, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(93), Nothing)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.151, 0.204, 0)

                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                line = part.SketchManager.CreateLine(-BottomView_hor_distance1 - 0.001, -TopView_ver_distance2 / 2, 0, 0, -TopView_ver_distance2 / 2, 0)
                part.SketchManager.CreateLine(0, -TopView_ver_distance2 / 2, 0, 0, -proA_hor_distance1 / 2 - 0.0005, 0)
                part.SketchManager.CreateLine(0, -proA_hor_distance1 / 2 - 0.0005, 0, TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2, -proA_hor_distance1 / 2 - 0.0005, 0)
                part.SketchManager.CreateLine(TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2, -proA_hor_distance1 / 2 - 0.0005, 0, TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2, 0, 0)
                part.SketchManager.CreateLine(TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2, 0, 0, TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2 + MainView_hor_diameter1, 0, 0)
                part.SketchManager.CreateLine(TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2 + MainView_hor_diameter1, 0, 0, TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2 + MainView_hor_diameter1, -proA_hor_distance1 / 2 - 0.0005, 0)
                part.SketchManager.CreateLine(TopView_hor_distance4 / 2 - MainView_hor_diameter1 / 2 + MainView_hor_diameter1, -proA_hor_distance1 / 2 - 0.0005, 0, BottomView_hor_distance1 + 0.001, -proA_hor_distance1 / 2 - 0.0005, 0)
                line.SelectChain(False, Nothing)
                part.CreateSectionViewAt5(0.053, 0.165, 0, "A", 132, Nothing, 0)

                part.Extension.SelectByID2("工程图视图4", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                selecmag.AddSelectionListObject(vEdges(61), Nothing)
                selecmag.AddSelectionListObject(vEdges(40), Nothing)
                part.AddDimension2(0.035, 0.152, 0)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.035, 0.159, 0)
                selecmag.AddSelectionListObject(vEdges(8), Nothing)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                part.AddDimension2(0.035, 0.166, 0)
                selecmag.AddSelectionListObject(vEdges(83), Nothing)
                selecmag.AddSelectionListObject(vEdges(79), Nothing)
                part.AddDimension2(0.1, 0.161, 0)
                selecmag.AddSelectionListObject(vEdges(75), Nothing)
                selecmag.AddSelectionListObject(vEdges(78), Nothing)
                part.AddDimension2(0.076, 0.174, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(82), Nothing)
                selecmag.AddSelectionListObject(vEdges(90), Nothing)
                part.AddDimension2(0.076, 0.145, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges(84), Nothing)
                selecmag.AddSelectionListObject(vEdges(88), Nothing)
                part.AddDimension2(0.076, 0.159, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)

                part.ActivateView("工程图视图5")
                part.Extension.SelectByID2("工程图视图5", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateCircleByRadius(-BottomView_hor_distance1 / 2 + BottomView_hor_distance5, 0, 0, proA_ver_distance1 + 0.002)
                part.CreateDetailViewAt4(0.15, 0.265, 0, 1, 2, 1, "II", 0, False, True, False, 3)
                'part.Extension.SelectByID2("工程图视图5", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'View = selecmag.GetSelectedObject6(1, -1)
                'vComponents = View.GetVisibleComponents() '获得可视组件集合
                'vEdges = View.GetVisibleEntities2(vComponents(0), 1) '获得特定可视实体集合
                'vEdgeCount = View.GetVisibleEntityCount2(vComponents(0), 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                'part.ClearSelection2(True)
                'vEdgeCount = 0
                'Do Until vEdgeCount > 500
                '    For i = vEdgeCount To vEdgeCount + 20
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 20
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 500
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                part.Extension.SelectByRay(0.151896488736863, 0.265692764888155, 250.019, 0, 0, -1, 0.000451129083263805, 1, False, 0, 0)
                part.Extension.SelectByRay(0.147757382705818, 0.265754935719013, 250.019, 0, 0, -1, 0.000204067886830034, 1, True, 0, 0)
                part.AddDimension2(0.149758920863309, 0.254951341708618, 0)
                part.Extension.SelectByRay(0.147517882928714, 0.266090819961623, 250.019, 0, 0, -1, 0.000451129083263805, 1, False, 0, 0)
                part.AddDimension2(0.131821666931142, 0.276873469453281, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 连接片()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\连接片.SLDPRT"
                Dim dz3 As String
                dz3 = "\连接片.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim diameter_d1 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from connecting_piece", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                hor_distance3 = dr.GetString("hor_distance3") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance1 / 2, ver_distance1 / 2, 0)
                sketcher.CreateCircleByRadius(hor_distance3 / 2, 0, 0, diameter_d1 / 2)
                sketcher.CreateCircleByRadius(-hor_distance3 / 2, 0, 0, diameter_d1 / 2)
                sketcher.InsertSketch(True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, 0.5 / 1000, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation

                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.113, 0.22, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)
                part.Extension.SelectByID2("Line1@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.112, 0.194, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line4@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.068, 0.22, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc2@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.112, 0.201, 0)
                part.EditDimensionProperties2(4, 0.0004, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc1@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.075, 0.225, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc1@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.088, 0.201, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc2@草图1@连接片-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.155, 0.21, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "2-<MOD-DIAM>", "", True, "", "", False)
                Dim Displaydim As Object
                Dim selecmag As SldWorks.SelectionMgr
                selecmag = part.SelectionManager
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)
                part.ClearSelection2(True)

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.038, 0.115, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.未注公差的线性尺寸的极限偏差按GB/T1804-C；" + Chr(13) + Chr(10) +
                    "2.镀镍 镀层厚度应不小于5μm;" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.039, 0.101, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 接线压片()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\连接压片.SLDPRT"
                Dim dz3 As String
                dz3 = "\连接压片.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim diameter_d1 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from connect_the_tablet", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                hor_distance3 = dr.GetString("hor_distance3") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance2 / 2, ver_distance1 / 2, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, hor_distance1, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterRectangle(0, 0, 0, hor_distance2 / 2 + 0.001, ver_distance2 / 2, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, hor_distance1 - ver_distance1 / 2 + ver_distance2 / 2, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, diameter_d1 / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, hor_distance1, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                Dim edge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager


                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("切除-拉伸2", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0

                'Do Until vEdgeCount > 110
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(7), Nothing)
                selecmag.AddSelectionListObject(edge(9), Nothing)
                selecmag.AddSelectionListObject(edge(22), Nothing)
                selecmag.AddSelectionListObject(edge(23), Nothing)
                part.FeatureManager.FeatureFillet3(195, 0.001, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation


                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)



                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.16, 0.216, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0， -ver_distance1 / 2 - 0.002, 0, 0, ver_distance1 / 2 + 0.002, 0)
                part.CreateSectionViewAt5(0.06, 0.216, 0, "A", 132, 0, 0)
                part.ClearSelection2(True)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                'Dim selecmag As SldWorks.SelectionMgr
                'Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.159, 0.262, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                selecmag.AddSelectionListObject(vEdges(12), Nothing)
                part.AddDimension2(0.148, 0.25, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 1, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(12), Nothing)
                part.AddDimension2(0.174, 0.228, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                selecmag.AddSelectionListObject(vEdges(13), Nothing)
                part.AddDimension2(0.058, 0.215, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(9), Nothing)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                part.AddDimension2(0.067, 0.215, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                selecmag.AddSelectionListObject(vEdges(12), Nothing)
                part.AddDimension2(0.089, 0.25, 0)
                part.ClearSelection2(True)

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.036, 0.102, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.未注圆角半径不超过2;" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c." + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.036, 0.094, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 出线孔盖()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\出线孔盖.SLDPRT"
                Dim dz3 As String
                dz3 = "\出线孔盖.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager

                Const pi As Double = 3.1415926535897

                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager


                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim weight As Double
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim radius1 As Double
                Dim radius2 As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim ver_distance3 As Double
                Dim ver_distance4 As Double
                Dim ver_distance5 As Double
                Dim ver_distance6 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from outlet_hole_cover", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                weight = dr.GetString("weight")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")

                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                radius1 = dr.GetString("radius1") / 1000
                radius2 = dr.GetString("radius2") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                diameter_d2 = dr.GetString("diameter_d2") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                ver_distance3 = dr.GetString("ver_distance3") / 1000
                ver_distance4 = dr.GetString("ver_distance4") / 1000
                ver_distance5 = dr.GetString("ver_distance5") / 1000
                ver_distance6 = dr.GetString("ver_distance6") / 1000



                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0, ver_distance1 + 0.005, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(0, 0, 0, diameter_d2 / 2, 0, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(diameter_d2 / 2, 0, 0, diameter_d2 / 2, ver_distance5, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(diameter_d2 / 2, ver_distance5, 0, diameter_d1 / 2, ver_distance5, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(diameter_d1 / 2, ver_distance5, 0, diameter_d1 / 2, ver_distance5 - ver_distance4, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(diameter_d1 / 2, ver_distance5 - ver_distance4, 0, hor_distance1 / 2, ver_distance5 - ver_distance4, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(hor_distance1 / 2, ver_distance5 - ver_distance4, 0, hor_distance1 / 2, ver_distance5 - ver_distance4 - ver_distance3, 0)
                part.ClearSelection2(True)

                sketcher.Create3PointArc(hor_distance1 / 2, ver_distance5 - ver_distance4 - ver_distance3, 0, -hor_distance1 / 2, ver_distance5 - ver_distance4 - ver_distance3, 0, 0, -ver_distance2 + ver_distance5, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(0, 0, 0, 0, -ver_distance2 + ver_distance5, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.SketchTrim(0, -hor_distance1 / 2, ver_distance5 - ver_distance4 - ver_distance3, 0)

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 1)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * pi, 0, False, False, 0, 0, 0, 0, 0, True, True, True)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, ver_distance6, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateSketchSlot(1, 0, hor_distance2, 0, 0, 0, 0, ver_distance1 / 2 - hor_distance2 / 2, 0, 0, 0, 0, 1, False)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.BlankRefGeom()

                Dim edge() As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("切除-拉伸1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                'vEdgeCount = 0
                'Do Until vEdgeCount > 50
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop
                'selecmag.AddSelectionListObject(edge(10), Nothing)



                'Dim swFeatMgr As Object
                'Dim swThreadEndCondition_Blind As Object
                'Dim swThreadMirrorType_Horizontally As Object
                'Dim swThreadMethod_Cut As Object
                'swFeatMgr = part.FeatureManager
                'Dim swFeatData As Object
                'swFeatData = swFeatMgr.CreateDefinition(swFeatureNameID_e.swFmSweepThread)
                'swFeatData.InitializeThreadData
                'swFeatData.BlindDepth = 0.022
                'swFeatData.DiameterOverride = False
                'swFeatData.EndCondition = swThreadEndCondition_Blind
                'swFeatData.EndConditionOffset = False
                'swFeatData.EndConditionOffsetDistance = 0.001
                'swFeatData.EndConditionOffsetReverse = False
                'swFeatData.MaintainThreadLength = False
                'swFeatData.MirrorProfile = False
                'swFeatData.MirrorType = swThreadMirrorType_Horizontally
                'swFeatData.MultipleStart = False
                'swFeatData.NumberOfStarts = 2
                'swFeatData.Offset = True
                'swFeatData.OffsetDistance = 0.01
                'swFeatData.PitchOverride = False
                'swFeatData.ReverseDirection = False
                'swFeatData.ReverseOffset = True
                'swFeatData.Revolutions = 5.5
                'swFeatData.RightHanded = True
                'swFeatData.RotationAngle = 0
                'swFeatData.ThreadMethod = swThreadMethod_Cut
                'swFeatData.ThreadStartAngle = 0
                'swFeatData.TrimEndFace = False
                'swFeatData.TrimStartFace = False
                'swFeatData.Type = "C:\ProgramData\SolidWorks\SOLIDWORKS 2019\thread profiles\Metric Die.SLDLFP"
                'swFeatData.Diameter = 0.064

                'swFeatData.Size = "M64x1.5"
                'swFeatMgr.CreateFeature(swFeatData)

                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation


                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 65 / 1000 * 2 And Annpos(0) < 71 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 17 / 1000 * 2 Then
                                N1.SetText(weight)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()


                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*下视", 0.113, 0.225, 0)
                part.Extension.SelectByID2("草图2@出线孔盖-1@工程图视图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.UnblankSketch()
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(-hor_distance1 - 0.002, 0, 0, hor_distance1 + 0.002, 0, 0)
                part.CreateSectionViewAt5(0.113, 0.152, 0, "A", 128, 0, 0)
                'part.Extension.SelectByID2("剖切线1", "SECTIONLINE", 0.074, 0.226, 0, False, 0, Nothing, 0)

                part.Extension.SelectByID2("细节项目256@工程图视图2", "NOTE", 0.114504794689757, 0.187588922280663, 0, False, 0, Nothing, 0)
                part.HideDimension()

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                'Dim vCompCount As Integer
                Dim vEdges As Object


                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 25
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(0), Nothing)
                part.AddDimension2(0.131, 0.249, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                part.AddDimension2(0.088, 0.225, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.118, 0.22, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                'vEdgeCount = 0
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddDimension2(0.113, 0.166, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.097, 0.154, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(6), Nothing)
                part.AddDimension2(0.091, 0.15, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.113, 0.172, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M24x1.5-6g", "", False, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                part.AddDimension2(0.11, 0.155, 0)

                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(17), Nothing)
                selecmag.AddSelectionListObject(vEdges(10), Nothing)
                part.AddDimension2(0.137, 0.149, 0)
                part.ClearSelection2(True)

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.04, 0.12, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                    "1.表面应整洁，无毛刺；" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.039, 0.111, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 螺套()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\螺套.SLDPRT"
                Dim dz3 As String
                dz3 = "\螺套.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim radius1 As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double
                Dim diameter_d3 As Double
                Dim diameter_d4 As Double
                Dim diameter_d5 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim ver_distance3 As Double
                Dim ver_distance4 As Double
                Dim ver_distance5 As Double
                Dim ver_distance6 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from screw_sleeve", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                radius1 = dr.GetString("radius1") / 1000
                diameter_d1 = dr.GetString("diameter_d1") / 1000
                diameter_d2 = dr.GetString("diameter_d2") / 1000
                diameter_d3 = dr.GetString("diameter_d3") / 1000
                diameter_d4 = dr.GetString("diameter_d4") / 1000
                diameter_d5 = dr.GetString("diameter_d5") / 1000
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                ver_distance3 = dr.GetString("ver_distance3") / 1000
                ver_distance4 = dr.GetString("ver_distance4") / 1000
                ver_distance5 = dr.GetString("ver_distance5") / 1000
                ver_distance6 = dr.GetString("ver_distance6") / 1000

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d4 / 2）
                part.ClearSelection2(True)
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d5 / 2）
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, ver_distance2, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, ver_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreatePolygon(0, 0, 0, hor_distance1 / 2, 0, 0, 6, True)
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d3 / 2）
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, ver_distance3, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, ver_distance3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d3 / 2）
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d1 / 2）
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, ver_distance4 - ver_distance5, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, ver_distance4, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d2 / 2）
                sketcher.CreateCircleByRadius（0， 0， 0， diameter_d1 / 2）
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图4", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 0, 0, ver_distance5, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                Dim edge() As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("凸台-拉伸4", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                vEdgeCount = 0

                'Do Until vEdgeCount > 75
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(50), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius1, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.BlankRefGeom()

                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchSegment
                Dim arc1 As SldWorks.SketchSegment
                Dim line3 As SldWorks.SketchSegment
                part.SetUserPreferenceToggle(swUserPreferenceToggle_e.swDisplayTemporaryAxes, True)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                line3 = sketcher.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                line1 = sketcher.CreateLine(-ver_distance6 / 2, -ver_distance2, 0, -hor_distance1 / 2, -ver_distance2, 0)
                part.ClearSelection2(True)
                line2 = sketcher.CreateLine(-hor_distance1 / 2, -ver_distance2, 0, -hor_distance1 / 2, -ver_distance2 - 0.001, 0)
                part.ClearSelection2(True)
                arc1 = sketcher.CreateTangentArc(-ver_distance6 / 2, -ver_distance2, 0, -hor_distance1 / 2, -ver_distance2 - 0.001, 0, 3)
                part.ClearSelection2(True)
                part.Extension.SelectByID2(line1.GetName, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2(arc1.GetName, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("草图5", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation

                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.113, 0.22, 0)

                myViewname = myView.Name
                Debug.Print(myViewname)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, True)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                line1 = part.SketchManager.CreateLine(0, 0, 0, hor_distance1 / 2 + 0.002, 0, 0)
                line2 = part.SketchManager.CreateLine(0, 0, 0, 0, ver_distance6 / 2 + 0.002, 0)
                line3 = part.SketchManager.CreateLine(0, ver_distance6 / 2 + 0.002, 0, 0.001, ver_distance6 / 2 + 0.002, 0)
                line3.Select4(False, Nothing)
                part.SketchAddConstraints("sgHORIZONTAL2D")
                part.CreateSectionViewAt5(0.112, 0.14, 0, "A", 128, Nothing, 0)

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                'Dim selecmag As SldWorks.SelectionMgr
                'Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 27
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitSystem, 0, swUnitSystem_e.swUnitSystem_MMGS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 0)
                selecmag.AddSelectionListObject(vEdges(6), Nothing)
                selecmag.AddSelectionListObject(vEdges(10), Nothing)
                part.AddDimension2(0.157, 0.22, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合

                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量

                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop




                selecmag.AddSelectionListObject(vEdges(4), Nothing)
                part.AddDimension2(0.153, 0.13, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(16), Nothing)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.164, 0.141, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                selecmag.AddSelectionListObject(vEdges(13), Nothing)
                part.AddDimension2(0.103, 0.145, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(15), Nothing)
                part.AddDimension2(0.151, 0.154, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(16), Nothing)
                part.AddDimension2(0.113, 0.176, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M", "x1.5-6g", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)

                part.AddDimension2(0.113, 0.112, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 0, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)

                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(30), Nothing)
                selecmag.AddSelectionListObject(vEdges(25), Nothing)
                part.AddDimension2(0.12, 0.157, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(25), Nothing)
                part.AddDimension2(0.113, 0.167, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(12), Nothing)
                selecmag.AddSelectionListObject(vEdges(27), Nothing)
                part.AddDimension2(0.113, 0.096, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(20), Nothing)
                part.AddDimension2(0.123, 0.163, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(19), Nothing)
                part.AddDimension2(0.113, 0.104, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M", "x1.5-6H", True, "", "", False)
                part.ClearSelection2(True)

                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.035, 0.093, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                    "1.工件表面应光洁.平整.无毛刺,无缩孔和变形；" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.039, 0.081, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 压紧螺母()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\压紧螺母.SLDPRT"
                Dim dz3 As String
                dz3 = "\压紧螺母.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Const pi As Double = 3.1415926535897
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim radius As Double
                Dim hor_distance2 As Double
                Dim hor_distance3 As Double
                Dim ver_distance1 As Double
                Dim ver_distance2 As Double
                Dim ver_distance3 As Double


                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from compression_nut", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("id") = 1
                    dr.Read()
                Loop
                Dim Code As String = dr("Code")
                name = dr.GetString("name")
                company = dr("company")
                material = dr.GetString("material")
                scale_m = dr.GetString("scale_m")
                scale_d = dr.GetString("scale_d")
                radius = dr.GetString("radius") / 1000
                hor_distance1 = dr.GetString("hor_distance1") / 1000
                hor_distance2 = dr.GetString("hor_distance2") / 1000
                hor_distance3 = dr.GetString("hor_distance3") / 1000
                ver_distance1 = dr.GetString("ver_distance1") / 1000
                ver_distance2 = dr.GetString("ver_distance2") / 1000
                ver_distance3 = dr.GetString("ver_distance3") / 1000

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreatePolygon(0, 0, 0, hor_distance3 / 2, 0, 0, 6, True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, ver_distance2, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)

                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchSegment

                Dim line3 As SldWorks.SketchSegment




                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0, 0.01, 0)
                line1 = sketcher.CreateLine(-hor_distance3 / 2 + 0.0023, 0, 0, -hor_distance3 / 2, 0, 0)
                part.SketchAddConstraints("sgFIXED")
                line2 = sketcher.CreateLine(-hor_distance3 / 2, 0, 0, -hor_distance3 / 2, -0.001, 0)
                part.SketchAddConstraints("sgFIXED")
                line3 = sketcher.CreateLine(-hor_distance3 / 2, -0.001, 0, -hor_distance3 / 2 + 0.0023, 0, 0)
                part.SketchAddConstraints("sgFIXED")
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, ver_distance2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, hor_distance1 / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, hor_distance2 / 2)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("草图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, ver_distance1 - ver_distance2, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, hor_distance2 / 2)
                part.FeatureManager.FeatureCut4(True, False, True, 0, 0, ver_distance2, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)


                Dim edge() As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                Dim selecmag As SldWorks.SelectionMgr
                Dim swbody As SldWorks.Body2
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.Extension.SelectByID2("切除-拉伸1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)
                'vEdgeCount = 0

                'Do Until vEdgeCount > 75
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(39), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation

                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*后视", 0.113, 0.167, 0)

                myViewname = myView.Name
                Debug.Print(myViewname)

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)

                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, True)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                line1 = part.SketchManager.CreateLine(0, 0, 0, hor_distance3 / 2 + 0.002, 0, 0)
                line2 = part.SketchManager.CreateLine(0, 0, 0, 0, -ver_distance3 / 2 - 0.002, 0)
                line3 = part.SketchManager.CreateLine(0, -ver_distance3 / 2 - 0.002, 0, 0.001, -ver_distance3 / 2 - 0.002, 0)
                line3.Select4(False, Nothing)
                part.SketchAddConstraints("sgHORIZONTAL2D")
                part.CreateSectionViewAt5(0.113, 0.268, 0, "A", 132, Nothing, 0)

                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                'Dim selecmag As SldWorks.SelectionMgr
                'Dim vEdgeCount As Integer
                Dim vEdges1 As Object
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合

                vEdges1 = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 2)
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0


                'Do Until vEdgeCount > 27
                '    selecmag.AddSelectionListObject(vEdges1(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                selecmag.AddSelectionListObject(vEdges(9), Nothing)
                part.AddDimension2(0.169, 0.167, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", False, 0, 2, True, 12, 12, "", "", True, "", "", False)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                selecmag.AddSelectionListObject(vEdges1(12), Nothing)
                part.AddDimension2(0.112, 0.113, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                'Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 35
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                part.AddDimension2(0.112, 0.207, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "M", "X1.5-6g", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(23), Nothing)
                selecmag.AddSelectionListObject(vEdges(15), Nothing)
                part.AddDimension2(0.153, 0.249, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(11), Nothing)
                selecmag.AddSelectionListObject(vEdges(15), Nothing)
                part.AddDimension2(0.163, 0.239, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(14), Nothing)
                part.AddDimension2(0.123, 0.261, 0)
                Dim Displaydim As SldWorks.DisplayDimension
                selecmag = part.SelectionManager
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(17), Nothing)
                Displaydim = part.AddDimension2(0.112, 0.213, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim.WitnessVisibility = 1 '隐藏尺寸线1左2右
                Displaydim.LeaderVisibility = 1 '隐藏尺寸线
                part.ClearSelection2(True)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.035, 0.093, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                    "1.工件表面应光洁.平整.无毛刺,无缩孔和变形；" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.039, 0.081, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 密封圈()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\密封圈.SLDPRT"
                Dim dz3 As String
                dz3 = "\密封圈.SLDDRW"

                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)

                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment
                Dim hor_distance1 As Double
                Dim hor_distance2 As Double
                Dim ver_distance3 As Double
                Dim ver_distance4 As Double
                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1_TolMax As Double
                Dim hor_distance1_TolMin As Double
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from seal_ring", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")

                        hor_distance1 = dr.GetString("hor_distance1") / 1000
                        hor_distance2 = dr.GetString("hor_distance2") / 1000
                        ver_distance3 = dr.GetString("ver_distance1") / 1000
                        ver_distance4 = dr.GetString("ver_distance2") / 1000
                        hor_distance1_TolMax = dr.GetString("hor_distance1_TolMax") / 1000
                        hor_distance1_TolMin = dr.GetString("hor_distance1_TolMin") / 1000
                    End If
                Loop

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                arc1 = sketcher.CreateCircleByRadius(0, 0, 0, hor_distance1 / 2)
                part.Extension.SelectByID2("arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Featmgr.FeatureExtrusion3(True, False, False, 0, 0, ver_distance4, 0, False, False, 0, 0, 0, 0, 0, 0, 0, 0, True, False, True, 0, 0, 0)
                part.Extension.SelectByID2("", "FACE", 0, 0, ver_distance4, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                arc2 = sketcher.CreateCircleByRadius(0, 0, 0, hor_distance2 / 2)
                part.FeatureManager.FeatureCut4(True, False, False, 0, 0, ver_distance4 - ver_distance3, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View

                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.116, 0.157, 0)
                myViewname = myView.Name
                Debug.Print(myViewname)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(-hor_distance1 - 0.002, 0, 0, hor_distance1 + 0.002, 0, 0)
                part.CreateSectionViewAt5(0.113, 0.17, 0, "A", 132, 0, 0)


                'DrawTitle = DrawTitle.Substring(0, InStrRev(DrawTitle, "-") - 2) '截取目录
                'Debug.Print(DrawTitle)





                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()


                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.0799916741497551, 0.188714821754972, 0, False, 0, Nothing, 0)
                part.SuppressView
                part.ClearSelection2(True)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.064, 0.12, 0)
                part.FontPoints(22)
                myNote = part.InsertNote(
                    "1.未注公差的线性尺寸的极限偏差按GB/T1804-C；" + Chr(13) + Chr(10) +
                    "2.邵尔氏硬度为45-50；" + Chr(13) + Chr(10))
                myNote.GetAnnotation().SetPosition(0.064, 0.1, 0)
                part.Extension.SelectByID2("细节项目255@工程图视图2", "NOTE", 0.11726218335508, 0.24119959014154, 0, False, 0, Nothing, 0)
                part.HideDimension()


                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                'Dim vCompCount As Integer
                Dim vEdges As Object
                Dim vEdgeCount As Integer
                Dim i As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 25
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                part.AddDimension2(0.116, 0.174, 0)
                part.EditDimensionProperties2(2, hor_distance1_TolMax, hor_distance1_TolMin, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(7), Nothing)
                selecmag.AddSelectionListObject(vEdges(3), Nothing)
                part.AddDimension2(0.159, 0.191, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges(6), Nothing)
                part.AddDimension2(0.167, 0.209, 0)
                part.ClearSelection2(True)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 垫圈()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\垫圈.SLDPRT"
                Dim dz3 As String
                dz3 = "\垫圈.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager

                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim weight As Double
                Dim thickness As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from washer", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        weight = dr.GetString("weight")
                        diameter_d1 = dr.GetString("diameter_d1") / 1000
                        diameter_d2 = dr.GetString("diameter_d2") / 1000
                        thickness = dr.GetString("thickness") / 1000
                    End If
                Loop

                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                arc1 = sketcher.CreateCircleByRadius(0, 0, 0, diameter_d1 / 2)
                part.ClearSelection2(True)
                arc2 = sketcher.CreateCircleByRadius(0, 0, 0, diameter_d2 / 2)
                part.ClearSelection2(True)
                arc1.Select4(False, Nothing)
                arc1.Select4(True, Nothing)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, thickness, 0, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation


                Draw = swapp.NewDocument("C:\ProgramData\SOLIDWORKS\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myView As SldWorks.View
                Dim myNote As Object
                Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc

                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.166, 0.054, 0)

                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)

                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)

                            End If
                            If Annpos(0) > 65 / 1000 * 2 And Annpos(0) < 71 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 17 / 1000 * 2 Then
                                N1.SetText(weight)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()
                part.ClearSelection2(True)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double

                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.113, 0.225, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(-diameter_d1 - 0.002, 0, 0, diameter_d1 + 0.002, 0, 0)
                part.CreateSectionViewAt5(0.113, 0.152, 0, "A", 128, 0, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Arc2@草图1@零件8-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.142, 0.256, 0)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Arc1@草图1@零件8-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.077, 0.245, 0)
                part.ClearSelection2(True)


                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim vEdgeCount As Integer
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                'Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 27
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(vEdges(2), Nothing)
                part.AddDimension2(0.152, 0.152, 0)
                part.ClearSelection2(True)
                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.04, 0.12, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                    "1.表面应整洁，无毛刺；" + Chr(13) + Chr(10) +
                    "2.未注公差的线性尺寸的极限偏差按GB/T1804-c" + Chr(13) + Chr(10)）
                myNote.GetAnnotation().SetPosition(0.039, 0.111, 0)
                part.SaveAs3(dz1 + dz3, 0, 2)
                swapp.ExitApp()

            End Sub
            Public Sub 接线盒装配()
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.AssemblyDoc
                swapp = CreateObject("Sldworks.application")
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.FrameState = 1 '窗体大小调整为最大
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
                swapp.Visible = True
                part = swapp.ActiveDoc
                Dim dz1 As String
                Dim dz2 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                dz2 = "\接线盒.SLDASM"
                Dim AssemblyTitle As String
                AssemblyTitle = part.GetTitle

                Dim tmpObj As SldWorks.ModelDoc2
                Dim selecter As SldWorks.SelectionMgr
                tmpObj = swapp.ActiveDoc
                selecter = tmpObj.SelectionManager

                Dim errors As Long
                Dim longwarnings As Long
                Dim swInsertedComponent As SldWorks.Component2
                Dim seledate As SldWorks.SelectData
                Const pi As Double = 3.141592653
                seledate = selecter.CreateSelectData（）
                seledate.Mark = 2

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\接线盒座.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\接线盒座.SLDPRT", 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\接线盒座.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\出线孔盖.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)

                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\出线孔盖.SLDPRT", 0, "", False, "", 0.0335883638052338, 0.0629123647269685, 0.0705000000307336)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\出线孔盖.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\垫圈.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\垫圈.SLDPRT", 0, "", False, "", 0.0614022513687354, 0.0459591380215961, 0.0705000000307336)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\垫圈.SLDPRT")

                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\垫圈1.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\垫圈1.SLDPRT", 0, "", False, "", 0.0283193503273651, -0.00188208447798388, 0.150913363788277)
                'swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\垫圈1.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\接线板.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\接线板.SLDPRT", 0, "", False, "", 0.111467248983038, 0.0295356996507665, 0.0709999999962747)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\接线板.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\接线盒盖.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\接线盒盖.SLDPRT", 0, "", False, "", 0.101931058961266, -0.00119202375272101, 0.0714999999618158)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\接线盒盖.SLDPRT")


                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\连接片.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\连接片.SLDPRT", 0, "", False, "", 0.168949283280942, 0.0144367321162942, 0.0699999999487773)
                'swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\连接片.SLDPRT")

                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\连接压片.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\连接压片.SLDPRT", 0, "", False, "", 0.150141797404669, 0.0615878938906112, 0.0669999999227002)
                'swapp.CloseDoc（"E:\works\generator_parts_library\Y2_80\连接压片.SLDPRT"）

                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\螺套.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\螺套.SLDPRT", 0, "", False, "", 0.119678968168453, 0.0634421530615114, 0.0675000000046566)
                'swapp.CloseDoc（"E:\works\generator_parts_library\Y2_80\螺套.SLDPRT"）

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\密封垫.SLDPRT", 1, 32, "", errors, longwarnings)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\密封垫.SLDPRT", 0, "", False, "", 0.177425896633628, 0.0030462829236221, 0.0702499999897555)
                swapp.CloseDoc（"E:\works\generator_parts_library\Y2_80\密封垫.SLDPRT"）

                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\密封圈.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\密封圈.SLDPRT", 0, "", False, "", 0.0852427264231654, 0.0711240839123833, 0.0709999999962747)
                'swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\密封圈.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\橡胶衬垫.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\橡胶衬垫.SLDPRT", 0, "", False, "", 0.0600777805323782, 0.0891368872868415, 0.0760000000009313)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\橡胶衬垫.SLDPRT")

                'swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\压紧螺母.SLDPRT", 1, 32, "", errors, longwarnings)
                'swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                'swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\压紧螺母.SLDPRT", 0, "", False, "", 0.126566216517511, 0.0917858289595559, 0.069463919964619)
                'swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\压紧螺母.SLDPRT")







                Dim ma As SldWorks.Face2
                Dim maset() As Object
                Dim vEdgeCount As Integer
                Dim ma1 As SldWorks.Face2
                Dim maset1() As Object
                Dim ma2 As SldWorks.Face2
                Dim maset2() As Object

                Dim 接线盒座F As SldWorks.Feature
                Dim 橡胶衬垫F As SldWorks.Feature
                Dim 接线板F As SldWorks.Feature
                Dim 密封垫F As SldWorks.Feature
                Dim 螺套F As SldWorks.Feature
                Dim 密封圈F As SldWorks.Feature
                Dim 垫圈F As SldWorks.Feature
                Dim 压紧螺母F As SldWorks.Feature
                Dim 垫圈F1 As SldWorks.Feature
                Dim 出线孔盖F As SldWorks.Feature
                Dim 接线盒盖F As SldWorks.Feature
                Dim HeadFillet1F As Object



                Dim Jfaces（） As Object
                Dim Jfaces1（） As Object
                Dim Jfaces2（） As Object
                Dim Jfaces3（） As Object
                Dim Jfaces4（） As Object
                Dim Jfaces5（） As Object
                Dim Jfaces6（） As Object
                Dim Jfaces7（） As Object
                Dim Jfaces8（） As Object
                Dim Xfaces（） As Object
                Dim Xfaces1（） As Object
                Dim JXfaces（） As Object
                Dim JXfaces1（） As Object
                Dim JXfaces2（） As Object
                Dim Mfaces（） As Object
                Dim Lfaces（） As Object
                Dim Mfaces1（） As Object
                Dim Dfaces（） As Object
                Dim Yfaces（） As Object
                Dim Dfaces1（） As Object
                Dim Cfaces（） As Object
                Dim Hfaces（） As Object
                Dim Hfaces1（） As Object

                tmpObj.Extension.SelectByID2("切除-拉伸3@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                tmpObj.Extension.SelectByID2("凸台-拉伸1@橡胶衬垫-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                橡胶衬垫F = selecter.GetSelectedObject6(1, -1)
                Xfaces = 橡胶衬垫F.GetFaces()
                part.ClearSelection2（True） '获得橡胶衬垫的面集合与边
                selecter.AddSelectionListObject(Xfaces（24）, Nothing)
                ma2 = selecter.GetSelectedObject6(1, -1)
                maset2 = ma2.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Jfaces（16）, Nothing)
                selecter.AddSelectionListObject(Xfaces（9）, Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                selecter.AddSelectionListObject(Jfaces（18）, Nothing)
                selecter.AddSelectionListObject(Xfaces（11）, Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                tmpObj.Extension.SelectByID2("凸台-拉伸1@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces1 = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces1（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Jfaces1（2）, Nothing)
                selecter.AddSelectionListObject(Xfaces（25）, Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("凸台-拉伸2@接线板-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线板F = selecter.GetSelectedObject6(1, -1)
                JXfaces = 接线板F.GetFaces()
                part.ClearSelection2（True） '获得接线板的面集合与边
                selecter.AddSelectionListObject(JXfaces（9）, Nothing)
                ma1 = selecter.GetSelectedObject6(1, -1)
                maset1 = ma1.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(JXfaces（0）, Nothing)
                selecter.AddSelectionListObject(Xfaces（24）, Nothing)
                part.AddMate5(0, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                selecter.AddSelectionListObject(maset2（25）, Nothing)
                selecter.AddSelectionListObject(maset1（2）, Nothing)
                part.AddMate5(5, 0, True, 0.5 / 1000, 0.5 / 1000, 0.5 / 1000, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '距离配合

                selecter.AddSelectionListObject(maset2（24）, Nothing)
                selecter.AddSelectionListObject(maset1（4）, Nothing)
                part.AddMate5(5, 0, True, 0.5 / 1000, 0.5 / 1000, 0.5 / 1000, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '距离配合

                tmpObj.Extension.SelectByID2("凸台-拉伸1@密封垫-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                密封垫F = selecter.GetSelectedObject6(1, -1)
                Mfaces = 密封垫F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Mfaces（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                tmpObj.Extension.SelectByID2("凸台-拉伸1@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces2 = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces2（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）





                selecter.AddSelectionListObject(Mfaces（9）, Nothing)
                selecter.AddSelectionListObject(Jfaces2（0）, Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("切除-拉伸2@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces3 = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces3（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Mfaces（1）, Nothing)
                selecter.AddSelectionListObject(Jfaces3(1), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合



                selecter.AddSelectionListObject(Mfaces（3）, Nothing)
                selecter.AddSelectionListObject(Jfaces3(3), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                'tmpObj.Extension.SelectByID2("凸台-拉伸4@螺套-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                '螺套F = selecter.GetSelectedObject6(1, -1)
                'Lfaces = 螺套F.GetFaces()
                'part.ClearSelection2（True） '获得螺套的面集合与边
                'selecter.AddSelectionListObject(Lfaces（0）, Nothing)
                'ma = selecter.GetSelectedObject6(1, -1)
                'maset = ma.GetEdges()
                'part.ClearSelection2（True）

                'tmpObj.Extension.SelectByID2("凸台-拉伸1@密封圈-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                '密封圈F = selecter.GetSelectedObject6(1, -1)
                'Mfaces1 = 密封圈F.GetFaces()
                'part.ClearSelection2（True） '获得密封圈的面集合与边
                'selecter.AddSelectionListObject(Mfaces1（0）, Nothing)
                'ma = selecter.GetSelectedObject6(1, -1)
                'maset = ma.GetEdges()
                'part.ClearSelection2（True）

                'selecter.AddSelectionListObject(Lfaces（2）, Nothing)
                'selecter.AddSelectionListObject(Mfaces1(1), Nothing)
                'part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.ClearSelection2(True) '重合配合

                'selecter.AddSelectionListObject(Lfaces（3）, Nothing)
                'selecter.AddSelectionListObject(Mfaces1(2), Nothing)
                'part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.clearSelection2(True) '同心配合

                'tmpObj.Extension.SelectByID2("凸台-拉伸1@垫圈1-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                '垫圈F = selecter.GetSelectedObject6(1, -1)
                'Dfaces = 垫圈F.GetFaces()
                'part.ClearSelection2（True） '获得密封圈的面集合与边
                'selecter.AddSelectionListObject(Dfaces（0）, Nothing)
                'ma = selecter.GetSelectedObject6(1, -1)
                'maset = ma.GetEdges()
                'part.ClearSelection2（True）

                'selecter.AddSelectionListObject(Mfaces1(2), Nothing)
                'selecter.AddSelectionListObject(Dfaces（1）, Nothing)
                'part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.clearSelection2(True) '同心配合

                'selecter.AddSelectionListObject(Mfaces1(0), Nothing)
                'selecter.AddSelectionListObject(Dfaces（3）, Nothing)
                'part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.ClearSelection2(True) '重合配合


                'tmpObj.Extension.SelectByID2("凸台-拉伸2@压紧螺母-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                '压紧螺母F = selecter.GetSelectedObject6(1, -1)
                'Yfaces = 压紧螺母F.GetFaces()
                'part.ClearSelection2（True） '获得密封圈的面集合与边
                'selecter.AddSelectionListObject(Yfaces（0）, Nothing)
                'ma = selecter.GetSelectedObject6(1, -1)
                'maset = ma.GetEdges()
                'part.ClearSelection2（True）

                'selecter.AddSelectionListObject(Yfaces(0), Nothing)
                'selecter.AddSelectionListObject(Dfaces（1）, Nothing)
                'part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.clearSelection2(True) '同心配合

                'selecter.AddSelectionListObject(Yfaces(2), Nothing)
                'selecter.AddSelectionListObject(Dfaces（2）, Nothing)
                'part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                'part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("凸台-拉伸4@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces4 = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces4（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                tmpObj.Extension.SelectByID2("凸台-拉伸1@垫圈-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                垫圈F1 = selecter.GetSelectedObject6(1, -1)
                Dfaces1 = 垫圈F1.GetFaces()
                part.ClearSelection2（True） '获得垫圈的面集合与边
                selecter.AddSelectionListObject(Dfaces1（0）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                tmpObj.Extension.SelectByID2("切除-拉伸5@接线盒座-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒座F = selecter.GetSelectedObject6(1, -1)
                Jfaces5 = 接线盒座F.GetFaces()
                part.ClearSelection2（True） '获得接线盒座的面集合与边
                selecter.AddSelectionListObject(Jfaces5（0）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Jfaces5(0), Nothing)
                selecter.AddSelectionListObject(Dfaces1(0), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合


                selecter.AddSelectionListObject(Dfaces1(3), Nothing)
                selecter.AddSelectionListObject(Jfaces4(4), Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("旋转1@出线孔盖-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                出线孔盖F = selecter.GetSelectedObject6(1, -1)
                Cfaces = 出线孔盖F.GetFaces()
                part.ClearSelection2（True） '获得出线孔盖的面集合与边
                selecter.AddSelectionListObject(Cfaces（0）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）


                selecter.AddSelectionListObject(Cfaces(3), Nothing)
                selecter.AddSelectionListObject(Jfaces5(0), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                selecter.AddSelectionListObject(Dfaces1(2), Nothing)
                selecter.AddSelectionListObject(Cfaces(2), Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("阵列(圆周)3@接线盒盖-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒盖F = selecter.GetSelectedObject6(1, -1)
                Jfaces6 = 接线盒盖F.GetFaces()
                part.ClearSelection2（True） '获得接线盒盖的面集合与边
                selecter.AddSelectionListObject(Jfaces6（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）


                selecter.AddSelectionListObject(Jfaces6(0), Nothing)
                selecter.AddSelectionListObject(Mfaces(0), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合



                selecter.AddSelectionListObject(Jfaces6(4), Nothing)
                selecter.AddSelectionListObject(Mfaces(2), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合


                tmpObj.Extension.SelectByID2("凸台-拉伸1@接线盒盖-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线盒盖F = selecter.GetSelectedObject6(1, -1)
                Jfaces7 = 接线盒盖F.GetFaces()
                part.ClearSelection2（True） '获得接线盒盖的面集合与边
                selecter.AddSelectionListObject(Jfaces7（0）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Mfaces(8), Nothing)
                selecter.AddSelectionListObject(Jfaces7(0), Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\螺钉M5X12.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\螺钉M5X12.SLDPRT", 0, "", False, "", 0.0119157984819935, -0.0500338811353913, -0.0426600169110998)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\螺钉M5X12.SLDPRT")


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\螺钉M5X20.SLDPRT", 1, 32, "", errors, longwarnings)
                swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                swInsertedComponent = part.AddComponent5("E:\works\generator_parts_library\Y2_80\螺钉M5X20.SLDPRT", 0, "", False, "", -0.0365360066717528, 0.0365327129100024, 0.0635193781227485)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\螺钉M5X20.SLDPRT")


                tmpObj.Extension.SelectByID2("HeadFillet1@螺钉M5X12-1@" & AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 0, Nothing, 0)
                HeadFillet1F = selecter.GetSelectedObject6(1, -1)
                Hfaces = HeadFillet1F.GetFaces()
                part.ClearSelection2（True） '获得螺钉M5X12-1的面集合与边
                selecter.AddSelectionListObject(Hfaces（2）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Hfaces(2), Nothing)
                selecter.AddSelectionListObject(Jfaces6(0), Nothing)
                part.AddMate5(1, 0, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                selecter.AddSelectionListObject(Hfaces(1), Nothing)
                selecter.AddSelectionListObject(Jfaces6(1), Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合


                tmpObj.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                tmpObj.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 4, Nothing, 0)
                tmpObj.Extension.SelectByID2("螺钉M5X12-1@" & AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                tmpObj.FeatureManager.FeatureLinearPattern5(2, 0.078, 2, 0.078, True, True, "", "", False, False, False, False, False, False, False, False, False, False, False, False, False, False) '零部件阵列


                tmpObj.Extension.SelectByID2("BaseHead@螺钉M5X20-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                HeadFillet1F = selecter.GetSelectedObject6(1, -1)
                Hfaces1 = HeadFillet1F.GetFaces()
                part.ClearSelection2（True） '获得螺钉M5X20-1的面集合与边
                selecter.AddSelectionListObject(Hfaces1（0）, Nothing)
                ma = selecter.GetSelectedObject6(1, -1)
                maset = ma.GetEdges()
                part.ClearSelection2（True）

                tmpObj.Extension.SelectByID2("切除-拉伸1@接线板-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线板F = selecter.GetSelectedObject6(1, -1)
                JXfaces1 = 接线板F.GetFaces()
                part.ClearSelection2（True） '获得接线板的面集合与边
                selecter.AddSelectionListObject(JXfaces1（0）, Nothing)
                ma1 = selecter.GetSelectedObject6(1, -1)
                maset1 = ma1.GetEdges()
                part.ClearSelection2（True）

                selecter.AddSelectionListObject(Hfaces1(3), Nothing)
                selecter.AddSelectionListObject(JXfaces1(0), Nothing)
                part.AddMate5(1, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.clearSelection2(True) '同心配合

                tmpObj.Extension.SelectByID2("切除-拉伸2@接线板-1@" & AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                接线板F = selecter.GetSelectedObject6(1, -1)
                JXfaces2 = 接线板F.GetFaces()
                part.ClearSelection2（True） '获得接线板的面集合与边
                selecter.AddSelectionListObject(JXfaces2（0）, Nothing)
                ma1 = selecter.GetSelectedObject6(1, -1)
                maset1 = ma1.GetEdges()
                part.ClearSelection2（True）

                'vEdgeCount = 0
                'Do Until vEdgeCount > 300
                '    selecter.AddSelectionListObject(JXfaces2(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecter.AddSelectionListObject(Hfaces1(1), Nothing)
                selecter.AddSelectionListObject(JXfaces2(2), Nothing)
                part.AddMate5(0, 1, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True) '重合配合

                tmpObj.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 2, Nothing, 0)
                tmpObj.Extension.SelectByID2("螺钉M5X20-1@" & AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                tmpObj.FeatureManager.FeatureLinearPattern5(2, 0.02, 0, 0, True, False, "", "", False, False, False, False, False, False, False, False, False, False, False, False, False, False) '零部件阵列

                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "接线盒")
                cusproper.Set2("代号", "5MJ.354.448")
                cusproper.Set2("材料", "")
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                'Dim drawName As String
                'drawName = tmpObj.GetTitle
                tmpObj.SaveAs3(dz1 + dz2, 0, 2) '另存为
                'swapp.CloseDoc(AssemblyTitle)
                swapp.ExitApp()



            End Sub
        End Class
        Public Class 其他

            Public Sub 风罩()
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\风罩.SLDPRT"
                Dim dz3 As String = "\风罩.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                'swapp.OpenDoc("E:\works\generator_parts_library\Y2_80\风罩.SLDPRT", 1)
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                Dim Title As String
                Title = part.GetTitle
                Dim pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from wind_cover", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("name") = "风罩"
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim scale_m As Double = dr("scale_m")
                Dim scale_d As Double = dr("scale_d")
                Dim hor_distance As Double = dr("hor_distance") / 1000
                Dim angle As Double = dr("angle")
                Dim ver_distance As Double = dr("ver_distance") / 1000
                Dim radius1 As Double = dr("radius1") / 1000
                Dim radius2 As Double = dr("radius2") / 1000


                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateLine(0, radius2, 0, hor_distance, radius2, 0)
                sketcher.CreateLine(hor_distance, radius2, 0, hor_distance, 0, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)
                part.SketchManager.CreateChamfer(0, ver_distance, (90 - angle) * pi / 180)
                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.CreateFillet(0.002, 1)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point9", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgVERTICALPOINTS2D")
                part.SketchManager.CreateLine(0.068, 0.06, 0#, 0.068, 0#, 0#)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.SketchManager.CreateCircle(0.079475, 0.044167, 0#, 0.081403, 0.04248, 0#)
                part.AddDimension2(0, 0.0453116099258654, -0.0855594937354828)
                part.Parameter("D2@草图1").SystemValue = 0.006
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0.0461550048620931, -0.0771255443732052, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0.04922737212978, -0.0698362024243795, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0.045070639944086, -0.071161537324166, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0.0441670025124134, -0.068149412551924, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0.0537695512806263, -0.0736589104707494, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0.058, -0.068, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0.0575236936610478, -0.069151612674717, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.ClearSelection2(True)
                sketcher.CreateLine(0, 0, 0, 0, radius2, 0)
                sketcher.CreateCenterLine(0, 0, 0, 0.05, 0, 0)
                part.Extension.SelectByID2("Point20", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point23", "SKETCHPOINT", 0.05, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0.068, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, False, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.Extension.SelectByRay(0.0314222551941157, 0.0240265709440197, 0, -0.88923297743646, 0.00665909606009234, -0.457406130565772, 0.000902143882257839, 2, False, 1, 0)
                part.InsertFeatureShell(radius2 - radius1, False)
                part.Extension.SelectByRay(0.0123604027306214, 0.0330446010513583, -0.0679999999997563, -0.578242334271276, -0.13897550420515, 0.803941298906476, 0.000716849443778552, 2, False, 0, 0)
                part.SketchManager.InsertSketch(True)
                sketcher.CreateCenterRectangle(0.0095, 0.0475, 0, 0.013, 0.044, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 4, 0.0095, 0.0095, pi, 4.7123889803847, "", False, False, False, True, True)
                sketcher.CreateCenterRectangle(-0.019, 0.038, 0, -0.0155, 0.0345, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(2, 9, 0.0095, 0.0095, pi, 4.7123889803847, "", False, False, False, True, True)
                sketcher.CreateCenterRectangle(0.019, 0.038, 0, 0.0155, 0.0345, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(2, 9, 0.0095, 0.0095, 0, 4.7123889803847, "", False, False, False, True, True)
                sketcher.CreateCenterRectangle(0.0095, -0.0475, 0, 0.013, -0.044, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(3, 4, 0.0095, 0.0095, 3.1415926535898, 1.5707963267949, "", False, False, False, True, True)
                sketcher.CreateCircleByRadius(0, 0, 0, 0.0035)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(0, 0.0095, 0, 0.0035, 0.006, 0)
                sketcher.CreateCenterRectangle(0, -0.0095, 0, 0.0035, -0.006, 0)
                sketcher.CreateCenterRectangle(0.0095, 0, 0, 0.013, 0.0035, 0)
                sketcher.CreateCenterRectangle(-0.0095, 0, 0, -0.013, 0.0035, 0)
                part.ClearSelection2(True)
                sketcher.CreateCenterRectangle(-0.038, 0.0285, 0, -0.0415, 0.025, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(1, 7, 0.01, 0.0095, 6.2831853071796, 4.7123889803847, "", False, False, False, False, True)
                sketcher.CreateCenterRectangle(0.038, 0.0285, 0, 0.0415, 0.025, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(1, 7, 0.01, 0.0095, 6.2831853071796, 4.7123889803847, "", False, False, False, False, True)
                sketcher.CreateCenterRectangle(-0.0475, 0.0095, 0, -0.051, 0.006, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(1, 3, 0.01, 0.0095, 6.2831853071796, 4.7123889803847, "", False, False, False, False, True)
                sketcher.CreateCenterRectangle(0.0475, 0.0095, 0, 0.051, 0.006, 0)
                part.SketchManager.CreateLinearSketchStepAndRepeat(1, 3, 0.01, 0.0095, 6.2831853071796, 4.7123889803847, "", False, False, False, False, True)
                part.ClearSelection2(True)
                part.FeatureManager.FeatureCut4(True, False, False, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0.007, 0, 0.0025)
                part.FeatureManager.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("切除-拉伸2", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByRay(-0.0260318123730769, 0.0723626580400492, 0.0000743814686074984, -0.239095781568583, -0.328962771272603, -0.913573588909376, 0.00080086137201985, 1, True, 1, 0)
                Featmgr.FeatureCircularPattern5(3, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)
                swapp.ExitApp()
            End Sub
            Public Sub 端盖()
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\端盖.SLDPRT"
                Dim dz3 As String = "\端盖.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                'swapp.OpenDoc("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT", 1)
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                Dim Title As String
                Title = part.GetTitle
                Dim pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from end_cover", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("Code") = "8MJ.013.618"
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim scale_m As Double = dr("scale_m")
                Dim scale_d As Double = dr("scale_d")
                Dim Geometric_tolerance_type12 As String = dr("Geometric_tolerance_type12")
                Dim Geometric_tolerance_type14 As String = dr("Geometric_tolerance_type14")
                Dim Geometric_tolerance_type4 As String = dr("Geometric_tolerance_type4")
                Dim Geometric_tolerance_type10 As String = dr("Geometric_tolerance_type10")
                Dim SF_other As String = dr("SF_other")
                Dim SF_front_top_hole_diameter As Double = dr("SF_front_top_hole_diameter")
                Dim SF_under_angle As Double = dr("SF_under_angle")
                Dim SF_mid_shell_angle As Double = dr("SF_mid_shell_angle")
                Dim SF_mid_shell_diameter2 As Double = dr("SF_mid_shell_diameter2")
                Dim SF_mid_shell_diameter1 As Double = dr("SF_mid_shell_diameter1")
                Dim SF_mid_shell_hor_distance2 As Double = dr("SF_mid_shell_hor_distance2")
                Dim SF_mid_hole_diameter As Double = dr("SF_mid_hole_diameter")
                Dim SF_mid_hole_top_semicircle As Double = dr("SF_mid_hole_top_semicircle")
                Dim top_hole_hor_distance1 As Double = dr("top_hole_hor_distance1") / 1000
                Dim top_hole_hor_distance2 As Double = dr("top_hole_hor_distance2") / 1000
                Dim top_hole_hor_distance3 As Double = dr("top_hole_hor_distance3") / 1000
                Dim top_hole_angle As Double = dr("top_hole_angle")
                Dim mid_hole_hor_distance1 As Double = dr("mid_hole_hor_distance1") / 1000
                Dim mid_hole_hor_distance2 As Double = dr("mid_hole_hor_distance2") / 1000
                Dim mid_hole_diameter As Double = dr("mid_hole_diameter") / 1000
                Dim top_shell_hor_distance As Double = dr("top_shell_hor_distance") / 1000
                Dim mid_shell_hor_distance1 As Double = dr("mid_shell_hor_distance1") / 1000
                Dim mid_shell_hor_distance2 As Double = dr("mid_shell_hor_distance2") / 1000
                Dim mid_shell_angle As Double = dr("mid_shell_angle")
                Dim mid_shell_diameter1 As Double = dr("mid_shell_diameter1") / 1000
                Dim mid_shell_diameter2 As Double = dr("mid_shell_diameter2") / 1000
                Dim under_angle As Double = dr("under_angle")
                Dim all_shell_ver_distance As Double = dr("all_shell_ver_distance") / 1000
                Dim front_reference_circle_diameter As Double = dr("front_reference_circle_diameter") / 1000
                Dim front_top_hole_diameter As Double = dr("front_top_hole_diameter") / 1000
                Dim surface_finish_type1 As Double = dr("surface_finish_type1")
                Dim surface_finish_type2 As Double = dr("surface_finish_type2")
                Dim SF_top_hole As Double = dr("SF_top_hole")
                Dim SF_top_angle As Double = dr("SF_top_angle")
                Dim SF_all_shell_ver_distance As Double = dr("SF_all_shell_ver_distance")
                Dim SF_top_shell_hor_distance As Double = dr("SF_top_shell_hor_distance")
                Dim radius_out As Double = dr("radius_out") / 1000
                Dim thickness_out As Double = dr("thickness_out") / 1000
                Dim radius_mid As Double = dr("radius_mid") / 1000
                Dim thickness_left As Double = dr("thickness_left") / 1000
                Dim radius_top3 As Double = dr("radius_top3") / 1000
                Dim radius_top2 As Double = dr("radius_top2") / 1000
                Dim shell_thickness As Double = dr("shell_thickness") / 1000
                Dim radius_left2_out As Double = dr("radius_left2_out") / 1000
                Dim hor_distance_left_topunder As Double = dr("hor_distance_left_topunder") / 1000
                Dim angle_facedraft As Double = dr("angle_facedraft")
                Dim radius_fillet As Double = dr("radius_fillet") / 1000
                Dim radius_right2 As Double = dr("radius_right2") / 1000
                Dim hor_distance_cutright As Double = dr("hor_distance_cutright") / 1000
                Dim radius_most As Double = dr("radius_most") / 1000
                Dim radius_undermost As Double = dr("radius_undermost") / 1000
                Dim hole_arc_verdistance As Double = dr("hole_arc_verdistance") / 1000
                Dim front_top_distance1 As Double = dr("front_top_distance1") / 1000
                Dim front_top_angle As Double = dr("front_top_angle")
                Dim push_number As Double = dr("push_number")


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out=67
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness_out, thickness_out, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) 'thickness_out=25
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, thickness_out, 0, 0, 0, 0) 'thickness_out=25
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_mid) 'radius_mid=22.5
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness_left, thickness_left, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) 'thickness_left=2
                sketcher.CreateCircleByRadius(0, 0, 0, mid_hole_diameter / 2)
                Featmgr.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '完全贯穿
                sketcher.CreateCircleByRadius(0, 0, 0, mid_shell_diameter2 / 2)
                Featmgr.FeatureCut4(True, False, True, 0, 0, mid_shell_hor_distance1, mid_shell_hor_distance1, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                sketcher.CreateCircleByRadius(0, 0, 0, mid_shell_diameter1 / 2)
                Featmgr.FeatureCut4(True, False, True, 0, 0, mid_shell_hor_distance2, mid_shell_hor_distance2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_top3) 'radius_top3=29
                sketcher.CreateCircleByRadius(0, 0, 0, radius_top2) 'radius_top2=58
                Featmgr.FeatureCut4(True, False, True, 0, 0, shell_thickness, shell_thickness, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'shell_thickness=20
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, all_shell_ver_distance / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out
                Featmgr.FeatureCut4(True, False, False, 0, 0, hor_distance_left_topunder, hor_distance_left_topunder, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'hor_distance_left_topunder=17
                part.ClearSelection2(True)


                Dim face() As Object
                Dim edge() As Object
                Dim faceCount As Integer
                Dim edgeCount As Integer
                Dim swbody As Object
                part.Extension.SelectByID2("切除-拉伸5", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                face = swbody.GetFaces()
                faceCount = swbody.GetfaceCount()
                Debug.Print(faceCount)
                part.ClearSelection2(True)

                edge = swbody.GetEdges()
                edgeCount = swbody.GetedgeCount()
                Debug.Print(faceCount)
                part.ClearSelection2(True)

                'faceCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until faceCount > 100
                '    selecmag.AddSelectionListObject(face(faceCount), Nothing)
                '    MsgBox(faceCount)
                '    part.ClearSelection2(True)
                '    faceCount = faceCount + 1
                '    part.EditRebuild()
                'Loop


                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                selecmag.AddSelectionListObject(face(15), Nothing)
                Featmgr.InsertMultiFaceDraft(angle_facedraft * pi / 180, False, False, 0, False, False) 'angle_facedraft=8
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(14), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius_fillet, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) 'radius_fillet=4

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out
                sketcher.CreateCircleByRadius(0, 0, 0, radius_right2) 'radius_right2=64.45
                Featmgr.FeatureCut4(True, False, True, 0, 0, hor_distance_cutright, hor_distance_cutright, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'hor_distance_cutright=4

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, top_hole_hor_distance2 + top_hole_hor_distance3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_most) 'radius_most=76
                sketcher.CreateCircleByRadius(0, 0.0685, 0, front_top_hole_diameter / 2)
                sketcher.CreateCircleByRadius(0, hole_arc_verdistance, 0, radius_undermost) 'radius_undermost=15 hole_arc_verdistance=73.5
                sketcher.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                sketcher.CreateLine(0.002, 0.073, 0, 0.008, 0.068, 0)

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)

                part.AddDimension2(0.00043, 0.062, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D1@草图9@零件3.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Parameter("D1@草图9").SystemValue = front_top_distance1 'front_top_distance1=19.41

                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0, 0.08, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D2@草图9@零件3.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Parameter("D2@草图9").SystemValue = front_top_angle * pi / 180 'front_top_angle=18.27
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()

                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, 0, hole_arc_verdistance + radius_undermost, 0) 'hole_arc_verdistance+radius_undermost
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, -radius_undermost, hole_arc_verdistance, 0) '-radius_undermost,hole_arc_verdistance
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, radius_undermost, hole_arc_verdistance, 0) 'radius_undermost,hole_arc_verdistance
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, radius_most, 0, 0) 'radius_most
                Featmgr.FeatureExtrusion2(True, False, True, 0, 0, top_hole_hor_distance3, top_hole_hor_distance3, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0.0685, 0, front_top_hole_diameter / 2)

                Featmgr.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '完全贯穿

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("凸台-拉伸3", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("切除-拉伸7", "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr.FeatureCircularPattern5(push_number, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False) '特征圆周阵列 push_number=3
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                'swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)

                sketcher.CreateArc(-0.0225, 0.01, 0, -0.021, 0.01, 0, -0.024, 0.01, 0, 1)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(-0.024, 0.01, 0, -0.021, 0.01, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("草图12", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", 0, 0, 0, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, all_shell_ver_distance / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_right2) 'radius_right2
                Featmgr.FeatureCut4(True, False, True, 0, 0, top_hole_hor_distance2, top_hole_hor_distance2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸8", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                edgeCount = swbody.GetedgeCount()
                part.ClearSelection2(True)
                'edgeCount = 0
                'Do Until edgeCount > 100
                '    For i = edgeCount To edgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    edgeCount = edgeCount + 5
                '    MsgBox(edgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until edgeCount > 1000
                '    selecmag.AddSelectionListObject(edge(edgeCount), Nothing)
                '    MsgBox(edgeCount)
                '    part.ClearSelection2(True)
                '    edgeCount = edgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(19), Nothing)
                selecmag.AddSelectionListObject(edge（103), Nothing)
                Featmgr.InsertFeatureChamfer(6, 1, 0.001, under_angle * pi / 180, 0, 0, 0, 0)
                selecmag.AddSelectionListObject(edge(54), Nothing)
                selecmag.AddSelectionListObject(edge(76), Nothing)
                selecmag.AddSelectionListObject(edge(98), Nothing)
                Featmgr.InsertFeatureChamfer(6, 1, 0.001, top_hole_angle / 2 * pi / 180, 0, 0, 0, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(23), Nothing)
                selecmag.AddSelectionListObject(edge(25), Nothing)
                Featmgr.FeatureFillet3(195, 0.004, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                sketcher.CreateCircleByRadius(0, 0, 0, front_reference_circle_diameter / 2)
                Dim myDisplayDim As Object
                myDisplayDim = part.AddDimension2(0.024, -0.031, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydim As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.292, 0.165, 0)

                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)


                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.37461, 0.05504177, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 314 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.ClearSelection2(True)

                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.108, 0.05, 0)
                part.Extension.SelectByID2("细节项目259@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                "未注公差的线性尺寸的极限偏差按GB/T1804-m."）
                myNote.GetAnnotation().SetPosition(0.082, 0.038, 0)
                part.Extension.SelectByID2("细节项目260@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0, radius_most + 0.01, 0, 0, -radius_most - 0.01, 0)
                part.CreateSectionViewAt5(0.12, 0.165, 0, "", 128, 0, 0)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vEdgeCount As Integer
                Dim vEdges1 As Object
                Dim vEdges2 As Object
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges1 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                part.ClearSelection2(True)
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges1(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(10), Nothing)
                part.AddDimension2(0.1317, 0.2466, 0)
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(55), Nothing)
                part.AddDimension2(0.1227, 0.2466, 0)
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(58), Nothing)
                part.AddDimension2(0.129, 0.24, 0)
                selecmag.AddSelectionListObject(vEdges1(27), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.1755, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges1(27), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.1755, 0)
                selecmag.AddSelectionListObject(vEdges1(61), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.146, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges1(26), Nothing)
                selecmag.AddSelectionListObject(vEdges1(35), Nothing)
                part.AddDimension2(0.153, 0.1606, 0)
                selecmag.AddSelectionListObject(vEdges1(65), Nothing)
                selecmag.AddSelectionListObject(vEdges1(64), Nothing)
                part.AddDimension2(0.108, 0.159, 0)
                selecmag.AddSelectionListObject(vEdges1(63), Nothing)
                selecmag.AddSelectionListObject(vEdges1(64), Nothing)
                part.AddDimension2(0.111, 0.159, 0)
                selecmag.AddSelectionListObject(vEdges1(20), Nothing)
                selecmag.AddSelectionListObject(vEdges1(41), Nothing)
                part.AddDimension2(0.195, 0.159, 0)
                part.EditDimensionProperties2(8, 0.000012, -0.000028, "K7", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True
                Displaydim.LeaderVisibility = 2
                Displaydim.WitnessVisibility = 2
                selecmag.AddSelectionListObject(vEdges1(65), Nothing)
                part.AddDimension2(0.075, 0.159, 0)
                part.EditDimensionProperties2(8, 0.00013, 0, "H11", "", True, 9, 1, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True '加括号
                selecmag.AddSelectionListObject(vEdges1(53), Nothing)
                selecmag.AddSelectionListObject(vEdges1(18), Nothing)
                part.AddDimension2(0.137, 0.228, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "三处", True, "", "", True)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2) '水平引线

                selecmag.AddSelectionListObject(vEdges1(25), Nothing)
                selecmag.AddSelectionListObject(vEdges1(19), Nothing)
                part.AddDimension2(0.146, 0.205, 0)
                part.EditDimensionProperties2(8, 0.00011, 0, "H11", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(24), Nothing)
                selecmag.AddSelectionListObject(vEdges1(37), Nothing)
                part.AddDimension2(0.1715, 0.159, 0)
                part.EditDimensionProperties2(2, 0.000022, 0.000005, "", "", False, 3, 1, True, 12, 12, "<MOD-DIAM>", "挤压后尺寸", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                Dim myDatumTag As SldWorks.DatumTag
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("N")
                myDatumTag.GetAnnotation().SetPosition2(0.1367, 0.28, 0)

                selecmag.AddSelectionListObject(vEdges1(20), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("B")
                myDatumTag.GetAnnotation().SetPosition2(0.188, 0.229, 0)

                selecmag.AddSelectionListObject(vEdges1(24), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("H")
                myDatumTag.GetAnnotation().SetPosition2(0.181, 0.191, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(29), Nothing)
                part.AddDimension2(0.089, 0.183, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "R", "", False, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)

                part.Extension.SelectByID2("RD10@工程图视图2", "DIMENSION", 0.161, 0.222, 0, False, 0, Nothing, 0)
                part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_all_shell_ver_distance, "")

                Dim SF As Object
                'Dim selectdata As SldWorks.ISelectData
                'selectdata = selecmag.CreateSelectData()
                'selectdata.X = 0.13
                'selectdata.Y = 0.2227
                'selectdata.Z = 0
                selecmag.AddSelectionListObject(vEdges1(18), Nothing)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_angle, "")
                SF.GetAnnotation().SetPosition2(0.13, 0.2227, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_hole, "")
                SF.GetAnnotation().SetPosition2(0.1295, 0.27, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_shell_hor_distance, "")
                SF.GetAnnotation().SetPosition2(0.1165, 0.1978, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_hor_distance2, "")
                SF.GetAnnotation().SetPosition2(0.1335, 0.17, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_hole_top_semicircle, "")
                SF.GetAnnotation().SetPosition2(0.09739, 0.17827, 0)
                SF.SetAngle(-30 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_hole_diameter, "")
                SF.GetAnnotation().SetPosition2(0.0913, 0.17046, 0)
                SF.SetAngle(180 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_diameter1, "")
                SF.GetAnnotation().SetPosition2(0.143, 0.1404, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "2.0", "")
                SF.GetAnnotation().SetPosition2(0.159, 0.137, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(2), Nothing)
                selecmag.AddSelectionListObject(vEdges1(37), Nothing)
                part.AddDimension2(0.152, 0.1307, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "1*", "", True, "", "", False)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_angle, "")
                SF.GetAnnotation().SetPosition2(0.13824, 0.13126, 0)
                SF.SetAngle(-45 * pi / 180)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                selecmag.AddSelectionListObject(vEdges1(41), Nothing)
                part.AddDimension2(0.152, 0.10384, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "1*", "", True, "", "", False)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_under_angle, "")
                SF.GetAnnotation().SetPosition2(0.14031, 0.10682, 0)
                SF.SetAngle(-135 * pi / 180)
                part.ClearSelection2(True)
                part.ActivateSheet("图纸1")
                Dim point1 As SldWorks.SketchPoint = part.SketchManager.CreatePoint(0.12958, 0.2555, 0)
                point1.Select4(False, Nothing)
                Dim myGtol As Object
                Dim myAnno As SldWorks.Annotation
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.075", "H", "", "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition2(0.144, 0.259, 0)
                myAnno.SetLeader3(1, 0, True, False, False, False)
                'myAnno.SetLeaderAttachmentPointAtIndex(1, 0.12958, 0.2555, 0)
                part.ClearSelection2(True)

                point1 = part.SketchManager.CreatePoint(0.173, 0.137, 0)
                point1.Select4(False, Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-CYL>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.007", "", "", "", "")
                myGtol.SetFrameSymbols2(2, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "0.03", "B", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.186, 0.146, 0)
                myAnno.SetLeader3(2, 0, True, True, False, False)


                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ViewDisplayHidden
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges2 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                'vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'part.ClearSelection2(True)
                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges2(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                part.Extension.SelectByID2("Arc1@草图14@端盖-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.31, 0.122, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)

                selecmag.AddSelectionListObject(vEdges2(9), Nothing)
                selecmag.AddSelectionListObject(vEdges2(11), Nothing)
                part.AddDimension2(0.291, 0.199, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", False, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges2(11), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("A")
                myDatumTag.GetAnnotation().SetPosition2(0.3105, 0.208, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(vEdges2(14), Nothing)
                'point1 = part.SketchManager.CreatePoint(0.2939, 0.2312, 0)
                'point1.Select4(False, Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-SYMMETRY>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "1.0", "A", "", "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.31, 0.248, 0)
                myAnno.SetLeader3(1, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(1, 0.2939, 0.2312, 0)

                selecmag.AddSelectionListObject(vEdges2(20), Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.4", "", "B", "N", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.373, 0.14, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(2, 0.35467, 0.12722, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_front_top_hole_diameter, "")
                SF.GetAnnotation().SetPosition2(0.3683, 0.1365, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.386293518298262, 0.266638246468794, 0, 0, 1, "", "", "", "", "", SF_other, "")
                SF.GetAnnotation().SetPosition2(0.386, 0.266, 0)
                part.ClearSelection2(True)
                myNote = part.InsertNote("一处"）
                myNote.GetAnnotation().SetPosition(0.31753, 0.2538, 0)
                part.ClearSelection2(True)
                myNote = part.InsertNote("3×Φ7均布"）
                myNote.GetAnnotation().SetPosition(0.38343, 0.14662, 0)

                part.SaveAs3(dz1 + dz3, 0, 2)

                'swapp.CloseDoc(Title)
                swapp.ExitApp()







            End Sub
            Public Sub 端盖1()
                Dim dz1 As String = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String = "\端盖1.SLDPRT"
                Dim dz3 As String = "\端盖1.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim selecmag As SldWorks.SelectionMgr
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                'swapp.OpenDoc("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT", 1)
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                Dim Title As String
                Title = part.GetTitle
                Dim pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from end_cover", mysqlcon)
                dr = mysqlcom.ExecuteReader()
                dr.Read()
                Do Until dr("Code") = "8MJ.013.618"
                    dr.Read()
                Loop

                Dim Code As String = dr("Code")
                Dim name As String = dr("name")
                Dim company As String = dr("company")
                Dim material As String = dr("material")
                Dim scale_m As Double = dr("scale_m")
                Dim scale_d As Double = dr("scale_d")
                Dim Geometric_tolerance_type12 As String = dr("Geometric_tolerance_type12")
                Dim Geometric_tolerance_type14 As String = dr("Geometric_tolerance_type14")
                Dim Geometric_tolerance_type4 As String = dr("Geometric_tolerance_type4")
                Dim Geometric_tolerance_type10 As String = dr("Geometric_tolerance_type10")
                Dim SF_other As String = dr("SF_other")
                Dim SF_front_top_hole_diameter As Double = dr("SF_front_top_hole_diameter")
                Dim SF_under_angle As Double = dr("SF_under_angle")
                Dim SF_mid_shell_angle As Double = dr("SF_mid_shell_angle")
                Dim SF_mid_shell_diameter2 As Double = dr("SF_mid_shell_diameter2")
                Dim SF_mid_shell_diameter1 As Double = dr("SF_mid_shell_diameter1")
                Dim SF_mid_shell_hor_distance2 As Double = dr("SF_mid_shell_hor_distance2")
                Dim SF_mid_hole_diameter As Double = dr("SF_mid_hole_diameter")
                Dim SF_mid_hole_top_semicircle As Double = dr("SF_mid_hole_top_semicircle")
                Dim top_hole_hor_distance1 As Double = dr("top_hole_hor_distance1") / 1000
                Dim top_hole_hor_distance2 As Double = dr("top_hole_hor_distance2") / 1000
                Dim top_hole_hor_distance3 As Double = dr("top_hole_hor_distance3") / 1000
                Dim top_hole_angle As Double = dr("top_hole_angle")
                Dim mid_hole_hor_distance1 As Double = dr("mid_hole_hor_distance1") / 1000
                Dim mid_hole_hor_distance2 As Double = dr("mid_hole_hor_distance2") / 1000
                Dim mid_hole_diameter As Double = dr("mid_hole_diameter") / 1000
                Dim top_shell_hor_distance As Double = dr("top_shell_hor_distance") / 1000
                Dim mid_shell_hor_distance1 As Double = dr("mid_shell_hor_distance1") / 1000
                Dim mid_shell_hor_distance2 As Double = dr("mid_shell_hor_distance2") / 1000
                Dim mid_shell_angle As Double = dr("mid_shell_angle")
                Dim mid_shell_diameter1 As Double = dr("mid_shell_diameter1") / 1000
                Dim mid_shell_diameter2 As Double = dr("mid_shell_diameter2") / 1000
                Dim under_angle As Double = dr("under_angle")
                Dim all_shell_ver_distance As Double = dr("all_shell_ver_distance") / 1000
                Dim front_reference_circle_diameter As Double = dr("front_reference_circle_diameter") / 1000
                Dim front_top_hole_diameter As Double = dr("front_top_hole_diameter") / 1000
                Dim surface_finish_type1 As Double = dr("surface_finish_type1")
                Dim surface_finish_type2 As Double = dr("surface_finish_type2")
                Dim SF_top_hole As Double = dr("SF_top_hole")
                Dim SF_top_angle As Double = dr("SF_top_angle")
                Dim SF_all_shell_ver_distance As Double = dr("SF_all_shell_ver_distance")
                Dim SF_top_shell_hor_distance As Double = dr("SF_top_shell_hor_distance")
                Dim radius_out As Double = dr("radius_out") / 1000
                Dim thickness_out As Double = dr("thickness_out") / 1000
                Dim radius_mid As Double = dr("radius_mid") / 1000
                Dim thickness_left As Double = dr("thickness_left") / 1000
                Dim radius_top3 As Double = dr("radius_top3") / 1000
                Dim radius_top2 As Double = dr("radius_top2") / 1000
                Dim shell_thickness As Double = dr("shell_thickness") / 1000
                Dim radius_left2_out As Double = dr("radius_left2_out") / 1000
                Dim hor_distance_left_topunder As Double = dr("hor_distance_left_topunder") / 1000
                Dim angle_facedraft As Double = dr("angle_facedraft")
                Dim radius_fillet As Double = dr("radius_fillet") / 1000
                Dim radius_right2 As Double = dr("radius_right2") / 1000
                Dim hor_distance_cutright As Double = dr("hor_distance_cutright") / 1000
                Dim radius_most As Double = dr("radius_most") / 1000
                Dim radius_undermost As Double = dr("radius_undermost") / 1000
                Dim hole_arc_verdistance As Double = dr("hole_arc_verdistance") / 1000
                Dim front_top_distance1 As Double = dr("front_top_distance1") / 1000
                Dim front_top_angle As Double = dr("front_top_angle")
                Dim push_number As Double = dr("push_number")


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, False)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out=67
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness_out, thickness_out, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) 'thickness_out=25
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, thickness_out, 0, 0, 0, 0) 'thickness_out=25
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_mid) 'radius_mid=22.5
                Featmgr.FeatureExtrusion2(True, False, False, 0, 0, thickness_left, thickness_left, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False) 'thickness_left=2
                sketcher.CreateCircleByRadius(0, 0, 0, mid_hole_diameter / 2)
                Featmgr.FeatureCut4(True, False, True, 1, 0, 0.01, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '完全贯穿
                sketcher.CreateCircleByRadius(0, 0, 0, mid_shell_diameter2 / 2)
                Featmgr.FeatureCut4(True, False, True, 0, 0, mid_shell_hor_distance1, mid_shell_hor_distance1, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                sketcher.CreateCircleByRadius(0, 0, 0, mid_shell_diameter1 / 2)
                Featmgr.FeatureCut4(True, False, True, 0, 0, mid_shell_hor_distance2, mid_shell_hor_distance2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_top3) 'radius_top3=29
                sketcher.CreateCircleByRadius(0, 0, 0, radius_top2) 'radius_top2=58
                Featmgr.FeatureCut4(True, False, True, 0, 0, shell_thickness, shell_thickness, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'shell_thickness=20
                part.ClearSelection2(True)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, all_shell_ver_distance / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out
                Featmgr.FeatureCut4(True, False, False, 0, 0, hor_distance_left_topunder, hor_distance_left_topunder, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'hor_distance_left_topunder=17
                part.ClearSelection2(True)


                Dim face() As Object
                Dim edge() As Object
                Dim faceCount As Integer
                Dim edgeCount As Integer
                Dim swbody As Object
                part.Extension.SelectByID2("切除-拉伸5", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                face = swbody.GetFaces()
                faceCount = swbody.GetfaceCount()
                Debug.Print(faceCount)
                part.ClearSelection2(True)

                edge = swbody.GetEdges()
                edgeCount = swbody.GetedgeCount()
                Debug.Print(faceCount)
                part.ClearSelection2(True)

                'faceCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until faceCount > 100
                '    selecmag.AddSelectionListObject(face(faceCount), Nothing)
                '    MsgBox(faceCount)
                '    part.ClearSelection2(True)
                '    faceCount = faceCount + 1
                '    part.EditRebuild()
                'Loop


                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                selecmag.AddSelectionListObject(face(15), Nothing)
                Featmgr.InsertMultiFaceDraft(angle_facedraft * pi / 180, False, False, 0, False, False) 'angle_facedraft=8
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(14), Nothing)
                part.FeatureManager.FeatureFillet3(195, radius_fillet, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) 'radius_fillet=4

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_out) 'radius_out
                sketcher.CreateCircleByRadius(0, 0, 0, radius_right2) 'radius_right2=64.45
                Featmgr.FeatureCut4(True, False, True, 0, 0, hor_distance_cutright, hor_distance_cutright, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) 'hor_distance_cutright=4

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                Featmgr.InsertRefPlane(8, top_hole_hor_distance2 + top_hole_hor_distance3, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_most) 'radius_most=76
                sketcher.CreateCircleByRadius(0, 0.0685, 0, front_top_hole_diameter / 2)
                sketcher.CreateCircleByRadius(0, hole_arc_verdistance, 0, radius_undermost) 'radius_undermost=15 hole_arc_verdistance=73.5
                sketcher.CreateCenterLine(0, 0, 0, 0, 0.1, 0)
                sketcher.CreateLine(0.002, 0.073, 0, 0.008, 0.068, 0)

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchMirror()
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)

                part.AddDimension2(0.00043, 0.062, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D1@草图9@零件3.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)

                part.Parameter("D1@草图9").SystemValue = front_top_distance1 'front_top_distance1=19.41

                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0, 0.08, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("D2@草图9@零件3.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                part.Parameter("D2@草图9").SystemValue = front_top_angle * pi / 180 'front_top_angle=18.27
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()

                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, 0, hole_arc_verdistance + radius_undermost, 0) 'hole_arc_verdistance+radius_undermost
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, -radius_undermost, hole_arc_verdistance, 0) '-radius_undermost,hole_arc_verdistance
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, radius_undermost, hole_arc_verdistance, 0) 'radius_undermost,hole_arc_verdistance
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                sketcher.SketchTrim(0, radius_most, 0, 0) 'radius_most
                Featmgr.FeatureExtrusion2(True, False, True, 0, 0, top_hole_hor_distance3, top_hole_hor_distance3, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 1, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0.0685, 0, front_top_hole_diameter / 2)

                Featmgr.FeatureCut4(True, False, False, 1, 0, 0, 0, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False) '完全贯穿

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCenterLine(0, 0, 0, 0.1, 0, 0)
                sketcher.InsertSketch(True)
                part.Extension.SelectByID2("凸台-拉伸3", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("切除-拉伸7", "BODYFEATURE", 0, 0, 0, True, 4, Nothing, 0)
                part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr.FeatureCircularPattern5(push_number, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False) '特征圆周阵列 push_number=3
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                'swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInference, True)

                sketcher.CreateArc(-0.0225, 0.01, 0, -0.021, 0.01, 0, -0.024, 0.01, 0, 1)
                part.SketchAddConstraints("sgFIXED")
                sketcher.CreateLine(-0.024, 0.01, 0, -0.021, 0.01, 0)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("草图12", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", 0, 0, 0, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, 0, 0, all_shell_ver_distance / 2)
                sketcher.CreateCircleByRadius(0, 0, 0, radius_right2) 'radius_right2
                Featmgr.FeatureCut4(True, False, True, 0, 0, top_hole_hor_distance2, top_hole_hor_distance2, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸8", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                edgeCount = swbody.GetedgeCount()
                part.ClearSelection2(True)
                'edgeCount = 0
                'Do Until edgeCount > 100
                '    For i = edgeCount To edgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    edgeCount = edgeCount + 5
                '    MsgBox(edgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until edgeCount > 1000
                '    selecmag.AddSelectionListObject(edge(edgeCount), Nothing)
                '    MsgBox(edgeCount)
                '    part.ClearSelection2(True)
                '    edgeCount = edgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(19), Nothing)
                selecmag.AddSelectionListObject(edge（103), Nothing)
                Featmgr.InsertFeatureChamfer(6, 1, 0.001, under_angle * pi / 180, 0, 0, 0, 0)
                selecmag.AddSelectionListObject(edge(54), Nothing)
                selecmag.AddSelectionListObject(edge(76), Nothing)
                selecmag.AddSelectionListObject(edge(98), Nothing)
                Featmgr.InsertFeatureChamfer(6, 1, 0.001, top_hole_angle / 2 * pi / 180, 0, 0, 0, 0)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(23), Nothing)
                selecmag.AddSelectionListObject(edge(25), Nothing)
                Featmgr.FeatureFillet3(195, 0.004, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

                sketcher.CreateCircleByRadius(0, 0, 0, front_reference_circle_diameter / 2)
                Dim myDisplayDim As Object
                myDisplayDim = part.AddDimension2(0.024, -0.031, 0)
                sketcher.InsertSketch(True)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, 0.076, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                sketcher.CreateCircleByRadius(0, -0.011, 0, 0.0025)
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.004, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.Extension.SelectByID2("切除-拉伸9", "BODYFEATURE", 0, 0, 0, False, 4, Nothing, 0)
                part.Extension.SelectByID2("Line1@草图11", "EXTSKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, 0)
                Featmgr.FeatureCircularPattern5(3, 2 * pi, False, 0, False, True, False, False, False, False, 0, 0, 0, False)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", "8MJ.013.619")
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydim As SldWorks.DisplayDimension
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a3.drwdot", 1, 0, 0)

                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                'Dim myViewname As String
                part = swapp.ActiveDoc
                Draw = swapp.ActiveDoc
                selecmag = part.SelectionManager

                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitSystem, 0, SwConst.swUnitSystem_e.swUnitSystem_MMGS)
                'part.Extension.SetUserPreferenceInteger(SwConst.swUserPreferenceIntegerValue_e.swUnitsLinearDecimalPlaces, 0, 4)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, SwConst.swDisplayMode_e.swHIDDEN_GREYED)
                'swapp.SetUserPreferenceIntegerValue(SwConst.swUserPreferenceIntegerValue_e.swHiddenEdgeDisplayDefault, 1) '隐藏线可见

                myView = Draw.CreateDrawViewFromModelView3("E:\works\generator_parts_library\Y2_80\端盖.SLDPRT", "*前视", 0.292, 0.165, 0)

                'myViewname = myView.Name
                'Debug.Print(myViewname)
                'myView = Draw.CreateDrawViewFromModelView3(dz1 + dz2, "*右视", 0.182, 0.192, 0)
                'myViewname = myView.Name
                'Debug.Print(myViewname)


                Dim myNote As Object
                myNote = part.InsertNote("公司名称")
                myNote.GetAnnotation().SetPosition(0.37461, 0.05504177, 0)
                part.ClearSelection2(True)

                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 314 / 1000 And Annpos(0) < 365 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 43 / 1000 And Annpos(1) < 61 / 1000 Then
                                N1.SetText(company)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 23 / 1000 And Annpos(1) < 43 / 1000 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 365 / 1000 And Annpos(0) < 415 / 1000 And Annpos(1) > 14 / 1000 And Annpos(1) < 23 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()

                part = swapp.ActiveDoc
                part.ClearSelection2(True)

                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.108, 0.05, 0)
                part.Extension.SelectByID2("细节项目259@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                "未注公差的线性尺寸的极限偏差按GB/T1804-m."）
                myNote.GetAnnotation().SetPosition(0.082, 0.038, 0)
                part.Extension.SelectByID2("细节项目260@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ActivateView("工程图视图1")
                part.SketchManager.CreateLine(0, radius_most + 0.01, 0, 0, -radius_most - 0.01, 0)
                part.CreateSectionViewAt5(0.12, 0.165, 0, "", 128, 0, 0)
                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vEdgeCount As Integer
                Dim vEdges1 As Object
                Dim vEdges2 As Object
                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges1 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                part.ClearSelection2(True)
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges1(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(10), Nothing)
                part.AddDimension2(0.1317, 0.2466, 0)
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(55), Nothing)
                part.AddDimension2(0.1227, 0.2466, 0)
                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                selecmag.AddSelectionListObject(vEdges1(58), Nothing)
                part.AddDimension2(0.129, 0.24, 0)
                selecmag.AddSelectionListObject(vEdges1(27), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.1755, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges1(27), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.1755, 0)
                selecmag.AddSelectionListObject(vEdges1(61), Nothing)
                selecmag.AddSelectionListObject(vEdges1(1), Nothing)
                part.AddDimension2(0.1246, 0.146, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                selecmag.AddSelectionListObject(vEdges1(26), Nothing)
                selecmag.AddSelectionListObject(vEdges1(35), Nothing)
                part.AddDimension2(0.153, 0.1606, 0)
                selecmag.AddSelectionListObject(vEdges1(65), Nothing)
                selecmag.AddSelectionListObject(vEdges1(64), Nothing)
                part.AddDimension2(0.108, 0.159, 0)
                selecmag.AddSelectionListObject(vEdges1(63), Nothing)
                selecmag.AddSelectionListObject(vEdges1(64), Nothing)
                part.AddDimension2(0.111, 0.159, 0)
                selecmag.AddSelectionListObject(vEdges1(20), Nothing)
                selecmag.AddSelectionListObject(vEdges1(41), Nothing)
                part.AddDimension2(0.195, 0.159, 0)
                part.EditDimensionProperties2(8, 0.000012, -0.000028, "K7", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True
                Displaydim.LeaderVisibility = 2
                Displaydim.WitnessVisibility = 2
                selecmag.AddSelectionListObject(vEdges1(65), Nothing)
                part.AddDimension2(0.075, 0.159, 0)
                part.EditDimensionProperties2(8, 0.00013, 0, "H11", "", True, 9, 1, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True '加括号
                selecmag.AddSelectionListObject(vEdges1(53), Nothing)
                selecmag.AddSelectionListObject(vEdges1(18), Nothing)
                part.AddDimension2(0.137, 0.228, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "三处", True, "", "", True)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2) '水平引线

                selecmag.AddSelectionListObject(vEdges1(25), Nothing)
                selecmag.AddSelectionListObject(vEdges1(19), Nothing)
                part.AddDimension2(0.146, 0.205, 0)
                part.EditDimensionProperties2(8, 0.00011, 0, "H11", "", True, 9, 1, True, 12, 12, "", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.ShowTolParenthesis = True
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges1(24), Nothing)
                selecmag.AddSelectionListObject(vEdges1(37), Nothing)
                part.AddDimension2(0.1715, 0.159, 0)
                part.EditDimensionProperties2(2, 0.000022, 0.000005, "", "", False, 3, 1, True, 12, 12, "<MOD-DIAM>", "挤压后尺寸", True, "", "", False)

                selecmag.AddSelectionListObject(vEdges1(57), Nothing)
                Dim myDatumTag As SldWorks.DatumTag
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("N")
                myDatumTag.GetAnnotation().SetPosition2(0.1367, 0.28, 0)

                selecmag.AddSelectionListObject(vEdges1(20), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("B")
                myDatumTag.GetAnnotation().SetPosition2(0.188, 0.229, 0)

                selecmag.AddSelectionListObject(vEdges1(24), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("H")
                myDatumTag.GetAnnotation().SetPosition2(0.181, 0.191, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(29), Nothing)
                part.AddDimension2(0.089, 0.183, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "R", "", False, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)

                part.Extension.SelectByID2("RD10@工程图视图2", "DIMENSION", 0.161, 0.222, 0, False, 0, Nothing, 0)
                part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_all_shell_ver_distance, "")

                Dim SF As Object
                'Dim selectdata As SldWorks.ISelectData
                'selectdata = selecmag.CreateSelectData()
                'selectdata.X = 0.13
                'selectdata.Y = 0.2227
                'selectdata.Z = 0
                selecmag.AddSelectionListObject(vEdges1(18), Nothing)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_angle, "")
                SF.GetAnnotation().SetPosition2(0.13, 0.2227, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_hole, "")
                SF.GetAnnotation().SetPosition2(0.1295, 0.27, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_top_shell_hor_distance, "")
                SF.GetAnnotation().SetPosition2(0.1165, 0.1978, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_hor_distance2, "")
                SF.GetAnnotation().SetPosition2(0.1335, 0.17, 0)
                SF.SetAngle(270 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_hole_top_semicircle, "")
                SF.GetAnnotation().SetPosition2(0.09739, 0.17827, 0)
                SF.SetAngle(-30 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_hole_diameter, "")
                SF.GetAnnotation().SetPosition2(0.0913, 0.17046, 0)
                SF.SetAngle(180 * pi / 180)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_diameter1, "")
                SF.GetAnnotation().SetPosition2(0.143, 0.1404, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", "2.0", "")
                SF.GetAnnotation().SetPosition2(0.159, 0.137, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(2), Nothing)
                selecmag.AddSelectionListObject(vEdges1(37), Nothing)
                part.AddDimension2(0.152, 0.1307, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "1*", "", True, "", "", False)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_mid_shell_angle, "")
                SF.GetAnnotation().SetPosition2(0.13824, 0.13126, 0)
                SF.SetAngle(-45 * pi / 180)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(vEdges1(4), Nothing)
                selecmag.AddSelectionListObject(vEdges1(41), Nothing)
                part.AddDimension2(0.152, 0.10384, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "1*", "", True, "", "", False)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_under_angle, "")
                SF.GetAnnotation().SetPosition2(0.14031, 0.10682, 0)
                SF.SetAngle(-135 * pi / 180)
                part.ClearSelection2(True)
                part.ActivateSheet("图纸1")
                Dim point1 As SldWorks.SketchPoint = part.SketchManager.CreatePoint(0.12958, 0.2555, 0)
                point1.Select4(False, Nothing)
                Dim myGtol As Object
                Dim myAnno As SldWorks.Annotation
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.075", "H", "", "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition2(0.144, 0.259, 0)
                myAnno.SetLeader3(1, 0, True, False, False, False)
                'myAnno.SetLeaderAttachmentPointAtIndex(1, 0.12958, 0.2555, 0)
                part.ClearSelection2(True)

                point1 = part.SketchManager.CreatePoint(0.173, 0.137, 0)
                point1.Select4(False, Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-CYL>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.007", "", "", "", "")
                myGtol.SetFrameSymbols2(2, "<IGTOL-SRUN>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "0.03", "B", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.186, 0.146, 0)
                myAnno.SetLeader3(2, 0, True, True, False, False)
                'myAnno.SetLeaderAttachmentPointAtIndex(2, 0.173, 0.137, 0)

                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ViewDisplayHidden
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                vComponent = vComponents(0)
                vEdges2 = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                'vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'part.ClearSelection2(True)
                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(vEdges2(vEdgeCount), Nothing)
                '    MsgBox(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                part.Extension.SelectByID2("Arc1@草图14@端盖-1@工程图视图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.31, 0.122, 0)
                part.EditDimensionProperties2(1, 0, 0, "", "", True, 9, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                Displaydim = selecmag.GetSelectedObject6(1, -1)
                Displaydim.SetBrokenLeader2(False, 2)

                selecmag.AddSelectionListObject(vEdges2(9), Nothing)
                selecmag.AddSelectionListObject(vEdges2(11), Nothing)
                part.AddDimension2(0.291, 0.199, 0)
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 2, True, 12, 12, "", "", False, "", "", False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(vEdges2(11), Nothing)
                myDatumTag = part.InsertDatumTag2()
                myDatumTag.SetLabel("A")
                myDatumTag.GetAnnotation().SetPosition2(0.3105, 0.208, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(vEdges2(14), Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-SYMMETRY>", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "1.0", "A", "", "", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.31, 0.248, 0)
                myAnno.SetLeader3(1, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(1, 0.2939, 0.2312, 0)

                selecmag.AddSelectionListObject(vEdges2(20), Nothing)
                myGtol = part.InsertGtol()
                myGtol.SetFrameSymbols2(1, "<IGTOL-POSI>", True, "", False, "", "", "", "")
                myGtol.SetFrameValues(1, "0.4", "", "B", "N", "")
                myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                myGtol.SetFrameValues(2, "", "", "", "", "")
                myGtol.SetPTZHeight("", False)
                myGtol.SetCompositeFrame(False)
                myGtol.SetText(4, "")
                myGtol.SetBetweenTwoPoints(False, "", "")
                myAnno = myGtol.GetAnnotation()
                myAnno.SetPosition(0.373, 0.14, 0)
                myAnno.SetLeader3(2, 0, True, False, False, False)
                myAnno.SetLeaderAttachmentPointAtIndex(2, 0.35467, 0.12722, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(1, 0, 0, 0, 0, 0, 1, "", "", "", "", "", SF_front_top_hole_diameter, "")
                SF.GetAnnotation().SetPosition2(0.3683, 0.1365, 0)
                part.ClearSelection2(True)
                SF = part.Extension.InsertSurfaceFinishSymbol3(2, 0, 0.386293518298262, 0.266638246468794, 0, 0, 1, "", "", "", "", "", SF_other, "")
                SF.GetAnnotation().SetPosition2(0.386, 0.266, 0)
                part.ClearSelection2(True)
                myNote = part.InsertNote("一处"）
                myNote.GetAnnotation().SetPosition(0.31753, 0.2538, 0)
                part.ClearSelection2(True)
                myNote = part.InsertNote("3×Φ7均布"）
                myNote.GetAnnotation().SetPosition(0.38343, 0.14662, 0)

                part.SaveAs3(dz1 + dz3, 0, 2)

                swapp.ExitApp()








            End Sub


        End Class
        Public Class 转子
            Public Sub 轴()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\轴.SLDPRT"
                Dim dz3 As String
                dz3 = "\轴.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim displaydimension As SldWorks.DisplayDimension
                Dim swbody As SldWorks.Body2
                Dim selecmag As SldWorks.SelectionMgr
                Dim pi As Double
                pi = 3.1415926535897931
                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, False)

                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim weight As Double
                Dim scale_m As Double
                Dim scale_d As Double
                Dim hor_distance1 As Double
                Dim hor_distance1_TolType As Double
                Dim hor_distance1_Tol As Double
                Dim hor_distance2 As String
                Dim hor_distance3 As Double
                Dim hor_distance3_TolType As Double
                Dim hor_distance3_TolMax As Double
                Dim hor_distance3_TolMin As Double
                Dim hor_distance4 As Double
                Dim hor_distance5 As Double
                Dim hor_distance6 As Double
                Dim hor_distance6_TolMax As Double
                Dim hor_distance6_TolMin As Double
                Dim hor_distance7 As Double
                Dim hor_distance8 As Double
                Dim hor_distance9 As Double
                Dim hor_distance9_TolType As Double
                Dim hor_distance9_HoleFit As String
                Dim hor_distance10 As Double
                Dim ver_distance1 As Double
                Dim ver_distance1_TolMax As Double
                Dim ver_distance1_TolMin As Double
                Dim ver_distance2 As Double
                Dim ver_distance2_TolMax As Double
                Dim ver_distance2_TolMin As Double
                Dim ver_distance3 As Double
                Dim ver_distance3_ShaftFit As String
                Dim ver_distance4 As Double
                Dim ver_distance4_TolMax As Double
                Dim ver_distance4_TolMin As Double
                Dim ver_distance5 As Double
                Dim ver_distance5_TolMax As Double
                Dim ver_distance5_TolMin As Double
                Dim ver_distance6 As Double
                Dim ver_distance6_ShaftFit As String
                Dim ver_distance7 As Double
                Dim ver_distance7_ShaftFit As String
                Dim ver_distance8 As Double
                Dim ver_distance8_ShaftFit As String
                Dim ver_distance9 As Double
                Dim ver_distance9_TolMax As Double
                Dim ver_distance9_TolMin As Double
                Dim ver_distance10 As Double
                Dim ver_distance10_TolMax As Double
                Dim ver_distance10_TolMin As Double
                Dim ver_distance11 As Double
                Dim ver_distance11_ShaftFit As String
                Dim ver_distance12 As Double
                Dim ver_distance12_TolMax As Double
                Dim ver_distance12_TolMin As Double
                Dim ver_distance13 As Double
                Dim ver_distance13_TolMax As Double
                Dim ver_distance13_TolMin As Double
                Dim ver_distance14 As Double
                Dim ver_distance14_TolMax As Double
                Dim ver_distance14_TolMin As Double
                Dim par_A_hor_distance1 As Double
                Dim par_A_FilRad As Double
                Dim par_B_hor_distance1 As Double
                Dim par_B_hor_distance1_TolMax As Double
                Dim par_B_hor_distance1_TolMin As Double
                Dim FilCorn1 As Double
                Dim FilCorn_angle1 As Double
                Dim FilCorn2 As Double
                Dim FilCorn_angle2 As Double
                Dim Rough1 As Double
                Dim Rough2 As Double
                Dim Rough3 As Double
                Dim FilCorn3 As Double
                Dim FilCorn_angle3 As Double



                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")

                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from rotor_shaft", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("Code") = "8EJ.200.788" Then
                        Code = dr("Code")
                        name = dr("name")
                        company = dr("company")
                        material = dr("material")
                        weight = dr("weight")
                        scale_m = dr("scale_m")
                        scale_d = dr("scale_d")
                        hor_distance1 = dr("hor_distance1") / 1000
                        hor_distance1_TolType = dr("hor_distance1_TolType")
                        hor_distance1_Tol = dr("hor_distance1_Tol")
                        hor_distance2 = dr("hor_distance2") / 1000
                        hor_distance3_TolType = dr("hor_distance3_TolType")
                        hor_distance3 = dr("hor_distance3") / 1000
                        hor_distance3_TolMax = dr("hor_distance3_TolMax")
                        hor_distance3_TolMin = dr("hor_distance3_TolMin")
                        hor_distance4 = dr("hor_distance4") / 1000
                        hor_distance5 = dr("hor_distance5") / 1000
                        hor_distance6 = dr("hor_distance6") / 1000
                        hor_distance6_TolMax = dr("hor_distance6_TolMax")
                        hor_distance6_TolMin = dr("hor_distance6_TolMin")
                        hor_distance7 = dr("hor_distance7") / 1000
                        hor_distance8 = dr("hor_distance8") / 1000
                        hor_distance9 = dr("hor_distance9") / 1000
                        hor_distance9_TolType = dr("hor_distance9_TolType")
                        hor_distance9_HoleFit = dr("hor_distance9_HoleFit")
                        hor_distance10 = dr("hor_distance10") / 1000
                        ver_distance1 = dr("ver_distance1") / 1000
                        ver_distance1_TolMax = dr("ver_distance1_TolMax")
                        ver_distance1_TolMin = dr("ver_distance1_TolMin")
                        ver_distance2 = dr("ver_distance2") / 1000
                        ver_distance2_TolMax = dr("ver_distance2_TolMax")
                        ver_distance2_TolMin = dr("ver_distance2_TolMin")
                        ver_distance3 = dr("ver_distance3") / 1000
                        ver_distance3_ShaftFit = dr("ver_distance3_ShaftFit")
                        ver_distance4 = dr("ver_distance4") / 1000
                        ver_distance4_TolMax = dr("ver_distance4_TolMax")
                        ver_distance4_TolMin = dr("ver_distance4_TolMin")
                        ver_distance5 = dr("ver_distance5") / 1000
                        ver_distance5_TolMax = dr("ver_distance5_TolMax")
                        ver_distance5_TolMin = dr("ver_distance5_TolMin")
                        ver_distance6 = dr("ver_distance6") / 1000
                        ver_distance6_ShaftFit = dr("ver_distance6_ShaftFit")
                        ver_distance7 = dr("ver_distance7") / 1000
                        ver_distance7_ShaftFit = dr("ver_distance7_ShaftFit")
                        ver_distance8 = dr("ver_distance8") / 1000
                        ver_distance8_ShaftFit = dr("ver_distance8_ShaftFit")
                        ver_distance9 = dr("ver_distance9") / 1000
                        ver_distance9_TolMax = dr("ver_distance9_TolMax")
                        ver_distance9_TolMin = dr("ver_distance9_TolMin")
                        ver_distance10 = dr("ver_distance10") / 1000
                        ver_distance10_TolMax = dr("ver_distance10_TolMax")
                        ver_distance10_TolMin = dr("ver_distance10_TolMin")
                        ver_distance11 = dr("ver_distance11") / 1000
                        ver_distance11_ShaftFit = dr("ver_distance11_ShaftFit")
                        ver_distance12 = dr("ver_distance12") / 1000
                        ver_distance12_TolMax = dr("ver_distance12_TolMax")
                        ver_distance12_TolMin = dr("ver_distance12_TolMin")
                        ver_distance13 = dr("ver_distance13") / 1000
                        ver_distance13_TolMax = dr("ver_distance13_TolMax")
                        ver_distance13_TolMin = dr("ver_distance13_TolMin")
                        ver_distance14 = dr("ver_distance14") / 1000
                        ver_distance14_TolMax = dr("ver_distance14_TolMax")
                        ver_distance14_TolMin = dr("ver_distance14_TolMin")
                        par_A_hor_distance1 = dr("par_A_hor_distance1") / 1000
                        par_A_FilRad = dr("par_A_FilRad") / 1000
                        par_B_hor_distance1 = dr("par_B_hor_distance1") / 1000
                        par_B_hor_distance1_TolMax = dr("par_B_hor_distance1_TolMax")
                        par_B_hor_distance1_TolMin = dr("par_B_hor_distance1_TolMin")
                        FilCorn1 = dr("FilCorn1") / 1000
                        FilCorn_angle1 = dr("FilCorn_angle1")
                        FilCorn2 = dr("FilCorn2") / 1000
                        FilCorn_angle2 = dr("FilCorn_angle2")
                        Rough1 = dr("Rough1")
                        Rough2 = dr("Rough2")
                        Rough3 = dr("Rough3")
                        FilCorn3 = dr("FilCorn3") / 1000
                        FilCorn_angle3 = dr("FilCorn_angle3")
                    End If
                Loop

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                Dim line1 As SldWorks.SketchSegment
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                line1 = part.SketchManager.CreateLine(0, 0, 0, 0, ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(0, ver_distance1 / 2, 0, hor_distance1 - par_A_hor_distance1, ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance1 - par_A_hor_distance1, ver_distance1 / 2, 0, hor_distance1 - par_A_hor_distance1, ver_distance2 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance1 - par_A_hor_distance1, ver_distance2 / 2, 0, hor_distance1, ver_distance2 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance1, ver_distance2 / 2, 0, hor_distance1, ver_distance3 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance1, ver_distance3 / 2, 0, hor_distance3 - par_A_hor_distance1, ver_distance3 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 - par_A_hor_distance1, ver_distance3 / 2, 0, hor_distance3 - par_A_hor_distance1, ver_distance5 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 - par_A_hor_distance1, ver_distance5 / 2, 0, hor_distance3, ver_distance5 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3, ver_distance5 / 2, 0, hor_distance3, ver_distance6 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3, ver_distance6 / 2, 0, hor_distance3 + hor_distance6, ver_distance6 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6, ver_distance6 / 2, 0, hor_distance3 + hor_distance6, ver_distance9 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6, ver_distance9 / 2, 0, hor_distance3 + hor_distance6 + par_A_hor_distance1, ver_distance9 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + par_A_hor_distance1, ver_distance9 / 2, 0, hor_distance3 + hor_distance6 + par_A_hor_distance1, ver_distance10 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + par_A_hor_distance1, ver_distance10 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8, ver_distance10 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8, ver_distance10 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8, ver_distance12 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8, ver_distance12 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + par_A_hor_distance1, ver_distance12 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + par_A_hor_distance1, ver_distance12 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + par_A_hor_distance1, ver_distance14 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + par_A_hor_distance1, ver_distance14 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9 - par_B_hor_distance1, ver_distance14 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9 - par_B_hor_distance1, ver_distance14 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9 - par_B_hor_distance1, ver_distance13 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9 - par_B_hor_distance1, ver_distance13 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9, ver_distance13 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9, ver_distance13 / 2, 0, hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9, ver_distance14 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance3 + hor_distance6 + hor_distance8 + hor_distance9, ver_distance14 / 2, 0, hor_distance10, ver_distance14 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance10, ver_distance14 / 2, 0, hor_distance10, 0, 0)
                part.SketchAddConstraints("sgFIXED")
                Dim lineq As SldWorks.SketchSegment
                lineq = part.SketchManager.CreateLine(0, 0, 0, hor_distance10, 0, 0)
                'part.SketchManager.CreateConstructionGeometry()
                part.SketchAddConstraints("sgFIXED")
                'sketcher.InsertSketch(True)
                'part.ClearSelection2(True)

                'line1.SelectChain(False, Nothing)
                'lineq.select4(True, Nothing)
                'part.SketchMirror()
                'part.ClearSelection2(True)


                part.Extension.SelectByID2("草图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line24@草图1", "EXTSKETCHSEGMENT", -0.109688723689771, 0.112311755914789, 0, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 2 * pi, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.SelectionManager.EnableContourSelection = False


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCenterLine(hor_distance3 - hor_distance2, ver_distance3 / 2, 0, hor_distance3 - hor_distance2, -ver_distance3 / 2 - 0.01, 0)
                part.SketchManager.CreateCenterLine(hor_distance3 + hor_distance4, ver_distance6 / 2, 0, hor_distance3 + hor_distance4, -ver_distance6 / 2 - 0.01, 0)
                part.SketchManager.CreateCenterLine(hor_distance3 + hor_distance4 + hor_distance5, ver_distance6 / 2, 0, hor_distance3 + hor_distance4 + hor_distance5, -ver_distance6 / 2 - 0.01, 0)
                part.SketchManager.CreateCenterLine(hor_distance3 + hor_distance6 + hor_distance7, ver_distance10 / 2, 0, hor_distance3 + hor_distance6 + hor_distance7, -ver_distance10 / 2 - 0.01, 0)

                Dim edge() As Object
                Dim vEdgeCount As Integer
                part.Extension.SelectByID2("旋转1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    part.EditRebuild()
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(2), Nothing)
                selecmag.AddSelectionListObject(edge(3), Nothing)
                selecmag.AddSelectionListObject(edge(6), Nothing)
                selecmag.AddSelectionListObject(edge(7), Nothing)
                selecmag.AddSelectionListObject(edge(10), Nothing)
                selecmag.AddSelectionListObject(edge(11), Nothing)
                selecmag.AddSelectionListObject(edge(14), Nothing)
                selecmag.AddSelectionListObject(edge(15), Nothing)
                part.FeatureManager.FeatureFillet3(2, par_A_FilRad, 0.01, 0, 0, 0, 0, "", "", "", "", "", "", "")
                part.ClearSelection2(True)
                sketcher.InsertSketch(True)


                selecmag.AddSelectionListObject(edge(1), Nothing)
                selecmag.AddSelectionListObject(edge(4), Nothing)
                selecmag.AddSelectionListObject(edge(5), Nothing)
                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge(9), Nothing)
                part.FeatureManager.InsertFeatureChamfer(2, 1, 0.0003, 0.78539816339745, 0, 0, 0, 0)
                'selecmag.AddSelectionListObject(edge(12), Nothing)
                'selecmag.AddSelectionListObject(edge(13), Nothing)
                'selecmag.AddSelectionListObject(edge(16), Nothing)
                'selecmag.AddSelectionListObject(edge(17), Nothing)
                selecmag.AddSelectionListObject(edge(0), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.0015, 0.78539816339745, 0, 0, 0, 0)
                selecmag.AddSelectionListObject(edge(21), Nothing)
                part.FeatureManager.InsertFeatureChamfer(6, 1, 0.001, 0.78539816339745, 0, 0, 0, 0)

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)

                part.SketchManager.CreateArc(0.276 - 0.015, 0.0061 + 0.0315, 0, 0.276 - 0.015, 0.0061, 0, 0.276 - 0.015, 0.0061 + 0.063, 0, -1)
                part.SketchManager.CreateLine(0.276 - 0.015, 0.0061, 0, 0.276, 0.0061, 0)
                part.SketchManager.CreateLine(0.276, 0.0061, 0, 0.276, 0.0061 + 0.0039, 0)
                part.SketchManager.CreateLine(0.276, 0.0061 + 0.0039, 0, 0.276 - 0.05, 0.0061 + 0.0039, 0)
                part.Extension.SelectByID2("直线3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, 0.05, 0.0095, 0)
                part.Extension.SelectByID2("圆弧1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, 0.022, 0.063, 0)

                part.SketchManager.CreateArc(0.022, 0.006 + 0.063 / 2, 0, 0.022, 0.006, 0, 0.022, 0.006 + 0.063, 0, 1)
                part.SketchManager.CreateLine(0, 0.006, 0, 0, 0.0095, 0)
                part.SketchManager.CreateLine(0, 0.006, 0, 0.022, 0.006, 0)
                part.SketchManager.CreateLine(0, 0.0095, 0, 0.05, 0.0095, 0)


                part.Extension.SelectByID2("直线6", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, 0.276 - 0.05, 0.0061 + 0.0039, 0)
                part.Extension.SelectByID2("圆弧2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, 0.276 - 0.015, 0.0061 + 0.063, 0)

                part.FeatureManager.FeatureCut4(True, False, False, 6, 0, 0.006, 0.01, False, False, False, False, 0, 0, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)


            End Sub
            Public Sub 风扇()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\风扇.SLDPRT"
                Dim dz3 As String
                dz3 = "\风扇.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim swFeatData As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim line As SldWorks.SketchSegment
                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchLine
                Dim line3 As SldWorks.SketchLine
                Dim point As SldWorks.SketchPoint
                Dim point1 As SldWorks.SketchPoint
                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment
                Dim edge() As Object
                Dim vFaceCount As Integer
                Dim swbodys As Object


                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)


                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim weight As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim FilRad As Double
                Dim hor_distance As Double
                Dim hor_distance_TolType As Double
                Dim hor_distance_TolMax As Double
                Dim hor_distance_TolMin As Double
                Dim ver_distance As Double
                Dim ver_distance_TolMax As Double
                Dim ver_distance_TolMin As Double
                Dim proA_hor_distance1 As Double
                Dim proA_hor_distance2 As Double
                Dim proA_hor_distance3 As Double
                Dim proA_hor_distance4 As Double
                Dim proA_hor_distance5 As Double
                Dim proA_hor_distance5_TolMax As Double
                Dim proA_hor_distance5_TolMin As Double
                Dim proA_hor_distance6 As Double
                Dim proA_hor_distance7 As Double
                Dim proA_ver_diameter1 As Double
                Dim proA_ver_distance2 As Double
                Dim proA_ver_diameter3 As Double
                Dim proA_ver_diameter4 As Double
                Dim proA_ver_diameter5 As Double
                Dim proA_ver_diameter6 As Double
                Dim proA_ver_diameter6_TolMax As Double
                Dim proA_ver_diameter6_TolMin As Double
                Dim proA_cir_radius1 As Double
                Dim proA_cir_radius2 As Double
                Dim proA_FilRad1 As Double
                Dim proA_FilRad2 As Double
                Dim proB_ver_diameter As Double
                Dim proB_FilRad As Double
                Dim proC_hor_distance1 As Double
                Dim proC_hor_distance2 As Double
                Dim proC_ver_distance As Double
                Dim proC_Rad_distance As Double
                Dim proD_hor_distance1 As Double
                Dim proD_ver_distance2 As Double
                Dim proE_hor_distance1 As Double
                Dim proE_hor_distance2 As Double
                Dim proE_hor_distance3 As Double
                Dim proE_ver_distance1 As Double
                Dim proE_ver_distance2 As Double
                Dim proE_ver_distance3 As Double
                Const pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from Fan", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        weight = dr.GetString("weight")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        FilRad = dr.GetString("FilRad") / 1000
                        hor_distance = dr.GetString("hor_distance") / 1000
                        hor_distance_TolType = dr.GetString("hor_distance_TolType")
                        hor_distance_TolMax = dr.GetString("hor_distance_TolMax") / 1000
                        hor_distance_TolMin = dr.GetString("hor_distance_TolMin") / 1000
                        ver_distance = dr.GetString("ver_distance") / 1000
                        ver_distance_TolMax = dr.GetString("ver_distance_TolMax") / 1000
                        ver_distance_TolMin = dr.GetString("ver_distance_TolMin") / 1000
                        proA_hor_distance1 = dr.GetString("proA_hor_distance1") / 1000
                        proA_hor_distance2 = dr.GetString("proA_hor_distance2"） / 1000
                        proA_hor_distance3 = dr.GetString("proA_hor_distance3") / 1000
                        proA_hor_distance4 = dr.GetString("proA_hor_distance4") / 1000
                        proA_hor_distance5 = dr.GetString("proA_hor_distance5") / 1000
                        proA_hor_distance5_TolMax = dr.GetString("proA_hor_distance5_TolMax") / 1000
                        proA_hor_distance5_TolMin = dr.GetString("proA_hor_distance5_TolMin") / 1000
                        proA_hor_distance6 = dr.GetString("proA_hor_distance6") / 1000
                        proA_hor_distance7 = dr.GetString("proA_hor_distance7") / 1000
                        proA_ver_diameter1 = dr.GetString("proA_ver_diameter1") / 1000
                        proA_ver_distance2 = dr.GetString("proA_ver_distance2") / 1000
                        proA_ver_diameter3 = dr.GetString("proA_ver_diameter3") / 1000
                        proA_ver_diameter4 = dr.GetString("proA_ver_diameter4") / 1000
                        proA_ver_diameter5 = dr.GetString("proA_ver_diameter5") / 1000
                        proA_ver_diameter6 = dr.GetString("proA_ver_diameter6") / 1000
                        proA_ver_diameter6_TolMax = dr.GetString("proA_ver_diameter6_TolMax") / 1000
                        proA_ver_diameter6_TolMin = dr.GetString("proA_ver_diameter6_TolMin") / 1000
                        proA_cir_radius1 = dr.GetString("proA_cir_radius1") / 1000
                        proA_cir_radius2 = dr.GetString("proA_cir_radius2") / 1000
                        proA_FilRad1 = dr.GetString("proA_FilRad1") / 1000
                        proA_FilRad2 = dr.GetString("proA_FilRad2") / 1000
                        proB_ver_diameter = dr.GetString("proB_ver_diameter") / 1000
                        proB_FilRad = dr.GetString("proB_FilRad") / 1000
                        proC_hor_distance1 = dr.GetString("proC_hor_distance1") / 1000
                        proC_hor_distance2 = dr.GetString("proC_hor_distance2") / 1000
                        proC_ver_distance = dr.GetString("proC_ver_distance") / 1000
                        proC_Rad_distance = dr.GetString("proC_Rad_distance") / 1000
                        proD_hor_distance1 = dr.GetString("proD_hor_distance1") / 1000
                        proD_ver_distance2 = dr.GetString("proD_ver_distance2") / 1000
                        proE_hor_distance1 = dr.GetString("proE_hor_distance1") / 1000
                        proE_hor_distance2 = dr.GetString("proE_hor_distance2") / 1000
                        proE_hor_distance3 = dr.GetString("proE_hor_distance3") / 1000
                        proE_ver_distance1 = dr.GetString("proE_ver_distance1") / 1000
                        proE_ver_distance2 = dr.GetString("proE_ver_distance2") / 1000
                        proE_ver_distance3 = dr.GetString("proE_ver_distance3") / 1000
                    End If
                Loop




                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                line1 = part.SketchManager.CreateCenterLine(0, 0, 0, -(proA_hor_distance5 + proA_hor_distance2), 0, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(0, -proA_ver_diameter6 / 2, 0, -proA_hor_distance5, -proA_ver_diameter6 / 2, 0)
                line1.Select4(True, Nothing)
                part.AddDimension2(0.025, 0.016, 0)
                line1.Select4(False, Nothing)
                part.AddDimension2(-0.033, -0.02, 0)
                part.SketchManager.CreateLine(0, -proA_ver_diameter6 / 2, 0, 0, -proA_ver_diameter4 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-proA_hor_distance5, -proA_ver_diameter6 / 2, 0, -proA_hor_distance5, -proA_ver_diameter5 / 2, 0)
                part.SketchManager.CreateLine(-proA_hor_distance5, -proA_ver_diameter5 / 2, 0, -proA_hor_distance7, -proA_ver_diameter5 / 2, 0)
                line2 = part.SketchManager.CreateLine(-proA_hor_distance7, -proA_ver_diameter5 / 2, 0, -proA_hor_distance7, -proA_ver_diameter5 / 2 - 0.001, 0)
                point = line2.GetEndPoint2()
                arc1 = part.SketchManager.CreateCircleByRadius(0, -proA_ver_diameter4 / 2 - proA_cir_radius1, 0, proA_cir_radius1)
                part.SketchAddConstraints("sgFIXED")
                arc2 = part.SketchManager.CreateCircleByRadius(0, -proA_ver_diameter4 / 2 - proA_cir_radius1, 0, proA_cir_radius2)
                part.SketchAddConstraints("sgFIXED")
                point.Select4(True, Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2(True)

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True)
                part.SketchManager.CreateCenterLine(-proA_hor_distance5 - proA_hor_distance2, 0, 0, -proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                line2 = part.SketchManager.CreateLine(-proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0, -0.024, -0.036, 0)
                point = line2.GetEndPoint2()
                part.ClearSelection2(True)
                point.Select4(True, Nothing)
                arc1.Select4(True, Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                arc1.Select4(True, Nothing)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2(True)
                arc1.Select4(True, Nothing)
                part.SketchManager.SketchTrim(0, 0, -proA_hor_distance1 - 2 * proA_cir_radius1, 0)
                arc2.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, -proA_hor_distance1 - 2 * proA_cir_radius2, 0)
                arc2.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, 0, 0)
                line2 = part.SketchManager.CreateLine(-proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2 + proA_ver_distance2, 0, -0.055, -0.98, 0)
                arc2.Select4(True, Nothing)
                part.SketchAddConstraints("sgTANGENT")
                point = line2.GetEndPoint2()
                point.Select4(False, Nothing)
                arc2.Select4(True, Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0, -0.105364810522632, 0.0513343298113793, False, 2, Nothing, 0)
                part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", 0, -0.111593136099723, 0.0486650474211975, True, 2, Nothing, 0)
                arc2.Select4(True, Nothing)
                part.SketchManager.SketchTrim(6, 0, 0, 0)
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                arc2.Select4(True, Nothing)
                part.SketchManager.CreateFillet(0.002, 1)

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                part.Extension.SelectByID2("Line6", "SKETCHSEGMENT", 0, 0, 0, True, 2, Nothing, 0)
                part.AddDimension2(-0.00419, -0.044, 0)
                part.Parameter("D4@草图1").SystemValue = proA_hor_distance7

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 2, Nothing, 0)
                part.AddDimension2(-0.032, -0.024, 0)
                part.Parameter("D5@草图1").SystemValue = proA_hor_distance5

                part.Extension.SelectByID2("", "SKETCHSEGMENT", 0, 0, 0, False, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, False, False, False, 0, 0, 6.2831853071796, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.SelectionManager.EnableContourSelection = False      '特征旋转

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.InsertAxis2(True)   '建基准轴
                part.ClearSelection2(True)



                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(4, 0, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面1", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                sketcher.InsertSketch(True)

                'part.Extension.SelectByID2("草图1", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                'part.UnblankSketch()    '显示草图1
                'part.Extension.SelectByID2("Line6@草图1", "EXTSKETCHSEGMENT", -0.00842004485504978, -0.0462657492769201, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc2@草图1", "EXTSKETCHSEGMENT", -0.0181650414716875, -0.0538292425581958, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line9@草图1", "EXTSKETCHSEGMENT", -0.0456724103374919, -0.0894956703829355, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3@草图1", "EXTSKETCHSEGMENT", -0.00871867093293966, -0.0502209768494866, 0, True, 0, Nothing, 0)
                part.SketchManager.SketchUseEdge3(False, False) '转换实体引用

                line2 = part.SketchManager.CreateLine(-proA_hor_distance5 + proA_hor_distance4, -proA_ver_diameter5 / 2 + 0.001, 0, -proA_hor_distance5 + proA_hor_distance4, -proA_ver_diameter5 / 2 - 0.01, 0)
                point = line2.IGetEndPoint2
                part.ClearSelection2(True)
                point.Select4(False, Nothing)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line4@草图1", "EXTSKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.046, -0.065, 0)
                part.Parameter("D1@草图2").SystemValue = proA_hor_distance4

                line3 = part.SketchManager.CreateLine(-proA_hor_distance5 + proA_hor_distance4, -proA_ver_diameter5 / 2 + 0.001, 0, -proA_hor_distance7, -proA_ver_diameter5 / 2 + 0.001, 0)
                part.SketchAddConstraints("sgFIXED")
                point1 = line3.IGetStartPoint2
                point = line2.IGetStartPoint2
                part.ClearSelection2(True)
                point1.Select4(False, Nothing)
                point.Select4(True, Nothing)
                part.SketchAddConstraints("sgMERGEPOINTS")

                part.SketchManager.CreateLine(-proA_hor_distance7, -proA_ver_diameter5 / 2 + 0.001, 0, -proA_hor_distance7, -proA_ver_diameter5 / 2 - FilRad, 0)

                part.Extension.SelectByID2("直线2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0)
                part.ClearSelection2(True) '修剪
                'part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", -0.0000421249358169007, -0.0140824610209798, 0.00399999999984857, False, 0, Nothing, 0)
                'part.EditDelete()
                'part.Extension.SelectByID2("Line8", "SKETCHSEGMENT", -0.0000324590719742446, -0.0141086098407701, 0.00399999999984857, False, 0, Nothing, 0)
                'part.SketchAddConstraints("sgFIXED")
                'sketcher.InsertSketch(True)
                'part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                'part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, True, 0, Nothing, 0)
                'part.InsertAxis2(True)   '建基准轴
                part.Extension.SelectByID2("草图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 6, 0, proB_ver_diameter, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False
                'part.FeatureManager.FeatureExtrusion2(True, False, False, 6, 0, proB_ver_diameter, 0.01, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                'part.SelectionManager.EnableContourSelection = False



                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("凸台-拉伸1", "SOLIDBODY", 0.0000585157910961698, -0.0564227929425982, 0.0549999999997794, True, 256, Nothing, 0)

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = True
                swFeatData.Spacing = 20 * pi / 180
                swFeatData.TotalInstances = 2
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)

                'part.Extension.SelectByID2("Line4@草图2", "EXTSKETCHSEGMENT", -0.01, -0.0484718089643117, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3@草图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4@草图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6@草图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2@草图2", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5@草图1", "EXTSKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchManager.SketchUseEdge3(False, False)   '引用线段
                part.ClearSelection2(True)
                part.Extension.SelectByID2("直线5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -proA_hor_distance5, -proA_ver_diameter5 / 2, 0)
                part.Extension.SelectByID2("直线8", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -proA_hor_distance7, -proA_ver_diameter5 / 2 + 0.001, 0)
                part.Extension.SelectByID2("直线7", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.SketchTrim(0, -proA_hor_distance5 + proA_hor_distance4, -proA_ver_diameter5 / 2 + 0.001, 0)
                part.Extension.SelectByID2("草图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 6, 0, 0.26179938779915, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("阵列(圆周)1", "SOLIDBODY", 0.0199560127479437, -0.0636001076077832, 0.0475414922859727, True, 256, Nothing, 0)
                Featmgr = part.FeatureManager

                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = False
                swFeatData.Spacing = 2 * pi
                swFeatData.TotalInstances = 9
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)



                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, True, 1, Nothing, 0)
                part.FeatureManager.InsertRefPlane(4, 0, 16, 20 * pi / 180, 0, 0) '建基准面
                part.Extension.SelectByID2("基准面2", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)

                part.SketchManager.CreateCenterLine(0, 0, 0, 0, -proA_ver_diameter4 / 2, 0)
                arc1 = part.SketchManager.CreateCircleByRadius(0, -proA_ver_diameter4 / 2 - proA_cir_radius1, 0, proA_cir_radius1)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateCenterLine(-proA_hor_distance5 - proA_hor_distance2, 0, 0, -proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                line2 = part.SketchManager.CreateLine(-proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0, -0.024, -0.036, 0)
                point = line2.GetEndPoint2()
                part.ClearSelection2(True)
                point.Select4(True, Nothing)
                arc1.Select4(True, Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                arc1.Select4(True, Nothing)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2(True)
                arc1.Select4(True, Nothing)
                part.SketchManager.SketchTrim(0, 0, -proA_hor_distance1 - 2 * proA_cir_radius1, 0)


                line1 = part.SketchManager.CreateLine(0, -proA_ver_diameter4 / 2, 0, proA_hor_distance1 - proA_hor_distance5 - proA_hor_distance2 - proB_FilRad, -proA_ver_diameter3 / 2, 0)
                line = part.SketchManager.CreateLine(proA_hor_distance1 - proA_hor_distance5 - proA_hor_distance2 - proB_FilRad, -proA_ver_diameter3 / 2, 0, proA_hor_distance1 - proA_hor_distance5 - proA_hor_distance2 - proB_FilRad, -proA_ver_diameter1 / 2, 0)
                part.AddDimension2(-0.0472926219698811, -0.129935410969052, -0.0672054050296254)
                line.Select4(False, Nothing)
                line1.Select4(True, Nothing)
                part.SketchManager.CreateFillet(proA_FilRad1, 1) '倒圆角
                part.SketchManager.CreateLine(proA_hor_distance1 - proA_hor_distance5 - proA_hor_distance2 - proB_FilRad, -proA_ver_diameter1 / 2, 0, -proA_hor_distance5 - proA_hor_distance2, -proA_ver_diameter1 / 2, 0)
                line.Select4(True, Nothing)
                part.SketchManager.CreateFillet(proA_FilRad2, 1) '倒圆角
                part.FeatureManager.FeatureExtrusion2(True, False, False, 6, 0, 2 * proB_FilRad, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                '两侧拉伸输入的距离是拉伸的总距离
                part.SelectionManager.EnableContourSelection = False
                part.ClearSelection2(True)


                part.Extension.SelectByID2("凸台-拉伸2[2]", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体面
                swbodys = part.SelectionManager.GetSelectedObject6(1, -1)
                edge = swbodys.Getfaces()
                vFaceCount = swbodys.GetFaceCount()
                Debug.Print(vFaceCount)
                part.ClearSelection2(True)

                'vFaceCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    part.EditRebuild()
                'Loop
                'Do Until vFaceCount > 200
                '    selecmag.AddSelectionListObject(edge(vFaceCount), Nothing)
                '    MessageBox.Show(vFaceCount)
                '    part.ClearSelection2(True)
                '    vFaceCount = vFaceCount + 1
                '    part.EditRebuild()
                'Loop

                selecmag.AddSelectionListObject(edge(4), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0) '标记
                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.SetSelectedObjectMark(2, 2, 0)
                selecmag.AddSelectionListObject(edge(7), Nothing)
                selecmag.SetSelectedObjectMark(3, 2, 0)
                part.FeatureManager.InsertMultiFaceDraft(0.79 * pi / 180, False, False, 0, False, False)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(7), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0)
                selecmag.AddSelectionListObject(edge(4), Nothing)
                selecmag.SetSelectedObjectMark(2, 512, 0)
                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.SetSelectedObjectMark(3, 4, 0)
                part.FeatureManager.FeatureFillet3(195, 0.01, 0.01, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0)  '倒圆角

                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, False, 1, Nothing, 0)
                part.Extension.SelectByID2("圆角1", "SOLIDBODY", -0.0409062761650532, -0.117477733754242, -0.0110639337564749, True, 256, Nothing, 0)


                swFeatData = Featmgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True
                swFeatData.GeometryPattern = True
                swFeatData.ReverseDirection = True
                swFeatData.Spacing = 2 * pi
                swFeatData.TotalInstances = 9
                swFeatData.VarySketch = False
                Featmgr.CreateFeature(swFeatData)   '实体圆周阵列

                part.Extension.SelectByID2("上视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(264, proA_ver_diameter6 / 2, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面3", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True) '插入基准面


                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True)
                'swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                part.SketchManager.CreateLine(-hor_distance / 2, 0, 0, hor_distance / 2, 0, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(-hor_distance / 2, 0, 0, -hor_distance / 2, -proC_hor_distance1, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(hor_distance / 2, 0, 0, hor_distance / 2, -proC_hor_distance1, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateArc(0, -proC_hor_distance1, 0, -hor_distance / 2, -proC_hor_distance1, 0, hor_distance / 2, -proC_hor_distance1, 0, 1)
                part.SketchAddConstraints("sgFIXED")
                part.Extension.SelectByID2("草图5", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, proA_ver_diameter6 - ver_distance, proA_ver_diameter6 - ver_distance, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True) '插入基准面
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2, 0, -proA_hor_distance6, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0)
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2, 0, -proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0)
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0, -proA_hor_distance6, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0)

                part.Extension.SelectByID2("凸台-拉伸3", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体边线
                swbodys = part.SelectionManager.GetSelectedObject6(1, -1)
                edge = swbodys.Getfaces()
                vFaceCount = swbodys.GetFaceCount()
                Debug.Print(vFaceCount)
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0) '标记
                part.Extension.SelectByID2("草图6", "SKETCH", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, True, 4, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False  '成型到面的切除
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(0), Nothing)
                selecmag.SetSelectedObjectMark(1, 1, 0) '标记
                part.Extension.SelectByID2("草图6", "SKETCH", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 4, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False     '切除多余键



                part.Extension.SelectByID2("右视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True) '插入基准面
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2, 0, -proC_hor_distance2, -proA_ver_diameter6 / 2, 0)
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2, 0, -proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0)
                part.SketchManager.CreateLine(-proC_hor_distance1 - proC_Rad_distance, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0, -proC_hor_distance2, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0)
                part.SketchManager.CreateLine(-proC_hor_distance2, -proA_ver_diameter6 / 2 + (proA_ver_diameter6 - ver_distance), 0, -proC_hor_distance2, -proA_ver_diameter6 / 2, 0)
                part.Extension.SelectByID2("草图7", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("基准轴1", "AXIS", 0, 0, 0, True, 16, Nothing, 0)
                part.FeatureManager.FeatureRevolve2(True, True, False, True, False, False, 6, 0, 0.20337770352615409, 0, False, False, 0.01, 0.01, 0, 0, 0, True, True, True)
                part.SelectionManager.EnableContourSelection = False '旋转切除




                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchSnapsPoints, False)
                swapp.SetUserPreferenceToggle(swUserPreferenceToggle_e.swSketchSnapsNearest, True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance5 - proD_hor_distance1, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面4", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True) '插入基准面
                arc1 = part.SketchManager.CreateCircleByRadius(0, 0, 0, proA_ver_diameter5 / 2)
                line1 = part.SketchManager.CreateLine(0, proE_ver_distance2 / 2, 0, proE_hor_distance3 / 2, proE_ver_distance2 / 2, 0)
                part.SketchManager.SketchTrim(0, 0, proE_ver_distance2 / 2, 0)
                part.SketchManager.CreateLine(proE_hor_distance3 / 2, proE_ver_distance2 / 2, 0, proE_hor_distance3 / 2, -proE_ver_distance2 / 2, 0)
                part.SketchManager.CreateLine(proE_hor_distance3 / 2, -proE_ver_distance2 / 2, 0, 0, -proE_ver_distance2 / 2, 0)
                part.SketchManager.SketchTrim(0, 0, -proE_ver_distance2 / 2, 0)


                part.SketchManager.CreateLine(0, proE_ver_distance1 / 2, 0, proE_hor_distance2 / 2, proE_ver_distance1 / 2, 0)
                part.SketchManager.SketchTrim(0, 0, proE_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(proE_hor_distance2 / 2, proE_ver_distance1 / 2, 0, proE_hor_distance2 / 2, -proE_ver_distance1 / 2, 0)
                part.SketchManager.CreateLine(proE_hor_distance2 / 2, -proE_ver_distance1 / 2, 0, 0, -proE_ver_distance1 / 2, 0)
                part.SketchManager.SketchTrim(0, 0, -proE_ver_distance1 / 2, 0)
                arc1.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, -proA_ver_diameter5 / 2, 0, 0)
                arc1.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, proA_ver_diameter5 / 2, 0, 0)

                part.SketchManager.CreateCenterLine(0, proA_ver_diameter6 / 2 + 0.001, 0, 0, -proA_ver_diameter6 / 2 - 0.001, 0)
                line1.SelectChain(True, Nothing)
                part.SketchMirror()


                part.Extension.SelectByID2("切除-旋转2", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体边线
                swbodys = part.SelectionManager.GetSelectedObject6(1, -1)
                edge = swbodys.Getfaces()
                vFaceCount = swbodys.GetFaceCount()
                Debug.Print(vFaceCount)
                part.ClearSelection2(True)

                'selecmag.AddSelectionListObject(edge(12), Nothing)
                'selecmag.SetSelectedObjectMark(1, 1, 0) '标记
                part.Extension.SelectByID2("草图8", "SKETCH", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.FeatureExtrusion2(True, False, True, 2, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False    '成型到面的拉伸





                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.FeatureManager.InsertRefPlane(8, proA_hor_distance5, 0, 0, 0, 0)
                part.Extension.SelectByID2("基准面4", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True) '插入基准面
                line1 = part.SketchManager.CreateLine(proE_hor_distance2 / 2, proE_ver_distance1 / 2, 0, proE_hor_distance1 / 2, proE_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(proE_hor_distance1 / 2, proE_ver_distance1 / 2, 0, proE_hor_distance1 / 2, -proE_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(proE_hor_distance1 / 2, -proE_ver_distance1 / 2, 0, proE_hor_distance2 / 2, -proE_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.SketchManager.CreateLine(proE_hor_distance2 / 2, proE_ver_distance1 / 2, 0, proE_hor_distance2 / 2, -proE_ver_distance1 / 2, 0)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterLine(0, proA_ver_diameter6 / 2 + 0.001, 0, 0, -proA_ver_diameter6 / 2 - 0.001, 0)
                line1.SelectChain(True, Nothing)
                part.SketchMirror()



                selecmag.AddSelectionListObject(edge(12), Nothing)
                selecmag.SetSelectedObjectMark(1, 2, 0) '标记
                part.Extension.SelectByID2("草图9", "SKETCH", 0, 0, 0, True, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(True, False, False, 2, 0, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False
                'part.FeatureManager.FeatureCut4(False, False, False, 1, 4, 0.1, 0.1, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                'part.SelectionManager.EnableContourSelection = False

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)
            End Sub
            Public Sub 转子冲片()
                Dim dz1 As String
                dz1 = "E:\works\generator_parts_library\Y2_80"
                Dim dz2 As String
                dz2 = "\转子冲片.SLDPRT"
                Dim dz3 As String
                dz3 = "\转子冲片.SLDDRW"
                Dim swapp As SldWorks.SldWorks
                Dim part As SldWorks.ModelDoc2
                Dim sketcher As SldWorks.SketchManager
                Dim Featmgr As SldWorks.FeatureManager
                Dim dimension As SldWorks.Dimension
                Dim swbody As SldWorks.Body2
                Dim swface() As Object
                Dim swedge() As Object
                Dim selecmag As SldWorks.SelectionMgr
                Dim Draw As SldWorks.DrawingDoc
                Dim line As SldWorks.SketchSegment
                Dim point As SldWorks.SketchSegment

                swapp = CreateObject("Sldworks.application")
                swapp.Visible = True
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_part.prtdot", 0, 0, 0)
                part = swapp.ActiveDoc
                sketcher = part.SketchManager
                Featmgr = part.FeatureManager
                selecmag = part.SelectionManager
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, False)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, False)


                Dim Code As String
                Dim name As String
                Dim company As String
                Dim material As String
                Dim scale_m As Double
                Dim scale_d As Double
                Dim thickness As Double
                Dim diameter_D_TolMax As Double
                Dim diameter_D_TolMin As Double
                Dim TolType As Double
                Dim diameter_d1_TolMax As Double
                Dim diameter_d1_TolMin As Double
                Dim diameter_d2_TolMax As Double
                Dim diameter_d2_TolMin As Double
                Dim diameter_D As Double
                Dim diameter_d1 As Double
                Dim diameter_d2 As Double
                Dim weight As Double
                Dim diameter_d1_HoleFit As String
                Dim diameter_d2_ShaftFit As String
                Dim par_A_hor_distance1 As Double
                Dim par_A_hor_distance2 As Double
                Dim par_A_ver_distance1 As Double
                Dim par_A_ver_distance2 As Double
                Dim par_A_ver_distance3 As Double
                Dim par_A_angle As String
                Dim par_A_FilRad As Double
                Dim par_B_hor_distance1 As Double
                Dim par_B_hor_distance1_HoleFit As Double
                Dim par_B_hor_distance1_TolMax As Double
                Dim par_B_ver_distance2 As Double
                Dim par_B_hor_distance1_TolMin As Double
                Dim par_B_ver_distance1 As Double
                Dim par_B_ver_DatumTag As Double
                Dim par_C_hor_distance1 As Double
                Dim par_C_hor_distance1_HoleFit As String
                Dim par_C_hor_distance1_TolMax As Double
                Dim par_C_hor_distance1_TolMin As Double
                Dim par_C_ver_distance1 As Double
                Dim par_C_ver_distance2 As Double
                Dim par_C_Gtol_Tol1 As Double
                Dim marker As String
                Dim Num_Slots As Double
                Const pi As Double = 3.1415926535897931

                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim dr As MySqlDataReader
                mysqlcon = New MySqlConnection("server=localhost" & ";userid=root" & ";password=123456" & ";database=异步电机;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from rotor_lamination", mysqlcon)
                dr = mysqlcom.ExecuteReader()

                Do Until dr.Read() = False
                    If dr.GetString("id") = 1 Then
                        Code = dr.GetString("Code")
                        name = dr.GetString("name")
                        company = dr.GetString("company")
                        material = dr.GetString("material")
                        scale_m = dr.GetString("scale_m")
                        scale_d = dr.GetString("scale_d")
                        weight = dr.GetString("weight")
                        marker = dr.GetString("marker")
                        diameter_D = dr.GetString("diameter_D") / 1000
                        diameter_d1 = dr.GetString("diameter_d1") / 1000
                        diameter_d2 = dr.GetString("diameter_d2") / 1000
                        thickness = dr.GetString("thickness") / 1000
                        TolType = dr.GetString("TolType")
                        diameter_d2_TolMax = dr.GetString("diameter_d2_TolMax") / 1000
                        diameter_d2_TolMin = dr.GetString("diameter_d2_TolMin") / 1000
                        diameter_d1_TolMax = dr.GetString("diameter_d1_TolMax") / 1000
                        diameter_d1_TolMin = dr.GetString("diameter_d1_TolMin"） / 1000
                        diameter_d1_HoleFit = dr.GetString("diameter_d1_HoleFit")
                        diameter_d2_ShaftFit = dr.GetString("diameter_d2_ShaftFit")
                        par_A_hor_distance1 = dr.GetString("par_A_hor_distance1") / 1000
                        par_A_hor_distance2 = dr.GetString("par_A_hor_distance2") / 1000
                        par_A_ver_distance1 = dr.GetString("par_A_ver_distance1") / 1000
                        par_A_ver_distance2 = dr.GetString("par_A_ver_distance2") / 1000
                        par_A_ver_distance3 = dr.GetString("par_A_ver_distance3") / 1000
                        par_A_angle = dr.GetString("par_A_angle")
                        par_A_FilRad = dr.GetString("par_A_FilRad") / 1000
                        par_B_hor_distance1 = dr.GetString("par_B_hor_distance1") / 1000
                        par_B_hor_distance1_HoleFit = dr.GetString("par_B_hor_distance1_HoleFit")
                        par_B_hor_distance1_TolMax = dr.GetString("par_B_hor_distance1_TolMax") / 1000
                        par_B_hor_distance1_TolMin = dr.GetString("par_B_hor_distance1_TolMin") / 1000
                        par_B_ver_distance1 = dr.GetString("par_B_ver_distance1") / 1000
                        par_B_ver_distance2 = dr.GetString("par_B_ver_distance2") / 1000
                        par_B_ver_DatumTag = dr.GetString("par_B_ver_DatumTag")
                        par_C_hor_distance1 = dr.GetString("par_C_hor_distance1") / 1000
                        par_C_hor_distance1_HoleFit = dr.GetString("par_C_hor_distance1_HoleFit")
                        par_C_hor_distance1_TolMax = dr.GetString("par_C_hor_distance1_TolMax") / 1000
                        par_C_hor_distance1_TolMin = dr.GetString("par_C_hor_distance1_TolMin") / 1000
                        par_C_ver_distance1 = dr.GetString("par_C_ver_distance1") / 1000
                        par_C_ver_distance2 = dr.GetString("par_C_ver_distance2") / 1000
                        par_C_Gtol_Tol1 = dr.GetString("par_C_Gtol_Tol1")
                        Num_Slots = dr.GetString("Num_Slots")
                    End If
                Loop
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                sketcher.InsertSketch(True)
                part.SketchManager.CreateCircle(0, 0, 0, diameter_D / 2, 0, 0)
                part.ClearSelection2(True)
                part.SketchManager.CreateCircle(0, 0, 0, diameter_d1 / 2, 0, 0)
                part.ClearSelection2(True)
                part.FeatureManager.FeatureExtrusion2(True, False, False, 0, 0, thickness, thickness, False, False, False, False, 0, 0, False, False, False, False, True, True, True, 0, 0, False)
                part.SelectionManager.EnableContourSelection = False
                part.SketchManager.CreateCircle(0#, 0#, 0#, diameter_d2 / 2, 0, 0#)
                part.SketchManager.CreateConstructionGeometry()
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0#, diameter_D / 2 + 0.01, 0#)


                part.SketchManager.CreateCircle(0#, 0#, 0#, diameter_D / 2, 0, 0#)
                part.SketchManager.CreateConstructionGeometry()
                part.SketchManager.CreateLine(-0.008456, 0.038031, 0#, -0.008456, 0.025875, 0#)
                part.Extension.SelectByID2("Arc2", "SKETCHSEGMENT", -0.0148266203053423, 0.0305975084334501, 0.0000823235190448024, False, 0, Nothing, 0)
                part.SketchAddConstraints（“sgFIXED"）
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", -0.008456, 0.038031, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints（"sgCOINCIDENT"）
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.000167779065946651, 0.0282964450613374, 0.000499999999988177, False, 0, Nothing, 0)
                part.SketchAddConstraints（"sgFIXED"）
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", -0.00722689062791315, 0.0288320202226252, 0.000249999999999994, True, 0, Nothing, 0)
                part.AddDimension2(-par_A_hor_distance2 / 4, diameter_D / 2 - 0.005, 0)
                part.Parameter("D1@草图2").SystemValue = par_A_hor_distance2 / 2

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", -0.00722689062791315, 0.0288320202226252, 0.000249999999999994, False, 0, Nothing, 0)
                part.AddDimension2(-par_A_hor_distance2 / 2 - 0.005, diameter_D / 2 - (par_A_ver_distance1 + par_A_ver_distance2) / 2 - 0.05, 0)
                part.Parameter("D2@草图2").SystemValue = par_A_ver_distance1 + par_A_ver_distance2

                part.SketchManager.CreateCenterLine(-0.0005, 0.032696, 0#, -0.009413, 0.032696, 0#)
                part.SketchManager.CreateLine(-0.001085, 0.031557, 0#, -0.002203, 0.030439, 0#)
                part.ClearSelection2（True）
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point11", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0， 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.00812385095181033, 0.0294673862134537, 0)
                part.Parameter("D3@草图2").SystemValue = （2 * pi / 3）
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", -0.000457086341410146, 0.0331183349776326, 0.000499999999988177, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4", "SKETCHSEGMENT", -0.0016876874540323, 0.0316569961563938, 0.000499999999988177, True, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.000158214214900931, 0.0344643049445631, 0.000249999999999936, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point14", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.00111726957172174, 0.0264110352991564, 0)
                part.ClearSelection2（True）
                part.Parameter("D4@草图2").SystemValue = par_A_hor_distance1

                'part.Parameter("D4@草图2").SystemValue = par_A_hor_distance1
                'part.SketchManager.CreatePoint（0, diameter_D / 2 - par_A_ver_distance3, 0#）

                part.SketchManager.CreateCircle(0#, 0.02175, 0#, 0.001403, 0.021537, 0#)
                part.AddDimension2(0.00287895700439333, 0.0214228101498683, 0)
                part.Parameter("D5@草图2").SystemValue = （2 * par_A_FilRad）
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0.00130688165690379, 0.022383522862223, 0.000249999999999977, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0.00501872622736522, 0.0197633972830738, 0.000499999999988177, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point14", "SKETCHPOINT", 0, 0.0217028827775213, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", -0.00000318113267083753, 0.0260080299133795, 0.000499999999988177, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2(True)

                part.SketchManager.CreateLine(-0.004933, 0.027291, 0#, -0.003588, 0.022166, 0#)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Point12", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point18", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", -0.00255724304000537, 0.0280900431369986, 0.00049999999987449, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", -0.000666380329029437, 0.022878627811096, 0.00049999999987449, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Point19", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", -0.000887493802856909, 0.0226450872200417, 0.00049999999987449, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line7", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.000158214214900931, 0.0344643049445631, 0.000249999999999936, True, 0, Nothing, 0)
                part.SketchMirror()
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", 0.000750146687532909, 0.0228820659656649, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)
                part.Extension.SelectByID2("Arc3", "SKETCHSEGMENT", -0.000905150005528263, 0.0227680372032341, 0, False, 2, Nothing, 0)
                part.SketchManager.SketchTrim(4, 0, 0, 0)

                part.SketchManager.CreateCornerRectangle(-0.00231022832171845, 0.0344011217849651, 0, -0.00152462906025264, 0.0350155674693102, 0)
                part.SetPickMode()
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Point24", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Point22", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line10", "SKETCHSEGMENT", -0.000451169218561214, 0.0336831803133905, 0.0011552633043544, False, 2, Nothing, 0)
                part.Extension.SelectByID2("Line12", "SKETCHSEGMENT", 0.000549482907987721, 0.0336713529305266, 0.00112069411091674, True, 2, Nothing, 0)
                part.Extension.SelectByID2("Line9", "SKETCHSEGMENT", 0.000159165014451901, 0.0334956735993295, 0.000499999999988177, True, 2, Nothing, 0)
                part.SketchManager.SketchTrim(6, 0, 0, 0)

                part.SketchManager.CreateCenterLine(0, diameter_D / 2, 0, 0.01, diameter_D / 2, 0)
                part.SketchManager.CreateCenterLine(par_A_hor_distance2 / 2, diameter_D / 2 - par_A_ver_distance1, 0, par_A_hor_distance2 / 2 + 0.01, diameter_D / 2 - par_A_ver_distance1, 0)
                part.SketchManager.CreateCenterLine(par_A_hor_distance2 / 2, diameter_D / 2 - par_A_ver_distance1 - par_A_ver_distance2, 0, par_A_hor_distance2 / 2 + 0.008, diameter_D / 2 - par_A_ver_distance1 - par_A_ver_distance2, 0)
                part.SketchManager.CreateCenterLine(-par_A_hor_distance2 / 2, diameter_D / 2 - par_A_ver_distance1 - par_A_ver_distance2, 0, -（par_A_hor_distance2 / 2 + 0.008）, diameter_D / 2 - par_A_ver_distance1 - par_A_ver_distance2, 0)

                part.Extension.SelectByID2("Line11@草图2", "EXTSKETCHSEGMENT", 0.000229744326446735, 0.0341107141332336, 0, False, 0, Nothing, 0)
                part.FeatureManager.FeatureCut4(False, False, False, 0, 0, thickness, thickness, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False
                part.ClearSelection2(True)

                part.Extension.SelectByID2("切除-拉伸1", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体边线
                Dim edge() As Object
                Dim vEdgeCount As Integer

                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 100
                '    For i = vEdgeCount To vEdgeCount + 5
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 5
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 100
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0) '选择实体特征
                part.ActivateSelectedFeature()
                selecmag.AddSelectionListObject(edge(7), Nothing) '选择要阵列的方向
                'part.ClearSelection2（True）
                'part.Extension.SelectByID2("切除-拉伸1", "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                'selecmag.AddSelectionListObject(edge(7), Nothing)

                Dim swFeat As Object
                Dim swFeatMgr As Object
                swFeatMgr = part.FeatureManager
                Dim swFeatData As Object
                swFeatData = swFeatMgr.CreateDefinition(swFeatureNameID_e.swFmCirPattern)
                swFeatData.Direction2 = False
                swFeatData.EqualSpacing = True  '是否等间距
                swFeatData.GeometryPattern = False
                swFeatData.ReverseDirection = True
                swFeatData.Spacing = 2 * pi '旋转总角度
                swFeatData.TotalInstances = Num_Slots
                swFeatData.VarySketch = False
                swFeat = swFeatMgr.CreateFeature(swFeatData)
                part.ClearSelection2(True)


                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.ClearSelection2(True)


                part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0.035974, 0#, 0#)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)
                part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0#, 0.03944, 0#)
                part.SketchAddConstraints("sgFIXED")
                part.ClearSelection2(True)


                part.SketchManager.CreateLine(-0.002844, 0.013573, 0#, -0.002844, 0.016136, 0#)
                part.AddDimension2(-0.00417632851998516, 0.0137784577342425, 0)
                part.ClearSelection2(True)
                part.SketchManager.CreateLine(-0.002024, 0.017264, 0#, 0.001615, 0.018853, 0#)
                'part.AddDimension2(-0.00110107120138619, 0.0185963608667142, 0)
                part.ClearSelection2(True)
                part.SketchManager.CreateLine(0.002384, 0.013573, 0#, 0.002384, 0.016495, 0#)
                part.AddDimension2(0.00366557764244221, 0.0176737836711345, 0)
                part.SketchAddConstraints("sgVERTICAL2D")
                part.ClearSelection2(True)
                part.Parameter("D1@草图3").SystemValue = par_B_ver_distance1
                part.Parameter("D2@草图3").SystemValue = par_B_ver_distance2

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", -0.00259391663569134, 0.0144132661488652, -0.0000831347871219799, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", -0.000194971344798608, 0.0136169567046548, -0.00035093390806737, True, 0, Nothing, 0)
                part.AddDimension2(-0.00120740825854426, 0.01176631172941, 0)
                part.Parameter("D3@草图3").SystemValue = par_B_hor_distance1 / 2

                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(9), Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point9", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(9), Nothing)
                part.SketchAddConstraints（"sgCOINCIDENT")
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point7", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints（"sgMERGEPOINTS"）
                part.ClearSelection2(True)
                part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.000961480588044104, 0.0118620733277602, 0)
                part.Parameter("D4@草图3").SystemValue = par_B_hor_distance1 / 2
                part.ClearSelection2(True)

                part.FeatureManager.FeatureCut4(False, False, False, 1, 1, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)
                part.SelectionManager.EnableContourSelection = False

                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.ClearSelection2(True）
                part.SketchManager.CreateLine(-0.003315, -0.014289, 0#, -0.003315, -0.017663, 0#)
                part.AddDimension2(-0.00679408211303949, -0.0169252404576096, 0)
                part.Parameter("D1@草图4").SystemValue = par_C_ver_distance1
                part.ClearSelection2(True）
                part.SketchManager.CreateLine(-0.001417, -0.018612, 0#, 0.003011, -0.01682, 0#)
                part.ClearSelection2(True）
                part.SketchManager.CreateLine(0.005331, -0.015765, 0#, 0.005331, -0.012708, 0#)
                part.AddDimension2(0.00965336390689338, -0.0136568377228794, 0)
                part.Parameter("D2@草图4").SystemValue = par_C_ver_distance2
                line = part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0.03443, 0#, 0#)
                'MsgBox(line.GetName)
                part.Extension.SelectByID2(line.GetName, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                'line.'MsgBox(0)
                part.SketchAddConstraints("sgFIXED")

                line = part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0#, -0.038539, 0#)
                'MsgBox(line.GetName)
                part.Extension.SelectByID2(line.GetName, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                'MsgBox(1)
                part.SketchAddConstraints("sgFIXED")

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(-0.00226049122292979, -0.0100721379493042, 0)
                part.Parameter("D3@草图4").SystemValue = par_C_hor_distance1 / 2
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.00364372016884099, -0.0115481907972469, 0)
                part.Parameter("D4@草图4").SystemValue = par_C_hor_distance1 / 2

                Dim i As Integer
                part.Extension.SelectByID2("切除-拉伸2", "SOLIDBODY", 0, 0, 0, False, 1, Nothing, 0) '遍历实体边线
                'Dim edge() As Object
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetEdges()
                vEdgeCount = swbody.GetEdgeCount()
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 120
                'Do Until vEdgeCount > 200
                '    For i = vEdgeCount To vEdgeCount + 20
                '        selecmag.AddSelectionListObject(edge(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 20
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    part.EditRebuild()
                'Loop
                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(edge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    part.EditRebuild()
                'Loop

                part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(147), Nothing)

                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                selecmag.AddSelectionListObject(edge(147), Nothing)
                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Point3", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point2", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")

                part.Extension.SelectByID2("Point4", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point5", "SKETCHPOINT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgMERGEPOINTS")
                part.ClearSelection2(True)

                part.FeatureManager.FeatureCut4(False, False, False, 1, 1, 0.01, 0.01, False, False, False, False, 0.0174532925199433, 0.0174532925199433, False, False, False, False, False, True, True, True, True, False, 0, 0, False, False)

                part.SelectionManager.EnableContourSelection = False
                part.ClearSelection2(True)
                part.Extension.SelectByID2("前视基准面", "PLANE", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.InsertSketch(True)
                part.SketchManager.CreateCircle(0, 0, 0, 0.0203, 0, 0)

                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInferFromModel, True)
                swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchAutomaticRelations, True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", dr("name"))
                cusproper.Set2("代号", dr("Code"))
                cusproper.Set2("材料", dr("material"))
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3(dz1 + dz2, 0, 2)

                'Dim Draw As SldWorks.DrawingDoc
                Dim View As SldWorks.View '视图对象
                Dim Notes As Object
                Dim Count As Long
                Dim Annpos() As Double
                Dim Annotation As SldWorks.Annotation
                Dim myView As SldWorks.View
                Dim Displaydimention As SldWorks.DisplayDimension
                Dim myDatumTag As Object
                Dim myAnnotation As Object
                Draw = swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_a4P.drwdot", 1, 0, 0)
                'swapp.SetUserPreferenceToggle(SwConst.swUserPreferenceToggle_e.swSketchInference, True)
                Dim DrawTitle As String
                DrawTitle = Draw.GetTitle
                Debug.Print(DrawTitle)
                Dim myViewname As String
                part = swapp.ActiveDoc
                selecmag = part.SelectionManager

                part.CreateDrawViewFromModelView3(dz1 + dz2, "*前视", 0.086, 0.207, 0)
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.ClearSelection2(True)
                'part.SketchManager.CreateCircle(0#, 0#, 0#, 0.0203, 0, 0#)

                Dim myNote As Object
                'Dim myAnnotation As Object
                Dim myMark As Object
                Dim myAnnotation2 As Object
                'Dim myTextFormat As Object
                myNote = part.InsertNote(company)
                myAnnotation = myNote.GetAnnotation()
                If Not myAnnotation Is Nothing Then
                    myAnnotation.SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                    myAnnotation.SetPosition(0.162181850040732, 0.054, 0)
                    'myAnnotation.SetTextFormat(0, True, myTextFormat)
                End If
                'part.ClearSelection2(True)
                'part.WindowRedraw()
                'myMark = part.InsertNote(marker)
                'myAnnotation2 = myMark.GetAnnotation()
                'If Not myAnnotation2 Is Nothing Then
                '    myAnnotation.SetLeader3(swLeaderStyle_e.swNO_LEADER, 0, True, False, False, False)
                '    myAnnotation.SetPosition(0.1678, 0.0298, 0)
                '    'myAnnotation.SetTextFormat(0, True, myTextFormat)
                'End If
                part.ClearSelection2(True)
                part.WindowRedraw()
                View = Draw.GetFirstView
                Do Until View Is Nothing
                    Notes = View.GetNotes()
                    Count = View.GetNoteCount()
                    If Count > 0 Then
                        For Each N1 In Notes

                            Annotation = N1.GetAnnotation()
                            Annpos = Annotation.GetPosition()
                            If Annpos(0) > 52.5 / 1000 * 2 And Annpos(0) < 76.8 / 1000 * 2 And Annpos(1) > 21.5 / 1000 * 2 And Annpos(1) < 30.5 / 1000 * 2 Then
                                N1.SetText(material)
                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 21.5 / 1000 * 2 Then
                                N1.SetText(name)


                            End If
                            If Annpos(0) > 76.8 / 1000 * 2 And Annpos(0) < 102.5 / 1000 * 2 And Annpos(1) > 6.0 / 1000 * 2 And Annpos(1) < 12 / 1000 * 2 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 25 / 1000 And Annpos(0) < 85 / 1000 And Annpos(1) > 280 / 1000 And Annpos(1) < 292 / 1000 Then
                                N1.SetText(Code)


                            End If
                            If Annpos(0) > 65 / 1000 * 2 And Annpos(0) < 71 / 1000 * 2 And Annpos(1) > 12 / 1000 * 2 And Annpos(1) < 17 / 1000 * 2 Then
                                N1.SetText(weight)


                            End If

                        Next
                    End If
                    View = View.GetNextView() '获得下一个视图引用
                Loop
                Draw.EditRebuild3()


                part = swapp.ActiveDoc
                myNote = part.InsertNote("技术要求"）
                myNote.GetAnnotation().SetPosition(0.06, 0.12, 0)
                part.FontPoints(22)


                myNote = part.InsertNote(
                    "1.冲片毛刺不得大于0.10." + Chr(13) + Chr(10) +
                    "2.槽形尺寸公差按GB1801-79的H10;槽口宽度尺寸公差按" + Chr(13) + Chr(10) +
                    "GB1801-79的H12;轭高相差不大于0.2.；" + Chr(13) + Chr(10) +
                    "3.括号内尺寸为参考尺寸."）
                myNote.GetAnnotation().SetPosition(0.04, 0.11, 0)
                'part.Extension.SelectByID2("细节项目256@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)


                myNote = part.InsertNote(
                    "冲片净面积为21.15cm^2")

                myNote.GetAnnotation().SetPosition(0.138, 0.121, 0)
                'part.Extension.SelectByID2("细节项目256@图纸1", "NOTE", 0, 0, 0, False, 0, Nothing, 0)
                part.FontPoints(16)

                Dim Sheet1 As SldWorks.Sheet '图纸对象
                Dim SheetPr() As Double
                Draw = swapp.ActiveDoc
                Sheet1 = Draw.GetCurrentSheet()
                SheetPr = Sheet1.GetProperties2()
                SheetPr(2) = scale_m
                SheetPr(3) = scale_d
                SheetPr(4) = True
                Sheet1.SetProperties2(SheetPr(0), SheetPr(1), SheetPr(2), SheetPr(3), SheetPr(4), SheetPr(5), SheetPr(6), SheetPr(7))
                Draw.EditRebuild()
                Dim arc1 As SldWorks.SketchSegment
                Dim arc2 As SldWorks.SketchSegment
                Dim line1 As SldWorks.SketchSegment
                Dim line2 As SldWorks.SketchSegment


                Dim vComponent As SldWorks.Component2
                Dim vComponents() As Object
                Dim vCompCount As Integer
                Dim vEdges As Object
                'Dim vEdgeCount As Integer


                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)

                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                'Debug.Print(vComponents(0).Name2)

                vEdges = View.GetVisibleEntities2(vComponent, 1) '获得特定可视实体集合
                'vEdgeCount = View.GetVisibleEntityCount2(vComponent, 1) '获得特定可视实体集合数量
                'Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                'Do Until vEdgeCount > 200
                '    For i = vEdgeCount To vEdgeCount + 20
                '        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                '    Next
                '    vEdgeCount = vEdgeCount + 20
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                'Loop
                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(vEdges(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)

                selecmag.AddSelectionListObject(vEdges(1), Nothing)
                part.AddDimension2(0.086 - 0.004, 0.207 - 0.004, 0).Diametric = True
                part.EditDimensionProperties2(TolType, diameter_d1_TolMax, 0, diameter_d1_HoleFit, "", False, 3, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                selecmag.GetSelectedObject6(1, -1).ShowTolParenthesis = True
                part.ClearSelection2（True）


                selecmag.AddSelectionListObject(vEdges(15), Nothing)
                part.AddDimension2(0.086 - diameter_D / 2, 0.207 + diameter_D / 2, 0).Diametric = True
                selecmag.GetSelectedObject6(1, -1).ShowTolParenthesis = True
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Arc1@草图5@转子冲片-1@工程图视图1", "EXTSKETCHSEGMENT", 0.011444924502804, 0.016766147533799, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.086 + diameter_d1 / 2 * Math.Sin（5 * pi / 36), 0.207 - diameter_d1 / 2 * Math.Cos（5 * pi / 36), 0).Diametric = True
                part.EditDimensionProperties2(TolType, diameter_d2_TolMax, diameter_d2_TolMin, diameter_d2_ShaftFit, "", False, 2, 2, True, 12, 12, "<MOD-DIAM>", "", True, "", "", False)
                selecmag.GetSelectedObject6(1, -1).ShowTolParenthesis = True
                part.ClearSelection2（True）



                'part.ActivateView("工程图视图1")
                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.0521448395158536, 0.253120032814883, 0, False, 0, Nothing, 0)
                'part.ClearSelection2(True)
                'part.SketchManager.CreateCircle(0#, 0.02668, 0#, -0.000262, 0.034611, 0#)
                'part.CreateDetailViewAt3(0.106421890677379, 0.215494555974338, 0, 0, 2, 1, "III", 1, False)
                'part.ClearSelection2(True)





                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图1")
                arc1 = part.SketchManager.CreateCircleByRadius(0, diameter_D / 2, 0, (par_A_hor_distance1 + 0.0073) / 2)
                part.SketchAddConstraints("sgFIXED")
                'part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                'part.SketchConstraintsDel(0, "sgCOINCIDENT")
                'part.ClearSelection2（True）
                part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0#, 0.046855, 0#)
                part.Extension.SelectByID2("Point10", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")

                arc2 = part.SketchManager.CreateCircleByRadius(0, diameter_d2 / 2 + par_A_FilRad, 0, (par_A_hor_distance1 + 0.0014) / 2)
                part.SketchAddConstraints("sgFIXED")
                line1 = part.SketchManager.CreateLine(-0.006998, 0.028783, 0#, -0.005498, 0.022965, 0#)
                line2 = part.SketchManager.CreateLine(0.007329, 0.029124, 0#, 0.005189, 0.022209, 0#)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0.0925454085948009, 0.242030451718243, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0.0905822692823228, 0.23330538810723, 0.000249999999994088, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0.0899824211590656, 0.227852223350346, 0.000249999999994088, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2（True）


                'part.SketchManager.CreateCenterLine(0#, 0#, 0#, 0#, 0.046855, 0#)



                ''part.Extension.SelectByID2("Point16", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                ''part.SketchConstraintsDel(0, "sgCOINCIDENT")
                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2（True）


                part.Extension.SelectByID2("Point15", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")



                part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Point16", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgTANGENT")
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Point17", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")

                part.Extension.SelectByID2("Point18", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc5", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                part.SketchAddConstraints("sgCOINCIDENT")
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()

                part.ActivateSheet("图纸1")
                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.101403763814783, 0.249100055094193, 0, False, 0, Nothing, 0)
                'part.InsertModelAnnotations3(0, 32768, False, False, False, True)
                arc1.Select4(False, Nothing)
                part.SketchManager.SketchTrim(0, 0, diameter_D / 2 - (par_A_hor_distance1 + 0.0073) / 2, 0)
                'part.SketchManager.SketchTrim(1, 0, diameter_D / 2 - par_A_ver_distance3 + (par_A_hor_distance1 + 0.0014) / 2, 0)
                arc2.Select4(False, Nothing)
                'part.SketchManager.SketchTrim(1, 0, diameter_D / 2 - (par_A_hor_distance1 + 0.0073) / 2, 0)
                part.SketchManager.SketchTrim(0, 0, diameter_D / 2 - par_A_ver_distance3 + (par_A_hor_distance1 + 0.0014) / 2, 0)

                arc1.Select4(False, Nothing)
                arc2.Select4(True, Nothing)
                line1.Select4(True, Nothing)
                line1.Select4(True, Nothing)
                part.CreateDetailViewAt3(0.17, 0.204, 0, 0, 2, 1, "I", 2, False)
                part.ClearSelection2（True）



                part.ActivateView("工程图视图2")
                part.Extension.SelectByID2("草图2@转子冲片-2@工程图视图2", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.UnblankSketch()

                part.Extension.SelectByID2("Line13@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.00610019603367369, 0.0335, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line14@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.0054180480997135, 0.0332, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.181390326096928, 0.224085178548786, 0).SetText(1, "精车后转子外径Φ66.4  ")
                'part.Extension.SelectByID2("RD1@工程图视图2", "DIMENSION", 0.179387432806913, 0.232489502018174, 0, False, 0, Nothing, 0)
                'part.FontPoints(16)
                part.ClearSelection2（True）


                part.Extension.SelectByID2("Line14@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.00212980366244729, 0.0332, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line15@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.00150988872755284, 0.0327, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.174652120282858, 0.223276593851097, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line14@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.00347744482526131, 0.0332, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Arc3@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.00108404231716569, 0.0208140811241462, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.177239591315461, 0.206404126492666, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line3@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", -0.00238633267537854, 0.032696, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line4@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", -0.0027444923473236, 0.0314004101879671, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.159221577400736, 0.213735844475992, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Arc3@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", -0.00110778743889364, 0.0208439585347488, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.161894857421665, 0.192646635421996, 0)
                part.ClearSelection2（True）

                part.Extension.SelectByID2("Line2@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", -0.0005, 0.0330762467275986, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line6@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.0005, 0.032848220009519, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.165707994801403, 0.219064576636812, 0)

                part.Extension.SelectByID2("Point12@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", -0.0005, 0.0330762467275986, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Point14@草图2@转子冲片-2@工程图视图2", "EXTSKETCHSEGMENT", 0.0005, 0.032848220009519, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.169618495351857, 0.210223992497079, 0)
                part.ClearSelection2（True）


                part.Extension.SelectByID2("工程图视图2", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                Dim vEdge As Object
                View = selecmag.GetSelectedObject6(1, -1)
                vComponents = View.GetVisibleComponents() '获得可视组件集合
                Debug.Print(vComponents(0).Name2)
                vComponent = vComponents(0)
                vEdge = View.GetVisibleEntities2(vComponent, 2) '获得特定可视实体集合
                vEdgeCount = View.GetVisibleEntityCount2(vComponent, 2) '获得特定可视实体集合数量
                Debug.Print(vEdgeCount)
                part.ClearSelection2(True)

                'vEdgeCount = 0
                ''Do Until vEdgeCount > 200
                ''    For i = vEdgeCount To vEdgeCount + 20
                ''        selecmag.AddSelectionListObject(vEdges(i), Nothing)
                ''    Next
                ''    vEdgeCount = vEdgeCount + 20
                ''    MessageBox.Show(vEdgeCount)
                ''    part.ClearSelection2(True)
                ''Loop
                'Do Until vEdgeCount > 200
                '    selecmag.AddSelectionListObject(vEdge(vEdgeCount), Nothing)
                '    MessageBox.Show(vEdgeCount)
                '    part.ClearSelection2(True)
                '    vEdgeCount = vEdgeCount + 1
                '    Draw.EditRebuild()
                'Loop

                'part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)

                selecmag.AddSelectionListObject(vEdge(2), Nothing)
                selecmag.AddSelectionListObject(vEdge(5), Nothing)
                part.AddDimension2(0.169618495351857, 0.210223992497079, 0)
                part.AddDimension2(0.16958683050562, 0.210468896392259, 0)
                part.ClearSelection2(True)


                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateCircle(-0.000433, 0.012682, 0#, 0.003667, 0.015871, 0#)
                part.CreateDetailViewAt3(0.071, 0.145, 0, 0, 2, 1, "II", 2, False)

                part.Extension.SelectByID2("草图3@转子冲片-3@工程图视图3", "SKETCH", 0, 0, 0, False, 0, Nothing, 0)
                part.UnblankSketch()

                part.Extension.SelectByID2("Line3@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", -0.0025, 0.0141606295845713, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.056641044510938, 0.143188146589147, 0)
                part.Extension.SelectByID2("Line5@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", 0.0025, 0.0142558453175871, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.0874909420080562, 0.142616852191052, 0)
                part.Extension.SelectByID2("Line5@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", 0.0025, 0.0139701981185397, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", -0.0025, 0.0138749823855239, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.0714946988614023, 0.13, 0)

                part.Extension.SelectByID2("RD3@工程图视图3", "DIMENSION", 0.0720659932594971, 0.137475202608199, 0, False, 0, Nothing, 0)
                part.EditDimensionProperties2(8, 0.00003, 0, "H9", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                selecmag.GetSelectedObject6(1, -1).ShowTolParenthesis = True

                part.Extension.SelectByID2("Line5@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", 0.0025, 0.0151395737090472, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", -0.0025, 0.0145239249186976, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.076, 0.151365409596804, 0).ShowDimensionValue = False
                part.EditDimensionProperties2(0, 0, 0, "", "", True, 9, 1, True, 12, 12, "", "", False, "", "", False)
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Line5@草图3@转子冲片-3@工程图视图3", "EXTSKETCHSEGMENT", 0.0025, 0.0151395737090472, 0, False, 0, Nothing, 0)
                myDatumTag = part.InsertDatumTag2()
                If Not myDatumTag Is Nothing Then
                    myDatumTag.LeaderOrientation = 1
                    myDatumTag.FilledTriangle = True
                    myDatumTag.Shoulder = False
                    myDatumTag.SetLabel("A")
                    myAnnotation = myDatumTag.GetAnnotation()
                    If Not myAnnotation Is Nothing Then
                        myAnnotation.SetPosition(0.0812856017701457, 0.157357245230132, 0.000500000000000028)
                    End If
                End If
                part.ClearSelection2(True)


                part.ActivateView("工程图视图1")
                part.Extension.SelectByID2("工程图视图1", "DRAWINGVIEW", 0.101403763814783, 0.249100055094193, 0, False, 0, Nothing, 0)
                part.SketchManager.CreateCircle(0.00008, -0.012202, 0#, 0.003485, -0.008797, 0#)
                part.CreateDetailViewAt3(0.151031569511638, 0.145, 0, 0, 2, 1, "III", 2, False)
                'part.InsertModelAnnotations3(0, 32768, True, False, False, True)
                'part.ClearSelection2(True)

                'part.ActivateView("工程图视图4")
                'part.Extension.SelectByID2("工程图视图4", "DRAWINGVIEW", 0, 0, 0, False, 0, Nothing, 0)
                'part.InsertModelAnnotations3(0, 32768, True, False, False, True) 

                part.Extension.SelectByID2("Line1@草图4@转子冲片-4@工程图视图4", "EXTSKETCHSEGMENT", -0.0025, -0.0143247029982124, 0, False, 0, Nothing, 0)
                part.Extension.SelectByID2("Line3@草图4@转子冲片-4@工程图视图4", "EXTSKETCHSEGMENT", 0.0025, -0.0136359591179894, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.15, 0.12757731549854, 0)
                part.Extension.SelectByID2("RD1@工程图视图4", "DIMENSION", 0.0720659932594971, 0.137475202608199, 0, False, 0, Nothing, 0)
                part.EditDimensionProperties2(8, 0.00003, 0, "H9", "", True, 9, 2, True, 12, 12, "", "", True, "", "", False)
                selecmag.GetSelectedObject6(1, -1).ShowTolParenthesis = True

                part.Extension.SelectByID2("Line1@草图4@转子冲片-4@工程图视图4", "EXTSKETCHSEGMENT", -0.0025, -0.0143247029982124, 0, False, 0, Nothing, 0)
                part.AddDimension2(0.128499084310682, 0.147040111972608, 0)

                part.Extension.SelectByID2("Line3@草图4@转子冲片-4@工程图视图4", "EXTSKETCHSEGMENT", 0.0025, -0.0136359591179894, 0, True, 0, Nothing, 0)
                part.AddDimension2(0.168121215975082, 0.147267825372978, 0)
                part.ClearSelection2(True)


                'part.Extension.SelectByID2("RD1@工程图视图4", "DIMENSION", 0.149451134889116, 0.132113564076794, 0, False, 0, Nothing, 0)
                Dim myGtol As Object
                Dim myAnno As Object
                myGtol = part.InsertGtol()
                If Not myGtol Is Nothing Then
                    myGtol.SetFrameSymbols2(1, "<IGTOL-SYMMETRY>", False, "", False, "", "", "", "")
                    myGtol.SetFrameValues(1, "0.3", "", "A", "", "")
                    myGtol.SetFrameSymbols2(2, "", False, "", False, "", "", "", "")
                    myGtol.SetFrameValues(2, "", "", "", "", "")
                    myGtol.SetPTZHeight("", False)
                    myGtol.SetCompositeFrame(False)
                    myGtol.SetText(4, "")
                    myGtol.SetBetweenTwoPoints(False, "", "")
                    myAnno = myGtol.GetAnnotation()
                    If Not myAnno Is Nothing Then
                        myAnno.SetPosition(0.111, 0.13485, 0)
                        myAnno.SetLeader3(2, 2, True, False, False, False)
                        myAnno.SetLeaderAttachmentPointAtIndex(0, 0.145, 0.132, 0)
                    End If
                End If
                'part.Extension.SelectByID2("RD1@工程图视图4", "DIMENSION", 0.149451134889116, 0.132113564076794, 0, False, 0, Nothing, 0)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingDiameterDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineStyles_e.swLineCONTINUOUS)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDimensionsExtensionLineStyleThickness, swUserPreferenceOption_e.swDetailingRadiusDimension, swLineWeights_e.swLW_THIN)
                part.Extension.SetUserPreferenceInteger(swUserPreferenceIntegerValue_e.swDetailingDimensionTextAndLeaderStyle, swUserPreferenceOption_e.swDetailingRadiusDimension, swDisplayDimensionLeaderText_e.swBrokenLeaderHorizontalText)
                part.SaveAs3(dz1 + dz3, 0, 2)
            End Sub
            Public Sub 转子装配()
                Dim swapp As SldWorks.SldWorks = CreateObject("Sldworks.application")
                swapp.OpenDoc7("C:\Users\Public\Desktop\SOLIDWORKS 2019.lnk")
                swapp.NewDocument("C:\ProgramData\SolidWorks\SOLIDWORKS 2019\templates\gb_assembly.asmdot", 0, 0, 0)
                swapp.Visible = True
                Dim Assem As AssemblyDoc
                Assem = swapp.ActiveDoc
                Dim AssemblyTitle As String
                'MsgBox(Assem.GetRouteManager)
                AssemblyTitle = Assem.GetTitle
                Dim part As ModelDoc2
                Dim errors As Long
                Dim longwarnings As Long
                Dim facenumber As Integer
                Dim swbody As Body2
                Dim swfeature As Feature
                Dim swface As Face
                Dim edge() As Object
                Dim vEdgeCount As Integer
                Dim edge1() As Object
                Dim vEdgeCount1 As Integer
                Dim edge2() As Object
                Dim edge3() As Object
                Dim edge4() As Object
                Dim edge5() As Object
                Dim edge6() As Object
                Dim edge7() As Object
                Dim edge8() As Object
                Dim edge9() As Object
                Dim edge10() As Object
                Dim vEdgeCount2 As Integer
                Dim vEdgeCount3 As Integer
                Dim vEdgeCount4 As Integer
                Dim vEdgeCount5 As Integer
                Dim vEdgeCount6 As Integer
                Dim vEdgeCount7 As Integer
                Dim vEdgeCount8 As Integer
                Dim vEdgeCount9 As Integer
                Dim vEdgeCount10 As Integer
                Dim selecmag As SldWorks.SelectionMgr

                Dim rotor_shaft As Component2
                Dim rotor_lamination As Component2


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\轴.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                selecmag = part.SelectionManager
                rotor_shaft = part.AddComponent5("E:\works\generator_parts_library\Y2_80\轴.SLDPRT", 0, "", False, "", 0, 0, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\轴.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\转子冲片.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                rotor_lamination = part.AddComponent5("E:\works\generator_parts_library\Y2_80\转子冲片.SLDPRT", 0, "", False, "", -0.127947642908273, -0.0366783243003696, 0.275999999954365)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\转子冲片.SLDPRT")


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\风扇.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                rotor_lamination = part.AddComponent5("E:\works\generator_parts_library\Y2_80\风扇.SLDPRT", 0, "", False, "", -0.13, -0.03, 0.27)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\风扇.SLDPRT")


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\GB_CONNECTING_PIECE_RING_RRA 19.sldprt", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                part.AddComponent5("E:\works\generator_parts_library\Y2_80\GB_CONNECTING_PIECE_RING_RRA 19.sldprt", 0, "", False, "", 0.1, 0.1, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\GB_CONNECTING_PIECE_RING_RRA 19.sldprt")


                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                part.AddComponent5("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT", 0, "", False, "", 0.2, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT")

                swapp.OpenDoc6("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT", 1, 32, "", errors, longwarnings)
                part = swapp.ActivateDoc3(AssemblyTitle, True, 0, errors)
                part.AddComponent5("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT", 0, "", False, "", 0.2, 0.2, 0)
                swapp.CloseDoc("E:\works\generator_parts_library\Y2_80\轴承.SLDPRT")
                MsgBox(1)

                part.Extension.SelectByID2("切除-拉伸1@轴-1@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 0, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge = swbody.GetFaces()

                'part.ClearSelection2(True)
                'Dim i As Integer
                'i = 0
                'Do Until i > 100
                '    selecmag.AddSelectionListObject(edge(i), Nothing)
                '    MsgBox(i)
                '    part.ClearSelection2(True)
                '    i += 1
                'Loop




                part.Extension.SelectByID2("凸台-拉伸1@转子冲片-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge1 = swfeature.GetFaces()


                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge1(3), Nothing)
                Assem.AddMate5(1, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴心
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(0), Nothing)
                selecmag.AddSelectionListObject(edge1(0), Nothing)
                Assem.AddMate5(5, 0, True, 0.111, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True)


                part.Extension.SelectByID2("阵列(圆周)1@风扇-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge2 = swfeature.GetFaces()

                part.Extension.SelectByID2("切除-拉伸1@轴-1@" + AssemblyTitle, "SOLIDBODY", 0, 0, 0, False, 0, Nothing, 0)
                swbody = selecmag.GetSelectedObject6(1, -1)
                edge3 = swbody.GetEdges()




                part.Extension.SelectByID2("凸台-拉伸3@风扇-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge4 = swfeature.GetFaces()
                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge4(0), Nothing)
                swface = selecmag.GetSelectedObject6(1, -1)
                edge5 = swface.GetEdges()
                vEdgeCount5 = swface.GetEdgeCount()

                part.ClearSelection2(True)
                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge2(8), Nothing)
                Assem.AddMate5(1, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(edge(11), Nothing)
                selecmag.AddSelectionListObject(edge2(40), Nothing)
                Assem.AddMate5(0, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge3(63), Nothing)
                selecmag.AddSelectionListObject(edge5(4), Nothing)
                Assem.AddMate5(3, 0, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '平行
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge3(60), Nothing)
                selecmag.AddSelectionListObject(edge5(5), Nothing)
                Assem.AddMate5(3, 0, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '平行
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Body@GB_CONNECTING_PIECE_RING_RRA 19-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge6 = swfeature.GetFaces()

                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge6(9), Nothing)
                Assem.AddMate5(1, 0, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True)


                selecmag.AddSelectionListObject(edge2(41), Nothing)
                selecmag.AddSelectionListObject(edge6(2), Nothing)
                Assem.AddMate5(0, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
                part.ClearSelection2(True)

                part.Extension.SelectByID2("Revolve3@轴承-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge7 = swfeature.GetFaces()

                part.Extension.SelectByID2("Revolve2@轴承-1@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge8 = swfeature.GetFaces()

                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge8(22), Nothing)
                Assem.AddMate5(1, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴心
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(7), Nothing)
                selecmag.AddSelectionListObject(edge7(23), Nothing)
                Assem.AddMate5(0, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
                part.ClearSelection2(True)


                part.Extension.SelectByID2("Revolve3@轴承-2@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge9 = swfeature.GetFaces()


                part.Extension.SelectByID2("Revolve2@轴承-2@" + AssemblyTitle, "BODYFEATURE", 0, 0, 0, False, 0, Nothing, 0)
                swfeature = selecmag.GetSelectedObject6(1, -1)
                edge10 = swfeature.GetFaces()

                selecmag.AddSelectionListObject(edge(8), Nothing)
                selecmag.AddSelectionListObject(edge10(22), Nothing)
                Assem.AddMate5(1, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '同轴心
                part.ClearSelection2(True)

                selecmag.AddSelectionListObject(edge(9), Nothing)
                selecmag.AddSelectionListObject(edge9(22), Nothing)
                Assem.AddMate5(0, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0) '重合
                part.ClearSelection2(True)

                part.Extension.SelectByID2("LimitDistance1", "MATE", 0, 0, 0, False, 0, Nothing, 0)
                part.EditDelete()
                part.Extension.SelectByID2("转子冲片-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                part.Extension.SelectByID2("轴-1@" + AssemblyTitle, "COMPONENT", 0, 0, 0, True, 1, Nothing, 0)
                Assem.AddMate5(16, 1, True, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, 0)
                part.ClearSelection2(True)
                Dim cusproper As SldWorks.CustomPropertyManager
                cusproper = part.Extension.CustomPropertyManager("")
                cusproper.Set2("名称", "转子")
                cusproper.Set2("代号", "5MJ.674.4099")
                cusproper.Set2("材料", "")
                part.BlankRefGeom() '隐藏
                part.EditRebuild3()
                part.SaveAs3("E:\works\generator_parts_library\Y2_80\转子装配.SLDASM", 0, 2)
                swapp.ExitApp()
            End Sub
        End Class





    End Class
    Public Class LY_synchronous_motor
        Public Class Junction_Box
            Public Sub Installed_version(code$) '安装板
                Dim Installed_version As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=LY_synchronous_motor;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from connecting_plate", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = code
                    r.Read()
                Loop
                Installed_version.part_initialization()

                Installed_version.Rectangular_plate(0, 0, r("length_board") / 1000, r("width_board") / 1000, r("thickness_board") / 1000)

            End Sub
        End Class
        Public Class Stator
            Public Sub stator_pressing_ring(code$, host$)
                Dim stator_pressing_ring As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=stator_pressing_ring;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from stator_pressing_ring", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = code
                    r.Read()
                Loop
                stator_pressing_ring.part_initialization()

                stator_pressing_ring.Arc_Table(r("diameter") / 1000, r("thickness") / 1000, 360, 0, r("out_tol_type"), r("ott_max"), r("ott_min"), 0, 0, 0)
                stator_pressing_ring.Reverse_Circle_Cut(r("inside_diameter") / 1000, 360, r("inside_tol_type"), r("itt_max"), r("itt_min"))
                stator_pressing_ring.Over(r("part_save_address") + r("code"), 1)

            End Sub
            Public Sub clasp(code$, host$)
                Dim clasp As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=clasp;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from clasp", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = code
                    r.Read()
                Loop
                clasp.part_initialization()

                clasp.扣片(r("L_front") / 1000, r("bending_length") / 1000, r("width") / 1000)
                clasp.Over(r("part_save_address") + r("code"), 1)

            End Sub
            Public Sub clasp1()
                Dim clasp As New Module_wangbo
                clasp.part_initialization()
                clasp.扣片(200.4 / 1000, 7 / 1000, 1.5 / 1000)
            End Sub
            Public Sub stator_core_assembly(code$, host$, clasp_code$)
                Dim stator_core_assembly As New Module_wangbo
                Dim mysqlcon As MySqlConnection
                Dim mysqlcom As MySqlCommand
                Dim r As MySqlDataReader
                mysqlcon = New MySqlConnection("server=" & host & ";userid=root" & ";password=123456" & ";database=stator_core_assembly;pooling=false")
                '//打开数据库连接
                mysqlcon.Open()
                '//sql查询
                mysqlcom = New MySqlCommand("select * from stator_core_assembly", mysqlcon)
                r = mysqlcom.ExecuteReader()
                r.Read()
                Do Until r("Code") = code
                    r.Read()
                Loop
                stator_core_assembly.Assembly_initialization()
                stator_core_assembly.stator_core_assembly(code, host, clasp_code)
                stator_core_assembly.Over(r("part_save_address") + r("code"), 3)

            End Sub
            Public Function Exciter_stator_core_assembly(housenumber$) As String()
                'Dim Exciter_stator_core_assembly As New Module_wangbo
                'Dim mysqlcon As MySqlConnection
                'Dim mysqlcom As MySqlCommand
                'Dim r As MySqlDataReader
                'mysqlcon = New MySqlConnection("server=106.15.236.225" & ";userid=root" & ";password=123456" & ";database=Exciter_stator_core_assembly;pooling=false")
                ''//打开数据库连接
                'mysqlcon.Open()
                ''//sql查询
                'mysqlcom = New MySqlCommand("select * from Exciter_stator_core_assembly", mysqlcon)
                'r = mysqlcom.ExecuteReader()
                'r.Read()
                'Do Until r("Code") = code
                '    r.Read()
                'Loop
                'Exciter_stator_core_assembly.Assembly_initialization()
                'Exciter_stator_core_assembly.Exciter_stator_core_assembly(code)
                'Exciter_stator_core_assembly.Over(r("part_save_address") + r("code"), 3)

                If housenumber = "250" Then
                    Exciter_stator_core_assembly = {("8LY.435.008"), ("E:\works\generator_parts_library\fan\")}
                ElseIf housenumber = "280" Then
                    Exciter_stator_core_assembly = {("5LY.435.002"), ("E:\works\generator_parts_library\fan\assembly\")}
                ElseIf housenumber = "355" Then
                    Exciter_stator_core_assembly = {("5LY.435.002"), ("E:\works\generator_parts_library\fan\assembly\")}
                End If

            End Function


        End Class


    End Class
End Class
